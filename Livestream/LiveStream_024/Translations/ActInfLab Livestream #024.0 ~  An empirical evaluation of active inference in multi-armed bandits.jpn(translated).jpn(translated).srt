1
00:00:08,480 --> 00:00:09,040
こんにちは

2
00:00:09,040 --> 00:00:12,000
皆さん、actinflabライブ

3
00:00:12,000 --> 00:00:14,400
ストリーム番号24.0へようこそ

4
00:00:14,400 --> 00:00:18,000
今日は2021年6月16日

5
00:00:18,000 --> 00:00:19,920
です。

6
00:00:19,920 --> 00:00:22,560


7
00:00:22,560 --> 00:00:25,039
マルチアームバンディットでのアクティブな推論の経験的評価でこの論文について話します。

8
00:00:25,039 --> 00:00:26,000


9
00:00:26,000 --> 00:00:30,320
私はダニエルです。私はここにいます。

10
00:00:30,320 --> 00:00:32,880
アクティブ推論ラボへようこそ

11
00:00:32,880 --> 00:00:34,239


12
00:00:34,239 --> 00:00:37,120
私たちは参加型オンラインラボで

13
00:00:37,120 --> 00:00:38,239


14
00:00:38,239 --> 00:00:40,320
あり、応用アクティブ推論の学習と実践を伝え

15
00:00:40,320 --> 00:00:41,920


16
00:00:41,920 --> 00:00:44,800
ています。このページのリンクで私たちを見つけることができます。これは

17
00:00:44,800 --> 00:00:45,760


18
00:00:45,760 --> 00:00:48,000
アーカイブされたライブストリームに記録されている

19
00:00:48,000 --> 00:00:50,000
ので、フィードバックを提供してください。

20
00:00:50,000 --> 00:00:52,239
私たちの仕事を改善することができますすべての背景と

21
00:00:52,239 --> 00:00:54,000
視点はここで歓迎さ

22
00:00:54,000 --> 00:00:55,280
れますそして私たちはここで

23
00:00:55,280 --> 00:00:57,760
ライブストリームのための良いビデオエチケットをたどり

24
00:00:57,760 --> 00:01:00,640
ます短いリンクであなたはアクチンフラブ

25
00:01:00,640 --> 00:01:02,000


26
00:01:02,000 --> 00:01:04,400
のコミュニケーションユニットで私たちが行うすべてのライブストリームとさまざまなシリーズを見つけるでしょう

27
00:01:04,400 --> 00:01:06,880


28
00:01:06,880 --> 00:01:08,720
そして今日は

29
00:01:08,720 --> 00:01:11,200


30
00:01:11,200 --> 00:01:13,520
、

31
00:01:13,520 --> 00:01:14,400


32
00:01:14,400 --> 00:01:17,600
2021年6月の後半の22日

33
00:01:17,600 --> 00:01:19,920
と29日の2つのディスカッションについて、ドットゼロのビデオでコンテキスト化する予定です。

34
00:01:19,920 --> 00:01:21,040


35
00:01:21,040 --> 00:01:24,479
この論文の24.1と24.2で、そしてうまくいけば

36
00:01:24,479 --> 00:01:27,280
、今日アクチンライブストリーム番号24.0に参加している著者と一緒に、

37
00:01:27,280 --> 00:01:31,520


38
00:01:31,520 --> 00:01:33,680
いくつかのコンテキストを設定

39
00:01:33,680 --> 00:01:35,840


40
00:01:35,840 --> 00:01:38,400
し、次の論文の紹介として、マルチアームバンディットにおけるアクティブな推論の経験的評価を示します。

41
00:01:38,400 --> 00:01:40,479


42
00:01:40,479 --> 00:01:41,600


43
00:01:41,600 --> 00:01:45,040
ここにリストされている著者

44
00:01:45,040 --> 00:01:47,200
とビデオは

45
00:01:47,200 --> 00:01:48,799


46
00:01:48,799 --> 00:01:51,360
、レビューや最後の言葉で

47
00:01:51,360 --> 00:01:53,200


48
00:01:53,200 --> 00:01:55,280
はなく

49
00:01:55,280 --> 00:01:56,960
、アクティブな推論コミュニティ内に

50
00:01:56,960 --> 00:01:58,320
いて、露出を探している人々がいる3方向の交差点のようなものです。

51
00:01:58,320 --> 00:02:00,079


52
00:02:00,079 --> 00:02:02,479
ベイズ統計や機械学習のようないくつかの異なる分野

53
00:02:02,479 --> 00:02:04,799
は

54
00:02:04,799 --> 00:02:06,640
、ベイズ統計や機械

55
00:02:06,640 --> 00:02:07,600
学習のアプローチから来て

56
00:02:07,600 --> 00:02:09,840
おり、アクティブな推論に興味

57
00:02:09,840 --> 00:02:11,440


58
00:02:11,440 --> 00:02:12,720


59
00:02:12,720 --> 00:02:14,560
がある人です。もちろん、アクティブに慣れていない場合でも、これがエキサイティングで興味深いものになることを願っています。

60
00:02:14,560 --> 00:02:16,239
推論または機械学習

61
00:02:16,239 --> 00:02:17,920
私たちは、それを行動や意思決定におけるいくつかのより広い質問にもっと広く結び付けようとすることを願っています

62
00:02:17,920 --> 00:02:19,360


63
00:02:19,360 --> 00:02:21,840


64
00:02:21,840 --> 00:02:22,959


65
00:02:22,959 --> 00:02:24,480
w  eは

66
00:02:24,480 --> 00:02:26,720


67
00:02:26,720 --> 00:02:28,080


68
00:02:28,080 --> 00:02:29,920
、いくつかの大きな質問をカバーするロードマップの要約で、論文の目的と主張をウォーク

69
00:02:29,920 --> 00:02:31,519
スルーします。次に、論文のすべての

70
00:02:31,519 --> 00:02:32,239
図

71
00:02:32,239 --> 00:02:34,080
といくつかの主要な形式

72
00:02:34,080 --> 00:02:36,879
を調べて、あなたが読むかどうかを確認します。 紙

73
00:02:36,879 --> 00:02:37,519
かどうかにかかわらず、質問をしたり、詳細を学んだり

74
00:02:37,519 --> 00:02:39,920
するのに適した場所にいることを願っています。

75
00:02:39,920 --> 00:02:41,760


76
00:02:41,760 --> 00:02:44,400
もちろん、今後数週間でドット1とドット2

77
00:02:44,400 --> 00:02:46,000
でこの同じ紙について話し合う予定です

78
00:02:46,000 --> 00:02:47,200


79
00:02:47,200 --> 00:02:49,360
ので、質問を保存して送信し、

80
00:02:49,360 --> 00:02:50,720


81
00:02:50,720 --> 00:02:54,800
何らかの形で参加または貢献したい場合

82
00:02:55,120 --> 00:02:58,480


83
00:02:58,480 --> 00:03:01,680
は、このスライドの表紙のスクリーンショットが掲載されている紙自体にあり

84
00:03:01,680 --> 00:03:05,360
ます。目的と主張を読んで

85
00:03:05,360 --> 00:03:06,400
から、青

86
00:03:06,400 --> 00:03:08,000
で何を最初に考えることができますか。 あなた

87
00:03:08,000 --> 00:03:09,840
は

88
00:03:09,840 --> 00:03:13,120
、彼らがこの論文で何を目指しているか、または主張しているのかについての一種のクールな作品だと思いました。

89
00:03:13,120 --> 00:03:13,840


90
00:03:13,840 --> 00:03:15,920
私たちは

91
00:03:15,920 --> 00:03:17,760


92
00:03:17,760 --> 00:03:19,440
、ベイジアン情報理論

93
00:03:19,440 --> 00:03:21,599
フレームワークと2つの最先端の

94
00:03:21,599 --> 00:03:23,440
機械学習アルゴリズム

95
00:03:23,440 --> 00:03:26,720
ベイジアン上限信頼限界ucba

96
00:03:26,720 --> 00:03:28,799


97
00:03:28,799 --> 00:03:30,799
静止および非定常の

98
00:03:30,799 --> 00:03:33,840
確率的多腕バンディットにおける楽観的トンプソンサンプリング

99
00:03:33,840 --> 00:03:35,519


100
00:03:35,519 --> 00:03:36,720


101
00:03:36,720 --> 00:03:38,799
定常

102
00:03:38,799 --> 00:03:40,080
バンディット問題のチェック

103
00:03:40,080 --> 00:03:41,760
により、そのパフォーマンス

104
00:03:41,760 --> 00:03:43,280
が正確なバージョンのパフォーマンスに厳密に従うことが示された近似アクティブ推論アルゴリズムを導入した

105
00:03:43,280 --> 00:03:46,720
ため、アクティブ推論アルゴリズムを導出しました

106
00:03:46,720 --> 00:03:48,319
それは

107
00:03:48,319 --> 00:03:50,319
効率的で

108
00:03:50,319 --> 00:03:53,200
高次元の問題に簡単に拡張できるので、それについてクールだった

109
00:03:53,200 --> 00:03:55,439
もの、または

110
00:03:55,439 --> 00:03:55,920


111
00:03:55,920 --> 00:03:59,680
このドットをゼロにすることに興奮した理由は本当に

112
00:03:59,680 --> 00:04:00,239


113
00:04:00,239 --> 00:04:03,680
素晴らしかったです。

114
00:04:03,680 --> 00:04:04,319


115
00:04:04,319 --> 00:04:06,560


116
00:04:06,560 --> 00:04:07,760


117
00:04:07,760 --> 00:04:10,640
非常に難しい

118
00:04:10,640 --> 00:04:12,159
ので、著者は

119
00:04:12,159 --> 00:04:13,280


120
00:04:13,280 --> 00:04:15,519
このアクティブな推論アルゴリズム

121
00:04:15,519 --> 00:04:17,199
を導き出し、それが

122
00:04:17,199 --> 00:04:21,120
有用であると合意したことを証明する素晴らしい仕事をしたと思います。彼らは、方程式を並べたり、少なくとも機械学習の他のアプローチと並置したりする

123
00:04:21,120 --> 00:04:24,160
ように、分析的にそれをもたらす素晴らしい仕事をしました。

124
00:04:24,160 --> 00:04:25,919


125
00:04:25,919 --> 00:04:28,320


126
00:04:28,320 --> 00:04:29,919


127
00:04:29,919 --> 00:04:32,240
質的な理論体系に訴えるのではなく

128
00:04:32,240 --> 00:04:33,440


129
00:04:33,440 --> 00:04:35,520
これも素晴らしいことですが、これは間違いなく

130
00:04:35,520 --> 00:04:36,880


131
00:04:36,880 --> 00:04:40,000
クレームが具体的で正確なものであり、それ

132
00:04:40,000 --> 00:04:40,720
を

133
00:04:40,720 --> 00:04:43,840
フォローアップする

134
00:04:44,479 --> 00:04:46,400
ので、前半を読んでから

135
00:04:46,400 --> 00:04:48,960
後半に進むことができます。

136
00:04:48,960 --> 00:04:51,280


137
00:04:51,280 --> 00:04:53,120
不確実性の下での意思決定

138
00:04:53,120 --> 00:04:56,400
は、現在の知識

139
00:04:56,400 --> 00:04:58,000
に従って最良の行動を選択することを利用することと、

140
00:04:58,000 --> 00:05:00,080


141
00:05:00,080 --> 00:05:02,320


142
00:05:02,320 --> 00:05:03,680
他の行動

143
00:05:03,680 --> 00:05:05,759
の価値に関する情報を取得することを探求すること

144
00:05:05,759 --> 00:05:07,600


145
00:05:07,600 --> 00:05:08,560


146
00:05:08,560 --> 00:05:10,560
との間のバランスを取る必要があります。

147
00:05:10,560 --> 00:05:12,800


148
00:05:12,800 --> 00:05:14,560
多くの産業アプリケーションで有用であることが証明された盗賊アルゴリズムを

149
00:05:14,560 --> 00:05:17,440


150
00:05:17,440 --> 00:05:18,800


151
00:05:18,800 --> 00:05:20,320


152
00:05:20,320 --> 00:05:22,320
開発する

153
00:05:22,320 --> 00:05:24,000
ために、人間と動物の行動を理解するために神経科学で最近開発された順次意思決定へのアプローチにおけるアクティブな推論フレームワークは、

154
00:05:24,000 --> 00:05:26,080


155
00:05:26,080 --> 00:05:27,840


156
00:05:27,840 --> 00:05:28,720


157
00:05:28,720 --> 00:05:30,479


158
00:05:30,479 --> 00:05:32,479


159
00:05:32,479 --> 00:05:34,400
これがアクティブにする探索搾取のトレードオフを解決するための洗練された戦略によって区別されます

160
00:05:34,400 --> 00:05:36,720
すでに確立されているもののエキサイティングな代替案を推測する

161
00:05:36,720 --> 00:05:39,360
バンディットアルゴリズムを使用するので、

162
00:05:39,360 --> 00:05:39,919


163
00:05:39,919 --> 00:05:42,160
最初の数語は

164
00:05:42,160 --> 00:05:43,039


165
00:05:43,039 --> 00:05:46,160
不確実な状況下での順次意思決定に関するものです。バンディットタスク

166
00:05:46,160 --> 00:05:46,560
は、この多腕バンディット問題に取り組むためのアルゴリズムを追求

167
00:05:46,560 --> 00:05:49,199
することで、機械学習

168
00:05:49,199 --> 00:05:50,000
がすでに

169
00:05:50,000 --> 00:05:52,160
多くの価値を獲得していることを探求するために行われました。

170
00:05:52,160 --> 00:05:54,000


171
00:05:54,000 --> 00:05:56,960


172
00:05:56,960 --> 00:05:57,440


173
00:05:57,440 --> 00:06:00,240


174
00:06:00,240 --> 00:06:01,199
ええと、最初は

175
00:06:01,199 --> 00:06:03,600
人間と動物の行動のケースをカバーするために開発されたアクティブな推論

176
00:06:03,600 --> 00:06:05,680
ですが、私たちが見ているように、それはそれを

177
00:06:05,680 --> 00:06:06,080
超え

178
00:06:06,080 --> 00:06:08,960
ており、

179
00:06:08,960 --> 00:06:10,319


180
00:06:10,319 --> 00:06:12,080
多腕バンディット問題のコンテキストでアクティブな推論を研究する動機付けになる

181
00:06:12,080 --> 00:06:13,840
ので、ここで2番目の

182
00:06:13,840 --> 00:06:17,440
部分に進みます 効率的で

183
00:06:17,440 --> 00:06:19,520
スケーラブルな近似アクティブ推論

184
00:06:19,520 --> 00:06:20,080
アルゴリズムを導出し、

185
00:06:20,080 --> 00:06:22,080
それを2つの最先端の

186
00:06:22,080 --> 00:06:23,600
バンドアルゴリズム

187
00:06:23,600 --> 00:06:25,600
ベイジアン上限信頼限界および

188
00:06:25,600 --> 00:06:27,680
楽観的トンプソンサンプリング

189
00:06:27,680 --> 00:06:29,759
と比較します。この比較は

190
00:06:29,759 --> 00:06:30,880


191
00:06:30,880 --> 00:06:32,880
、静止および動的スイッチング

192
00:06:32,880 --> 00:06:35,440
バンディットの2種類のバンディット問題で行われます。 経験的評価

193
00:06:35,440 --> 00:06:36,800
は、アクティブな推論

194
00:06:36,800 --> 00:06:38,639
アルゴリズムが効率的な長期生成を生成しないことを示しています

195
00:06:38,639 --> 00:06:39,759


196
00:06:39,759 --> 00:06:42,160
ただし、静止バンディットでの動作は、

197
00:06:42,160 --> 00:06:43,759
より困難なスイッチングバンディット

198
00:06:43,759 --> 00:06:44,400
アルゴリズム

199
00:06:44,400 --> 00:06:46,160
またはスイッチングバンディットアクティブ推論

200
00:06:46,160 --> 00:06:47,759


201
00:06:47,759 --> 00:06:49,599
で、2つの最先端のバンドアルゴリズムよりも大幅に優れたパフォーマンスを

202
00:06:49,599 --> 00:06:50,880


203
00:06:50,880 --> 00:06:52,880


204
00:06:52,880 --> 00:06:54,720


205
00:06:54,720 --> 00:06:55,919
発揮

206
00:06:55,919 --> 00:06:58,240
します。 人間と動物の行動を研究するため

207
00:06:58,240 --> 00:06:59,919
の一般的なフレームワークとしてアクティブな推論に追加の信頼性を与える

208
00:06:59,919 --> 00:07:01,199


209
00:07:01,199 --> 00:07:03,759
ので、これは

210
00:07:03,759 --> 00:07:05,120
本当に素晴らしいです。なぜなら

211
00:07:05,120 --> 00:07:07,840


212
00:07:07,840 --> 00:07:09,360
、

213
00:07:09,360 --> 00:07:11,599
人間がこの探索搾取パラダイムの理由のバランスを推測するおおよその方法としてアクティブな推論のように

214
00:07:11,599 --> 00:07:13,520


215
00:07:13,520 --> 00:07:16,960
なり、それを

216
00:07:16,960 --> 00:07:17,840
フレームワークにプログラムする

217
00:07:17,840 --> 00:07:19,759
からです。 これは、機械での人間の思考にますます近づいていることを示しているだけです

218
00:07:19,759 --> 00:07:21,840


219
00:07:21,840 --> 00:07:22,560


220
00:07:22,560 --> 00:07:25,919
。そうだと思い

221
00:07:25,919 --> 00:07:28,479
ます。このディスカッションで何度も戻ることになるペアのペア

222
00:07:28,479 --> 00:07:29,759
があります。

223
00:07:29,759 --> 00:07:31,759


224
00:07:31,759 --> 00:07:33,840
最初は

225
00:07:33,840 --> 00:07:36,240
静止した問題と動的な盗賊の2つのタイプの問題の

226
00:07:36,240 --> 00:07:36,960
うちの

227
00:07:36,960 --> 00:07:38,400
1つは静的なものです それらのうちの1つは

228
00:07:38,400 --> 00:07:39,919
変化しており、それについて詳しく説明します。よく

229
00:07:39,919 --> 00:07:40,560


230
00:07:40,560 --> 00:07:42,639
出てくるもう1つのペア

231
00:07:42,639 --> 00:07:45,039
は、ベイジアンの上限信頼

232
00:07:45,039 --> 00:07:47,680
限界と楽観的なトンプソンサンプリング

233
00:07:47,680 --> 00:07:49,440
です。

234
00:07:49,440 --> 00:07:51,520
ペアのペアが

235
00:07:51,520 --> 00:07:54,319
近づくと、結果は

236
00:07:54,319 --> 00:07:55,680
本当に魅力的です。

237
00:07:55,680 --> 00:07:56,720


238
00:07:56,720 --> 00:07:59,599
実際に

239
00:07:59,599 --> 00:08:01,440
は、アクティブな推論アルゴリズム

240
00:08:01,440 --> 00:08:04,160
が完全に機能しないことがわかりますが、このより

241
00:08:04,160 --> 00:08:05,360
挑戦的な動的な

242
00:08:05,360 --> 00:08:07,039
ケースでは、状態よりも優れています。

243
00:08:07,039 --> 00:08:08,560
最先端の技術を超えたものを何と呼びますか？これ

244
00:08:08,560 --> 00:08:11,520
が

245
00:08:11,520 --> 00:08:14,720
論文のロードマップです。

246
00:08:14,720 --> 00:08:15,360
もちろん

247
00:08:15,360 --> 00:08:18,160
、これらの動画も同様です。論文で

248
00:08:18,160 --> 00:08:18,800


249
00:08:18,800 --> 00:08:20,400
具体的にどのように述べられて

250
00:08:20,400 --> 00:08:22,319
いるのか知りたい場合や、ダイビングをしたい場合は、

251
00:08:22,319 --> 00:08:24,400
彼らがどのように

252
00:08:24,400 --> 00:08:26,400
引用したか、または彼らがどのように主張を構築したかを知りたい場合

253
00:08:26,400 --> 00:08:27,919
は、紙自体に行く必要があります

254
00:08:27,919 --> 00:08:30,400
これ

255
00:08:30,400 --> 00:08:31,919


256
00:08:31,919 --> 00:08:34,719
は、多腕バンディットの紹介から始まり、

257
00:08:34,719 --> 00:08:36,559
2種類の バンド

258
00:08:36,559 --> 00:08:38,240
固定バージョンとスイッチングバージョンのどちらであるかを調査し

259
00:08:38,240 --> 00:08:40,320


260
00:08:40,320 --> 00:08:40,958


261
00:08:40,958 --> 00:08:43,839
、さまざまなバージョンでパフォーマンスを評価する方法について話し、次に

262
00:08:43,839 --> 00:08:45,600


263
00:08:45,600 --> 00:08:46,320


264
00:08:46,320 --> 00:08:49,600
利用するアルゴリズムを紹介し、このバリエーションのある

265
00:08:49,600 --> 00:08:51,600
笑顔のアプローチについて

266
00:08:51,600 --> 00:08:53,120
少し説明します。 しかし、それが何をするのかについて

267
00:08:53,120 --> 00:08:54,640
著者から聞くのを楽しみにしています。それから、

268
00:08:54,640 --> 00:08:57,200


269
00:08:57,200 --> 00:09:00,320


270
00:09:00,320 --> 00:09:02,000
彼らが静止

271
00:09:02,000 --> 00:09:03,440
および切り替えの盗賊

272
00:09:03,440 --> 00:09:05,279
を調査し、次に

273
00:09:05,279 --> 00:09:08,000
いくつかの結果を示し、

274
00:09:08,000 --> 00:09:08,720
うまくいけ

275
00:09:08,720 --> 00:09:11,839
ばアルゴリズムまたは形式主義であっても、5つの図を持っているという2つの問題の結果があります

276
00:09:11,839 --> 00:09:13,680


277
00:09:13,680 --> 00:09:15,040
数字を理解するのは少し難しかったですが、実際には明確

278
00:09:15,040 --> 00:09:17,279
であり、アルゴリズムが時間の経過とともにどのように機能するかを示し

279
00:09:17,279 --> 00:09:19,360


280
00:09:19,360 --> 00:09:21,440


281
00:09:21,440 --> 00:09:22,959
、アクティブな推論と機械

282
00:09:22,959 --> 00:09:25,360
学習コミュニティのいくつかの素晴らしい一般的なポイントに当てはまるディスカッションで締めくくります。

283
00:09:25,360 --> 00:09:26,880
ここで提供

284
00:09:26,880 --> 00:09:29,120
されたキーワードは いつものように、

285
00:09:29,120 --> 00:09:29,440


286
00:09:29,440 --> 00:09:31,920
これらのキーワードをジャンプオフとして使用するだけでなく

287
00:09:31,920 --> 00:09:32,560


288
00:09:32,560 --> 00:09:35,279
、それらのポイントにジャンプするように使用します

289
00:09:35,279 --> 00:09:37,519
シーケンシャル意思決定（

290
00:09:37,519 --> 00:09:40,720
別名ライフ）には精通しているかもしれ

291
00:09:40,720 --> 00:09:42,720
ませんが、ベイズ統計には精通していない可能性があります。

292
00:09:42,720 --> 00:09:44,800
シーケンシャル意思決定から始めて、

293
00:09:44,800 --> 00:09:45,360


294
00:09:45,360 --> 00:09:47,360


295
00:09:47,360 --> 00:09:48,640
ベイズ推定

296
00:09:48,640 --> 00:09:51,120
多腕バンディットについてさらに幅広く話し

297
00:09:51,120 --> 00:09:52,800
ます。 盗賊の問題について聞いたことがない場合は、

298
00:09:52,800 --> 00:09:53,680


299
00:09:53,680 --> 00:09:55,200


300
00:09:55,200 --> 00:09:56,800


301
00:09:56,800 --> 00:09:57,760


302
00:09:57,760 --> 00:09:59,440
信頼度の上限とトンプソン

303
00:09:59,440 --> 00:10:01,440
サンプリングを調査する、これら2つの異なるアルゴリズム

304
00:10:01,440 --> 00:10:02,959
について説明し、実際に行われるアクティブな推論についてどのように話し合ったかを確認します

305
00:10:02,959 --> 00:10:04,240
。

306
00:10:04,240 --> 00:10:05,200


307
00:10:05,200 --> 00:10:07,600
これまでに見た多くのアプローチとは異なる相対的な方法なので、

308
00:10:07,600 --> 00:10:10,160


309
00:10:10,160 --> 00:10:12,320
シーケンシャル意思決定に行きましょ

310
00:10:12,320 --> 00:10:13,200


311
00:10:13,200 --> 00:10:16,399
う。これについてどう思いますか。

312
00:10:16,399 --> 00:10:18,240
シーケンシャル意思決定は

313
00:10:18,240 --> 00:10:18,560


314
00:10:18,560 --> 00:10:21,360
時間tに依存しているので、1つのタイムステップで実行

315
00:10:21,360 --> 00:10:22,640
するシステムの状態がわかり

316
00:10:22,640 --> 00:10:25,360
ます。 アクションとそれ

317
00:10:25,360 --> 00:10:26,160
はシステムを

318
00:10:26,160 --> 00:10:28,000
正しく変更し、2番目のタイムステップ

319
00:10:28,000 --> 00:10:29,839
でシステムが新しい状態になり、

320
00:10:29,839 --> 00:10:31,440
次に何について行うかについて別の決定を下す

321
00:10:31,440 --> 00:10:32,560
ようにします

322
00:10:32,560 --> 00:10:34,480
これは、システムを使用するため

323
00:10:34,480 --> 00:10:35,680


324
00:10:35,680 --> 00:10:37,440
、株式ポートフォリオを管理する車両を運転して、

325
00:10:37,440 --> 00:10:39,519
チェスの順次ポリシー

326
00:10:39,519 --> 00:10:40,480
決定

327
00:10:40,480 --> 00:10:43,040
のゲームをプレイするようなものであり

328
00:10:43,040 --> 00:10:44,320
、順次ではない

329
00:10:44,320 --> 00:10:46,320
問題を並置して、画像分類のようなものではないようにするようなもの

330
00:10:46,320 --> 00:10:48,079
です。 システムの状態で

331
00:10:48,079 --> 00:10:49,680
すべての画像を

332
00:10:49,680 --> 00:10:51,040
並列または一度に分類できるようにシーケンシャル

333
00:10:51,040 --> 00:10:52,480


334
00:10:52,480 --> 00:10:54,480
は、前の画像をどのように分類したかに依存しない

335
00:10:54,480 --> 00:10:56,320


336
00:10:56,320 --> 00:10:58,560
ので、時間

337
00:10:58,560 --> 00:11:00,959
内に行われる意思決定におけるあらゆる種類の生物的行動は間違いなく

338
00:11:00,959 --> 00:11:03,839


339
00:11:03,839 --> 00:11:04,480
あなたの意思決定を考えてください

340
00:11:04,480 --> 00:11:07,040


341
00:11:07,040 --> 00:11:08,720
特に決定

342
00:11:08,720 --> 00:11:11,200
が将来に影響を与える場合、通常は順次の意思決定を再考します。これらは、これから説明するすべての

343
00:11:11,200 --> 00:11:12,640
種類の問題

344
00:11:12,640 --> 00:11:14,560
です

345
00:11:14,560 --> 00:11:17,040
が

346
00:11:17,040 --> 00:11:19,120
、非順次の問題を順次組み立てることができるよりも広くすることもできます。

347
00:11:19,120 --> 00:11:20,480


348
00:11:20,480 --> 00:11:21,760


349
00:11:21,760 --> 00:11:24,000
1つの

350
00:11:24,000 --> 00:11:26,720
ブロブと1つの大きなデータセットであるため、

351
00:11:26,720 --> 00:11:28,079
時間的な順序がないという分類の問題があったとし

352
00:11:28,079 --> 00:11:30,240
ましょう。アルゴリズムが必要になる場合があります。 例を読み始めることができるよう

353
00:11:30,240 --> 00:11:32,240
にシーケンシャルであるかのように扱うm

354
00:11:32,240 --> 00:11:33,760


355
00:11:33,760 --> 00:11:35,440
は、10の後

356
00:11:35,440 --> 00:11:38,720
でそれを取得しました。

357
00:11:38,720 --> 00:11:40,399
それはシーケンシャルな問題であるかのように見て、

358
00:11:40,399 --> 00:11:42,959
時間の経過とともに問題を解決していました。

359
00:11:42,959 --> 00:11:44,880
-

360
00:11:44,880 --> 00:11:46,399
そのようにシーケンシャルな問題は、

361
00:11:46,399 --> 00:11:48,640
コンピューターではプロセッサ上でシーケンシャルになる

362
00:11:48,640 --> 00:11:49,600


363
00:11:49,600 --> 00:11:51,680
ため、実際に

364
00:11:51,680 --> 00:11:52,959
は世界でシーケンシャル

365
00:11:52,959 --> 00:11:54,880
なものであるか、シーケンシャルであるかのように振る舞いたいもののためのもの

366
00:11:54,880 --> 00:11:57,600
です。

367
00:11:57,600 --> 00:12:00,240
あらゆる

368
00:12:00,240 --> 00:12:01,760
種類のモデリングを考え出すの

369
00:12:01,760 --> 00:12:05,040
は、エクスプロイトエクスプロイトのジレンマスラッシュの

370
00:12:05,040 --> 00:12:08,160
トレードオフです。これは、宇宙の精神と社会におけるエクスプロイトとエクスプロイトのすべての丘の素晴らしい2015年の

371
00:12:08,160 --> 00:12:08,880
論文

372
00:12:08,880 --> 00:12:11,440


373
00:12:11,440 --> 00:12:12,639


374
00:12:12,639 --> 00:12:15,760


375
00:12:15,760 --> 00:12:17,360


376
00:12:17,360 --> 00:12:19,519


377
00:12:19,519 --> 00:12:21,760
です。この表では、複数の異なるドメインについて説明しているので、かなりクールです。  1動物の

378
00:12:21,760 --> 00:12:22,639
鍛造

379
00:12:22,639 --> 00:12:25,519
視覚検索情報検索記憶

380
00:12:25,519 --> 00:12:26,399
検索

381
00:12:26,399 --> 00:12:28,320
検索と問題解決と社会的

382
00:12:28,320 --> 00:12:29,839
グループ学習がありますそれらは

383
00:12:29,839 --> 00:12:33,120
私たちのお気に入りのトピックのすべてのように青く、それ

384
00:12:33,120 --> 00:12:34,880
はjusを与えます 少し視覚的な

385
00:12:34,880 --> 00:12:36,160
例

386
00:12:36,160 --> 00:12:38,639
では、さまざまなドメイン

387
00:12:38,639 --> 00:12:40,240
で、探索

388
00:12:40,240 --> 00:12:42,560
の原型はどのように見え、搾取の原型は

389
00:12:42,560 --> 00:12:43,760


390
00:12:43,760 --> 00:12:46,800
どのように見えるので、これらのいくつかは、

391
00:12:46,800 --> 00:12:49,600


392
00:12:49,600 --> 00:12:50,160


393
00:12:50,160 --> 00:12:52,560
パッチフォージングの探索

394
00:12:52,560 --> 00:12:53,600
が別の場所に移動するような物理的な動きに非常に関連しています ツリーの

395
00:12:53,600 --> 00:12:56,000
搾取は同じツリーにとどまります

396
00:12:56,000 --> 00:12:57,440
が、視覚的な焦点の

397
00:12:57,440 --> 00:13:00,720
探索

398
00:13:00,720 --> 00:13:03,200
は、固定された視線を持ち、何かを

399
00:13:03,200 --> 00:13:04,160
見つめている搾取の探索の周りをスキャンし

400
00:13:04,160 --> 00:13:06,720
ます。また、

401
00:13:06,720 --> 00:13:07,519


402
00:13:07,519 --> 00:13:09,680
メモリの

403
00:13:09,680 --> 00:13:10,560
探索

404
00:13:10,560 --> 00:13:12,720
が異なる意味の近隣から大きなジャンプをしているように、単語の関連付けでも考えることができ

405
00:13:12,720 --> 00:13:13,920


406
00:13:13,920 --> 00:13:16,800
ますが、搾取は すべて

407
00:13:16,800 --> 00:13:18,720
の家畜や

408
00:13:18,720 --> 00:13:20,000
同じ文字の動物のよう

409
00:13:20,000 --> 00:13:21,920


410
00:13:21,920 --> 00:13:23,519
に、セマンティックランドスケープにはさまざまな次元があるため、悪用する可能性のあるさまざまな方法

411
00:13:23,519 --> 00:13:25,040


412
00:13:25,040 --> 00:13:27,279
がありますが、

413
00:13:27,279 --> 00:13:28,320
遠くにジャンプする

414
00:13:28,320 --> 00:13:30,480
か、近所に比較的近くに

415
00:13:30,480 --> 00:13:31,360


416
00:13:31,360 --> 00:13:34,000
いることの間にはまだこのトレードオフがあるため、大きなトレードオフです それは動物の行動で研究されてい

417
00:13:34,000 --> 00:13:35,279
ます

418
00:13:35,279 --> 00:13:36,800
それはすべての親族で研究されています

419
00:13:36,800 --> 00:13:39,120


420
00:13:39,120 --> 00:13:42,240


421
00:13:42,240 --> 00:13:44,160


422
00:13:44,160 --> 00:13:45,760
昨年の夏、この論文の2番目の著者であるピータートッド

423
00:13:45,760 --> 00:13:46,639
と多くのやり取りをする

424
00:13:46,639 --> 00:13:50,079
ことができただけで、意思決定タスクのdsは非常に楽しく、クールで、また、

425
00:13:50,079 --> 00:13:52,240
イアン料理は素晴らしい集団

426
00:13:52,240 --> 00:13:53,600
行動の仕事をしてくれた

427
00:13:53,600 --> 00:13:55,440
ので、エキサイティングです

428
00:13:55,440 --> 00:13:56,880
これらのアルゴリズム

429
00:13:56,880 --> 00:13:59,920
が個々のエージェント

430
00:13:59,920 --> 00:14:00,959
だけでなく

431
00:14:00,959 --> 00:14:02,720
グループにもどのように適用できるかを考えるために、今日話し合っている論文の要約で聞い

432
00:14:02,720 --> 00:14:05,040
たように、役割の割り当てや社会的接続性など、ここで何度も示唆され

433
00:14:05,040 --> 00:14:08,160


434
00:14:08,560 --> 00:14:11,040


435
00:14:11,040 --> 00:14:13,120
て

436
00:14:13,120 --> 00:14:15,600
います。 多腕バンディット問題に対する

437
00:14:15,600 --> 00:14:17,519
不確実性の下での順次意思決定

438
00:14:17,519 --> 00:14:20,639
は

439
00:14:20,639 --> 00:14:22,800
、それを研究できる方法であり、

440
00:14:22,800 --> 00:14:23,680
この論文から

441
00:14:23,680 --> 00:14:25,839


442
00:14:25,839 --> 00:14:27,760
、2つの問題

443
00:14:27,760 --> 00:14:28,720
が解決し

444
00:14:28,720 --> 00:14:30,800
ている二重の問題を紹介

445
00:14:30,800 --> 00:14:33,279
します。経験的評価では2種類のバンディット問題を検討します。

446
00:14:33,279 --> 00:14:35,360
古典的な機械学習問題としての定常バンディットと

447
00:14:35,360 --> 00:14:36,880


448
00:14:36,880 --> 00:14:37,519


449
00:14:37,519 --> 00:14:39,600
神経科学で一般的に使用されるスイッチングバンディットなので、その方法

450
00:14:39,600 --> 00:14:41,760
について詳しく説明し

451
00:14:41,760 --> 00:14:43,199
ます。 それらは技術的に定義されていますが

452
00:14:43,199 --> 00:14:45,440


453
00:14:45,440 --> 00:14:47,519
、マルチアームバンディット

454
00:14:47,519 --> 00:14:50,000
で何をしているのかから始めましょう。これは、多くの人々がこれに取り組んだ理由で、

455
00:14:50,000 --> 00:14:51,839


456
00:14:51,839 --> 00:14:53,519


457
00:14:53,519 --> 00:14:54,880
ここで行っている結果が機械学習コミュニティ

458
00:14:54,880 --> 00:14:56,399
だけでなく直接関連するものになるのはなぜですか。

459
00:14:56,399 --> 00:14:58,000


460
00:14:58,000 --> 00:14:59,600
だけでなく、神経科学の学習と意思決定の

461
00:14:59,600 --> 00:15:01,600
研究の

462
00:15:01,600 --> 00:15:02,880


463
00:15:02,880 --> 00:15:04,480
ために、さまざまな研究の質問にアクティブな推論フレームワークを利用することが

464
00:15:04,480 --> 00:15:06,720


465
00:15:06,720 --> 00:15:08,560
多いので、これらのさまざまな分野があり

466
00:15:08,560 --> 00:15:10,399
ます。ここでは、

467
00:15:10,399 --> 00:15:11,600


468
00:15:11,600 --> 00:15:14,160
コンピュータサイエンスの機械学習

469
00:15:14,160 --> 00:15:15,120
経済学の

470
00:15:15,120 --> 00:15:18,160
神経科学を研究する分野を決定するマルチアームバンディットがあります。

471
00:15:18,160 --> 00:15:20,079
マルチアームの盗賊が橋のようなものであるすべての分野で、

472
00:15:20,079 --> 00:15:21,760


473
00:15:21,760 --> 00:15:24,160
今私たちはそのつながりに積極的な推論を置いています。

474
00:15:24,160 --> 00:15:26,320


475
00:15:26,320 --> 00:15:27,760


476
00:15:27,760 --> 00:15:30,160
コンピュータサイエンスを行動に結び付けること、

477
00:15:30,160 --> 00:15:32,639
または神経科学を経済学に結び付ける

478
00:15:32,639 --> 00:15:33,759
ことについて、私たち全員

479
00:15:33,759 --> 00:15:36,639
が 共通のネクサスそれが積極的な推論だったとしたら、

480
00:15:36,639 --> 00:15:37,839


481
00:15:37,839 --> 00:15:39,519
これらは話すのが楽しいことのようなもの

482
00:15:39,519 --> 00:15:40,880
です

483
00:15:40,880 --> 00:15:43,920
が、そうではありません 多腕バンディット問題とアクティブな推論の概念的なつながりの単なる結びつきには

484
00:15:43,920 --> 00:15:46,160


485
00:15:46,160 --> 00:15:47,279


486
00:15:47,279 --> 00:15:48,959
、非常に具体的な使用

487
00:15:48,959 --> 00:15:51,040
例がたくさんあり、

488
00:15:51,040 --> 00:15:54,639
オンラインでの経験を強化するアルゴリズムの多くは、実際に

489
00:15:54,639 --> 00:15:55,440
訓練され

490
00:15:55,440 --> 00:15:58,959
、多腕バンディット問題に適合している

491
00:15:58,959 --> 00:16:01,279
ので、ここにいくつかの楽しみがあります 左上のここで調査している

492
00:16:01,279 --> 00:16:02,000
ときに出くわした例

493
00:16:02,000 --> 00:16:05,680


494
00:16:05,680 --> 00:16:09,120
は、音楽の推奨事項で多腕バンディットがどのように役割を果たしているかを示しています。

495
00:16:09,120 --> 00:16:11,360


496
00:16:11,360 --> 00:16:12,720


497
00:16:12,720 --> 00:16:15,519
つまり、どの

498
00:16:15,519 --> 00:16:16,560
アームが選択され

499
00:16:16,560 --> 00:16:18,399
ているのか、それが曲であるため

500
00:16:18,399 --> 00:16:20,320
、 音楽プラットフォームの観点から

501
00:16:20,320 --> 00:16:21,120


502
00:16:21,120 --> 00:16:23,920
、曲を送信し、次に

503
00:16:23,920 --> 00:16:24,560


504
00:16:24,560 --> 00:16:26,959
バンディットマシンであるターゲットユーザー

505
00:16:26,959 --> 00:16:28,880
がアルゴリズムにペイオフを返します。

506
00:16:28,880 --> 00:16:31,839
親指を上または下に向けると、

507
00:16:31,839 --> 00:16:34,079
アルゴリズムが別の曲

508
00:16:34,079 --> 00:16:35,839
を送信し、ペイオフが与えられます。

509
00:16:35,839 --> 00:16:37,759
順次意思決定で

510
00:16:37,759 --> 00:16:40,320
あり、グラフで示されているのと同じ関係

511
00:16:40,320 --> 00:16:40,880


512
00:16:40,880 --> 00:16:43,040


513
00:16:43,040 --> 00:16:44,800
が、評価の合計を最大化すること

514
00:16:44,800 --> 00:16:46,560
と、abstracのペイオフの合計を最大化することです。

515
00:16:46,560 --> 00:16:47,680
問題

516
00:16:47,680 --> 00:16:50,560
は、ウェブサイトの例です。bウェブサイトの

517
00:16:50,560 --> 00:16:52,560
テストバージョンをテストしている

518
00:16:52,560 --> 00:16:54,880
ので、上部に4つのバージョン

519
00:16:54,880 --> 00:16:56,000
のウェブサイトが

520
00:16:56,000 --> 00:16:58,320
あり、それぞれが

521
00:16:58,320 --> 00:16:59,839
ユーザーの4分の1に割り当てられ

522
00:16:59,839 --> 00:17:01,920
、各ユーザーは次の

523
00:17:01,920 --> 00:17:03,440
目的でサイトに滞在しています。 テストの全期間にわたって標準abテストで

524
00:17:03,440 --> 00:17:05,679
一定の時間または異なる時間滞在すると

525
00:17:05,679 --> 00:17:07,439


526
00:17:07,439 --> 00:17:09,520


527
00:17:09,520 --> 00:17:13,119
、各サイトでその4分の1が維持されます

528
00:17:13,119 --> 00:17:15,280
が、多腕バンディット

529
00:17:15,280 --> 00:17:16,319
では4分の1から開始します

530
00:17:16,319 --> 00:17:18,000
が、その後非常に迅速に この

531
00:17:18,000 --> 00:17:20,720
青いもののパフォーマンスが向上

532
00:17:20,720 --> 00:17:22,720
し始め、その後

533
00:17:22,720 --> 00:17:25,199
、これらの他の色に時間を割り当てて調査を続け

534
00:17:25,199 --> 00:17:27,839
ますが、青がかなり

535
00:17:27,839 --> 00:17:28,559
着実に

536
00:17:28,559 --> 00:17:31,440
優勢になり、黒い線が

537
00:17:31,440 --> 00:17:32,000


538
00:17:32,000 --> 00:17:34,960
高いままになるので、全体として、最後に高い数値が表示され

539
00:17:34,960 --> 00:17:36,960
ます。 エポックな

540
00:17:36,960 --> 00:17:39,280
ので、学習しながら稼いでいるの

541
00:17:39,280 --> 00:17:40,240


542
00:17:40,240 --> 00:17:43,840
は、搾取しながら探索を行うこと

543
00:17:43,840 --> 00:17:45,039


544
00:17:45,039 --> 00:17:47,840
ができ、特に

545
00:17:47,840 --> 00:17:49,200


546
00:17:49,200 --> 00:17:51,280
、コンテックスのベイジアンバンディットのような論文があります。 オンラインでパーソナライズされた

547
00:17:51,280 --> 00:17:52,960
推奨事項のt

548
00:17:52,960 --> 00:17:56,480
その青いクールについての考え

549
00:17:56,480 --> 00:17:57,919
はそうですこれらは毎日

550
00:17:57,919 --> 00:18:00,000
使用されているアルゴリズムであり、

551
00:18:00,000 --> 00:18:02,640


552
00:18:02,640 --> 00:18:03,520
私たちの多くの経験

553
00:18:03,520 --> 00:18:07,120
と多くの意思決定サポートを強化し

554
00:18:07,120 --> 00:18:09,200
ますここでいくつかのベイジアンアルゴリズムを導入し

555
00:18:09,200 --> 00:18:11,440
ます

556
00:18:11,440 --> 00:18:12,880
彼らはこれらの2

557
00:18:12,880 --> 00:18:15,039
種類のバンディット問題を静止と

558
00:18:15,039 --> 00:18:15,840
切り替え

559
00:18:15,840 --> 00:18:18,880
で使用

560
00:18:18,880 --> 00:18:20,480
します。これが、

561
00:18:20,480 --> 00:18:22,000
アクティブな推論

562
00:18:22,000 --> 00:18:24,320
を機械学習からの他の2つの最先端のバンド

563
00:18:24,320 --> 00:18:26,080
アルゴリズムと経験的に

564
00:18:26,080 --> 00:18:27,679
比較する2番目の用語のペアです。 機械

565
00:18:27,679 --> 00:18:29,760
学習に精通している人は、これら2つの

566
00:18:29,760 --> 00:18:31,280
アルゴリズムをよく

567
00:18:31,280 --> 00:18:33,679
目にするでしょう。最初のアルゴリズムは、信頼度の高い限界

568
00:18:33,679 --> 00:18:34,480
アルゴリズム

569
00:18:34,480 --> 00:18:37,760
ucbであり、2番目のアルゴリズムは、

570
00:18:37,760 --> 00:18:39,200


571
00:18:39,200 --> 00:18:42,080
楽観的トンプソンサンプリングと呼ばれるトムソンサンプリングの変形であり、

572
00:18:42,080 --> 00:18:43,039
ここで

573
00:18:43,039 --> 00:18:45,760
、ucbとトムソンサンプリングが到達する2つのアルゴリズムに注目します。

574
00:18:45,760 --> 00:18:47,360


575
00:18:47,360 --> 00:18:48,880


576
00:18:48,880 --> 00:18:51,360


577
00:18:51,360 --> 00:18:53,200


578
00:18:53,200 --> 00:18:55,200
実際と最適の違いである後悔を達成するさまざまな静止バンディット問題の最先端のパフォーマンス パフォーマンス

579
00:18:55,200 --> 00:18:56,480
はすぐ

580
00:18:56,480 --> 00:18:58,240
に戻ってきますが、これは可能な限り最高の

581
00:18:58,240 --> 00:18:59,919
対数後悔

582
00:18:59,919 --> 00:19:01,440
に近く、盗賊の切り替えでは学習は

583
00:19:01,440 --> 00:19:03,280
より複雑ですが、これを考慮すると

584
00:19:03,280 --> 00:19:03,760
、

585
00:19:03,760 --> 00:19:05,200
両方のアルゴリズムが

586
00:19:05,200 --> 00:19:07,039
最先端のパフォーマンスを発揮する

587
00:19:07,039 --> 00:19:10,080
ため、完璧にプレイすることはできませんが、

588
00:19:10,080 --> 00:19:12,000


589
00:19:12,000 --> 00:19:12,720


590
00:19:12,720 --> 00:19:15,280
これらのアルゴリズム

591
00:19:15,280 --> 00:19:16,559


592
00:19:16,559 --> 00:19:18,880
の技術的な詳細に入る前に、これらの

593
00:19:18,880 --> 00:19:20,880
アルゴリズムで遊ぶことが

594
00:19:20,880 --> 00:19:22,960
できるのとほぼ同じくらい良いものになります。左上で、どのバージョンのアルゴリズムを決定するかをもう一度考えます。

595
00:19:22,960 --> 00:19:24,559


596
00:19:24,559 --> 00:19:26,559


597
00:19:26,559 --> 00:19:28,480
提示したいウェブサイト、

598
00:19:28,480 --> 00:19:29,919
提示したい曲、

599
00:19:29,919 --> 00:19:32,559
または左上の抽象化を維持する

600
00:19:32,559 --> 00:19:34,160


601
00:19:34,160 --> 00:19:36,559
ために、ゼロトライアルから開始します。これは

602
00:19:36,559 --> 00:19:38,000
、情報がまったく得られない前で

603
00:19:38,000 --> 00:19:41,120
あり、トライアル

604
00:19:41,120 --> 00:19:44,160
が発生してペイオフが観察され、 試行

605
00:19:44,160 --> 00:19:44,720


606
00:19:44,720 --> 00:19:48,640
回数は28回の試行後にカウントされ

607
00:19:48,640 --> 00:19:50,799
、非常に著しく異なる分布のセットに到達しました。

608
00:19:50,799 --> 00:19:52,799


609
00:19:52,799 --> 00:19:55,679
したがって、この全体的な外観は

610
00:19:55,679 --> 00:19:57,360
、カジノに表示され、kではありません。

611
00:19:57,360 --> 00:19:58,559
今度は

612
00:19:58,559 --> 00:20:01,039
スロットマシンのいずれかの見返りがあり、次にそれらのスロットマシン

613
00:20:01,039 --> 00:20:02,080


614
00:20:02,080 --> 00:20:04,880
にアプローチする何らかの方法を選択

615
00:20:04,880 --> 00:20:05,520


616
00:20:05,520 --> 00:20:07,840


617
00:20:07,840 --> 00:20:10,080
し、必要に応じてそれらを切り替える

618
00:20:10,080 --> 00:20:12,720


619
00:20:12,720 --> 00:20:13,600
ことになるでしょう。

620
00:20:13,600 --> 00:20:15,760


621
00:20:15,760 --> 00:20:17,600


622
00:20:17,600 --> 00:20:19,200
情報が増えるにつれて

623
00:20:19,200 --> 00:20:21,120


624
00:20:21,120 --> 00:20:23,360
、分布がどのよう

625
00:20:23,360 --> 00:20:25,440
に見えるかを

626
00:20:25,440 --> 00:20:27,760
微調整している

627
00:20:27,760 --> 00:20:29,200
ようなものです。他の分布でも同様に試行されると、赤い分布がどの

628
00:20:29,200 --> 00:20:31,360
ように調整されるかがわかります。

629
00:20:31,360 --> 00:20:34,320
これは、このアルゴリズムが行うことの一種です。

630
00:20:34,320 --> 00:20:35,200


631
00:20:35,200 --> 00:20:37,760
特定のスロットマシンに対して特定のバイアスをかけずに開始し、新しいスロット

632
00:20:37,760 --> 00:20:38,799
マシン

633
00:20:38,799 --> 00:20:41,840
やしばらく試したことのない

634
00:20:41,840 --> 00:20:43,840
スロットマシンを試すのではなく、既知のスロットマシンを維持するための戦略を開発しようとし

635
00:20:43,840 --> 00:20:46,080


636
00:20:46,080 --> 00:20:48,240
ます。

637
00:20:48,240 --> 00:20:49,679
可能な限り最高の結果を得るには、静的な

638
00:20:49,679 --> 00:20:51,520
結果がある場合は想像できるよう

639
00:20:51,520 --> 00:20:53,840
に、

640
00:20:53,840 --> 00:20:55,039


641
00:20:55,039 --> 00:20:57,360
動的な場合は変化率を念頭に置いておく必要があります。

642
00:20:57,360 --> 00:21:00,479


643
00:21:00,640 --> 00:21:03,440
その良い

644
00:21:03,440 --> 00:21:04,240
説明で

645
00:21:04,240 --> 00:21:07,520
大丈夫ですので、ベルヌーイバンディットは

646
00:21:07,520 --> 00:21:11,120
彼らが自分自身を拘束しようとしているええとクラスのバンディットな

647
00:21:11,120 --> 00:21:12,799


648
00:21:12,799 --> 00:21:15,280
ので、彼らは私たちがベルヌーイ

649
00:21:15,280 --> 00:21:17,440
バンディットのためのいわゆるベルヌーイバンディットのよく研究されたバージョンに自分自身を拘束していると言います

650
00:21:17,440 --> 00:21:20,159


651
00:21:20,159 --> 00:21:21,520


652
00:21:21,520 --> 00:21:23,600
選択結果は、

653
00:21:23,600 --> 00:21:26,240
腕固有のベルヌーイ分布から導き出されます。

654
00:21:26,240 --> 00:21:28,080
ベルヌーイバンディットとガウス

655
00:21:28,080 --> 00:21:30,640
バンディットは、理論および応用機械学習と実験的認知科学の両方で最も一般的に研究されている

656
00:21:30,640 --> 00:21:32,960
マルチアームバンディットの変形である

657
00:21:32,960 --> 00:21:35,120


658
00:21:35,120 --> 00:21:38,480


659
00:21:38,480 --> 00:21:41,760


660
00:21:41,760 --> 00:21:44,720
ため、それぞれの基礎となる報酬に任意の種類の分布を適合させることができます。 これらの

661
00:21:44,720 --> 00:21:46,000
スロットマシン

662
00:21:46,000 --> 00:21:47,840
の一部ですが、ベルヌーイ分布を使用すると

663
00:21:47,840 --> 00:21:49,679


664
00:21:49,679 --> 00:21:52,960
、数学がうまく機能し、研究が容易になることが

665
00:21:52,960 --> 00:21:55,200
わかります。そのため

666
00:21:55,200 --> 00:21:56,799
、ベルヌーイとガウス分布で多くの研究が行われている

667
00:21:56,799 --> 00:21:57,679


668
00:21:57,679 --> 00:22:00,400
ため、ガウス分布の報酬

669
00:22:00,400 --> 00:22:01,200
は大丈夫

670
00:22:01,200 --> 00:22:04,000
です。 ベルヌーイに勝つ可能性のあるベルヌーイのベル曲線が異なることを知っていることを確認して、5を取得します

671
00:22:04,000 --> 00:22:05,360


672
00:22:05,360 --> 00:22:07,280


673
00:22:07,280 --> 00:22:08,400
形の

674
00:22:08,400 --> 00:22:09,520
分布

675
00:22:09,520 --> 00:22:10,960
ですが、アイデアは、そのアーム

676
00:22:10,960 --> 00:22:12,640


677
00:22:12,640 --> 00:22:16,159
によって返される報酬を説明するパラメーターを学習

678
00:22:16,159 --> 00:22:18,480


679
00:22:18,480 --> 00:22:20,960
することです。したがって、これらのマシン

680
00:22:20,960 --> 00:22:23,039
の報酬の支払いの基礎となるのは、サブカテゴリまたは関数です

681
00:22:23,039 --> 00:22:24,320


682
00:22:24,320 --> 00:22:27,840


683
00:22:29,600 --> 00:22:32,640
。2つのアルゴリズムについて説明しましょう。

684
00:22:32,640 --> 00:22:34,960


685
00:22:34,960 --> 00:22:37,280


686
00:22:37,280 --> 00:22:39,520
戦略の観点からこれらのアルゴリズムがどのように機能するかについて多くのことを話し合う予定な

687
00:22:39,520 --> 00:22:41,200
ので、ここでも

688
00:22:41,200 --> 00:22:43,280
カジノのスロットマシンに座って

689
00:22:43,280 --> 00:22:46,640


690
00:22:46,640 --> 00:22:49,679
、特定のマシンに留まるか離れるかをどのように決定しますか

691
00:22:49,679 --> 00:22:51,360
カジノにとどまり

692
00:22:51,360 --> 00:22:53,200
たいのですが、

693
00:22:53,200 --> 00:22:57,280
これは2019年の素敵なブログ投稿からのものです。

694
00:22:57,280 --> 00:22:58,960
データ科学者はこの問題に取り組むためのいくつかのソリューションを開発しました。

695
00:22:58,960 --> 00:23:00,880


696
00:23:00,880 --> 00:23:02,799
最も一般的な3つのアルゴリズムは、

697
00:23:02,799 --> 00:23:04,240
イプシロングリーディ

698
00:23:04,240 --> 00:23:06,000
、次に上限信頼限界、トンプソン

699
00:23:06,000 --> 00:23:08,000
サンプリングなのでイプシロングリーディです。

700
00:23:08,000 --> 00:23:11,600
これは最高のパフォーマンスを発揮するアルゴリズムではないため、このペーパーでは説明していませんが、これは

701
00:23:11,600 --> 00:23:13,360


702
00:23:13,360 --> 00:23:14,000


703
00:23:14,000 --> 00:23:17,039
本当に優れたスターターアルゴリズムであり

704
00:23:17,039 --> 00:23:18,799
、最も単純なアルゴリズムです。 基本的に探索中または搾取中の

705
00:23:18,799 --> 00:23:21,600
探索搾取のトレードオフに対処します

706
00:23:21,600 --> 00:23:23,840


707
00:23:23,840 --> 00:23:25,120
申し訳ありませんが

708
00:23:25,120 --> 00:23:26,880
、既知のペイアウトが最も高いレバー

709
00:23:26,880 --> 00:23:28,320
が常に引っ張られるため

710
00:23:28,320 --> 00:23:30,640


711
00:23:30,640 --> 00:23:32,960
、最高のパフォーマンスを発揮するスロットマシンの実行中の最良の見積もりが

712
00:23:32,960 --> 00:23:36,400
デフォルトになりますが、時々

713
00:23:36,400 --> 00:23:38,880
、いくつかの分数を含むランダムな分数のイプシロンがあります

714
00:23:38,880 --> 00:23:39,440


715
00:23:39,440 --> 00:23:40,880
5％の時間または1％

716
00:23:40,880 --> 00:23:42,480
の時間で、

717
00:23:42,480 --> 00:23:45,039
別のランダムアームを選択

718
00:23:45,039 --> 00:23:45,600


719
00:23:45,600 --> 00:23:48,159
して、ペイオフが不明な他のアームを探索します。これ

720
00:23:48,159 --> 00:23:49,440
により、

721
00:23:49,440 --> 00:23:50,960
ポイントの見積もりが最も高いアームに

722
00:23:50,960 --> 00:23:53,279


723
00:23:53,279 --> 00:23:54,880
固執し、その後、 別の戦略を

724
00:23:54,880 --> 00:23:55,919
確認

725
00:23:55,919 --> 00:23:58,000
してから、それぞれの動作の見積もりを更新します。

726
00:23:58,000 --> 00:23:59,039


727
00:23:59,039 --> 00:24:01,600
これが1つの戦略です。これ

728
00:24:01,600 --> 00:24:02,559


729
00:24:02,559 --> 00:24:04,320
が、アクティブな推論と対比する戦略よりも優れた2

730
00:24:04,320 --> 00:24:06,080


731
00:24:06,080 --> 00:24:08,000


732
00:24:08,000 --> 00:24:09,840
つの戦略です。

733
00:24:09,840 --> 00:24:12,080


734
00:24:12,080 --> 00:24:14,320
不確実性に直面し

735
00:24:14,320 --> 00:24:16,080


736
00:24:16,080 --> 00:24:18,640
て楽観主義と呼ばれることもある信頼限界の上限 過去のデータに基づいて、各アームの未知の平均ペイオフ

737
00:24:18,640 --> 00:24:21,279
が可能な限り高くなるため、各アーム

738
00:24:21,279 --> 00:24:24,240


739
00:24:24,240 --> 00:24:25,279
のペイオフはわかりませんが

740
00:24:25,279 --> 00:24:28,000


741
00:24:28,000 --> 00:24:30,240
、データからすでに得たものを考慮して、私たちの範囲内であると仮定します

742
00:24:30,240 --> 00:24:32,240
。 可能な

743
00:24:32,240 --> 00:24:33,600
限り良好であると推測できる

744
00:24:33,600 --> 00:24:34,400


745
00:24:34,400 --> 00:24:36,240
ため

746
00:24:36,240 --> 00:24:39,200
、この分布の上部に信頼度の上限が

747
00:24:39,200 --> 00:24:41,840
あり、トンプソンサンプリングは

748
00:24:41,840 --> 00:24:43,600
基本的に、確率マッチングと呼ばれるコア原理を備えたベイズ最適化

749
00:24:43,600 --> 00:24:44,320
手法です。

750
00:24:44,320 --> 00:24:45,679


751
00:24:45,679 --> 00:24:47,679


752
00:24:47,679 --> 00:24:48,240


753
00:24:48,240 --> 00:24:50,720


754
00:24:50,720 --> 00:24:51,440


755
00:24:51,440 --> 00:24:54,480
最高の腕である確率に応じて腕を弾くと要約されるので、

756
00:24:54,480 --> 00:24:56,159
あなたが最高だと思うものと一緒に行くと言うイプシロンとは対照的に

757
00:24:56,159 --> 00:24:57,520


758
00:24:57,520 --> 00:24:59,440
、10パーセントの時間は

759
00:24:59,440 --> 00:25:00,559


760
00:25:00,559 --> 00:25:02,080
あなたのようなものです。

761
00:25:02,080 --> 00:25:03,919


762
00:25:03,919 --> 00:25:05,120


763
00:25:05,120 --> 00:25:08,000
さまざまなアームの相対的なパフォーマンスを示す円グラフを作成し

764
00:25:08,000 --> 00:25:09,200


765
00:25:09,200 --> 00:25:12,640
、パイの大きさに基づいてそれらを選択するため、チェックインの種類だけで

766
00:25:12,640 --> 00:25:14,880
高いペイオフがないものを選択することはめったにありません。

767
00:25:14,880 --> 00:25:16,400


768
00:25:16,400 --> 00:25:17,919
しかし、1つをもう一度確認して、

769
00:25:17,919 --> 00:25:19,919
それが本当にうまくいった場合

770
00:25:19,919 --> 00:25:21,679
、パイのスライスが成長

771
00:25:21,679 --> 00:25:23,360
し始め、これらのアルゴリズムをトレーニングする全体のポイントは

772
00:25:23,360 --> 00:25:25,760


773
00:25:25,760 --> 00:25:26,080


774
00:25:26,080 --> 00:25:28,720
、動的な場合などで再重み付けする必要がある速度

775
00:25:28,720 --> 00:25:29,279
です。

776
00:25:29,279 --> 00:25:30,640
それは解決策ではないようですが

777
00:25:30,640 --> 00:25:32,960


778
00:25:32,960 --> 00:25:33,679


779
00:25:33,679 --> 00:25:35,279
、不確実性に直面した楽観主義

780
00:25:35,279 --> 00:25:37,919
またはこれらに一致するこの種の保守的な

781
00:25:37,919 --> 00:25:39,600
確率

782
00:25:39,600 --> 00:25:41,600
が、私たちが見てき

783
00:25:41,600 --> 00:25:43,039
たように最先端であるため、2つの方法であるかどうかにかかわらず、これはいくつかの方法で得られています

784
00:25:43,039 --> 00:25:45,200
基本的に可能な限りパフォーマンスが高い

785
00:25:45,200 --> 00:25:47,520
ので

786
00:25:47,520 --> 00:25:50,320
、信頼度の上限と信頼度の下限

787
00:25:50,320 --> 00:25:53,520
でロックダウンして

788
00:25:53,520 --> 00:25:55,279
います。これは

789
00:25:55,279 --> 00:25:57,360
、機械学習

790
00:25:57,360 --> 00:26:00,240
教育スペース全体で教育ペアとして提起されたアルゴリズムの非常に優れた選択肢です。

791
00:26:00,240 --> 00:26:02,159
作者はそれをアクティブな推論と非常に明確に並置しているので、

792
00:26:02,159 --> 00:26:05,679


793
00:26:05,679 --> 00:26:08,320
トンプソンのサンプリングもそうです。

794
00:26:08,320 --> 00:26:11,360
不確実性に直面した悲観主義

795
00:26:11,360 --> 00:26:13,520


796
00:26:13,520 --> 00:26:16,080
は、過去よりも良くなることは

797
00:26:16,080 --> 00:26:18,240
ありません。もう少し詳しく見ていきましょう。

798
00:26:18,240 --> 00:26:19,679
2つの

799
00:26:19,679 --> 00:26:22,559
異なるuhアルゴリズムについて詳しく説明し、後悔について話し

800
00:26:22,559 --> 00:26:24,400


801
00:26:24,400 --> 00:26:27,600
ます。これは、盗賊戦略について話している別のブログ投稿からのリリアン・

802
00:26:27,600 --> 00:26:29,520
ワンのブログ

803
00:26:29,520 --> 00:26:32,559


804
00:26:32,559 --> 00:26:35,360


805
00:26:35,360 --> 00:26:35,919
です。

806
00:26:35,919 --> 00:26:38,000
アクティブな推論は、

807
00:26:38,000 --> 00:26:39,120


808
00:26:39,120 --> 00:26:40,799
おそらく取得できる探索エクスプロイトの再概念化に役立ちますが、これも探索とエクスプロイトについて

809
00:26:40,799 --> 00:26:42,320
です。 最後

810
00:26:42,320 --> 00:26:44,000
になり

811
00:26:44,000 --> 00:26:45,919


812
00:26:45,919 --> 00:26:48,240
ます

813
00:26:48,240 --> 00:26:49,440


814
00:26:49,440 --> 00:26:51,039
が、非効率的な探索を回避するためのより良い方法があることを知っている間、私たちは負けたマシンで遊ぶことに時間を費やし

815
00:26:51,039 --> 00:26:53,520
ているので、非効率的に

816
00:26:53,520 --> 00:26:54,240
探索

817
00:26:54,240 --> 00:26:57,600
したくありません。1つのアプローチはイプシロンサンプリングを行うことです

818
00:26:57,600 --> 00:27:00,159
そして、静的なペイオフのセットの場合、

819
00:27:00,159 --> 00:27:00,880


820
00:27:00,880 --> 00:27:03,039
そのパラメーターのイプシロンを時間内に減少させる

821
00:27:03,039 --> 00:27:04,960
ので、どれだけ速く

822
00:27:04,960 --> 00:27:06,240
減少させる必要

823
00:27:06,240 --> 00:27:07,919
があるかは、パラメーターに適合させる必要がありますが

824
00:27:07,919 --> 00:27:09,919


825
00:27:09,919 --> 00:27:13,840
、これは、この非効率的な探索を防ぐための別のアプローチの1つにすぎ

826
00:27:13,840 --> 00:27:17,200
ないため、痛みを避けてください

827
00:27:17,200 --> 00:27:18,159


828
00:27:18,159 --> 00:27:20,720


829
00:27:20,720 --> 00:27:21,200


830
00:27:21,200 --> 00:27:22,720


831
00:27:22,720 --> 00:27:24,480
不確実性の高いオプションについて楽観

832
00:27:24,480 --> 00:27:26,960
的であるため、whに対して暗黙的にアクションを優先する値について楽観的である必要があります。

833
00:27:26,960 --> 00:27:28,799
信頼値の推定値がまだ

834
00:27:28,799 --> 00:27:30,559
ないため、これは不確実性に直面した楽観主義です。

835
00:27:30,559 --> 00:27:32,320


836
00:27:32,320 --> 00:27:34,480
言い換える

837
00:27:34,480 --> 00:27:36,559
と、最適値を持つ可能性が高いアクションの探索を優先する

838
00:27:36,559 --> 00:27:38,799
ため、

839
00:27:38,799 --> 00:27:39,600
ucbの

840
00:27:39,600 --> 00:27:42,720
信頼限界の上限アルゴリズムはまさに

841
00:27:42,720 --> 00:27:44,799
それを実行します。

842
00:27:44,799 --> 00:27:47,520
真の値が常にその限界を下回るように信頼限界の上限で測定し、

843
00:27:47,520 --> 00:27:48,320


844
00:27:48,320 --> 00:27:52,559
それより

845
00:27:52,559 --> 00:27:55,279


846
00:27:55,279 --> 00:27:56,559
下のどこかで

847
00:27:56,559 --> 00:28:00,799
真の値がそれほど遠くないことを認識して上限を押し上げようとしています。

848
00:28:00,799 --> 00:28:03,440
その後、ucvアルゴリズムは

849
00:28:03,440 --> 00:28:06,559
これを使用して最適化を行います。  arg max

850
00:28:06,559 --> 00:28:08,159
は、その上限の信頼限界を最大化するために最も貪欲なアクションを選択します。

851
00:28:08,159 --> 00:28:10,559


852
00:28:10,559 --> 00:28:12,960
これは、基本的にブログ

853
00:28:12,960 --> 00:28:14,000
に示されているように、探索を行うことはできませ

854
00:28:14,000 --> 00:28:17,440
ん。

855
00:28:17,440 --> 00:28:19,279
そこに滞在する最初のアクションを選択するだけ

856
00:28:19,279 --> 00:28:21,600
で、ランダムに探索することが

857
00:28:21,600 --> 00:28:24,960
できます。

858
00:28:24,960 --> 00:28:25,600


859
00:28:25,600 --> 00:28:27,840
不確実性を優先してスマートに探索できるので、

860
00:28:27,840 --> 00:28:29,279
私たちは通常好きな

861
00:28:29,279 --> 00:28:29,840


862
00:28:29,840 --> 00:28:31,760
ものに固執するというイプシロンのアイデアに基づいて

863
00:28:31,760 --> 00:28:33,279


864
00:28:33,279 --> 00:28:35,600
いますが、 次に、他の場所で

865
00:28:35,600 --> 00:28:37,279
時間を費やし、他の場所でどのくらいの時間を費やすか、

866
00:28:37,279 --> 00:28:38,720
どのマシンを選択する

867
00:28:38,720 --> 00:28:40,240
必要があるかを選択する場合は、古いマシンに移動するだけ

868
00:28:40,240 --> 00:28:41,919


869
00:28:41,919 --> 00:28:44,080


870
00:28:44,080 --> 00:28:46,159
でなく、期待される高い見返りが得られる可能性が高いマシンを選択しましょう。

871
00:28:46,159 --> 00:28:47,200


872
00:28:47,200 --> 00:28:50,320


873
00:28:50,320 --> 00:28:53,279
対照的に

874
00:28:53,279 --> 00:28:54,880


875
00:28:54,880 --> 00:28:58,799
、アグロウォールコロンビアの素敵なスライドデッキからの

876
00:28:58,799 --> 00:29:01,760
トンプソンサンプリングがあり、トンプソンサンプリングは

877
00:29:01,760 --> 00:29:03,840
1933年にさかのぼり

878
00:29:03,840 --> 00:29:05,679
ます。他の多くのアルゴリズムと同様に、

879
00:29:05,679 --> 00:29:07,760
古典的なバリアント

880
00:29:07,760 --> 00:29:10,480
は事前計算であり、実験と見なされることもあります。

881
00:29:10,480 --> 00:29:12,640


882
00:29:12,640 --> 00:29:14,720
スライドでは、

883
00:29:14,720 --> 00:29:16,159
トンプソンサンプリングが

884
00:29:16,159 --> 00:29:18,399
自然で効率的なヒューリスティックで

885
00:29:18,399 --> 00:29:19,520


886
00:29:19,520 --> 00:29:21,760


887
00:29:21,760 --> 00:29:23,760
あり、各アームの主な報酬である有効

888
00:29:23,760 --> 00:29:25,440
性についての信念を維持していることについて説明

889
00:29:25,440 --> 00:29:27,440
しています。

890
00:29:27,440 --> 00:29:28,399


891
00:29:28,399 --> 00:29:30,000
基本的には、

892
00:29:30,000 --> 00:29:32,000
フィードバックを観察

893
00:29:32,000 --> 00:29:34,159


894
00:29:34,159 --> 00:29:36,240
し、ベイジアン方式でさまざまな武器に関する信念を更新してから

895
00:29:36,240 --> 00:29:38,159
、 事後

896
00:29:38,159 --> 00:29:40,399
確率が最良のアームで

897
00:29:40,399 --> 00:29:42,240
ある可能性が最も高いアームを選択するのと同じではないrms

898
00:29:42,240 --> 00:29:44,399


899
00:29:44,399 --> 00:29:47,039
これは、パフォーマンスの比率である円グラフのようなものであり

900
00:29:47,039 --> 00:29:48,240
、その比率

901
00:29:48,240 --> 00:29:49,760
に

902
00:29:49,760 --> 00:29:52,480
基づいて選択します

903
00:29:52,480 --> 00:29:56,399
疑似コードは次の

904
00:29:56,399 --> 00:29:59,679
ようになります。モデル

905
00:29:59,679 --> 00:30:03,919
を事前確率

906
00:30:03,919 --> 00:30:06,240
と、報酬が

907
00:30:06,240 --> 00:30:08,559
引き出されると予想される分布のファミリーで初期化するので、これは

908
00:30:08,559 --> 00:30:09,279
ガウス分布の

909
00:30:09,279 --> 00:30:10,960
ケースですが、ここでbernoulliバンディットが発生するのを見ることができます。

910
00:30:10,960 --> 00:30:12,960
再生する

911
00:30:12,960 --> 00:30:16,720
と、アルゴリズムは次のようになります。

912
00:30:16,720 --> 00:30:20,159
最初に、特定のアーム

913
00:30:20,159 --> 00:30:23,440
の事後確率からの推定値を使用した平均のサンプリングがあります。

914
00:30:23,440 --> 00:30:26,799


915
00:30:26,799 --> 00:30:28,799


916
00:30:28,799 --> 00:30:29,919


917
00:30:29,919 --> 00:30:33,279


918
00:30:33,279 --> 00:30:36,799
次に、報酬が観察される最良のアームである確率に従ってアームが再生され、

919
00:30:36,799 --> 00:30:39,520
すべてが更新されます。 つまり

920
00:30:39,520 --> 00:30:41,679


921
00:30:41,679 --> 00:30:44,559
、予測からの事後確率のサンプル

922
00:30:44,559 --> 00:30:44,960


923
00:30:44,960 --> 00:30:48,399
のようなものであり、行動してから観察して更新する

924
00:30:48,399 --> 00:30:49,600
ようなもの

925
00:30:49,600 --> 00:30:51,440
です。

926
00:30:51,440 --> 00:30:52,640


927
00:30:52,640 --> 00:30:54,159
始まりは終わり

928
00:30:54,159 --> 00:30:56,559
、ベイジアン統計では事後と呼ばれ

929
00:30:56,559 --> 00:30:57,600
ます。

930
00:30:57,600 --> 00:31:00,159
事前に事後が更新されますが、

931
00:31:00,159 --> 00:31:01,679
その後

932
00:31:01,679 --> 00:31:04,399
は次のラウンドの事前であるため、事後がモデルにフィードバックされることを学習する

933
00:31:04,399 --> 00:31:05,840
のは1ラウンドだけではありません。

934
00:31:05,840 --> 00:31:08,960


935
00:31:08,960 --> 00:31:10,480


936
00:31:10,480 --> 00:31:12,559
継続的なベイジアン更新について話す

937
00:31:12,559 --> 00:31:15,600
ので、観察オリエント決定行為のようなoodaのような

938
00:31:15,600 --> 00:31:18,240


939
00:31:18,240 --> 00:31:19,679
もの

940
00:31:19,679 --> 00:31:22,240
です。もちろんアクティブな推論を含むこれらの種類のアクションループは

941
00:31:22,240 --> 00:31:22,880


942
00:31:22,880 --> 00:31:26,080
、これらのモデルを本当に類似させるか、

943
00:31:26,080 --> 00:31:27,679
少なくとも同じ近隣

944
00:31:27,679 --> 00:31:28,960
に置くものです。

945
00:31:28,960 --> 00:31:32,240
それらを

946
00:31:32,240 --> 00:31:34,320
分析的に方程式と整合させ、

947
00:31:34,320 --> 00:31:37,440
シミュレーションと並置

948
00:31:37,440 --> 00:31:39,360
によって、トンプソンサンプリングとは何かですが

949
00:31:39,360 --> 00:31:42,240
、トンプソンに関するコメント

950
00:31:42,240 --> 00:31:44,399
は、先ほど話していた

951
00:31:44,399 --> 00:31:46,320
順次意思決定プロセスにどれだけうまく機能

952
00:31:46,320 --> 00:31:47,679


953
00:31:47,679 --> 00:31:49,200
するので、次のタイムステップがあります。

954
00:31:49,200 --> 00:31:51,120
更新して更新して更新し

955
00:31:51,120 --> 00:31:52,960


956
00:31:52,960 --> 00:31:54,960
ますそうです 作成した画像

957
00:31:54,960 --> 00:31:56,640
分類

958
00:31:56,640 --> 00:31:59,679
は、大きなデータベースからサンプリングしてから

959
00:31:59,679 --> 00:32:01,600
モデルを更新し、

960
00:32:01,600 --> 00:32:02,880
サンプリングして

961
00:32:02,880 --> 00:32:05,120
、モデルをあまり更新していないようになっ

962
00:32:05,120 --> 00:32:06,960
たら、データセット全体を調べる必要がない場合があります。

963
00:32:06,960 --> 00:32:08,640


964
00:32:08,640 --> 00:32:10,960
したがって、非シーケンシャルな問題をシーケンシャルにフレーミングすることで、

965
00:32:10,960 --> 00:32:12,480


966
00:32:12,480 --> 00:32:15,679
計算速度が大幅に向上します。

967
00:32:15,679 --> 00:32:16,960
もちろん、シーケンシャルな

968
00:32:16,960 --> 00:32:18,799
意思決定には、このようなアプローチが必要です。

969
00:32:18,799 --> 00:32:21,519


970
00:32:22,240 --> 00:32:25,360


971
00:32:25,360 --> 00:32:27,279


972
00:32:27,279 --> 00:32:30,240


973
00:32:30,240 --> 00:32:31,840
これを後悔と強化学習の紹介に入れてください。

974
00:32:31,840 --> 00:32:33,600
これ

975
00:32:33,600 --> 00:32:33,919
は

976
00:32:33,919 --> 00:32:37,039
中程度の投稿

977
00:32:37,039 --> 00:32:38,320
です。後悔についてもっと知りたい場合は、

978
00:32:38,320 --> 00:32:40,080
そこでチェックできますが、

979
00:32:40,080 --> 00:32:40,960
後悔は

980
00:32:40,960 --> 00:32:43,679
最適なパフォーマンスの違いにすぎません。

981
00:32:43,679 --> 00:32:45,519
できる

982
00:32:45,519 --> 00:32:46,320
こと

983
00:32:46,320 --> 00:32:48,159
と実際のパフォーマンスが良いので

984
00:32:48,159 --> 00:32:50,320
、この小さな画像

985
00:32:50,320 --> 00:32:52,880
を見ると、最良のポリシー

986
00:32:52,880 --> 00:32:54,559
は赤い点線

987
00:32:54,559 --> 00:32:55,600
であり、エージェントが

988
00:32:55,600 --> 00:32:58,799
これを選択するのはlであることがわかります。 対数パフォーマンス

989
00:32:58,799 --> 00:33:01,039
対数後悔のように

990
00:33:01,039 --> 00:33:02,799
、彼らは収束しているので、彼らは、

991
00:33:02,799 --> 00:33:04,080


992
00:33:04,080 --> 00:33:06,720
あなたの以前の決定に基づいて可能な

993
00:33:06,720 --> 00:33:07,600


994
00:33:07,600 --> 00:33:10,320
限り最良のポリシーに

995
00:33:10,320 --> 00:33:11,519
収束

996
00:33:11,519 --> 00:33:13,360
することです。

997
00:33:13,360 --> 00:33:14,880


998
00:33:14,880 --> 00:33:16,240
彼らはパフォーマンスの尺度として後悔を使用

999
00:33:16,240 --> 00:33:18,559


1000
00:33:18,559 --> 00:33:20,159
しますが、切り替えバンディットを見ているときに後悔率を使用する

1001
00:33:20,159 --> 00:33:22,320
ため、後悔率は

1002
00:33:22,320 --> 00:33:23,039


1003
00:33:23,039 --> 00:33:25,039
時間の経過に伴う後悔にすぎ

1004
00:33:25,039 --> 00:33:26,399


1005
00:33:26,399 --> 00:33:28,000
ず、より良い推定値であることが示されていると述べた率を使用します

1006
00:33:28,000 --> 00:33:29,440


1007
00:33:29,440 --> 00:33:33,279
動的な場合のこの対数的後悔の

1008
00:33:33,279 --> 00:33:37,360
素晴らしく、後悔の大きなアイデアは

1009
00:33:37,360 --> 00:33:40,399
あなたの歴史を振り返ることです

1010
00:33:40,399 --> 00:33:42,240
ので、定常問題に

1011
00:33:42,240 --> 00:33:44,240
本当によく当てはまる累積的な後悔であるすべての歴史、

1012
00:33:44,240 --> 00:33:46,000


1013
00:33:46,000 --> 00:33:49,279
または動的な場合によく当てはまる最近の歴史のいずれ

1014
00:33:49,279 --> 00:33:50,720


1015
00:33:50,720 --> 00:33:52,080
か 物事は常に変化している

1016
00:33:52,080 --> 00:33:53,840
あなたは、あなたが何かを望まないと

1017
00:33:53,840 --> 00:33:54,159


1018
00:33:54,159 --> 00:33:57,600
いうよりも、あなたが最近どれだけうまくやっているかに興味を持っています

1019
00:33:57,600 --> 00:33:59,279


1020
00:33:59,279 --> 00:34:00,960
早い段階

1021
00:34:00,960 --> 00:34:03,279
で変動が累積値に

1022
00:34:03,279 --> 00:34:04,159


1023
00:34:04,159 --> 00:34:05,440


1024
00:34:05,440 --> 00:34:07,120


1025
00:34:07,120 --> 00:34:09,119


1026
00:34:09,119 --> 00:34:09,918


1027
00:34:09,918 --> 00:34:11,839
影響を及ぼしているのは、このようにしないと発生する可能性のある別の時代からの後悔を減らすために今戦略を適合させたく

1028
00:34:11,839 --> 00:34:13,359
ないためです。

1029
00:34:13,359 --> 00:34:16,000
固定ケースの履歴累積後悔または

1030
00:34:16,000 --> 00:34:18,639
動的ケースの最近の履歴

1031
00:34:18,639 --> 00:34:21,199
戦略を更新して、その戦略をずっとプレイ

1032
00:34:21,199 --> 00:34:23,359
することでxeroへの後悔を最小限に抑え

1033
00:34:23,359 --> 00:34:26,079


1034
00:34:26,079 --> 00:34:26,800


1035
00:34:26,800 --> 00:34:30,000
、ビットコインの価格を振り返って、どの

1036
00:34:30,000 --> 00:34:31,199
戦略

1037
00:34:31,199 --> 00:34:34,480
が後悔しなかったかを知ることができます。

1038
00:34:34,480 --> 00:34:36,800
大きな質問です。

1039
00:34:36,800 --> 00:34:39,119


1040
00:34:39,119 --> 00:34:42,159
最近

1041
00:34:42,159 --> 00:34:44,399
、後悔の割合を

1042
00:34:44,399 --> 00:34:48,000
できるだけ低く

1043
00:34:48,000 --> 00:34:50,320
する方法を見つけたので、最後の小さな時間枠で、振り返って、

1044
00:34:50,320 --> 00:34:51,359


1045
00:34:51,359 --> 00:34:54,719
どのように実行できたかを楽観的に考える方法です。

1046
00:34:54,719 --> 00:34:57,359
後悔をゼロに減らすことによって、

1047
00:34:57,359 --> 00:34:57,760


1048
00:34:57,760 --> 00:34:59,920
これはコンピュータサイエンスで常に見

1049
00:34:59,920 --> 00:35:01,200


1050
00:35:01,200 --> 00:35:03,200


1051
00:35:03,200 --> 00:35:04,880
られます。たとえば、そこにネガティブがスローされている

1052
00:35:04,880 --> 00:35:07,359
かどうか、またはt これがそこにスローされた自然なログ

1053
00:35:07,359 --> 00:35:08,560


1054
00:35:08,560 --> 00:35:10,640
です。それが何かの上にあるのか、それとも

1055
00:35:10,640 --> 00:35:12,240
反対の方法でフレーム化され

1056
00:35:12,240 --> 00:35:13,760
ているのか、ゼロに制限されていることがわかっている場合は

1057
00:35:13,760 --> 00:35:15,760
、ゼロを下回ることはできません。

1058
00:35:15,760 --> 00:35:16,560


1059
00:35:16,560 --> 00:35:19,280
可能である

1060
00:35:19,280 --> 00:35:19,920
か

1061
00:35:19,920 --> 00:35:21,760
、何かを最大化したい場合は

1062
00:35:21,760 --> 00:35:23,839
、

1063
00:35:23,839 --> 00:35:25,359
最大値を超えてその数をゼロにしようとする方が

1064
00:35:25,359 --> 00:35:26,400


1065
00:35:26,400 --> 00:35:28,560
、この無制限の最大化よりも簡単

1066
00:35:28,560 --> 00:35:30,960
な

1067
00:35:30,960 --> 00:35:32,560
場合があります。

1068
00:35:32,560 --> 00:35:35,520
最高の数値がないので近い

1069
00:35:35,520 --> 00:35:37,200
ので、後悔している学習

1070
00:35:37,200 --> 00:35:38,960
です。それが彼らのパフォーマンスを計算する方法です。

1071
00:35:38,960 --> 00:35:41,119


1072
00:35:41,119 --> 00:35:44,400
アクティブな推論に取り掛かり

1073
00:35:44,400 --> 00:35:45,200


1074
00:35:45,200 --> 00:35:46,960
ましょう。このスライドですぐにわかることの1つ

1075
00:35:46,960 --> 00:35:48,400
は、感覚モーターが表示されていないことです。

1076
00:35:48,400 --> 00:35:51,920
ループ私たちは

1077
00:35:51,920 --> 00:35:54,720
矢印とノードのある環境でエージェントを見ていません

1078
00:35:54,720 --> 00:35:56,160


1079
00:35:56,160 --> 00:35:57,839


1080
00:35:57,839 --> 00:35:59,520


1081
00:35:59,520 --> 00:36:00,400


1082
00:36:00,400 --> 00:36:03,920
不確実性の下での順次意思決定のこの観点からアクティブな推論に来ているので、このセクション

1083
00:36:03,920 --> 00:36:05,200
では素晴らしいタイトルです

1084
00:36:05,200 --> 00:36:09,680


1085
00:36:09,680 --> 00:36:12,320
彼らは、探索

1086
00:36:12,320 --> 00:36:14,320
搾取のトレードオフ

1087
00:36:14,320 --> 00:36:16,160


1088
00:36:16,160 --> 00:36:19,280


1089
00:36:19,280 --> 00:36:20,800


1090
00:36:20,800 --> 00:36:22,640
は、環境の隠された特性に関する予想される予期しない不確実性を解決することを目的とした不確実性の削減問題として定式化できると

1091
00:36:22,640 --> 00:36:24,640
書いています。

1092
00:36:24,640 --> 00:36:26,640


1093
00:36:26,640 --> 00:36:28,160


1094
00:36:28,160 --> 00:36:30,079
私たちが直接アクセスできない環境

1095
00:36:30,079 --> 00:36:32,640
ですが、意思決定から認められた結果が得られます。

1096
00:36:32,640 --> 00:36:34,320


1097
00:36:34,320 --> 00:36:36,320
これにより、選択行動をキャスト

1098
00:36:36,320 --> 00:36:37,440


1099
00:36:37,440 --> 00:36:39,839


1100
00:36:39,839 --> 00:36:42,079


1101
00:36:42,079 --> 00:36:44,800
し、アクティブな推論によって表現される確率的推論の問題としての推論として計画を立てる

1102
00:36:44,800 --> 00:36:45,359


1103
00:36:45,359 --> 00:36:47,920


1104
00:36:47,920 --> 00:36:49,839
ことになります。 このアプローチを使用して感覚データを受け取っているという結果を踏まえて、計画を立て

1105
00:36:49,839 --> 00:36:51,440
、世界の隠れた状態について

1106
00:36:51,440 --> 00:36:52,640


1107
00:36:52,640 --> 00:36:55,839


1108
00:36:55,839 --> 00:36:58,240
さまざまなタイプの搾取的および

1109
00:36:58,240 --> 00:37:00,079
探索

1110
00:37:00,079 --> 00:37:03,119
的行動がアクティブな推論決定戦略に自然に出現する

1111
00:37:03,119 --> 00:37:04,800


1112
00:37:04,800 --> 00:37:08,079
行動ポリシーは

1113
00:37:08,079 --> 00:37:09,680
、単一の最適化

1114
00:37:09,680 --> 00:37:12,480
原則に基づいて、または昨日選択されます 私はそれがそうだったと思う

1115
00:37:12,480 --> 00:37:14,320


1116
00:37:14,320 --> 00:37:15,920


1117
00:37:15,920 --> 00:37:18,160
単一の最適化の

1118
00:37:18,160 --> 00:37:19,119
原則

1119
00:37:19,119 --> 00:37:21,680
が、予想される自由エネルギーである観測された将来の結果について予想される驚きを最小限に抑えることである

1120
00:37:21,680 --> 00:37:23,680


1121
00:37:23,680 --> 00:37:26,560
ため

1122
00:37:26,560 --> 00:37:27,920


1123
00:37:27,920 --> 00:37:30,960
、後向きのアプローチ

1124
00:37:30,960 --> 00:37:34,160
がどのように後悔を最小限に抑えるかというようなものです。

1125
00:37:34,160 --> 00:37:37,280
私は

1126
00:37:37,280 --> 00:37:39,599
過去について知っていることを考える

1127
00:37:39,599 --> 00:37:40,400


1128
00:37:40,400 --> 00:37:43,520
と、それが現在の行動をどのように変えるのか、そして現在と将来の瞬間に

1129
00:37:43,520 --> 00:37:46,480
期待される自由エネルギーの最小化

1130
00:37:46,480 --> 00:37:48,880
は、

1131
00:37:48,880 --> 00:37:49,599


1132
00:37:49,599 --> 00:37:52,880
現在のモデルの状態を与えられ、

1133
00:37:52,880 --> 00:37:55,040
どのように前進するのかということで最高のパフォーマンスを発揮しました

1134
00:37:55,040 --> 00:37:56,720


1135
00:37:56,720 --> 00:37:59,280
後悔は予期せぬものではないので、期待される自由エネルギー

1136
00:37:59,280 --> 00:38:01,599


1137
00:38:01,599 --> 00:38:03,280
を

1138
00:38:03,280 --> 00:38:05,200
最小限に抑える

1139
00:38:05,200 --> 00:38:06,480


1140
00:38:06,480 --> 00:38:07,920
ことができますか？

1141
00:38:07,920 --> 00:38:10,560


1142
00:38:10,560 --> 00:38:13,200


1143
00:38:13,200 --> 00:38:14,079
学習

1144
00:38:14,079 --> 00:38:16,839
し、次に将来の自由エネルギー

1145
00:38:16,839 --> 00:38:18,320
最小化は

1146
00:38:18,320 --> 00:38:20,079
、ここでアクティブな推論を組み立てる方法

1147
00:38:20,079 --> 00:38:22,320
です。 エネルギッシュなコメントや、それについては何

1148
00:38:22,320 --> 00:38:24,800
がクールだったと思いますか。

1149
00:38:24,800 --> 00:38:27,280
私は、アレックス

1150
00:38:27,280 --> 00:38:29,280
チャンスの論文

1151
00:38:29,280 --> 00:38:30,720
が好きだと思っています。それは8番だったと思いますが、

1152
00:38:30,720 --> 00:38:32,800


1153
00:38:32,800 --> 00:38:34,480


1154
00:38:34,480 --> 00:38:36,000
彼がそれを報酬のように非常にうまく分割したので、これらの計算フレームワークを見ると

1155
00:38:36,000 --> 00:38:36,800


1156
00:38:36,800 --> 00:38:39,440


1157
00:38:39,440 --> 00:38:41,200
、この場合

1158
00:38:41,200 --> 00:38:43,599
、後悔の最小化は

1159
00:38:43,599 --> 00:38:45,119
、実用的な価値または

1160
00:38:45,119 --> 00:38:46,000
報酬

1161
00:38:46,000 --> 00:38:48,880
、そして認識論的価値のように

1162
00:38:48,880 --> 00:38:50,240
見ることができます。 これらの両方が

1163
00:38:50,240 --> 00:38:51,040


1164
00:38:51,040 --> 00:38:54,079
システムに影響を及ぼし、システムに関連するエージェントの更新をどのように支援するかをシステムに提供し

1165
00:38:54,079 --> 00:38:55,280


1166
00:38:55,280 --> 00:38:58,320
ます。著者からの連絡

1167
00:38:58,320 --> 00:38:59,440
を楽しみにして

1168
00:38:59,440 --> 00:39:01,599
います。彼らは

1169
00:39:01,599 --> 00:39:03,440
アクティブな推論を研究し、その後、

1170
00:39:03,440 --> 00:39:05,440
ベイジアンの意思決定にアプローチ

1171
00:39:05,440 --> 00:39:05,839


1172
00:39:05,839 --> 00:39:09,119
しました。

1173
00:39:09,119 --> 00:39:10,960
非アクティブな推論のコンピュータサイエンスの

1174
00:39:10,960 --> 00:39:12,079
バックグラウンドから、そしてその後

1175
00:39:12,079 --> 00:39:13,599


1176
00:39:13,599 --> 00:39:15,599


1177
00:39:15,599 --> 00:39:19,440


1178
00:39:20,480 --> 00:39:22,320
、導入直後にこのアプローチにどのように収束したかをエキサイティングなものとしてアクティブな推論を見つけました

1179
00:39:22,320 --> 00:39:23,680


1180
00:39:23,680 --> 00:39:26,800
アクティブな推論を行うと、彼らはおおよその

1181
00:39:26,800 --> 00:39:28,320


1182
00:39:28,320 --> 00:39:30,320
アクティブな推論に変わり、初期の形でのアクティブな推論は、

1183
00:39:30,320 --> 00:39:32,800


1184
00:39:32,800 --> 00:39:33,520


1185
00:39:33,520 --> 00:39:35,520


1186
00:39:35,520 --> 00:39:36,960
典型的な機械学習の問題への適用を考慮せずに、小さな状態空間と

1187
00:39:36,960 --> 00:39:39,119


1188
00:39:39,119 --> 00:39:41,440
おもちゃの問題のために開発されたと述べています。

1189
00:39:41,440 --> 00:39:42,800
世界で2x2のマトリックスと2つの結果、そして

1190
00:39:42,800 --> 00:39:46,000
これを行うことができる2つの決定が

1191
00:39:46,000 --> 00:39:47,359
最近変更され

1192
00:39:47,359 --> 00:39:49,280
、さまざまなスケーラブルなソリューションが

1193
00:39:49,280 --> 00:39:50,960
提案

1194
00:39:50,960 --> 00:39:51,599


1195
00:39:51,599 --> 00:39:53,920


1196
00:39:53,920 --> 00:39:56,079


1197
00:39:56,079 --> 00:39:58,800
されています。 高度なディープツリー検索を含む複雑なシーケンシャルポリシーの

1198
00:39:58,800 --> 00:39:59,920
最適化。

1199
00:39:59,920 --> 00:40:01,839


1200
00:40:01,839 --> 00:40:04,400


1201
00:40:04,400 --> 00:40:06,720
これらのツリーロールアウトと

1202
00:40:06,720 --> 00:40:10,160
それに続くツリープルーニングアプローチによる高度なアクティブ推論

1203
00:40:10,160 --> 00:40:12,160
により、アクティブ推論

1204
00:40:12,160 --> 00:40:13,280
アプローチを実用的

1205
00:40:13,280 --> 00:40:15,119
で、機械学習で通常使用される高次元バンディット問題にスケーラブルにするために、

1206
00:40:15,119 --> 00:40:16,880


1207
00:40:16,880 --> 00:40:17,839


1208
00:40:17,839 --> 00:40:19,920
ここで概算を紹介します。 交流 tive

1209
00:40:19,920 --> 00:40:21,920
推論アルゴリズム

1210
00:40:21,920 --> 00:40:23,839
は、

1211
00:40:23,839 --> 00:40:25,520


1212
00:40:25,520 --> 00:40:28,640
他に何を近似できるの

1213
00:40:28,640 --> 00:40:30,400


1214
00:40:30,400 --> 00:40:32,640
か、それでもアクティブな推論を持っているのか、または

1215
00:40:32,640 --> 00:40:35,040
近似できないのかなど、著者から聞いて間違い

1216
00:40:35,040 --> 00:40:37,520
なくクールですが、アクティブな推論をどのように、そしてなぜ近似したのかを見てみましょう。

1217
00:40:37,520 --> 00:40:40,720


1218
00:40:40,720 --> 00:40:43,599
ええ

1219
00:40:43,599 --> 00:40:45,200
、あなたと私が両方とも、ツリーの切り替えとノードの切り替えの系統発生の観点からツリーの構築を知っている理由を話します。これは、何日

1220
00:40:45,200 --> 00:40:45,599


1221
00:40:45,599 --> 00:40:47,920


1222
00:40:47,920 --> 00:40:49,839


1223
00:40:49,839 --> 00:40:51,440


1224
00:40:51,440 --> 00:40:53,280
も実行できるように、本当に計算上

1225
00:40:53,280 --> 00:40:54,560
圧倒される

1226
00:40:54,560 --> 00:40:56,640
可能性があります。 そして、何日も何日

1227
00:40:56,640 --> 00:40:58,800
も

1228
00:40:58,800 --> 00:41:00,720
、ここで近似のこのような甘くてきれいな実装を見るのは本当に素晴らしいです

1229
00:41:00,720 --> 00:41:03,200


1230
00:41:03,200 --> 00:41:06,240
はいここ

1231
00:41:06,240 --> 00:41:09,359
では形式主義16と17に深く入るつもりはありません

1232
00:41:09,359 --> 00:41:11,680
が、それを

1233
00:41:11,680 --> 00:41:13,680
説明する著者を楽しみにして

1234
00:41:13,680 --> 00:41:17,200
いますが、ここにあります 重要な部分

1235
00:41:17,200 --> 00:41:19,520
報酬確率シータに対する正確な限界後方信念

1236
00:41:19,520 --> 00:41:21,839


1237
00:41:21,839 --> 00:41:25,200
は、このように表現でき

1238
00:41:25,200 --> 00:41:27,119
ます。あなたが大丈夫だということを見るだけで大

1239
00:41:27,119 --> 00:41:29,119


1240
00:41:29,119 --> 00:41:32,319
です。  nそれが私たちが解決しなければならないことである場合、

1241
00:41:32,319 --> 00:41:33,520


1242
00:41:33,520 --> 00:41:36,640
ええと

1243
00:41:36,640 --> 00:41:38,960
、報酬に対する正確な正しい信念

1244
00:41:38,960 --> 00:41:40,640
はこのように見え

1245
00:41:40,640 --> 00:41:42,240


1246
00:41:42,240 --> 00:41:44,640
、式17の正確な周辺事後確率

1247
00:41:44,640 --> 00:41:46,800
はベータ分布

1248
00:41:46,800 --> 00:41:48,880
に属さないため、正確な推論は分析的に

1249
00:41:48,880 --> 00:41:50,240


1250
00:41:50,240 --> 00:41:53,280
困難になります。 数値的に

1251
00:41:53,280 --> 00:41:56,000
アプローチしてシミュレートまたは計算する方法かも

1252
00:41:56,000 --> 00:41:56,640


1253
00:41:56,640 --> 00:41:58,000
しれませんが、大きな

1254
00:41:58,000 --> 00:41:59,760
データセットを調べて、大量の計算作業を行わずに高速に実行したい場合は

1255
00:41:59,760 --> 00:42:01,680


1256
00:42:01,680 --> 00:42:04,000
、別の方法が必要ですが、

1257
00:42:04,000 --> 00:42:07,280


1258
00:42:07,280 --> 00:42:09,359
この事後確率でジョイントを制約する場合は制約します。

1259
00:42:09,359 --> 00:42:11,200
完全に因数分解された形式

1260
00:42:11,200 --> 00:42:13,680
を近似し、

1261
00:42:13,680 --> 00:42:16,800
変数の因数分解

1262
00:42:16,800 --> 00:42:18,000
が一種の

1263
00:42:18,000 --> 00:42:21,280
大きなトピックになる前に変数の因数分解を見てきました。

1264
00:42:21,280 --> 00:42:22,560


1265
00:42:22,560 --> 00:42:24,400
ここで完全に詳細に説明することはしません

1266
00:42:24,400 --> 00:42:26,000
が、著者からどのように導出されたかを聞くのは素晴らしい

1267
00:42:26,000 --> 00:42:27,920
ことです。 因数分解

1268
00:42:27,920 --> 00:42:31,119
しますが、それについて考える1つの方法は

1269
00:42:31,119 --> 00:42:34,079
、大きな自由端の長い

1270
00:42:34,079 --> 00:42:35,119
方程式

1271
00:42:35,119 --> 00:42:37,839
を因数分解可能な形式に制約すると、

1272
00:42:37,839 --> 00:42:38,800
解空間が減少することです。

1273
00:42:38,800 --> 00:42:42,000
ロットとそれは特定の種類の最適化を扱いやすくすることを可能にする

1274
00:42:42,000 --> 00:42:44,800
ので、

1275
00:42:44,800 --> 00:42:45,359


1276
00:42:45,359 --> 00:42:47,760
例えば線形回帰の場合、最小の

1277
00:42:47,760 --> 00:42:48,880
二乗

1278
00:42:48,880 --> 00:42:50,800
があります。これは

1279
00:42:50,800 --> 00:42:52,880
、問題を

1280
00:42:52,880 --> 00:42:54,640


1281
00:42:54,640 --> 00:42:56,720
、立方体の合計や 他のいくつか

1282
00:42:56,720 --> 00:42:58,000
の関数の合計ですが、私はこれを解決しようとしていますが、

1283
00:42:58,000 --> 00:42:59,359


1284
00:42:59,359 --> 00:43:02,880


1285
00:43:02,880 --> 00:43:03,920
実際にスケーリングする計算が

1286
00:43:03,920 --> 00:43:05,520
あります。これが因数分解で起こっていることです。

1287
00:43:05,520 --> 00:43:07,599
因数分解について考える別の方法

1288
00:43:07,599 --> 00:43:08,960


1289
00:43:08,960 --> 00:43:11,280
は

1290
00:43:11,280 --> 00:43:13,040
、ノードが 変数

1291
00:43:13,040 --> 00:43:14,400
とエッジは、変数間の関係のようなものであり、

1292
00:43:14,400 --> 00:43:16,960


1293
00:43:16,960 --> 00:43:19,280
すべてを

1294
00:43:19,280 --> 00:43:20,800
パラメーターフィッティングフレームワークにダンプできます。

1295
00:43:20,800 --> 00:43:23,119
すべてのエッジは

1296
00:43:23,119 --> 00:43:24,960
、因数分解されていないモデルの

1297
00:43:24,960 --> 00:43:27,200
ようになり、正確な値を把握する必要があるエッジの数になり

1298
00:43:27,200 --> 00:43:28,560


1299
00:43:28,560 --> 00:43:31,920
ます。 は多く

1300
00:43:31,920 --> 00:43:33,520
なり、適合させたいパラメーターの量に応じて指数関数的に増加し

1301
00:43:33,520 --> 00:43:34,800
ます

1302
00:43:34,800 --> 00:43:35,680


1303
00:43:35,680 --> 00:43:38,240
が、物事を因数分解すると、変数のみが大丈夫になり

1304
00:43:38,240 --> 00:43:39,119
ます。

1305
00:43:39,119 --> 00:43:41,599
bとbに

1306
00:43:41,599 --> 00:43:42,880
関連付けられているのはcにのみ関連付けられて

1307
00:43:42,880 --> 00:43:45,200
おり、突然

1308
00:43:45,200 --> 00:43:47,599
、フィットする必要のあるエッジの量が減っています。

1309
00:43:47,599 --> 00:43:50,720
これにより

1310
00:43:50,720 --> 00:43:54,000
、魅力的に到達する

1311
00:43:54,000 --> 00:43:54,880
だけでなく、

1312
00:43:54,880 --> 00:43:57,280
ほぼ正確なソリューションを得ることができます。

1313
00:43:57,280 --> 00:43:59,760
ほぼ正確

1314
00:43:59,760 --> 00:44:02,960
で近似的なベイズ計算ですが、

1315
00:44:02,960 --> 00:44:05,359


1316
00:44:05,359 --> 00:44:06,560


1317
00:44:06,560 --> 00:44:10,079
ここでは因数分解についてあまり詳しく説明

1318
00:44:10,079 --> 00:44:13,040
しませんが、この

1319
00:44:13,040 --> 00:44:15,359
因数分解された形式

1320
00:44:15,359 --> 00:44:18,319
を取り、変分法を使用し

1321
00:44:18,319 --> 00:44:19,520
て次の

1322
00:44:19,520 --> 00:44:21,680
変分笑顔のルールを復元します。 すぐに行きます

1323
00:44:21,680 --> 00:44:23,280


1324
00:44:23,280 --> 00:44:24,960
ので、彼らは異なる形式のセットに到達し

1325
00:44:24,960 --> 00:44:27,119
ます。

1326
00:44:27,119 --> 00:44:27,520


1327
00:44:27,520 --> 00:44:30,319
それらの形式の違いについて著者から

1328
00:44:30,319 --> 00:44:30,880


1329
00:44:30,880 --> 00:44:34,400
聞きます。それから、パラメータを好きなように変更できる静止した盗賊のためのそれは一種のクールです。

1330
00:44:34,400 --> 00:44:35,599


1331
00:44:35,599 --> 00:44:38,800


1332
00:44:38,800 --> 00:44:42,560
変化率のゼロは、

1333
00:44:42,560 --> 00:44:44,480


1334
00:44:44,480 --> 00:44:46,160
静止したベルヌーイバンディット問題に対する正確なベイズ推定に対応

1335
00:44:46,160 --> 00:44:47,760


1336
00:44:47,760 --> 00:44:50,000
するため

1337
00:44:50,000 --> 00:44:50,960
、元の

1338
00:44:50,960 --> 00:44:54,640
アルゴリズムソリューションの行為形式は、

1339
00:44:54,640 --> 00:44:57,359
アクティブな推論が漸近法で正確な何かを実行している可能性があります

1340
00:44:57,359 --> 00:44:57,760


1341
00:44:57,760 --> 00:45:01,040


1342
00:45:01,040 --> 00:45:04,560
笑顔とはここにあるのは、最小化学習

1343
00:45:04,560 --> 00:45:06,480
を驚かせる賞としてのスマイルペーパー変分

1344
00:45:06,480 --> 00:45:08,560


1345
00:45:08,560 --> 00:45:10,079


1346
00:45:10,079 --> 00:45:11,839
法です。

1347
00:45:11,839 --> 00:45:13,200
ベース

1348
00:45:13,200 --> 00:45:16,079
とサプライズの最小化と疑似

1349
00:45:16,079 --> 00:45:16,560
コード

1350
00:45:16,560 --> 00:45:18,560
が指数型分布族のためにここに提示されています

1351
00:45:18,560 --> 00:45:20,319


1352
00:45:20,319 --> 00:45:22,560
これは著者にとっての質問です

1353
00:45:22,560 --> 00:45:24,160
これは、笑顔

1354
00:45:24,160 --> 00:45:26,880
がどのようにアクティブな推論を近似するのにどのように役立つの

1355
00:45:26,880 --> 00:45:28,480


1356
00:45:28,480 --> 00:45:32,000
か、他に何のために笑顔を使用できるのか、

1357
00:45:32,000 --> 00:45:33,839
これがこの近似のアクティブな

1358
00:45:33,839 --> 00:45:35,440
推論です 間奏

1359
00:45:35,440 --> 00:45:38,880
は大きく乱雑な形をとり、

1360
00:45:38,880 --> 00:45:41,280
変数

1361
00:45:41,280 --> 00:45:43,920
を相互に関連付ける方法を制限

1362
00:45:43,920 --> 00:45:45,839
し、その

1363
00:45:45,839 --> 00:45:48,640
因数分解された表現に変分法を使用

1364
00:45:48,640 --> 00:45:52,560


1365
00:45:52,560 --> 00:45:55,759
することで、効果的な近似を得ることができる

1366
00:45:56,480 --> 00:45:58,800
ので、この直接的な対応があることを知っているのは興味深いことです。

1367
00:45:58,800 --> 00:46:00,000


1368
00:46:00,000 --> 00:46:02,319
静止したuh

1369
00:46:02,319 --> 00:46:03,760
バンディットの

1370
00:46:03,760 --> 00:46:05,920
場合は静止した場合l

1371
00:46:05,920 --> 00:46:07,040


1372
00:46:07,040 --> 00:46:08,720


1373
00:46:08,720 --> 00:46:10,240


1374
00:46:10,240 --> 00:46:12,880
どうしてそうなのかを完全に説明するアクティブな

1375
00:46:12,880 --> 00:46:14,640
推論アルゴリズムを使用しても改善が見られなかったように、さらにいくつかの部分があり

1376
00:46:14,640 --> 00:46:16,319
ます。

1377
00:46:16,319 --> 00:46:19,680
大きな図4かそのようなもので

1378
00:46:19,680 --> 00:46:20,560


1379
00:46:20,560 --> 00:46:24,560


1380
00:46:24,560 --> 00:46:26,720
、彼らが取り組む2つの問題に行きましょう。 次に、

1381
00:46:26,720 --> 00:46:28,000
これら2つのセクションの結果について説明し

1382
00:46:28,000 --> 00:46:29,920
ます。最初に静止

1383
00:46:29,920 --> 00:46:32,720
バンディット、次に動的バンディットについて

1384
00:46:32,720 --> 00:46:34,880
説明します。これが定義であり

1385
00:46:34,880 --> 00:46:36,800


1386
00:46:36,800 --> 00:46:39,280
、静止

1387
00:46:39,280 --> 00:46:42,800
バンディットが有限数のアームを持つように、それらが静止バンディットを介して機能する場所です。

1388
00:46:42,800 --> 00:46:46,800


1389
00:46:46,800 --> 00:46:49,599
次に

1390
00:46:49,599 --> 00:46:50,000
、

1391
00:46:50,000 --> 00:46:53,359
tのタイムステップで再生し、次に大きなkの

1392
00:46:53,359 --> 00:46:56,720
大きなkの腕、次に小さな小さなkk

1393
00:46:56,720 --> 00:46:59,440
が小さな腕のセットです。小さなk

1394
00:46:59,440 --> 00:47:02,480
ええkはアクションな

1395
00:47:03,520 --> 00:47:05,119
ので、静止した盗賊を定義する方法を次に示し

1396
00:47:05,119 --> 00:47:07,119


1397
00:47:07,119 --> 00:47:09,200
ます。 約tと時間の

1398
00:47:09,200 --> 00:47:10,240


1399
00:47:10,240 --> 00:47:13,359
アクションとええと腕そして静止した

1400
00:47:13,359 --> 00:47:15,920
盗賊では報酬確率

1401
00:47:15,920 --> 00:47:18,640
シータサブkはすべての試行で固定されているので

1402
00:47:18,640 --> 00:47:19,760
シータは面白いようです

1403
00:47:19,760 --> 00:47:21,280
それはちょうど意味するパラメータのようなもの

1404
00:47:21,280 --> 00:47:22,960
です 変数のように

1405
00:47:22,960 --> 00:47:24,800
時々私はそれらの多くがそうすると思いますが、

1406
00:47:24,800 --> 00:47:26,559
データは特に

1407
00:47:26,559 --> 00:47:30,800
固定報酬

1408
00:47:30,800 --> 00:47:33,520
値固定ええ報酬確率です

1409
00:47:33,520 --> 00:47:35,839
それでそれ

1410
00:47:35,839 --> 00:47:38,079
がカジノで静止していない理由これは

1411
00:47:38,079 --> 00:47:39,040
それらの

1412
00:47:39,040 --> 00:47:41,359
1つが平均して1対1でumを支払うようなものです 彼らは

1413
00:47:41,359 --> 00:47:42,960
50パーセントを支払います1つは

1414
00:47:42,960 --> 00:47:46,240
200パーセントを支払いますが、彼らは決して変わら

1415
00:47:46,240 --> 00:47:47,440
ないので、これはマルチアームでそれを視覚的に

1416
00:47:47,440 --> 00:47:50,079
表現し

1417
00:47:50,079 --> 00:47:52,640
たものですそして

1418
00:47:52,640 --> 00:47:54,960
マウスはチーズを手に入れています

1419
00:47:54,960 --> 00:47:57,280
そして各アームは異なる固定確率を持っています

1420
00:47:57,280 --> 00:47:58,240


1421
00:47:58,240 --> 00:47:59,599
がそれらはそうではありません 変更しないので、

1422
00:47:59,599 --> 00:48:01,520
チーズの確率は

1423
00:48:01,520 --> 00:48:06,480


1424
00:48:06,480 --> 00:48:10,800
ここでは移動しません。図1では、

1425
00:48:10,800 --> 00:48:14,319
後悔率の分析が表示される

1426
00:48:14,319 --> 00:48:18,240
ので、想像できる後悔率

1427
00:48:18,240 --> 00:48:20,400
は2番目になりますが、

1428
00:48:20,400 --> 00:48:22,240
後悔率の分析は 静止した

1429
00:48:22,240 --> 00:48:23,440
盗賊

1430
00:48:23,440 --> 00:48:25,200
、そして次に

1431
00:48:25,200 --> 00:48:28,000
、赤での近似の

1432
00:48:28,000 --> 00:48:31,680
アクティブな推論を青での正確なアクティブな推論と比較

1433
00:48:31,680 --> 00:48:33,359
するので

1434
00:48:33,359 --> 00:48:34,880


1435
00:48:34,880 --> 00:48:37,359
、どのくらいのtの相対的な変化が何であったかについて著者と話すのはクールです

1436
00:48:37,359 --> 00:48:40,480
計算にかかった時間

1437
00:48:41,119 --> 00:48:44,480
はわかりますが

1438
00:48:44,480 --> 00:48:48,319
、彼らがしていること

1439
00:48:48,319 --> 00:48:49,920
は、青と赤が常に

1440
00:48:49,920 --> 00:48:51,599
一緒に追跡し

1441
00:48:51,599 --> 00:48:53,520
ていることを示していることです。これは、近似

1442
00:48:53,520 --> 00:48:54,960
形式が正確

1443
00:48:54,960 --> 00:48:57,520
な動作に従うため、非常に良い仕事をしていることを示唆しています。

1444
00:48:57,520 --> 00:48:58,160


1445
00:48:58,160 --> 00:49:01,520
かなりうまく形成

1446
00:49:01,520 --> 00:49:04,240
してから、このuhグラフの読み方を並べ替えて、

1447
00:49:04,240 --> 00:49:04,800


1448
00:49:04,800 --> 00:49:08,240


1449
00:49:08,240 --> 00:49:10,960
kに対応する4つの列が10 20 40と

1450
00:49:10,960 --> 00:49:12,240
80アームに等しい

1451
00:49:12,240 --> 00:49:14,000
ので、アームの数だけを変更すると、

1452
00:49:14,000 --> 00:49:15,440


1453
00:49:15,440 --> 00:49:18,800


1454
00:49:18,800 --> 00:49:22,319
uhイプシロンの行

1455
00:49:22,319 --> 00:49:23,760
があります。 これは

1456
00:49:23,760 --> 00:49:26,079
腕の間の違いの

1457
00:49:26,079 --> 00:49:29,200
ようなものなので、umタスクがどれほど簡単であるかを

1458
00:49:29,200 --> 00:49:32,559
信じています。それは

1459
00:49:32,559 --> 00:49:35,440
ポイント1、2、5、ポイント4

1460
00:49:35,440 --> 00:49:35,920
であり、

1461
00:49:35,920 --> 00:49:38,960
各セル内

1462
00:49:38,960 --> 00:49:42,800
にラムダuhが

1463
00:49:42,800 --> 00:49:45,680
あります。これは、以前の設定に対する精度の関数で

1464
00:49:45,680 --> 00:49:47,280


1465
00:49:47,280 --> 00:49:50,559
あり、次にr 試行

1466
00:49:50,800 --> 00:49:53,200
の関数としての後悔である

1467
00:49:53,200 --> 00:49:55,440
subt

1468
00:49:55,440 --> 00:49:57,520
と黒い破線はランダムエージェントに対応

1469
00:49:57,520 --> 00:49:58,960
する後悔率の上限を示している

1470
00:49:58,960 --> 00:50:00,319


1471
00:50:00,319 --> 00:50:04,720
ので、これは

1472
00:50:04,800 --> 00:50:10,079
あなたが得ることができるのと同じくらい悪いと思います

1473
00:50:10,640 --> 00:50:13,599
、そして私たちは見る そのアクティブな推論は

1474
00:50:13,599 --> 00:50:14,319


1475
00:50:14,319 --> 00:50:16,559


1476
00:50:16,559 --> 00:50:17,520


1477
00:50:17,520 --> 00:50:20,640
、0.1よりも低い後悔率

1478
00:50:20,640 --> 00:50:23,680
または

1479
00:50:23,680 --> 00:50:25,760


1480
00:50:25,760 --> 00:50:29,839
ランダムに動作するエージェントに蓄積されている後悔の量である約0.1に

1481
00:50:29,839 --> 00:50:33,200
収束するように、より良いパフォーマンス

1482
00:50:33,200 --> 00:50:35,359
を示し

1483
00:50:35,359 --> 00:50:37,119
ています。 ラムダパラメータの精度は私にとって意味がある

1484
00:50:37,119 --> 00:50:38,880


1485
00:50:38,880 --> 00:50:40,640
ので、アクティブな推論

1486
00:50:40,640 --> 00:50:42,559
エージェントが非常に不正確な

1487
00:50:42,559 --> 00:50:46,079
設定を持っている場合、ラムダがゼロに近づくと

1488
00:50:46,079 --> 00:50:49,200
、より長く探索に従事し、報酬

1489
00:50:49,200 --> 00:50:50,880


1490
00:50:50,880 --> 00:50:53,040
を蓄積することを犠牲にしてその

1491
00:50:53,040 --> 00:50:54,240


1492
00:50:54,240 --> 00:50:56,079
ように不確実性を減らします。 脚注では、

1493
00:50:56,079 --> 00:50:58,160


1494
00:50:58,160 --> 00:50:59,440


1495
00:50:59,440 --> 00:51:02,240


1496
00:51:02,240 --> 00:51:03,920
アクティブな推論と、探索エクスプロイトを再考する方法について話すと、間違いなく戻ってき

1497
00:51:03,920 --> 00:51:05,760


1498
00:51:05,760 --> 00:51:07,760


1499
00:51:07,760 --> 00:51:08,880


1500
00:51:08,880 --> 00:51:12,319


1501
00:51:12,319 --> 00:51:15,119
ます。これは、精度の関数としての精度の関数であるにもかかわらず、それが異なることを示していることを示しています。

1502
00:51:15,119 --> 00:51:15,520


1503
00:51:15,520 --> 00:51:17,839
アクティブな推論エージェントでの動作です

1504
00:51:17,839 --> 00:51:18,800


1505
00:51:18,800 --> 00:51:20,640
が、近似は基本的に

1506
00:51:20,640 --> 00:51:22,640
常にかなりうまく機能しています。

1507
00:51:22,640 --> 00:51:25,200
e点線は

1508
00:51:25,200 --> 00:51:26,880
試行回数が少なく、実線は試行回数が多い

1509
00:51:26,880 --> 00:51:27,520


1510
00:51:27,520 --> 00:51:29,680
ため、これらすべての場合で

1511
00:51:29,680 --> 00:51:31,440
、点線、破線

1512
00:51:31,440 --> 00:51:32,880
、実線

1513
00:51:32,880 --> 00:51:34,839


1514
00:51:34,839 --> 00:51:36,480
のように、試行回数が増えると常に改善されていること

1515
00:51:36,480 --> 00:51:38,640
がわかります。 トライアルは100回しかない

1516
00:51:38,640 --> 00:51:41,839
ので、80アームで数回トライアルするだけで、

1517
00:51:41,839 --> 00:51:43,760


1518
00:51:43,760 --> 00:51:45,680


1519
00:51:45,680 --> 00:51:47,680
すべてのアームを1回しか試したことがないので、ランダムにプレイしているように後悔し

1520
00:51:47,680 --> 00:51:50,960


1521
00:51:50,960 --> 00:51:53,200
ます。 精度の適切な領域で

1522
00:51:53,200 --> 00:51:54,640
はあまり精度はありませ

1523
00:51:54,640 --> 00:51:57,359
んが、この領域ではまだ

1524
00:51:57,359 --> 00:51:58,000


1525
00:51:58,000 --> 00:52:01,280
10 000回の試行があり、80アームで

1526
00:52:01,280 --> 00:52:03,440
も後悔率は非常に

1527
00:52:03,440 --> 00:52:05,040
低くなる可能性があるため、試行を与えられた

1528
00:52:05,040 --> 00:52:08,160
80アームでもほぼ最適にプレイできます。

1529
00:52:08,160 --> 00:52:10,880
結果の

1530
00:52:10,880 --> 00:52:13,040
間に十分な有意差がある

1531
00:52:13,040 --> 00:52:16,079


1532
00:52:16,079 --> 00:52:17,040
とすると、

1533
00:52:17,040 --> 00:52:19,200
アクティブな推論が後悔を減らすことを学ぶことができるという図が示され

1534
00:52:19,200 --> 00:52:22,240
ます。適切なパラメータが与えられると、

1535
00:52:22,240 --> 00:52:23,920


1536
00:52:23,920 --> 00:52:26,319
武器の増加

1537
00:52:26,319 --> 00:52:28,720
や差別化の低下など、状況をより困難にすることが予想されます。

1538
00:52:28,720 --> 00:52:30,079
アームまたは

1539
00:52:30,079 --> 00:52:34,079
超高精度または低精度の変動

1540
00:52:34,079 --> 00:52:36,559
率の中で、これらは

1541
00:52:36,559 --> 00:52:40,160
アクティブな推論アルゴリズムに影響を与えるもの

1542
00:52:40,400 --> 00:52:42,400


1543
00:52:42,400 --> 00:52:44,559


1544
00:52:44,559 --> 00:52:47,599
であり、ラムダ付近での最小後悔率は0.1で

1545
00:52:47,599 --> 00:52:49,839
あることがわかったため、後悔率を固定し

1546
00:52:49,839 --> 00:52:52,160
ました。 今後のトライアルまたは今後のテストでは、

1547
00:52:52,160 --> 00:52:55,200


1548
00:52:55,200 --> 00:52:55,920


1549
00:52:55,920 --> 00:52:59,440
微調整するノブがたくさんあるため、

1550
00:52:59,440 --> 00:53:01,520
パラメータースイープを実行するために最善を尽くし、次の

1551
00:53:01,520 --> 00:53:03,280
ように表示し

1552
00:53:03,280 --> 00:53:05,119
ます。4つの異なるアームスタイルの3つの異なるサンプリングレジームのラムダの全体的な分布を知ってい

1553
00:53:05,119 --> 00:53:06,400


1554
00:53:06,400 --> 00:53:09,280


1555
00:53:09,280 --> 00:53:11,040
ます。

1556
00:53:11,040 --> 00:53:12,400
すでに組み合わせ論のような3つの異なる困難

1557
00:53:12,400 --> 00:53:14,480
が非常に高くなり、

1558
00:53:14,480 --> 00:53:15,760
これを

1559
00:53:15,760 --> 00:53:17,200
産業の状況で使用

1560
00:53:17,200 --> 00:53:20,319
する場合は、これらすべての

1561
00:53:20,319 --> 00:53:22,400
パラメーターを使用して最適化し、この近似アクティブ推論

1562
00:53:22,400 --> 00:53:25,680
のみを考慮すると彼らは書いています。

1563
00:53:25,680 --> 00:53:26,559


1564
00:53:26,559 --> 00:53:28,480


1565
00:53:28,480 --> 00:53:31,440


1566
00:53:31,440 --> 00:53:33,200


1567
00:53:33,200 --> 00:53:35,040
図1で非常にうまく機能していたため、エージェント間比較の

1568
00:53:35,040 --> 00:53:36,880
バリアントであり、 概算ですが

1569
00:53:36,880 --> 00:53:38,400


1570
00:53:38,400 --> 00:53:40,160


1571
00:53:40,160 --> 00:53:42,160
、一般的な、

1572
00:53:42,160 --> 00:53:44,720
または正確な2の字の計算時間の違いは何であるかを尋ねることができます。したがって

1573
00:53:44,720 --> 00:53:45,359


1574
00:53:45,359 --> 00:53:47,520
、ここでの静止ベルヌーイ

1575
00:53:47,520 --> 00:53:49,119
バンディット

1576
00:53:49,119 --> 00:53:51,119
は、わずかに異なるプロットになると考えています。

1577
00:53:51,119 --> 00:53:52,960


1578
00:53:52,960 --> 00:53:54,960


1579
00:53:54,960 --> 00:53:57,119
おおよそのアクティブな推論の累積的な後悔の軌跡は

1580
00:53:57,119 --> 00:53:59,680


1581
00:53:59,680 --> 00:54:02,000
、aai楽観的なトップであり

1582
00:54:02,000 --> 00:54:03,200


1583
00:54:03,200 --> 00:54:05,440


1584
00:54:05,440 --> 00:54:06,480
、ティールで紫とベイジアンの上限信頼限界が設定されている

1585
00:54:06,480 --> 00:54:08,160
ため、これらは3つの線であり

1586
00:54:08,160 --> 00:54:11,200
、左上の凡例で

1587
00:54:11,200 --> 00:54:13,520
あり、青は前の

1588
00:54:13,520 --> 00:54:15,920
精度が固定されていると述べています ポイント

1589
00:54:15,920 --> 00:54:18,079
1は、

1590
00:54:18,079 --> 00:54:19,760
この種のディップ

1591
00:54:19,760 --> 00:54:22,319
のような図1から見つけたものであり、ポイント1の近くにある

1592
00:54:22,319 --> 00:54:24,079


1593
00:54:24,079 --> 00:54:26,480
ため、精度の高い変数設定であると思われるため、位置をスイープ

1594
00:54:26,480 --> 00:54:28,079
するのではなく、それを使用してロール

1595
00:54:28,079 --> 00:54:30,400


1596
00:54:30,400 --> 00:54:33,359
します。 同様の列と

1597
00:54:33,359 --> 00:54:33,920
行

1598
00:54:33,920 --> 00:54:36,480
が表示されます。列にはk個の異なるアームがあり、

1599
00:54:36,480 --> 00:54:37,440
行

1600
00:54:37,440 --> 00:54:40,160
には異なる問題の問題が

1601
00:54:40,160 --> 00:54:40,720


1602
00:54:40,720 --> 00:54:43,520
あります。

1603
00:54:43,760 --> 00:54:47,200
累積的な後悔な

1604
00:54:47,200 --> 00:54:50,240
ので、より低い後悔が必要

1605
00:54:50,240 --> 00:54:51,680


1606
00:54:51,680 --> 00:54:54,079
です。これは、私たちがトレーニングしているすべてのことです。

1607
00:54:54,079 --> 00:54:56,480
私たちが見ることができるものは

1608
00:54:56,480 --> 00:54:57,599
たくさんあり

1609
00:54:57,599 --> 00:55:00,319


1610
00:55:00,319 --> 00:55:00,799


1611
00:55:00,799 --> 00:55:03,920
ます。 バットも

1612
00:55:03,920 --> 00:55:04,640
サンプル数が

1613
00:55:04,640 --> 00:55:08,000
100を超えて増加する

1614
00:55:08,000 --> 00:55:10,640
ほとんどの場合、赤い線の

1615
00:55:10,640 --> 00:55:12,480
近似アクティブ推論

1616
00:55:12,480 --> 00:55:16,079
は他のサンプル

1617
00:55:16,079 --> 00:55:18,559
よりも低い

1618
00:55:18,559 --> 00:55:20,000


1619
00:55:20,000 --> 00:55:22,880
ため、多くのパラメーターの組み合わせで静止バンディットのアクティブ推論を後悔することは

1620
00:55:22,880 --> 00:55:24,799


1621
00:55:24,799 --> 00:55:27,599
少なくなりますが、いくつかあります 興味深い

1622
00:55:27,599 --> 00:55:28,720
作品な

1623
00:55:28,720 --> 00:55:31,920
ので、そのうちの1つは、

1624
00:55:31,920 --> 00:55:32,400


1625
00:55:32,400 --> 00:55:34,799
早い段階でアクティブな推論の方が後悔していることがあるので、最初は

1626
00:55:34,799 --> 00:55:37,200
もう少し探索的なものの

1627
00:55:37,200 --> 00:55:39,040


1628
00:55:39,040 --> 00:55:40,559
ようです。左下隅に

1629
00:55:40,559 --> 00:55:41,839
あるのは、このようなものが他にもいくつかあることです。

1630
00:55:41,839 --> 00:55:43,599
エルボーは

1631
00:55:43,599 --> 00:55:46,000
早い段階ですが、この非常に

1632
00:55:46,000 --> 00:55:48,240
興味深い動作があり、実際には左上に多くのことが表示さ

1633
00:55:48,240 --> 00:55:48,799
れる

1634
00:55:48,799 --> 00:55:51,839
ため

1635
00:55:51,839 --> 00:55:53,040


1636
00:55:53,040 --> 00:55:54,400
、modを設定できるとは限りません。 いくつかのパラメータの

1637
00:55:54,400 --> 00:55:56,079
組み合わせにエルと本当に

1638
00:55:56,079 --> 00:55:57,520
一般化された結論を導きます

1639
00:55:57,520 --> 00:55:59,119
が、これは著者による素晴らしいポイント

1640
00:55:59,119 --> 00:56:00,559


1641
00:56:00,559 --> 00:56:04,559
ですので、彼ら

1642
00:56:04,559 --> 00:56:07,119
はエージェントのアンサンブルを見ているので、ここでは、それぞれ

1643
00:56:07,119 --> 00:56:07,599


1644
00:56:07,599 --> 00:56:09,599
の千uhを実行しているような千のエージェントです

1645
00:56:09,599 --> 00:56:11,040


1646
00:56:11,040 --> 00:56:13,599
これらと平均を取ると

1647
00:56:13,599 --> 00:56:14,960
、線が滑らか

1648
00:56:14,960 --> 00:56:16,079


1649
00:56:16,079 --> 00:56:18,400
になります。左上に表示されるの

1650
00:56:18,400 --> 00:56:19,680
は

1651
00:56:19,680 --> 00:56:21,359
、アクティブな推論アジア人

1652
00:56:21,359 --> 00:56:22,960
が他のアルゴリズムと同様に

1653
00:56:22,960 --> 00:56:24,720
実行していることです。

1654
00:56:24,720 --> 00:56:27,920
これらの線の下では、右下の後悔が改善されていますが、エラーが発生します。

1655
00:56:27,920 --> 00:56:28,480
バウンド

1656
00:56:28,480 --> 00:56:30,880
はその赤い陰影を増やし、それは本当にはるかに上に向かい始めます、それは

1657
00:56:30,880 --> 00:56:32,079


1658
00:56:32,079 --> 00:56:34,960
何が起こっているのかかなり魅力的です

1659
00:56:34,960 --> 00:56:36,240
、そして彼らは

1660
00:56:36,240 --> 00:56:37,920
この相違が

1661
00:56:37,920 --> 00:56:40,400


1662
00:56:40,400 --> 00:56:42,880
正確な解決策を見つけられず

1663
00:56:42,880 --> 00:56:43,680


1664
00:56:43,680 --> 00:56:45,440
、彼らの見積もりに自信過剰だったアンサンブルのエージェントのわずかなパーセンテージによって引き起こされると書いています

1665
00:56:45,440 --> 00:56:47,680
報酬確率が最も高いアームの

1666
00:56:47,680 --> 00:56:50,799
、どのアーム

1667
00:56:50,799 --> 00:56:51,440
を選択する必要があるか

1668
00:56:51,440 --> 00:56:54,319
という円グラフの種類が悪いスタートを切ったので、それらの

1669
00:56:54,319 --> 00:56:56,160
精度はそのようなtでした 彼らはそれでちょっと

1670
00:56:56,160 --> 00:56:56,640


1671
00:56:56,640 --> 00:56:58,799
転がり、問題を設定する方法の

1672
00:56:58,799 --> 00:57:00,559
中で得ている情報を見続けた

1673
00:57:00,559 --> 00:57:01,599


1674
00:57:01,599 --> 00:57:03,839
ので

1675
00:57:03,839 --> 00:57:04,880


1676
00:57:04,880 --> 00:57:06,960
、エージェントのごく一部が、彼らが行っ

1677
00:57:06,960 --> 00:57:09,440
た決定を後悔し続けて脱線することに

1678
00:57:09,440 --> 00:57:11,359
なりました 発散に

1679
00:57:11,359 --> 00:57:13,680
ロックされていたために作成すること

1680
00:57:13,680 --> 00:57:14,799


1681
00:57:14,799 --> 00:57:16,880
は、以前の設定では表示され

1682
00:57:16,880 --> 00:57:18,160


1683
00:57:18,160 --> 00:57:21,359
ません。より大きな設定でより簡単な設定では、最適ではないインスタンス

1684
00:57:21,359 --> 00:57:22,160


1685
00:57:22,160 --> 00:57:24,079


1686
00:57:24,079 --> 00:57:25,760
を観察するために、より大きなアンサンブルとより多くの試行回数が必要になるため、どの変数がそこに表示される必要があるか

1687
00:57:25,760 --> 00:57:28,240


1688
00:57:28,240 --> 00:57:29,520
わかりません。

1689
00:57:29,520 --> 00:57:31,200
発散は、

1690
00:57:31,200 --> 00:57:32,880
考慮される最小数のアームでのみ明らか

1691
00:57:32,880 --> 00:57:34,000


1692
00:57:34,000 --> 00:57:34,640


1693
00:57:34,640 --> 00:57:36,880
です。これは、より簡単な問題のように思われるためですが、これは

1694
00:57:36,880 --> 00:57:39,280
、アームの数が少ないほど、

1695
00:57:39,280 --> 00:57:41,440
エージェントが

1696
00:57:41,440 --> 00:57:43,599
限られた試行回数で個々のアームを探索する可能性が高くなるためです。

1697
00:57:43,599 --> 00:57:44,559


1698
00:57:44,559 --> 00:57:46,799
ですから、それはあなたの信念を閉じ込めるのが簡単であるよう

1699
00:57:46,799 --> 00:57:48,559
に、

1700
00:57:48,559 --> 00:57:51,040
そしておそらく小さな社会集団のためのパーティーよりも誤った信念さえも

1701
00:57:51,040 --> 00:57:52,240


1702
00:57:52,240 --> 00:57:54,640
kは80

1703
00:57:54,640 --> 00:57:56,160
人

1704
00:57:56,160 --> 00:57:58,079
に等しいので

1705
00:57:58,079 --> 00:57:59,680
、早い段階で閉じ込められる可能性が低いことを学ぶことがたくさんあるようです

1706
00:57:59,680 --> 00:58:02,880
が、小規模なパーティー

1707
00:58:02,880 --> 00:58:04,400
では、これらのアクティブな推論エージェントの一部が

1708
00:58:04,400 --> 00:58:06,319


1709
00:58:06,319 --> 00:58:09,119
、最もやりがいのある武器であると彼らが考えるものに本当に早く閉じ込められています。

1710
00:58:09,119 --> 00:58:10,880


1711
00:58:10,880 --> 00:58:13,200
次に、それらは効果的にサンプリングされない

1712
00:58:13,200 --> 00:58:14,480


1713
00:58:14,480 --> 00:58:17,839
ため、残念な

1714
00:58:17,839 --> 00:58:20,880
ポリシーを実装することに

1715
00:58:20,880 --> 00:58:23,280
なり

1716
00:58:23,280 --> 00:58:24,160


1717
00:58:24,160 --> 00:58:26,960
ます。これは非常に魅力的です。ここでも脚注を付けたいので

1718
00:58:26,960 --> 00:58:27,520
、k

1719
00:58:27,520 --> 00:58:30,559
が10に等しいこの左上を見て、このイプシロンは0.1です

1720
00:58:30,559 --> 00:58:33,680
。左上は 最も簡単で、

1721
00:58:33,680 --> 00:58:35,359
次に右下が最も難しいです。

1722
00:58:35,359 --> 00:58:36,319
ここで、k

1723
00:58:36,319 --> 00:58:38,799
はアームの数であり、この

1724
00:58:38,799 --> 00:58:40,000
イプシロン係数

1725
00:58:40,000 --> 00:58:42,880
はアーム間の差である

1726
00:58:42,880 --> 00:58:43,280
ため

1727
00:58:43,280 --> 00:58:44,960


1728
00:58:44,960 --> 00:58:46,640
、報酬が

1729
00:58:46,640 --> 00:58:48,640
あるアームと そうではない腕

1730
00:58:48,640 --> 00:58:52,240
私はよくポイント1は難しいと思います。

1731
00:58:52,240 --> 00:58:54,160
なぜなら

1732
00:58:54,160 --> 00:58:55,839
、良いものと悪いものの区別が

1733
00:58:55,839 --> 00:58:59,760
少ないので、腕の数が少ないほど

1734
00:58:59,760 --> 00:59:02,839
簡単ですが、ポイント4はより大きな

1735
00:59:02,839 --> 00:59:05,359
続きです

1736
00:59:05,359 --> 00:59:08,000
ポイント1はポイント4よりも難しい

1737
00:59:08,000 --> 00:59:08,480


1738
00:59:08,480 --> 00:59:10,720
ので、左下

1739
00:59:10,720 --> 00:59:11,680


1740
00:59:11,680 --> 00:59:15,040
が最も簡単

1741
00:59:15,040 --> 00:59:16,960
です。最も簡単なのは、意味するものによって異なります。つまり、すべての

1742
00:59:16,960 --> 00:59:18,240
ものが等しいほど

1743
00:59:18,240 --> 00:59:21,040
少ないアームが簡単で、すべてのもの

1744
00:59:21,040 --> 00:59:22,000
が

1745
00:59:22,000 --> 00:59:24,319
等しいほどコントラストが高くなります。 良い腕と悪い

1746
00:59:24,319 --> 00:59:25,119
腕

1747
00:59:25,119 --> 00:59:27,920
の間は簡単なので、左下

1748
00:59:27,920 --> 00:59:28,720


1749
00:59:28,720 --> 00:59:32,160
が簡単になります。はい、最も少ない腕

1750
00:59:32,160 --> 00:59:33,440
と最大のコントラストです。

1751
00:59:33,440 --> 00:59:34,880
興味深いことに

1752
00:59:34,880 --> 00:59:37,440
、アクティブな推論の最大のumエルボーが

1753
00:59:37,440 --> 00:59:38,640
、最大の

1754
00:59:38,640 --> 00:59:41,680
umの最初の後悔のように見えるので、次のようになります。

1755
00:59:41,680 --> 00:59:43,599
ゲームは簡単で、アクティブな

1756
00:59:43,599 --> 00:59:45,280
推論

1757
00:59:45,280 --> 00:59:48,559
が少し長く探索し続けるアームはほとんどありませんが、最終的には

1758
00:59:48,559 --> 00:59:51,760
正しいものに固定されます。

1759
00:59:51,760 --> 00:59:54,079
特に、

1760
00:59:54,079 --> 00:59:56,319
アーム間にそれほど大きな違いがない場合は、

1761
00:59:56,319 --> 00:59:59,359
すべてのアームにこのわずかな上昇が見られ、

1762
00:59:59,359 --> 01:00:00,400
その後、分散が生じます。

1763
01:00:00,400 --> 01:00:02,079
このシェーディングで増加する

1764
01:00:02,079 --> 01:00:03,599
ことは、

1765
01:00:03,599 --> 01:00:05,520
すべてのアンサンブルが異なる動作をしているわけではないことを示してい

1766
01:00:05,520 --> 01:00:06,720


1767
01:00:06,720 --> 01:00:09,520
ますが、おそらくサブセットが

1768
01:00:09,520 --> 01:00:11,359
混乱

1769
01:00:11,359 --> 01:00:13,280
していることを示しています。 そういうわけで、

1770
01:00:13,280 --> 01:00:15,040
イプシロンが大きい

1771
01:00:15,040 --> 01:00:16,880
ほど難しいと思いますが

1772
01:00:16,880 --> 01:00:18,240
、著者のためにそれを保存する必要があります。

1773
01:00:18,240 --> 01:00:19,760
コントラストが低い方が簡単だと思うので、

1774
01:00:19,760 --> 01:00:21,359


1775
01:00:21,359 --> 01:00:23,680
あまり明確ではないようです。 ええと尋ねる必要

1776
01:00:23,680 --> 01:00:24,480


1777
01:00:24,480 --> 01:00:27,599
があるので、これはクールな

1778
01:00:27,599 --> 01:00:30,720
結果であり

1779
01:00:30,720 --> 01:00:34,079


1780
01:00:34,079 --> 01:00:36,960
、アクティブな推論が

1781
01:00:36,960 --> 01:00:38,799
実際に成功する可能性がある場所と、それに戻る予定の課題がまだ必要になる可能性が

1782
01:00:38,799 --> 01:00:39,920
ある場所について、より大きなポイントを与える資格のある批評のようなものです。

1783
01:00:39,920 --> 01:00:40,880


1784
01:00:40,880 --> 01:00:44,000
それは静止バンディットです

1785
01:00:44,000 --> 01:00:47,119
スイッチングバンディットに行きましょう重要な

1786
01:00:47,119 --> 01:00:50,240
違いは、各タイムステップで

1787
01:00:50,240 --> 01:00:53,040
特定のアームが最大の

1788
01:00:53,040 --> 01:00:54,559
期待報酬

1789
01:00:54,559 --> 01:00:57,839
を持ち、この報酬確率が確率で

1790
01:00:57,839 --> 01:01:00,480
変化するため、確率

1791
01:01:00,480 --> 01:01:01,520


1792
01:01:01,520 --> 01:01:05,119
行umがあります。

1793
01:01:05,119 --> 01:01:09,599
それとも

1794
01:01:09,599 --> 01:01:13,119
、報酬が変わる確率である行がある

1795
01:01:13,119 --> 01:01:16,000
ので、チーズの確率は時間に依存

1796
01:01:16,000 --> 01:01:17,760
するため、時間の経過とともに変化するため、古い順序でそれを学ぶことはできません。

1797
01:01:17,760 --> 01:01:19,280


1798
01:01:19,280 --> 01:01:22,240


1799
01:01:22,240 --> 01:01:25,119
セクション2.2ああ、そうそう、青に進んで

1800
01:01:25,119 --> 01:01:26,559
くださいああ、それは何もありませんので、

1801
01:01:26,559 --> 01:01:28,799
あなたはそれをやったので、2.2は

1802
01:01:28,799 --> 01:01:29,760


1803
01:01:29,760 --> 01:01:31,359
スイッチングバンディットの形式を与える場所であり

1804
01:01:31,359 --> 01:01:33,280


1805
01:01:33,280 --> 01:01:35,280
、静止バンディットの問題とは対照的に、

1806
01:01:35,280 --> 01:01:37,599
結果は時間から引き出されます

1807
01:01:37,599 --> 01:01:39,440
依存するベルヌーイ確率

1808
01:01:39,440 --> 01:01:40,559
分布

1809
01:01:40,559 --> 01:01:43,920
が提供さ

1810
01:01:43,920 --> 01:01:46,799
れているので、詳細を調べたい人

1811
01:01:46,799 --> 01:01:47,200


1812
01:01:47,200 --> 01:01:49,520
はそうすることができますが、重要な違いは

1813
01:01:49,520 --> 01:01:50,960


1814
01:01:50,960 --> 01:01:53,599
、ゲームをプレイしているときに状況が変わる可能性があることです。

1815
01:01:53,599 --> 01:01:54,480


1816
01:01:54,480 --> 01:01:57,520


1817
01:01:57,520 --> 01:01:58,240
作者

1818
01:01:58,240 --> 01:02:00,240
とええと、彼らに尋ねるのを楽しみにして

1819
01:02:00,240 --> 01:02:01,359
いるので

1820
01:02:01,359 --> 01:02:03,920
、確率は同じですが、

1821
01:02:03,920 --> 01:02:06,160


1822
01:02:06,160 --> 01:02:09,039
20タイムステップまたは50タイムステップの後

1823
01:02:09,039 --> 01:02:10,160
、同じように同じよう

1824
01:02:10,160 --> 01:02:12,720
に突然変化し、その後突然変化するか、

1825
01:02:12,720 --> 01:02:14,720
それは タイムステップごと

1826
01:02:14,720 --> 01:02:15,280


1827
01:02:15,280 --> 01:02:17,359
に変化するのは、ある程度の確率で変化すると言っているからだと思います

1828
01:02:17,359 --> 01:02:19,599
が、それ以外は一定な

1829
01:02:19,599 --> 01:02:21,920
ので、すべての腕にまたがる定数のよう

1830
01:02:21,920 --> 01:02:23,760
に、確率が

1831
01:02:23,760 --> 01:02:25,599
それは一定ですか、それとも常に変化

1832
01:02:25,599 --> 01:02:26,240
していますか

1833
01:02:26,240 --> 01:02:28,799
？

1834
01:02:30,400 --> 01:02:33,119
ここで良い質問はわかりませんが、ベルヌーイバンディットの切り替えにおけるエージェント間の

1835
01:02:33,119 --> 01:02:35,039
比較で

1836
01:02:35,039 --> 01:02:36,799


1837
01:02:36,799 --> 01:02:38,799
、平均結果の差が固定されているため、

1838
01:02:38,799 --> 01:02:40,799
イプシロンは25

1839
01:02:40,799 --> 01:02:44,000
になります。したがって、イプシロンは固定に設定されています。

1840
01:02:44,000 --> 01:02:45,920
行と

1841
01:02:45,920 --> 01:02:48,160
列の状況が異なる

1842
01:02:48,160 --> 01:02:51,599
ため、この図では3つの列は

1843
01:02:51,599 --> 01:02:55,039
行が0.0102とo4に等しい

1844
01:02:55,039 --> 01:02:56,799
ため、変更される可能性があり

1845
01:02:56,799 --> 01:02:58,559
ます。したがって、左側の列

1846
01:02:58,559 --> 01:03:00,240
で

1847
01:03:00,240 --> 01:03:02,319
は、タイムステップの1％が

1848
01:03:02,319 --> 01:03:04,000
ここで変更される動的な環境です。 右側にあるので、最大

1849
01:03:04,000 --> 01:03:05,680
4％変化する

1850
01:03:05,680 --> 01:03:08,960
ので、すべてが等しいほど

1851
01:03:08,960 --> 01:03:11,440
変化が

1852
01:03:11,440 --> 01:03:12,480


1853
01:03:12,480 --> 01:03:15,520
難しくなります。変化が少ないほど、変化が少なくなり

1854
01:03:15,520 --> 01:03:17,280
、静的な場合のよう

1855
01:03:17,280 --> 01:03:20,559
になり、行が 武器は

1856
01:03:20,559 --> 01:03:21,119


1857
01:03:21,119 --> 01:03:24,880
k1020と40です。したがって、すべての条件が同じ

1858
01:03:24,880 --> 01:03:27,039
であるため、武器が少ないほど簡単になり

1859
01:03:27,039 --> 01:03:30,160


1860
01:03:30,160 --> 01:03:32,079
ます。これは、決定が少なくなるためです。次に、各セル内を次のように調べ

1861
01:03:32,079 --> 01:03:33,760
ます。

1862
01:03:33,760 --> 01:03:37,359


1863
01:03:37,359 --> 01:03:40,880
後悔率このrsubtは、

1864
01:03:40,880 --> 01:03:43,039
時間の経過に伴う後悔率を示します。ここでも、

1865
01:03:43,039 --> 01:03:45,440
後悔を少なく

1866
01:03:45,440 --> 01:03:47,920
したいので、サンプルの関数としては

1867
01:03:47,920 --> 01:03:48,880
数千

1868
01:03:48,880 --> 01:03:51,520
サンプルまでの方が優れています。アクティブな推論

1869
01:03:51,520 --> 01:03:52,640
と比較されているアルゴリズムは次のとおりです。

1870
01:03:52,640 --> 01:03:55,119
赤のベイジアン

1871
01:03:55,119 --> 01:03:57,200


1872
01:03:57,200 --> 01:03:59,920
で、紫の青の楽観的なトンプソンに自信を持って、次に

1873
01:03:59,920 --> 01:04:02,480
黒の破線でランダムに制御する

1874
01:04:02,480 --> 01:04:06,000
ので、ランダムなプレイは良いですが、

1875
01:04:06,000 --> 01:04:09,200
それはええと、敵対的なプレイ

1876
01:04:09,200 --> 01:04:10,799
ではないので、あなたが選択しているようではありません

1877
01:04:10,799 --> 01:04:13,119
負けますが、これはランダムプレイで

1878
01:04:13,119 --> 01:04:14,880
あり

1879
01:04:14,880 --> 01:04:18,000
、静的な量の後悔率が蓄積されるということです。

1880
01:04:18,000 --> 01:04:21,760
同じ値

1881
01:04:21,760 --> 01:04:25,200
の紫とティールのアルゴリズム

1882
01:04:25,200 --> 01:04:27,839
がランダムプレイよりも低い後悔率に収束します。

1883
01:04:27,839 --> 01:04:28,240


1884
01:04:28,240 --> 01:04:30,799
それらは

1885
01:04:30,799 --> 01:04:32,960
ランダムよりもうまく機能して

1886
01:04:32,960 --> 01:04:36,400
いますが、基本的にすべての場合

1887
01:04:36,400 --> 01:04:39,119
でアクティブな推論はこれらの

1888
01:04:39,119 --> 01:04:39,440
他の

1889
01:04:39,440 --> 01:04:41,920
アルゴリズムよりも低いため、アクティブな推論は

1890
01:04:41,920 --> 01:04:43,839


1891
01:04:43,839 --> 01:04:47,599
このタスクでより優れたパフォーマンスを発揮します。 私の他のアルゴリズム

1892
01:04:47,599 --> 01:04:50,559
これは

1893
01:04:50,559 --> 01:04:50,960


1894
01:04:50,960 --> 01:04:54,079
、時間が経つにつれて、オクターブ

1895
01:04:54,079 --> 01:04:54,559
推論

1896
01:04:54,559 --> 01:04:57,200
が他のアルゴリズムよりも低いレートで後悔を獲得し

1897
01:04:57,200 --> 01:04:58,640
ているように見えるよう

1898
01:04:58,640 --> 01:05:00,400
なもの

1899
01:05:00,400 --> 01:05:00,799
です。

1900
01:05:00,799 --> 01:05:04,880


1901
01:05:04,880 --> 01:05:08,240


1902
01:05:08,240 --> 01:05:11,440
左上のアームが少ないので、

1903
01:05:11,440 --> 01:05:14,079


1904
01:05:14,079 --> 01:05:15,599
ランダムプレイとアルゴリズムの違い

1905
01:05:15,599 --> 01:05:19,200
が重要であり、アクティブな推論が

1906
01:05:19,200 --> 01:05:19,520


1907
01:05:19,520 --> 01:05:22,559
非常にうまく機能していることがわかります。一方、非常に

1908
01:05:22,559 --> 01:05:23,760
動的な環境

1909
01:05:23,760 --> 01:05:27,520
でアームが多い場合は、それほど多くは得られません。

1910
01:05:27,520 --> 01:05:29,599
残念ながら

1911
01:05:29,599 --> 01:05:31,119
、まだ比較的優れており、アクティブな

1912
01:05:31,119 --> 01:05:32,480
推論は他のアルゴリズムよりも優れて

1913
01:05:32,480 --> 01:05:33,440


1914
01:05:33,440 --> 01:05:34,960


1915
01:05:34,960 --> 01:05:36,640
いますが、数ステップごとに変化し、100の

1916
01:05:36,640 --> 01:05:37,520
アームがある

1917
01:05:37,520 --> 01:05:40,000
場合は

1918
01:05:40,000 --> 01:05:40,880


1919
01:05:40,880 --> 01:05:43,599
、意味のあるものにするのに十分なサンプリングができないと想像してみてください。 モデルを更新して

1920
01:05:43,599 --> 01:05:44,640
ください。

1921
01:05:44,640 --> 01:05:47,440
そうすることで、変化が速く

1922
01:05:47,440 --> 01:05:49,119
なり、アームが増えると、

1923
01:05:49,119 --> 01:05:51,359


1924
01:05:51,359 --> 01:05:52,720
アルゴリズムを学習する機械の全体的なパフォーマンスが向上します。  thmは

1925
01:05:52,720 --> 01:05:54,880
ランダムプレイに収束し

1926
01:05:54,880 --> 01:05:57,440
ますが、問題が静的であるほど、

1927
01:05:57,440 --> 01:05:59,839
オプションが少なくなると、ランダムに比べ

1928
01:05:59,839 --> 01:06:03,200
てより優れた戦略

1929
01:06:03,200 --> 01:06:04,720
がより適切に実行さ

1930
01:06:04,720 --> 01:06:06,480
れる

1931
01:06:06,480 --> 01:06:09,359
ため、

1932
01:06:09,359 --> 01:06:11,359
シミュレーションを実行するのは非常にクールです。

1933
01:06:11,359 --> 01:06:14,480
ええと、1000のシミュレーションを推測する

1934
01:06:14,480 --> 01:06:16,000
と、アンサンブル内のエージェントインスタンスごとに切り替えスケジュールが

1935
01:06:16,000 --> 01:06:17,760
ランダムに生成される

1936
01:06:17,760 --> 01:06:19,599


1937
01:06:19,599 --> 01:06:23,359
ため、これらのケースごとに完全なシミュレーションを1000回実行し

1938
01:06:23,359 --> 01:06:25,039
、それを

1939
01:06:25,039 --> 01:06:26,400
平均して

1940
01:06:26,400 --> 01:06:29,839
、非常にクールなアクティブな推論を実行

1941
01:06:29,839 --> 01:06:32,720
します。 さまざまな状況で

1942
01:06:32,720 --> 01:06:33,200


1943
01:06:33,200 --> 01:06:35,440
ベルヌーイバンディットの切り替えがうまく機能して

1944
01:06:35,440 --> 01:06:36,880


1945
01:06:36,880 --> 01:06:40,640
いること、そしてそれはある種の

1946
01:06:40,640 --> 01:06:41,599


1947
01:06:41,599 --> 01:06:44,400
作業の良い方法をすばやく見つけ出し、それから

1948
01:06:44,400 --> 01:06:48,559
後悔の蓄積率が低いままであるということ

1949
01:06:48,640 --> 01:06:52,160
です。

1950
01:06:52,160 --> 01:06:55,200


1951
01:06:55,200 --> 01:06:59,599
4アームの数を修正する

1952
01:06:59,599 --> 01:07:02,000
ので、ベルヌーイバンディットの切り替えでkが20アームになり、これらのアルゴリズム

1953
01:07:02,000 --> 01:07:03,680


1954
01:07:03,680 --> 01:07:04,880
を比較します。

1955
01:07:04,880 --> 01:07:07,200
ここで

1956
01:07:07,200 --> 01:07:09,440
は、列は以前と同じで、

1957
01:07:09,440 --> 01:07:12,400
行の変化が少なく

1958
01:07:12,400 --> 01:07:14,000
、右側が0.01 o2とo4になります

1959
01:07:14,000 --> 01:07:16,480
が、前の

1960
01:07:16,480 --> 01:07:18,640
図で見たように、行としての

1961
01:07:18,640 --> 01:07:21,359


1962
01:07:21,359 --> 01:07:23,680
報酬のあるアームと報酬の少ないアームの差であるイプシロンがあり

1963
01:07:23,680 --> 01:07:28,960
ます。

1964
01:07:28,960 --> 01:07:30,480
つまり、変化が少なく

1965
01:07:30,480 --> 01:07:33,599
、行間のコントラストが最も大きいの

1966
01:07:33,599 --> 01:07:37,039


1967
01:07:37,039 --> 01:07:40,319


1968
01:07:40,319 --> 01:07:43,359
は、ランダムプレイと比較して最大のumゲインが見られる場合ですが、

1969
01:07:43,359 --> 01:07:46,240
より動的な設定になっている場合

1970
01:07:46,240 --> 01:07:47,920
と、どちらを選択するかについての違いが少ない場合です。

1971
01:07:47,920 --> 01:07:50,000
結果の結果

1972
01:07:50,000 --> 01:07:53,280


1973
01:07:53,280 --> 01:07:54,799
として、アルゴリズムによる後悔率の差は少なくなり

1974
01:07:54,799 --> 01:07:57,920
ますが、全体

1975
01:07:57,920 --> 01:08:00,000
的にアクティブな推論は

1976
01:08:00,000 --> 01:08:01,920
これらの他のアルゴリズムよりもパフォーマンスが優れている

1977
01:08:01,920 --> 01:08:05,359
ため、サンプリングによって

1978
01:08:05,359 --> 01:08:07,200
アクティブな推論のロック

1979
01:08:07,200 --> 01:08:09,039
が約

1980
01:08:09,039 --> 01:08:12,160
200または500サンプルだけかなり良い場所に増加

1981
01:08:12,160 --> 01:08:14,720
します。  20のアームの場合、

1982
01:08:14,720 --> 01:08:15,440


1983
01:08:15,440 --> 01:08:17,600
各アームを訪問したようなものです。おそらく、他のアームよりも数

1984
01:08:17,600 --> 01:08:18,479
回多い

1985
01:08:18,479 --> 01:08:20,719
かもしれません

1986
01:08:20,719 --> 01:08:22,479
が、常に変化

1987
01:08:22,479 --> 01:08:26,158
しているので、アクティ ve推論はそれに

1988
01:08:26,158 --> 01:08:28,158
対処することができます。また

1989
01:08:28,158 --> 01:08:29,759
、特にこのティールの

1990
01:08:29,759 --> 01:08:33,839
ものは後悔率がほとんど

1991
01:08:33,839 --> 01:08:36,839
なく、実際にクリープ

1992
01:08:36,839 --> 01:08:38,319
し

1993
01:08:38,319 --> 01:08:40,880
ますが、少なくとも視覚的には

1994
01:08:40,880 --> 01:08:43,120
アクティブな推論のようなフラットライン

1995
01:08:43,120 --> 01:08:45,439
が表示されますが、クリープバックはありません。 これは

1996
01:08:45,439 --> 01:08:46,719


1997
01:08:46,719 --> 01:08:48,158
、あらゆる種類のアルゴリズムで発生する可能性があり

1998
01:08:48,158 --> 01:08:49,759
、異常な精度のレジームに固定されて

1999
01:08:49,759 --> 01:08:50,839


2000
01:08:50,839 --> 01:08:53,520


2001
01:08:53,520 --> 01:08:57,520
しまうため、図3でスライスする別の方法があり、報酬の多いアームと少ないアーム

2002
01:08:57,520 --> 01:08:59,040


2003
01:08:59,040 --> 01:09:01,759
の違いをイプシロンで修正しました。

2004
01:09:01,759 --> 01:09:02,799


2005
01:09:02,799 --> 01:09:05,439


2006
01:09:05,439 --> 01:09:06,880
彼らは、アームの数が問題の

2007
01:09:06,880 --> 01:09:08,719
動的性がどのよう

2008
01:09:08,719 --> 01:09:10,319
に解決されているかを調査し

2009
01:09:10,319 --> 01:09:13,520
ました。図4

2010
01:09:13,520 --> 01:09:15,759
では、

2011
01:09:15,759 --> 01:09:16,880
動的に

2012
01:09:16,880 --> 01:09:19,679
変化する確率を

2013
01:09:19,679 --> 01:09:21,040


2014
01:09:21,040 --> 01:09:24,799
どのように変化させ、それらがパフォーマンスをどのように変化させるか

2015
01:09:24,799 --> 01:09:27,920
を

2016
01:09:28,399 --> 01:09:31,120


2017
01:09:32,158 --> 01:09:36,238
イプシロンするために、アームを固定しました。 さて、

2018
01:09:36,238 --> 01:09:39,439
ここの図5は、もう1つの似たような

2019
01:09:39,439 --> 01:09:40,719
図

2020
01:09:40,719 --> 01:09:44,319
で、列の行も同じよう

2021
01:09:44,319 --> 01:09:46,560
に表示されるので、変化が少なく、共同で残されます。

2022
01:09:46,560 --> 01:09:48,640
右の列でラムがさらに変化し、

2023
01:09:48,640 --> 01:09:49,759


2024
01:09:49,759 --> 01:09:52,238
アームの数は図3のように10

2025
01:09:52,238 --> 01:09:55,159
20と40になりますが、

2026
01:09:55,159 --> 01:09:58,080
非定常の難易

2027
01:09:58,080 --> 01:10:02,480
度があり、問題の難易度は

2028
01:10:02,480 --> 01:10:04,239
利点として非定常です

2029
01:10:04,239 --> 01:10:05,760
2番目に良いアームに対する最良のアームの

2030
01:10:05,760 --> 01:10:07,600


2031
01:10:07,600 --> 01:10:11,120
割合は時間とともに変化しますああそうそうイプシロンは正確に変化するので、イプシロンの

2032
01:10:11,120 --> 01:10:14,159
変化

2033
01:10:14,159 --> 01:10:15,360
を時間

2034
01:10:15,360 --> 01:10:17,760
に切り替えると、ラムダに設定の精度が0.5に固定

2035
01:10:17,760 --> 01:10:18,960


2036
01:10:18,960 --> 01:10:22,159


2037
01:10:22,159 --> 01:10:22,880
されるため、

2038
01:10:22,880 --> 01:10:25,440
他の場所で使用されているものとは異なるラムダになります。 ある種の

2039
01:10:25,440 --> 01:10:26,080
表示

2040
01:10:26,080 --> 01:10:28,880
は、彼らが選択した変数値が最先端のパフォーマンスを上回っ

2041
01:10:28,880 --> 01:10:29,280


2042
01:10:29,280 --> 01:10:30,800
ているため、明らかに機能することを意味します

2043
01:10:30,800 --> 01:10:32,400
が、

2044
01:10:32,400 --> 01:10:34,159
ここでは、すべてのスイッチンググラフで使用した0.5のラムダである別の変数を選択しました。

2045
01:10:34,159 --> 01:10:37,040


2046
01:10:37,040 --> 01:10:37,440


2047
01:10:37,440 --> 01:10:40,320


2048
01:10:40,320 --> 01:10:41,679
図5.

2049
01:10:41,679 --> 01:10:43,679


2050
01:10:43,679 --> 01:10:45,360
スイッチングで0.5に変更したのは、そのために最適化しただけで

2051
01:10:45,360 --> 01:10:46,400


2052
01:10:46,400 --> 01:10:48,800
、変数の最適化が大丈夫である

2053
01:10:48,800 --> 01:10:50,000


2054
01:10:50,000 --> 01:10:53,199
ことを示していなかったためです。

2055
01:10:53,199 --> 01:10:55,440
赤い線

2056
01:10:55,440 --> 01:10:56,480
は下

2057
01:10:56,480 --> 01:10:58,640
にあり、後悔率のこのような

2058
01:10:58,640 --> 01:10:59,520
二次的な

2059
01:10:59,520 --> 01:11:02,800
増加はありません。したがって

2060
01:11:02,800 --> 01:11:06,560
、右のダイナミックと右下の多くのアーム

2061
01:11:06,560 --> 01:11:08,640
でさえ、アクティブな推論がうまく機能していることがわかります。

2062
01:11:08,640 --> 01:11:09,840


2063
01:11:09,840 --> 01:11:13,120
図34と5

2064
01:11:13,120 --> 01:11:16,080


2065
01:11:16,080 --> 01:11:17,600


2066
01:11:17,600 --> 01:11:20,800
最先端のアルゴリズムよりも優れたアクティブな推論の非常に説得力のあるケースを作成し

2067
01:11:20,800 --> 01:11:22,640
ます。これは私たちが本当に興奮していることです。

2068
01:11:22,640 --> 01:11:24,719


2069
01:11:24,719 --> 01:11:26,400
ディスカッションに行き、ディスカッションとクロージングノートに

2070
01:11:26,400 --> 01:11:27,760
数分を費やして

2071
01:11:27,760 --> 01:11:30,640


2072
01:11:30,640 --> 01:11:31,440
から

2073
01:11:31,440 --> 01:11:34,640
ドット1とドット2

2074
01:11:34,640 --> 01:11:37,280
が議論を開くのを楽しみにし

2075
01:11:37,280 --> 01:11:38,000


2076
01:11:38,000 --> 01:11:40,719
て

2077
01:11:40,719 --> 01:11:42,480
います。彼らは、アクティブな推論をベイズの上限信頼限界と2つの最先端の機械学習アルゴリズムと比較していると以前に述べたことをリハーサルします。

2078
01:11:42,480 --> 01:11:43,920


2079
01:11:43,920 --> 01:11:45,920


2080
01:11:45,920 --> 01:11:46,320


2081
01:11:46,320 --> 01:11:48,400


2082
01:11:48,400 --> 01:11:49,760


2083
01:11:49,760 --> 01:11:52,159
問題のペアのアルゴリズムのペアである楽観的なトンプソンサンプリング定常

2084
01:11:52,159 --> 01:11:53,679
および非定常の

2085
01:11:53,679 --> 01:11:56,400
確率的多腕バンディットは、とりわけそれらの

2086
01:11:56,400 --> 01:11:57,440
貢献をし

2087
01:11:57,440 --> 01:11:59,280
ますw

2088
01:11:59,280 --> 01:12:00,960
おおよそのアクティブな推論

2089
01:12:00,960 --> 01:12:02,159
アルゴリズム

2090
01:12:02,159 --> 01:12:04,239
の導入として、彼らはそれが再び実行されていることを示すためにいくつかのチェックを

2091
01:12:04,239 --> 01:12:05,440
実行

2092
01:12:05,440 --> 01:12:08,960
し、あなたが正確に行うことができる

2093
01:12:08,960 --> 01:12:10,880
ので、彼らは

2094
01:12:10,880 --> 01:12:12,800
効率的で高次元の問題に簡単に拡張できるアクティブな推論アルゴリズムを導き出し

2095
01:12:12,800 --> 01:12:15,280


2096
01:12:15,280 --> 01:12:17,920
ました

2097
01:12:17,920 --> 01:12:18,800


2098
01:12:18,800 --> 01:12:21,600
アクティブな推論を適用することはどこでクールまたは有用または重要である可能性があります

2099
01:12:21,600 --> 01:12:22,800


2100
01:12:22,800 --> 01:12:25,280
か？これについては多くの考え

2101
01:12:25,280 --> 01:12:26,159
が

2102
01:12:26,159 --> 01:12:27,920
あり、うまくいけばもっと多くなること

2103
01:12:27,920 --> 01:12:29,920
を私たちは知っています

2104
01:12:29,920 --> 01:12:32,880


2105
01:12:32,880 --> 01:12:34,719
が、最近ネットが発表されたことを適切なタイミングで聞いている人のために注意します ハック

2106
01:12:34,719 --> 01:12:37,600
チャレンジ。

2107
01:12:37,600 --> 01:12:38,400
これについて

2108
01:12:38,400 --> 01:12:40,480
は、2021年7月の終わりまたは8月の初めに作業を開始する

2109
01:12:40,480 --> 01:12:42,320
予定

2110
01:12:42,320 --> 01:12:44,719
です。したがって、ビデオゲームのパフォーマンスのチャレンジにアクティブな推論を適用することに興味がある場合は

2111
01:12:44,719 --> 01:12:46,080


2112
01:12:46,080 --> 01:12:49,280


2113
01:12:49,280 --> 01:12:52,239
、共同チームにエントリーしてもらいたいと考えています。

2114
01:12:52,239 --> 01:12:54,080
このチャレンジ

2115
01:12:54,080 --> 01:12:56,560
は、

2116
01:12:56,560 --> 01:12:58,320
アクティブな

2117
01:12:58,320 --> 01:12:59,600
推論で何ができるか

2118
01:12:59,600 --> 01:13:01,440
を実際に世界に示す素晴らしい機会になるでしょうが、私たちはまた、tを楽しみにしています。 彼の

2119
01:13:01,440 --> 01:13:02,840
著者とすべての

2120
01:13:02,840 --> 01:13:06,080
ゲストは、このような

2121
01:13:06,080 --> 01:13:07,760


2122
01:13:07,760 --> 01:13:09,120


2123
01:13:09,120 --> 01:13:10,560
近似アクティブ推論タイプの

2124
01:13:10,560 --> 01:13:13,520
アルゴリズムを使用し

2125
01:13:16,159 --> 01:13:18,880
て探索するの

2126
01:13:18,880 --> 01:13:19,600


2127
01:13:19,600 --> 01:13:22,719
が興味深いと思わ

2128
01:13:22,719 --> 01:13:26,159
れる種類の質問を共有

2129
01:13:26,159 --> 01:13:29,679
しています。  kが10の場合

2130
01:13:29,679 --> 01:13:31,199
に

2131
01:13:31,199 --> 01:13:33,440
非常に残念な決定

2132
01:13:33,440 --> 01:13:36,880
に閉じ込められたばかりのエージェントの割合は、

2133
01:13:36,880 --> 01:13:40,560


2134
01:13:40,560 --> 01:13:42,560


2135
01:13:42,560 --> 01:13:44,239
静止バンディット

2136
01:13:44,239 --> 01:13:45,679
問題の図2での経験的アルゴリズムの

2137
01:13:45,679 --> 01:13:47,040
比較で、アクティブな推論

2138
01:13:47,040 --> 01:13:48,880
アルゴリズムが漸近的ではないことを示しています。

2139
01:13:48,880 --> 01:13:49,920
効率的な

2140
01:13:49,920 --> 01:13:51,920
累積後悔

2141
01:13:51,920 --> 01:13:53,280


2142
01:13:53,280 --> 01:13:56,480
は、大規模な試行の限界で対数よりも速く増加しました。

2143
01:13:56,480 --> 01:13:58,000
つまり

2144
01:13:58,000 --> 01:14:00,320
、混乱するエージェントがすべてではない場合でも、この動作の原因を損なう

2145
01:14:00,320 --> 01:14:01,040


2146
01:14:01,040 --> 01:14:03,440
ような方法でグループをドラッグしている

2147
01:14:03,440 --> 01:14:04,400


2148
01:14:04,400 --> 01:14:08,480


2149
01:14:08,480 --> 01:14:10,320
ようです。  expl間

2150
01:14:10,320 --> 01:14:12,080


2151
01:14:12,080 --> 01:14:13,679
のバランシングパラメータとして機能するプリファレンスラムダに対する事前精度を修正しました

2152
01:14:13,679 --> 01:14:16,320
演説と搾取な

2153
01:14:16,320 --> 01:14:19,120
ので、これは

2154
01:14:19,120 --> 01:14:19,920


2155
01:14:19,920 --> 01:14:22,480
2つのモードの探索と活用のようなものではなく、非常に興味深い部分

2156
01:14:22,480 --> 01:14:24,080
です。次に

2157
01:14:24,080 --> 01:14:25,520
、ライトスイッチのように一方を他方に

2158
01:14:25,520 --> 01:14:26,320
切り替えるパラメータを使用

2159
01:14:26,320 --> 01:14:28,560
するか、1つの極端な探索モードと

2160
01:14:28,560 --> 01:14:30,800
1つの極端な活用を行います。 モデルのモードを設定する

2161
01:14:30,800 --> 01:14:32,080
と

2162
01:14:32,080 --> 01:14:34,239
、アクティブな推論で2つの間に調光器が配置されます。

2163
01:14:34,239 --> 01:14:35,360


2164
01:14:35,360 --> 01:14:38,480
このノブは、

2165
01:14:38,480 --> 01:14:40,080
実際には設定よりも前の精度

2166
01:14:40,080 --> 01:14:43,760
であるため、設定がない

2167
01:14:43,760 --> 01:14:47,600
場合、つまり、設定がない場合は

2168
01:14:47,600 --> 01:14:50,080
、 あなたがあなたの好みよりも

2169
01:14:50,080 --> 01:14:51,679


2170
01:14:51,679 --> 01:14:53,600


2171
01:14:53,600 --> 01:14:55,600
信じられないほど強い

2172
01:14:55,600 --> 01:14:57,920
信じられないほど正確な前に持っている

2173
01:14:57,920 --> 01:15:01,199
なら、あなたは最大限に探索的な方法で行動しようとしている好みよりも正確ですあなたは

2174
01:15:01,199 --> 01:15:03,840


2175
01:15:03,840 --> 01:15:05,520
2つのレストランが

2176
01:15:05,520 --> 01:15:08,239
あり、そのうちの1つがあなたを好きであるかのように非常に搾取的な方法で行動します 60

2177
01:15:08,239 --> 01:15:10,159
あなたが好きな他の人を知っている40

2178
01:15:10,159 --> 01:15:11,440
あなたが好みがないならあなたは

2179
01:15:11,440 --> 01:15:13,199
それらに行くつもりです5050.それは探検のようなもの

2180
01:15:13,199 --> 01:15:15,360
ですが、あなたがあなたの好みよりも超高精度を持っているならあなたは

2181
01:15:15,360 --> 01:15:17,360


2182
01:15:17,360 --> 01:15:18,960
いつもです アルゴリズムの

2183
01:15:18,960 --> 01:15:19,280


2184
01:15:19,280 --> 01:15:21,199


2185
01:15:21,199 --> 01:15:22,800


2186
01:15:22,800 --> 01:15:24,960
パフォーマンスがそのパラメーターにどのように依存するかを分析

2187
01:15:24,960 --> 01:15:27,120


2188
01:15:27,120 --> 01:15:28,800


2189
01:15:28,800 --> 01:15:31,600
すると、時間の経過とともに最高のパフォーマンスが得られるパラメーター値が減少し

2190
01:15:31,600 --> 01:15:33,199
、このパラメーターは適応性があり減衰する必要があることが示されました。

2191
01:15:33,199 --> 01:15:35,280
時間の経過とともに探索の必要

2192
01:15:35,280 --> 01:15:37,520
性が減少する

2193
01:15:37,520 --> 01:15:40,320
ので、好みよりも低い精度で開始し、

2194
01:15:40,320 --> 01:15:41,440


2195
01:15:41,440 --> 01:15:44,640
学習

2196
01:15:44,640 --> 01:15:46,800
して更新します。最終的には

2197
01:15:46,800 --> 01:15:49,040
精度を上げて、後で

2198
01:15:49,040 --> 01:15:50,800


2199
01:15:50,800 --> 01:15:52,480
単純で広く使用されている減衰スキーム

2200
01:15:52,480 --> 01:15:53,760
で状況を改善しようとしますが、成功していません。

2201
01:15:53,760 --> 01:15:55,679
時間の対数なので、試行回数の1つを知っ

2202
01:15:55,679 --> 01:15:57,600
て

2203
01:15:57,600 --> 01:16:00,080
いるように、精度を時間の関数に直接設定します。これは

2204
01:16:00,080 --> 01:16:00,960


2205
01:16:00,960 --> 01:16:02,880
、試行

2206
01:16:02,880 --> 01:16:04,159


2207
01:16:04,159 --> 01:16:05,600
回数に応じてスケーリングされる関数である

2208
01:16:05,600 --> 01:16:07,280
ため、ここ

2209
01:16:07,280 --> 01:16:10,400
では、の対数でスケーリングします。

2210
01:16:10,400 --> 01:16:12,000
これは、それが単純な

2211
01:16:12,000 --> 01:16:13,679
関係ではなく、schかどうか

2212
01:16:13,679 --> 01:16:15,360
を識別するために適切な理論的分析が必要であることを示しています

2213
01:16:15,360 --> 01:16:17,760
emeが存在する

2214
01:16:17,760 --> 01:16:20,239
ので、レベルをどのように引き戻すかなど、非常に興味深い

2215
01:16:20,239 --> 01:16:20,880


2216
01:16:20,880 --> 01:16:23,440
です。

2217
01:16:23,440 --> 01:16:25,520
アクティブな推論アーキテクチャ

2218
01:16:25,520 --> 01:16:28,000
は、不確実性の下で学習をモデル化するための非常に生産的な方法になる

2219
01:16:28,000 --> 01:16:30,239


2220
01:16:30,239 --> 01:16:32,080
と思いますが、問題をレベルを上げるだけです。

2221
01:16:32,080 --> 01:16:33,440


2222
01:16:33,440 --> 01:16:36,960
不確実である必要があり、次に、時間の経過とともに移動する設定に対する

2223
01:16:36,960 --> 01:16:39,360
不確実性をどのように変更する必要がありますか？

2224
01:16:39,360 --> 01:16:40,800


2225
01:16:40,800 --> 01:16:45,360


2226
01:16:45,360 --> 01:16:48,640


2227
01:16:48,640 --> 01:16:52,239
最後に考えたのは非定常である

2228
01:16:52,239 --> 01:16:54,400
ため、動的スイッチングバンディットは、

2229
01:16:54,400 --> 01:16:57,120
一般

2230
01:16:57,120 --> 01:16:58,560
にベイズの信頼上限を上回りました。

2231
01:16:58,560 --> 01:17:00,960
楽観的な

2232
01:17:00,960 --> 01:17:02,400
トンプソンサンプリング

2233
01:17:02,400 --> 01:17:04,159
これは、アクティブ

2234
01:17:04,159 --> 01:17:06,000
推論フレームワークが継続的な適応を必要とする最適化問題の優れたソリューションを提供する可能性があるという証拠を

2235
01:17:06,000 --> 01:17:08,159


2236
01:17:08,159 --> 01:17:11,040


2237
01:17:11,040 --> 01:17:13,040
提供しますアクティブ推論は情報を取得する最も

2238
01:17:13,040 --> 01:17:14,159
効率的な方法

2239
01:17:14,159 --> 01:17:16,880
を提供し

2240
01:17:16,880 --> 01:17:17,840
、アルゴリズムのこの特性は

2241
01:17:17,840 --> 01:17:21,679
非定常設定のクールポイントで報われます

2242
01:17:21,679 --> 01:17:23,440


2243
01:17:23,440 --> 01:17:25,760
作者の視点を聞くのは素晴らしいことだと それでは、

2244
01:17:25,760 --> 01:17:28,239
アクティブな推論

2245
01:17:28,239 --> 01:17:29,360
フレームワークアルゴリズム

2246
01:17:29,360 --> 01:17:32,560
を機械学習とより広く比較

2247
01:17:32,560 --> 01:17:35,520
し、特に

2248
01:17:35,520 --> 01:17:36,960
情報に基づいた

2249
01:17:36,960 --> 01:17:40,000
採餌が役立つ問題について

2250
01:17:40,000 --> 01:17:42,960
は、イプシロンの貪欲さが時々

2251
01:17:42,960 --> 01:17:44,159
最高のものから目をそらして

2252
01:17:44,159 --> 01:17:45,679
ランダムに選択する

2253
01:17:45,679 --> 01:17:49,360
だけでなく、トンプソンのサンプリングだけでなく、

2254
01:17:49,360 --> 01:17:51,199
それぞれを選択することを忘れないでください。

2255
01:17:51,199 --> 01:17:53,600
最高の腕である

2256
01:17:53,600 --> 01:17:56,480
可能性に応じて、学習中に稼ぐことを知っている間、稼ぐこととのトレードオフを行うためのより多くの情報に基づいた、または

2257
01:17:56,480 --> 01:17:57,360
経験的に

2258
01:17:57,360 --> 01:18:00,480
優れたパフォーマンスのスキームを持つことができ

2259
01:18:00,480 --> 01:18:01,440


2260
01:18:01,440 --> 01:18:03,440


2261
01:18:03,440 --> 01:18:04,880


2262
01:18:04,880 --> 01:18:05,360
ます。

2263
01:18:05,360 --> 01:18:08,320
最適に収益を上げる

2264
01:18:08,320 --> 01:18:08,880


2265
01:18:08,880 --> 01:18:12,000
か、それをどのようにバランスさせるか。

2266
01:18:12,000 --> 01:18:13,440


2267
01:18:13,440 --> 01:18:15,679


2268
01:18:15,679 --> 01:18:18,239


2269
01:18:18,239 --> 01:18:19,840
機械学習コミュニティのより多くの人々が

2270
01:18:19,840 --> 01:18:20,719


2271
01:18:20,719 --> 01:18:22,560
これらの結果に鍵をかけ始め

2272
01:18:22,560 --> 01:18:23,760
、注意の体制を調整するようになるにつれて、オクターブ推論は今後数年間で強力な候補になると思われます。

2273
01:18:23,760 --> 01:18:25,280
これらの作者や他の人たちがし

2274
01:18:25,280 --> 01:18:27,280
ていることに、それは単にmoを持っているのではなく、ちょっとそれがより広く理解されるようになり始めています

2275
01:18:27,280 --> 01:18:30,480


2276
01:18:30,480 --> 01:18:31,280


2277
01:18:31,280 --> 01:18:33,040


2278
01:18:33,040 --> 01:18:34,800


2279
01:18:34,800 --> 01:18:35,679
私たちのモデルのパラメータ

2280
01:18:35,679 --> 01:18:37,520
と数十億のパラメータと、ますます大規模な

2281
01:18:37,520 --> 01:18:39,440
ネットワークでのトレーニングは、コンピュータを知っています。学習方法を学び、勝つことを好む

2282
01:18:39,440 --> 01:18:42,320
好奇心旺盛なエージェントがいたら

2283
01:18:42,320 --> 01:18:44,800


2284
01:18:44,800 --> 01:18:47,159
、1階の再解釈のようなものです。

2285
01:18:47,159 --> 01:18:48,320


2286
01:18:48,320 --> 01:18:51,360
これらの問題

2287
01:18:51,360 --> 01:18:52,400


2288
01:18:52,400 --> 01:18:55,840
について、アクティブな推論と

2289
01:18:55,840 --> 01:18:56,880
機械学習の

2290
01:18:56,880 --> 01:18:58,800
コミュニティと分野がどこに向かっ

2291
01:18:58,800 --> 01:19:00,080


2292
01:19:00,080 --> 01:19:02,640
ているのかについての著者の見解を聞くことは、私たちにとって確かに有益である

2293
01:19:02,640 --> 01:19:05,120
と思いますあなたはその青についてどう思いますか

2294
01:19:05,120 --> 01:19:07,199
私はちょうど山のような問題について考えています

2295
01:19:07,199 --> 01:19:09,199


2296
01:19:09,199 --> 01:19:12,159
私たちが実際に学んでいるような車の問題は

2297
01:19:12,159 --> 01:19:13,520


2298
01:19:13,520 --> 01:19:15,600
、あなたが探検しなければならないとき、あなたが

2299
01:19:15,600 --> 01:19:17,520
丘

2300
01:19:17,520 --> 01:19:19,440
の向こう側に戻ることができるようにあなたが丘を登りたいと思っているより高く登りたいときのように勝っています

2301
01:19:19,440 --> 01:19:20,960
フラグは

2302
01:19:20,960 --> 01:19:23,120
、他の問題が

2303
01:19:23,120 --> 01:19:24,320
そこにあるようなものであり、必ずしも探索から切り離された元に切り離された報酬のようなものであると

2304
01:19:24,320 --> 01:19:27,360
は限らない

2305
01:19:27,360 --> 01:19:29,199


2306
01:19:29,199 --> 01:19:32,560
ので、私はそれ

2307
01:19:32,560 --> 01:19:34,159
について考えています、そして私はd

2308
01:19:34,159 --> 01:19:36,800
どこで学んでいるのかわからない素晴らしい

2309
01:19:36,800 --> 01:19:37,760


2310
01:19:37,760 --> 01:19:39,120
質問に勝つことは、

2311
01:19:39,120 --> 01:19:41,280
山の車のように

2312
01:19:41,280 --> 01:19:43,840
、ある意味で高度は

2313
01:19:43,840 --> 01:19:45,600
丘の頂上に到達したい報酬ヒューリスティック

2314
01:19:45,600 --> 01:19:46,960
なので、高度が行く方法の

2315
01:19:46,960 --> 01:19:48,880
ようです しかし、問題を設定する方法では

2316
01:19:48,880 --> 01:19:50,239


2317
01:19:50,239 --> 01:19:52,960
、境界を最適化

2318
01:19:52,960 --> 01:19:53,679


2319
01:19:53,679 --> 01:19:56,800
して、境界を横方向に拡大しようとしていると言うこともでき

2320
01:19:56,800 --> 01:19:57,520


2321
01:19:57,520 --> 01:19:59,280
ます。もちろん

2322
01:19:59,280 --> 01:20:01,280
、山にいることを知っている高さを変更しています

2323
01:20:01,280 --> 01:20:05,440
が、特に場合は

2324
01:20:05,440 --> 01:20:06,800


2325
01:20:06,800 --> 01:20:09,920
イノベーションや他の分野のような探索に焦点を当てる場合、

2326
01:20:09,920 --> 01:20:11,440
アクティブな推論がどのようにうまく機能するかを考えるのはクールです。

2327
01:20:11,440 --> 01:20:13,520


2328
01:20:13,520 --> 01:20:15,840
したがって、著者にとって、

2329
01:20:15,840 --> 01:20:16,719
そして

2330
01:20:16,719 --> 01:20:20,639
私たちにとって、

2331
01:20:20,639 --> 01:20:22,560
多腕バンディットの文脈でアクティブな推論を調べるための重要な次のステップ

2332
01:20:22,560 --> 01:20:24,159
は何ですか。 静止した盗賊の問題に対する累積的な後悔の

2333
01:20:24,159 --> 01:20:26,000
理論的限界を確立してい

2334
01:20:26,000 --> 01:20:27,520


2335
01:20:27,520 --> 01:20:29,280
ます。

2336
01:20:29,280 --> 01:20:31,600
なぜなら、私たちが見たように、それは理にかなって

2337
01:20:31,600 --> 01:20:32,800
いる予期しない方法で分岐したのです

2338
01:20:32,800 --> 01:20:35,280
が、それでも実際

2339
01:20:35,280 --> 01:20:36,320
の行動で

2340
01:20:36,320 --> 01:20:39,040
はなかったからです。 最初に予想され、

2341
01:20:39,040 --> 01:20:40,560
これらの理論的研究の重要な部分は

2342
01:20:40,560 --> 01:20:42,400


2343
01:20:42,400 --> 01:20:44,639
、そのラムダパラメータの健全な減衰スキームを考案

2344
01:20:44,639 --> 01:20:46,000


2345
01:20:46,000 --> 01:20:49,199
できるかどうかを調査

2346
01:20:49,199 --> 01:20:51,920


2347
01:20:51,920 --> 01:20:53,040


2348
01:20:53,040 --> 01:20:54,719
することです。

2349
01:20:54,719 --> 01:20:56,639


2350
01:20:56,639 --> 01:20:58,159
それが私たちの

2351
01:20:58,159 --> 01:21:00,159
お気に入りの質問で

2352
01:21:00,159 --> 01:21:02,080


2353
01:21:02,080 --> 01:21:03,520


2354
01:21:03,520 --> 01:21:06,719
あることを可能にするこれは、漸近効率を達成できる新しいアクティブ推論に触発されたアルゴリズムの開発につながります

2355
01:21:06,719 --> 01:21:08,320
これらの理論的境界はまた

2356
01:21:08,320 --> 01:21:10,400
、

2357
01:21:10,400 --> 01:21:12,080
アクティブ推論アルゴリズムを、後悔の境界がさらに知られている

2358
01:21:12,080 --> 01:21:14,000
すでに確立されたバンドアルゴリズムとより厳密に比較することを可能にします

2359
01:21:14,000 --> 01:21:16,800


2360
01:21:16,800 --> 01:21:18,719


2361
01:21:18,719 --> 01:21:20,400


2362
01:21:20,400 --> 01:21:23,440
ここで経験的にテストした設定を超えて一般化できる可能性があります。将来の

2363
01:21:23,440 --> 01:21:23,920
作業で

2364
01:21:23,920 --> 01:21:26,000
は

2365
01:21:26,000 --> 01:21:28,800


2366
01:21:28,800 --> 01:21:30,800
、後悔分析よりも適切なアクティブ推論の情報理論分析も検討する可能性があります。

2367
01:21:30,800 --> 01:21:33,280
後悔分析の

2368
01:21:33,280 --> 01:21:36,480
ようなクールなアイデア

2369
01:21:36,480 --> 01:21:40,480
は、パフォーマンス指向

2370
01:21:40,480 --> 01:21:43,520
でした。 あなたは

2371
01:21:43,520 --> 01:21:45,040


2372
01:21:45,040 --> 01:21:48,560


2373
01:21:48,560 --> 01:21:51,199
最適なものとあなたがしたことのパフォーマンスの違いに基づいて後悔を計算していますが、それ

2374
01:21:51,199 --> 01:21:52,159
を見る別の方法

2375
01:21:52,159 --> 01:21:55,120
は、情報理論を使用

2376
01:21:55,120 --> 01:21:56,000
し、

2377
01:21:56,000 --> 01:21:58,320
おそらく

2378
01:21:58,320 --> 01:21:59,360


2379
01:21:59,360 --> 01:22:02,159
あなたが育てたのと同じように、時間の経過とともに得られる情報の関数として見ることです。

2380
01:22:02,159 --> 01:22:03,360


2381
01:22:03,360 --> 01:22:06,320
プロジェクト全体

2382
01:22:06,320 --> 01:22:08,639
がパフォーマンス、

2383
01:22:08,639 --> 01:22:10,400
報酬、価値の

2384
01:22:10,400 --> 01:22:12,960


2385
01:22:12,960 --> 01:22:14,080


2386
01:22:14,080 --> 01:22:16,080


2387
01:22:16,080 --> 01:22:17,760
観点から組み立てられている場合、

2388
01:22:17,760 --> 01:22:18,719


2389
01:22:18,719 --> 01:22:21,280
この基本的な調査が重要であるため、この基本的な調査のように、探鉱は常に成功した探鉱の観点から行われる必要があるため、探鉱はすぐに搾取を支持するのとほぼ同じです。

2390
01:22:21,280 --> 01:22:22,159


2391
01:22:22,159 --> 01:22:24,320
公正な適用が可能ですが、後悔のパフォーマンス分析

2392
01:22:24,320 --> 01:22:26,320


2393
01:22:26,320 --> 01:22:27,920
だけでなく、情報理論的分析がある場合は

2394
01:22:27,920 --> 01:22:30,000


2395
01:22:30,000 --> 01:22:32,480


2396
01:22:32,480 --> 01:22:35,520


2397
01:22:35,520 --> 01:22:37,920
、調査のために調査を行う方法があり、それによって何が

2398
01:22:37,920 --> 01:22:40,000
可能になる

2399
01:22:40,000 --> 01:22:43,440
か、さらには悪用される可能性があります。

2400
01:22:43,440 --> 01:22:47,280
サプライズの観点からは、サプライズの

2401
01:22:47,280 --> 01:22:49,199
最小化

2402
01:22:49,199 --> 01:22:51,040
は、アクティブな推論を用語で組み立てる場合と同じです。

2403
01:22:51,040 --> 01:22:52,000
驚きを最小限に抑えるために

2404
01:22:52,000 --> 01:22:54,000
、

2405
01:22:54,000 --> 01:22:55,760
このような株式市場の問題のようなものについて考えてみてください。これ

2406
01:22:55,760 --> 01:22:57,360
は、すべてが常に変化しているような切り替え盗賊の問題に非常によく似て

2407
01:22:57,360 --> 01:22:58,239


2408
01:22:58,239 --> 01:23:00,080


2409
01:23:00,080 --> 01:23:01,360


2410
01:23:01,360 --> 01:23:03,520
います。

2411
01:23:03,520 --> 01:23:04,560


2412
01:23:04,560 --> 01:23:06,800


2413
01:23:06,800 --> 01:23:08,239


2414
01:23:08,239 --> 01:23:10,639
つまり、s p 500と言うことから逸脱すると驚かれるので、s p 500で追跡したいのです

2415
01:23:10,639 --> 01:23:12,960


2416
01:23:12,960 --> 01:23:15,520


2417
01:23:15,520 --> 01:23:17,199
が、

2418
01:23:17,199 --> 01:23:19,199
情報理論的分析

2419
01:23:19,199 --> 01:23:21,280
とそれが何か違うことを言うかもしれないという考えから逸脱すると、驚きが起こります。

2420
01:23:21,280 --> 01:23:22,719
後悔するよりも

2421
01:23:22,719 --> 01:23:25,440
、レストランを選ぶことに戻りましょう。そう

2422
01:23:25,440 --> 01:23:27,360
すれば、制御

2423
01:23:27,360 --> 01:23:28,159
されたノベルティのように

2424
01:23:28,159 --> 01:23:30,159
驚きたいと思うことがよくありますが、あまり

2425
01:23:30,159 --> 01:23:31,199
驚きでは

2426
01:23:31,199 --> 01:23:33,440
ないので、

2427
01:23:33,440 --> 01:23:35,199
人々がお気に入りのレストランを好きになる理由を説明

2428
01:23:35,199 --> 01:23:36,159


2429
01:23:36,159 --> 01:23:38,480
します。

2430
01:23:38,480 --> 01:23:39,280


2431
01:23:39,280 --> 01:23:43,040


2432
01:23:43,040 --> 01:23:44,960
最もやりがいのあるレストラン

2433
01:23:44,960 --> 01:23:46,960
である可能性が高い60のような報酬を最大化するコンテキストそれは私が私の不確実性を減らしようとしているようなものかもしれ

2434
01:23:46,960 --> 01:23:48,159
ない

2435
01:23:48,159 --> 01:23:50,159
ので私は場所を選ぶ可能性が高いt

2436
01:23:50,159 --> 01:23:51,199
よく知っている

2437
01:23:51,199 --> 01:23:54,320
ので、別の

2438
01:23:54,320 --> 01:23:56,480
umの食事を選択するか、いつも注文する食事を選択するかもしれません

2439
01:23:56,480 --> 01:23:57,520


2440
01:23:57,520 --> 01:24:00,480
が、

2441
01:24:00,480 --> 01:24:02,960


2442
01:24:02,960 --> 01:24:06,080
報酬を最大化することによってそれ自体ではなく不確実

2443
01:24:06,080 --> 01:24:07,440
性を減らすことによって選択が推進されたようです。

2444
01:24:07,440 --> 01:24:10,000


2445
01:24:10,000 --> 01:24:11,199
価値主導の

2446
01:24:11,199 --> 01:24:14,000
強化学習報酬学習

2447
01:24:14,000 --> 01:24:16,000
と暗黙的に後悔することの違いにいつも戻ってきます。これは

2448
01:24:16,000 --> 01:24:19,440
報酬と不確実性の減少について後悔しているため

2449
01:24:19,440 --> 01:24:20,880


2450
01:24:20,880 --> 01:24:23,440
、まったく異なる空間に私たちを置き

2451
01:24:23,440 --> 01:24:25,280
ます。そうです、情報の流れの領域全体に入ることができます。

2452
01:24:25,280 --> 01:24:27,440


2453
01:24:27,440 --> 01:24:29,120
ここで、実用的な

2454
01:24:29,120 --> 01:24:32,480
umストレートコンポーネントを取得し、次に

2455
01:24:32,480 --> 01:24:34,960
ソレノイドフローをアイソコンターで取得します。はい

2456
01:24:34,960 --> 01:24:36,960


2457
01:24:36,960 --> 01:24:39,360
、不確実性の世界の情報理論の削減でその領域全体にアクセスします

2458
01:24:39,360 --> 01:24:40,560


2459
01:24:40,560 --> 01:24:43,600
が

2460
01:24:43,600 --> 01:24:44,880


2461
01:24:44,880 --> 01:24:46,560
、動作の異なる説明で

2462
01:24:46,560 --> 01:24:48,719
質的に異なるストーリーを取得します。

2463
01:24:48,719 --> 01:24:50,719


2464
01:24:50,719 --> 01:24:52,320
なぜ誰かがそのレストランに行ったのか、または多くの時間にその1つを注文したのかで、報酬を最大化する理由を把握する必要があります

2465
01:24:52,320 --> 01:24:54,480


2466
01:24:54,480 --> 01:24:57,600
sある種の最大化についてそれを行う必要はなく

2467
01:24:57,600 --> 01:24:58,000
、

2468
01:24:58,000 --> 01:25:00,159
不確実性の低減と事前の

2469
01:25:00,159 --> 01:25:01,760
好みの

2470
01:25:01,760 --> 01:25:04,080
理解として独立しているだけです。

2471
01:25:04,080 --> 01:25:06,239


2472
01:25:06,239 --> 01:25:09,120
最後のスライドをめくります。

2473
01:25:09,120 --> 01:25:10,800
それから

2474
01:25:10,800 --> 01:25:15,040
素晴らしい質問があるので、

2475
01:25:15,040 --> 01:25:18,639
umalexvは探索の間に関係があります。

2476
01:25:18,639 --> 01:25:21,360
認識論的価値と

2477
01:25:21,360 --> 01:25:23,360
実用的価値の活用について

2478
01:25:23,360 --> 01:25:25,199
私はあなたが今話していたことに関連していると思います

2479
01:25:25,199 --> 01:25:26,800


2480
01:25:26,800 --> 01:25:29,520
それは私たち

2481
01:25:29,520 --> 01:25:30,639


2482
01:25:30,639 --> 01:25:32,880


2483
01:25:32,880 --> 01:25:34,800


2484
01:25:34,800 --> 01:25:35,760


2485
01:25:35,760 --> 01:25:38,400
がこの認識論的または 知識

2486
01:25:38,400 --> 01:25:39,600
獲得コンポーネント

2487
01:25:39,600 --> 01:25:41,920
とこの実用的または機能的

2488
01:25:41,920 --> 01:25:42,639
コンポーネント

2489
01:25:42,639 --> 01:25:44,960
により、認識論は学習のようであり

2490
01:25:44,960 --> 01:25:45,920
、実用的

2491
01:25:45,920 --> 01:25:49,280
は稼いでいるので、私たちは稼いでいる間に学習し

2492
01:25:49,280 --> 01:25:50,159
ている、

2493
01:25:50,159 --> 01:25:53,360
またはその逆で、

2494
01:25:53,360 --> 01:25:55,679
認識論的に価値のある

2495
01:25:55,679 --> 01:25:57,199
情報

2496
01:25:57,199 --> 01:26:00,320
を取得している間に 私たちが選択しているポリシーを条件として

2497
01:26:00,320 --> 01:26:03,280


2498
01:26:03,280 --> 01:26:04,880


2499
01:26:04,880 --> 01:26:08,400
、期待される自由エネルギーの最小化の意思決定が行われるため、実用的に価値のある情報を取得

2500
01:26:08,400 --> 01:26:11,120
する

2501
01:26:11,120 --> 01:26:12,639


2502
01:26:12,639 --> 01:26:15,760


2503
01:26:15,760 --> 01:26:18,480
これらの両方を共同で

2504
01:26:18,480 --> 01:26:18,880


2505
01:26:18,880 --> 01:26:21,199
検討する機能に基づくポリシー。これは、エクスプロイトを探索すると健全になるため

2506
01:26:21,199 --> 01:26:23,840


2507
01:26:23,840 --> 01:26:26,480
、実際には

2508
01:26:26,480 --> 01:26:27,520


2509
01:26:27,520 --> 01:26:29,920
話したいポリシーの二重性ではないと考えて

2510
01:26:29,920 --> 01:26:31,520
、探索とエクスプロイトを再考する方法の1つです。

2511
01:26:31,520 --> 01:26:33,040
鳥が行うことができるのは2つの行動である

2512
01:26:33,040 --> 01:26:34,480


2513
01:26:34,480 --> 01:26:36,320
ため、ここで私たちが行っているのは

2514
01:26:36,320 --> 01:26:38,719


2515
01:26:38,719 --> 01:26:40,880
、より搾取的な行為をしたい場合もあれば、より探索的な行為をしたい場合もあるという考えを

2516
01:26:40,880 --> 01:26:41,920


2517
01:26:41,920 --> 01:26:44,159


2518
01:26:44,159 --> 01:26:45,600
取り入れているということです。

2519
01:26:45,600 --> 01:26:48,320
さまざまなポリシーのスペクトル全体が存在する可能性があるポリシーを考えると、

2520
01:26:48,320 --> 01:26:49,679


2521
01:26:49,679 --> 01:26:53,199
各ポリシーはどのよう

2522
01:26:53,199 --> 01:26:56,719
にエピステミックおよび実用的な

2523
01:26:56,719 --> 01:27:00,480
利益に貢献し、次にどのポリシー

2524
01:27:00,480 --> 01:27:02,639
が2つの最良の組み合わせになるか

2525
01:27:02,639 --> 01:27:03,760
、

2526
01:27:03,760 --> 01:27:06,639


2527
01:27:06,639 --> 01:27:07,920
両方を最大化する戦略があるかもしれませんし、戦略があるかもしれません

2528
01:27:07,920 --> 01:27:09,280


2529
01:27:09,280 --> 01:27:10,159
どちらも最大化していない

2530
01:27:10,159 --> 01:27:11,760
が、どちらか一方だけを見ている場合は

2531
01:27:11,760 --> 01:27:14,000


2532
01:27:14,000 --> 01:27:15,360
、組み合わせが不十分なものを選択する可能性が

2533
01:27:15,360 --> 01:27:17,040


2534
01:27:17,040 --> 01:27:19,120
あるので、完璧な例です。

2535
01:27:19,120 --> 01:27:20,239
ご存知のように

2536
01:27:20,239 --> 01:27:23,199
、あなたのポリシーは

2537
01:27:23,199 --> 01:27:24,480


2538
01:27:24,480 --> 01:27:26,880
、驚きを最小限に抑えるという以前の報酬のチャンスに基づいているので、これ

2539
01:27:26,880 --> 01:27:29,679


2540
01:27:29,679 --> 01:27:31,840
までに行ったことのないレストランで、これまでに食べたことのない食事を食べるつもりはないというポリシー

2541
01:27:31,840 --> 01:27:33,360
があります。

2542
01:27:33,360 --> 01:27:33,920


2543
01:27:33,920 --> 01:27:35,199
何をしているのかわからない

2544
01:27:35,199 --> 01:27:37,040
ので、あそこのようなものなので、好き

2545
01:27:37,040 --> 01:27:39,040
なレストランで新しい食事を

2546
01:27:39,040 --> 01:27:40,560


2547
01:27:40,560 --> 01:27:43,760
注文するか、新しいレストランで慣れている食事を注文するのが私の方針です。

2548
01:27:43,760 --> 01:27:45,840


2549
01:27:45,840 --> 01:27:46,960


2550
01:27:46,960 --> 01:27:50,239
その例を続けるだけで

2551
01:27:50,239 --> 01:27:54,080
、楽しい議論ができるというポリシーのようになります。

2552
01:27:54,080 --> 01:27:56,800
これが

2553
01:27:56,800 --> 01:27:57,600


2554
01:27:57,600 --> 01:28:01,040
アクティブな推論

2555
01:28:01,040 --> 01:28:03,679
やベイジアン統計機械学習に精通している人

2556
01:28:03,679 --> 01:28:04,719


2557
01:28:04,719 --> 01:28:07,760
に役立つことを願っています。

2558
01:28:07,760 --> 01:28:08,159


2559
01:28:08,159 --> 01:28:10,320
プロジェクト全体を前進させるのに本当に役立ちます

2560
01:28:10,320 --> 01:28:12,560


2561
01:28:12,560 --> 01:28:13,199
意味

2562
01:28:13,199 --> 01:28:15,040
のある部分と意味のない部分、そしてもっと探求したい部分

2563
01:28:15,040 --> 01:28:16,960


2564
01:28:16,960 --> 01:28:19,199
私たちのアンサンブルが

2565
01:28:19,199 --> 01:28:21,600
これらの学際的な分野で進む方法

2566
01:28:21,600 --> 01:28:24,480
は、さまざまなバックグラウンドを持つ人々を歓迎することです。

2567
01:28:24,480 --> 01:28:25,679


2568
01:28:25,679 --> 01:28:27,920
あなたが本当によく知っているかどうかにかかわらず

2569
01:28:27,920 --> 01:28:30,159


2570
01:28:30,159 --> 01:28:32,560
、私たちのライブディスカッションに参加したり、

2571
01:28:32,560 --> 01:28:33,840
質問をしたり

2572
01:28:33,840 --> 01:28:37,199
、他の方法で参加したりすることを完全に歓迎します。

2573
01:28:37,199 --> 01:28:39,440


2574
01:28:39,440 --> 01:28:41,280
スライドの準備とこの

2575
01:28:41,280 --> 01:28:44,080
会話の素晴らしい助けに感謝します。

2576
01:28:44,080 --> 01:28:45,760


2577
01:28:45,760 --> 01:28:52,639
さようならさようなら

