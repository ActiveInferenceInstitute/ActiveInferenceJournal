SPEAKER_00:
all right welcome to active inference stream 10.2 it's february 23rd 2025 i hope we will stay online long enough through the storm for what should be a very interesting time so thank you everyone for watching i'll keep an eye out in the live chat let's jump right into it

All right, I'm going to start with a GitHub push and an Obsidian push.

So this is all going to be going to the repo Active Inference Institute slash cognitive.

Starting the stream.

GitHub push.

Then, over in Obsidian, I'm going to do an Obsidian push.

So that will be going live to the publish.obsidian.md slash active inference page.

And we will select the changed documents and the new 138 documents.

Okay.

Obsidian push going live.

GitHub push.

Double check it and then let's jump right in.

All right, we are in it.

So

This is gonna be a little bit wild.

There's parts that are in various and multiple states of functionality.

It's just too fun not to share though.

So wanted to update and follow up on the plain text series and continue to give people some checkpoints and milestones and open the space for their suggestions and contributions to some very exciting new ways of learning and applying active inference.

So let's start with the agenda.

Here's the windows that I have for reference.

I'm going to put the GitHub window away.

Maybe we'll push later in the stream.

There's going to be three main windows up.

There's going to be a browser where we have the GitHub repo and the Obsidian publish format.

And some other stuff's going to pop up in here later.

We have the Obsidian

window here where we can do uh force directed graphs and this was used also in the previous plaintext stream then we have cursor 45 running along mostly using agent mode with the clod 3.5 sonic

so the stream being the second in the plain text series is going to look at learning paths application guides and more things the stream will focus on advancing our understanding and application of active inference and cognitive modeling concepts through learning paths detailed application guides initially for rxinfer.jl julia package

and a generic things repo with a test suite that's almost too comprehensive, giving some challenges still, and other resources.

We're on YouTube and elsewhere.

The information is all linked here, and we'll see where CodeViz comes into play.

All right, we began with the GitHub push.

Let's check in first with the generic things.

Okay, the visualizations that were only minutes prior working just fine, of course, failed to work, but that's totally fine.

They really are all in there.

And I'm going to pop over to the things, generic thing.

This is seeking and several dozens of prompts and scribbles along the way towards a foundational implementation of active inference principles through a generic quote thing that can engage in message passing, belief updating, free energy minimization in a potentially interactive, nested, federated situation.

it's a little bit of a balance with the Markdown files because there's things that look good on the Markdown display of GitHub and less so in Obsidian and vice versa.

So let's look over to it in Obsidian.

The core idea here, as has been suggested and

indexed towards by many over the years is what is that generic active inference thing what is it that we can have that's such a flexible schema that it'll allow us to deal in continuous and discrete time continuous discrete state spaces single agent interacting with the environment multiple agents dissolving agent environment all these different kinds of ideas that are out there and then

where plain text is heading and this repo and this vector of collaborative research is with a lot of the pieces of information be they analytically former formal uh expressions be they in even probably evocative other plain text representations and eventually multimedia

then when we say implement variational free energy minimization or implement expected free energy minimization we can know that it's going to use retrieval augmented generation rag like approaches to use that information in the repo to structure the discussion

So a lot of the focus over the last several days, let's resume.

It's just in terms of what cursor is doing in the background.

I'm having it run the test suite again and again while... Let's see what these ones will not look like.

Having it run the test suite in the background in agent mode, where it's going to make changes, rerun the test suite.

And so I found that this kind of agent, semi-autonomous, semi-supervised test suite operation is super effective.

um but here's a few of the key elements so i wanted to have the capacity to have the generic thing of course interact with other things this could be alice and bob just having that classic conversation that quantum classic conversation or it could be agent environment or it could be multi-agent situations here's the concurrency diagram in terms of the message passing now

this was a very interesting topic that we'll probably return to when we get to rx inferred later is to what extent do we want to schedule the logistics of message passing because as it is with all this general active inference thing research it's like what is the least opinionated schema nothing

What is the most opinionated schema?

Well, it might be super effective for where it's effectively opinionated, but it's not going to have degrees of freedom.

So which are the degrees of freedom that we really want to engage with when, for example, reactive message passing in RxInfer, which we're going to return to, makes some of this message logistics possibly not necessary for the scheme?

But again, if it's a scheme that's maximally unopinionated, it's just an empty repo.

I focused on the message passing functionality where starting with three things that were connected in a linear chain.

with a lot of test functionality within the message passing architecture.

Hello, Jeff and Mounir.

Here is the logistics of the action perception loop in Active Inference.

Again,

one could remain even more unopinionated on the ordering of the action perception loop, the ordering of the OODA loop, and that's a degree of freedom that RxInfer allows us to relax.

But here I wanted a language independence scheme and just a draft, hopefully one where we may actually come to realize that we do want to make the schema already pre-adapted to reactive message passing,

However, if we relax the logistics here so that the reactive message passing can proceed

with the least opinionation, then that schema wouldn't be able to be implemented outside of a reactive message passing scheme because it'd be like, well, where are the logistics?

And even within a reactive message passing scheme, we still do need to have certain kinds of event-based injections in order to get the reactivity going.

So we have environment, sensory, internal, and action states.

external internal sense and action being the blanket States environment passes observations to sensory which passes a belief updating message okay here's the test suite being emitted so now this is what the autonomous test suite improvement looks like in cursor it pops out the test suite it is passing many of the tests but some of them are still failing

and it makes an HTML website that has a lot of useful information

a massive fractal test suite in fact and then just continuing to say all right fix it methodically agentically professionally comprehensively continue to run the test suite and go on and do what you can to fix it and so on those kinds of encouraging fractal prompts

so that for each of these core functional elements of the generic thing concept, the core, which we'll look at, free energy processes, the inference process, Markov blanket depiction, the message passing, which could be just the standard kind of message delivery, PubSub type, or it could be more federated setup being needed in a visualization script.

Here, then we have the test suite in the tests folder, which gives

these kinds of outputs.

So it's going to continue debugging while we look through.

From the internal states, expected free energy G across the Pi list of possible policies is calculated.

Then action is selected from the policy posterior.

And then that executed selection of action, the one hot action, gets passed back to the environment.

So there are other topologies and other ways to schedule the logistics of this message passing.

But again, to the extent that we're less opinionated about some of this stuff, we actually have like less and less of a schema.

So without just having a piece of blank paper or an empty repo, empty mind in front of us and say, well, this is generic active inference.

How do we put something into that void?

And more information, as with much of procedurally and probabilistically generated code, it has all kinds of quirks and features.

So it isn't high reliability code per se.

But it's awesome for what it is.

And it's a starting point for line by line manual investigation and curation, and also for further contemporary and future advanced code repair strategies.

So let's

let it continue doing the test suite it's not giving the visualizations it makes several dozen visualizations i hope that we can get there by the end of the stream somehow some way with several a dozen i know that there's like a kind of see it's a believe it element and certainly the visualizations provide

really important visual calibration and gut checks and accessibility for these processes that are happening um so we'll check back in we'll make sure that the autonomous test suite it'll stop after 25 agent tool uses i don't think that's needs to be that case but it is the case uh in this version 45 with this current agent but just so we remember

ensure that if and where possible, we'll let it continue what it's doing now, but then it'll eventually say, okay, that's all I could do right now.

That visualizations are made and prioritized and fully logged with full.

file name to terminal okay so we will uh return to the generic thing that's why starting to debug the generic thing was first on the agenda all right now to learning paths so this is in

Okay, just output another test report.

This is in docs, guides, learning paths.

Okay, so in the prior plain text 10.1 stream, we were having a ton of fun.

Let's look at it in both GitHub.

I mean, we have three ways of looking at this.

We have the

Cursor.

Local.

So this is the code editor version.

Then looking also locally is Obsidian.

and then emulating that file structure of the repo is the github but that won't be updated until the the push is made but we can we can make that push just for fun let's see if there was any visualizations made okay okay okay thing generic thing visualization let's just look at where it get so

Thing, generic thing, visualizations.

Okay, here we go.

Just to sort of confirm that the visualizations are happening in the debugging.

So here we go.

This is the action repertoire with summary as well as precisions on actions and some eigenvalue spectra on that.

This is the action repertoire

These are belief states and uncertainty.

These are output as part of the test suite.

So that's why each time the test suite is run, some of the timestamping differs.

Other outputs are just without timestamps, so they're overwritten.

Here's belief updating.

Not sure how accurately it's implementing Bayesian updating.

At least, though, the skeleton and the architecture is there.

Free energy histories.

Here's the free energy landscape from a parameter sweep.

Part of the free energy minimization test.

Looks like it's the same across tests.

Here's the hierarchy.

Some funky stuff happening with the labeling.

But a parent has child one and child two and then a grandchild.

here are the uh sensor to processor so that's from sensory to internal and then from internal to action patterns of input and output here's the triadic internal and blanket States for the thing

This is a two-thing message network.

Processor.

See, now it's adding more files as this next round of the test suite continues to occur.

More belief state.

distributions correlation heat maps summary statistics eigenvalues on matrices some very interesting possibilities and hello ender for spectral analysis on these random matrices uh temporal evolution this is a little bit of a kind of pseudo mondrian

asking it for full details give the full details the whole repertoire of the sensory the internal and the action states and those can be described as a through time process as a in time process temporal analysis looking at sensor processor and actuator these three rows

and their eigenvalue evolution.

Test belief updating.

Okay, another Bayesian free energy landscape.

This is a nice looking free energy landscape and roughly concording with what we would hope to see, which is on this manifold.

where the internal states like negative two and negative two for internal external states where they track each other they have a lower free energy and to the extent that they're off that manifold the free energy is higher

and a nice tetrahedral double zigzag message passing network okay so we're gonna let the autonomous debugging proceed while we look at the learning paths these learning paths are for people and for non-people

So the way this worked is, again, to pop back however many minutes to before where we saw from GitHub that the visualizations were being output.

We had all these different topics across the knowledge base, which were more like idea topics, just to kind of remind on this.

In the knowledge base, there are these folders, so augmented reality and the spatial web,

And when you are in Obsidian, the node that you're in, sometimes it's a little hard to find in a big network.

So here's Spatial Web.

And then what it's linked to are topologically connected and we can drag it around and see what comes along for the ride.

So there's like that Spatial Web and then connected to Active Inference.

So these are topics and these are like fractal wiki pages.

They could be line by line versioned and annotated and calibrated.

As context windows in LLMs increase and as the efficacy of putting very large knowledge corpuses into finite context windows also improves, relevance realization improves, there's really no downside to adding more.

including a plurality of perspectives on formalisms on qualitative points these are all good and exciting things so in the knowledge base folder i've added a few dozens of more topics since the last uh stream so some of these are let's see they look like they're okay it just sometimes it takes a little bit old linux laptop

doing what it can.

Connecting with a lot of Bucky Fuller stuff, which those going through the back catalogs will know has long been a possible, promising, exciting connection with synergetics and tensegrity and active inference.

But these are the knowledge base files.

Here's the mathematics folder.

So calculus, this could be just one very, very long, several hundred page

Textbook, it could be many textbooks.

It could be calculus one, or it could be calculus adding more adjectives and so on.

Category theory, same thing, complex systems.

And also it can get really specific like D-separation, which is a criterion for determining conditional independence relationships in Bayesian networks.

So going around and learning through each of these topics is like exploring and super fun.

and yes needing to be verified and checked and always possible to add but it's like exploring in a lightly synthetic intelligently peer-reviewed network um in the cognitive folder the approach that i took was to make a file called cognitive phenomena

And in Obsidian, you can choose first off what you want the highlight color to be.

So in the appearance, you can have accent color and it can be any color you like.

So I like red.

The files that are linked and exist are bright red, and then there's the dimmed ones which don't exist.

But a single click will make that file and just drop it into the top level of the repo.

So the approach I took with a cognitive folder was to several times iteratively prompt, okay, let's continue with the test suite.

No, we default stop the agent after 25 tool calls.

Please ask the agent to continue manually.

Please continue to run and fix and improve the test suite.

Okay.

So several times iteratively, agentically, methodically, comprehensively, with adding a little bit of spice from the sideline,

throwing in fly balls from left field and all that, added in different topics to this cognitive phenomena index file, and then said, now, comprehensively,

make the files that don't yet exist.

And so this can be iteratively done kind of like a two-stroke meta engine where build out the repo, index, add more cognitive phenomena.

And there's no end to how much specific detail could

tessellate down and then the other stroke of the engine is for the articles that don't yet exist make them and for the extant articles improve their dense obsidian style linking and improve their technical and analytical and applicability and accessibility and so on one note i'll just footnote this is all in english language but there's no reason why it couldn't be on mass translated in snapshot so that was the cognitive folder um citations this one is empty

really exciting collaborations with the gen 25 team and others so i look forward to including people and and documents in into this as well but for now there's no people and there's no papers um then over the last uh little bit i also added in a lot of entomology and epidemiology which is b studies related topics

and myrmecology, which is ant studies.

So then, later on, as may very well happen, when we say something like, make a generic thing specialized for applying to collective intelligence in ants.

that is very well primed and structured for the LLM to be able to make that adjacency and bridge

between what we already have about ants and what we already have about generic things so this is in the um there's also some fun topics like mathematical entomology which i don't really even know if i've heard of it done specifically that way but it sounds like it'd be a really exciting class or topic kind of connecting

population biology evolution ecology development spatial modeling cognitive science and behavior experimental design applications like for integrated pest management and bioregional stewardship and all these other things and then it's like here are five current research applications for mathematical entomology

People can have different perspectives on where or how they would value these research applications or how close they are from the bench to the bedside or whatever the ENSO equivalent is, but it's like something that can be added to.

And then also the knowledge base can include specific things like here where we've done a lot of discussion on the biofirm.

And this is like a documentation fractal about the biofirm addressing the kinds of topics and questions that anyone exploring the biofirm, whether they be inner developer, membrane communicator, or external, somehow relevant to learn across this.

It's like, how is active inference applied in the biofirm?

Well, here's an interactive article on that.

And this is all available online.

Like here's what it looks like online.

Here's how the biofirm is doing multi-scale nested ecological active inference and applying the free energy principle.

And then lines can be corrected or improved or added.

Um, but again, to get from a first pass to here so rapidly is so fun.

Okay.

So that's the knowledge base.

Now back to the learning paths.

This was a new piece over the last few days slash weeks.

So here, um, still debugging away, go get it cursor.

learning paths again over the years so many discussions well what's the best entry point or and it was sort of like the truth is a pathless land like krishnamurti angle you know what is the one entry point and sort of a recognition that there isn't just one there's not just one entry point to anything and so now

the interactivity of these tools is actually helping shorten the active inference cycle and time OODA loop timing to an absurd level for live custom generative educational material generation, which could be done one shot.

Like you could just go to your favorite LLM generative AI chat interface and say,

I like X, please develop me a curriculum for learning active inference.

So that's something that didn't exist five years ago or 10 years ago earlier on in learning active inference, but that's something where anyone with access to those chat interfaces can get that one shot.

But this is opening up with the plain text repo, the possibility for having

these co-constructed and legible incredible of different kinds learning paths and one person asked in the Discord so the learning path I forget which way they even asked like does it go from active inference to the area or or from the area it's like well paths go both ways so how about active

okay i'm just i think it just dropped for a second okay okay it should be back but let me know if anything in the chat if anything weird happens too many weird things are happening to even say but i think you all know what i mean by that so this active inference economics intersection can be used to take someone from a more generic active inference place

or to the domain, or it can be run in the other way.

I'm going to just drop the bitrate on the stream a little bit.

Right on.

So this is what it looks like in the local Obsidian.

So here we are.

And this connects, here's the Active Inference economic learning path.

Let's go over to where it is in... So now we're going to look at that.

I'm going to Ctrl A, Ctrl K, and let's use the Grok2 model.

Comprehensively, vastly add relevant sections and ensure linking style with extant files.

okay so here it is running through adding information to these sections we'll see if it adds any new sections as well okay ooh didn't like those parts

I think that in the coming versions of Cursor, they're going to be improving this and simplifying their kind of fractal product offering in a way, unifying the chat and the composer, or so I heard from Gary.

But we can add this.

It's just that I have it already running in the Composer with the debugging, which maybe we can just sort of... We kind of get the picture on the generic thing.

We get it that we can write megafractal modular test suites, and we can use that to do this autonomous driven development on different topics, and we'll return to it later in the stream.

So I'm going to start a new chat with the economics learning paths.

comprehensively develop this more, we want to use this for a convening that leads to a three-quarter co-learning course between an economics department and the Active Inference Institute so that all

backgrounds and familiarities with e.g.

math, biology, economics, etc.

are included and have many contribution avenues.

So then it's going to be doing this modification in Cursor.

that'll be live represented in my local obsidian and then we can push to github for it to then and and do the shift publish to have it also go live here so then the idea of these learning paths one idea of them is

biological learning path, like this URL or something very much like this URL is like a stable URL and it can continue to be developed out.

So instead of where we would be just a couple of months ago, okay, I'm kind of curious about this.

I really like to do pottery and embroidery and drawing.

And this is my favorite, you know, just like, where do you start with active inference?

Well, oh, well, here's the 2022 textbook and here's a textbook group.

That's awesome.

That's really hopefully exciting.

That's not every single last mile, let alone every last femtometer.

now there could be active inference myrmecology learning path.

So that's from somebody who's studying the generalized active inference topic, that can take them out to the myrmecological last miles.

And from somebody who is working on ants in the field, take them in towards, this is just one way of studying it.

Okay, it just laid it out and we'll say, yes, make all these additions to the economic learning.

Hello, reconfigurability trainer.

Yeah, anyone, if you have like a suggestion for another learning path or a fun thing to try,

Basically we're in the middle of act two of this stream where we're going to look at the learning paths, develop the learning paths a little bit.

Then act three is going to go over to RxInfer and explore some para documentation, some fanfic documentation that I made.

And then part four will be wherever the live chat goes.

Okay.

So here is the modifications that Cursor's making to this economics course.

So again, just, this is kind of a micro comment, but when we use the control K mode, it deleted large sections.

And then here it even recognizes through the iterative process.

I noticed some examples were deleted.

I'm going to add them back in.

Okay.

So that's happening.

so now this has been expanded into that multi-quarter course concepts okay so that's an example of improving a learning path it could be fractal

unrolled into any level of depth.

It could be, we have 15 minutes and it's a ninth grade classroom in this language and here's what they're most excited about.

Or it could be, it's a whole lab and there are five PhD students who are ready to spend five years on this topic.

Okay.

Munir has made a suggestion.

This is going to be

active inference observation learning path dot md so when you wrote human judgment and active inference especially the observer effect okay i'm not sure if you meant this to be a learning path but i read it so oh okay

and then followed up with, this is just a suggestion to see what active inference agent self-perception about its own belief model.

Okay, let's turn this into, please comprehensively continue to develop these ideas into a learning path.

it's in the folder with all the other learning paths so it knows a little bit about the structure and the template and all of that as a two-way street beep beep for those interested in such topics like as described and observation the art of observation the magic and possibility

of observation and active inference, parentheses, agents, and link obsidian style accurately.

But anyone can clone the repo, pull the Active Inference Institute slash cognitive repo, get it going locally,

Navigate over to this folder, make a new file.

We'll do a Myrmecology learning path too.

Okay, but here we're on this observation learning path.

So it's like kind of like phenomenology, kind of like ethology.

This learning path explores the profound relationship between observation, human judgment, and active inference.

It examines how the act of observation itself shapes our understanding and beliefs while connecting these insights to the mathematical framework of active inference.

The path integrates perspectives from cognitive science, philosophy of mind, and computational neuroscience to build a comprehensive understanding of how agents, both human and artificial, perceive, learn from, and influence their environment through observation.

Let's look over at it in the obsidian setting.

So here's the observation learning path.

Okay, here it is, little red dot.

Here's what comes along for the ride when we force drag it.

So let's see.

Foundations of observation, phenomenological approaches and scientific, interesting inner and outer observation from the blanket's perspective.

Oh wait.

active inference basics, free energy principle, predictive processing, core concepts, observer effect, quantum measurement theory, social observer effects, active inference and self-perception, belief updating and interoception, the art of observation, mindfulness and attention, advanced observation techniques, oh brother, pattern recognition, detailed perception, contextual awareness, advanced topics, computational models, applications and implications, projects and exercises,

Resources, essential reading, the mathematics of mind, active inference and agency by Carl Friston.

I don't know if that's a real paper, but it's like, we're at the point where it's like, does it matter?

Because we could generate, what would that be?

okay would you like to add specific content expand the resources yes vastly expand the sections related to exercises there should be so many accessible

tangible, everyday experiences that will relate to people's direct sensory and cognitive experiences.

It should be a vast list and one with many exciting starting places for inner, outer, and social exploration.

Meanwhile, let's just get the Myrmecology one.

Write a comprehensive learning path document for Myrmecology.

We are a team of enthusiastic quote, field researchers.

We are interested in

collective intelligence, parentheses, and also via... Okay.

We'll look at that in Obsidian in a second.

And also via nested active inference interested in the nestmate or the colony.

Make the learning path now, please.

Okay.

New chat.

All right.

So now while the Myrmecology path is unfolding, let's look at the observation one.

Thank you, Munir, for the suggestion.

That was awesome.

Okay, now we're looking back to the observation.

All right, here are the projects and exercises.

Let's see if any of these strike our immediate fancy.

Inner world exploration, sensory awareness exercises.

One, body scanning practice.

I know of one cat that's very interested in that.

two breath observation series three emotional weather tracking second section of inner world exploration cognitive observation exercises thought pattern recognition memory and perception studies attention direction experiments wow

Outer world exploration.

Part one.

Environmental observation projects.

Nature observation series.

Urban environment studies.

Object deep dive series.

Whoa.

Single object extended study.

Material property investigation.

Function form relationship.

Object lifestyle tracking.

Kind of a nod towards systems engineering.

Pattern recognition exercises.

Visual pattern detection.

Sound Pattern Analysis, Time Pattern Studies, Social World Exploration, Interpersonal Observation Projects, Non-Verbal Communication Study, Conversation Pattern Analysis, Group Dynamics Observation, Cultural Pattern Recognition, Ritual Routine Studies, Media Pattern Analysis, and Computational Analyses.

Okay, now we return to Mirmacology.

yes make the learning path much longer and include eg math diagrams artistic experience possibilities okay while that's improving a mere mycology path let me check the live chat okay reconfigurability wrote what are use cases that this can apply to

What do you think?

Looking forward to your thoughts.

Munir, thank you again.

Andrew, still catching up from start at 2x speed, but you're having the 1x experience of the 2x speed.

The economic and biological learning paths are very illustrative examples.

What about social science?

Curious how more specific and general...

impacts and outcomes yeah i mean one answer of course is i would look forward to you adding that file and the github repo uh making that social sciences or we can make a stub here okay let's let's um yes

add many ants related topics colon deep lore art culture and folkways amazing historical and accurate natural history ant anecdotes then we'll look at it in obsidian

Okay, reconfigurability.

Has the topic of underwriting been explored?

I know that you really like that, so let's do a learning path.

Active inference underwriting learning path.md.

This is a comprehensive...

Make this a comprehensive learning path to and from the concept of underwriting.

Give special thought and attention to the domain-specific ontologies that beginners

and experts across the active inference and underwriting domains may bring complexly to such an intersection.

Okay, looks good for the ants.

We'll come back there.

Bring complexly to such an intersection.

Please be vastly comprehensive about ontology, narrative, tools, etc.

for underwriting.

Structure this massively.

okay make this happen agentically comma methodically okay now while it's doing the underwriting learning path let's return to our myrmecology okay so it's off no this sometimes happens it's off by itself all by its lonesome but here's how you edit it in obsidian

double brackets and then start typing first it suggests it to be um there we go it just took a little bit now we linked it to Miramicology so now it's a red link because we already have that file Miramicology so now here here we are now

Here's myrmecology connected to Earth's system schema.

Interesting.

Okay, so let's see.

Active inference myrmecology learning path.

The learning path integrates myrmecology, the study of ants, with active inference and collective intelligence frameworks.

It is designed for researchers interested in understanding multi-scale cognitive processes in ant colonies from individual ants...

to colony level behavior.

See, this is the crux of the issue.

Later models and other knowledge niches will not fall into such a trap.

It's all about what you call the individual, individual ants presupposing it as nestmate, but it's like, okay, I'm somewhat startled.

I'm surprised.

From nestmates to colony level behaviors of ants,

incorporating mathematical, computational, and artistic perspectives.

So, math, computational, core concepts of myrmecology, active inference in social insects, research methods, field, laboratory, advanced, multi-scale, the individual level.

It's all good.

It's all good.

Nestmate level.

Single nestmate.

But now, this learning path...

can be used in generating other materials and it influences.

And so, even though it's an ontolinguistic perspective that I have, that haphazard usage of the term individual to refer to the nestmate, which would be equally inappropriate if it were haphazardly used to describe a colony, is what makes the colony's behavior seen as collective intelligence, implicitly supposing that the nestmate is the individual.

Whereas, of course, the individual, quote, nestmate, or just the nestmate, is, as with all cognitive systems, its own composition.

Okay, artistic creative dimensions.

Let's have the... Yes, please vastly continue to add relevant topics, sections, exercises, trainings, reconfigurabilities...

To this underwriting document.

Underwriting learning path document.

Okay.

Miramicology art.

Scientific illustration.

Technical drawing.

Ant morphology.

Colony architecture.

Behavioral sequence sketching.

Wow, this is very classic.

Environmental context drawing.

But if you look back in Holdo Blue and Wilson and all that, if not much, much earlier, this is what was there.

And some of those are still in use.

And now with generative AI, we could make it look like it was a different species and so on.

So kind of cool.

Digital art, creative documentation, photography and videography.

Wow, that reminds me of documentation.

Three, art science integration.

Installation art.

Public engagement.

Wow.

Diagram types to master.

Scientific diagrams, SD.

Mathematical visualizations, artistic representations.

And then we'll just add in category theory.

Extended practical projects.

Awesome.

Okay.

Mathematical appendix.

readings interesting here the super organism by hold open wilson now this is like a situation where the title of the book falls into the trap well if the colony is the super organism then that must mean that the nesme is the individual organism and that is the concept that has grasped the imaginations and constrained of many

Wildly, interestingly, historically.

Active inference by Parr, Pizzulo, Friston et al.

But it's like, here's where the linewise editing matters.

Parr, Pizzulo, Friston, 2022.

MIT Press.

There is also a textbook group about this book at the

Active Inference.

It'll take a second to load this at the Active Inference Institute.

Tools and equipment, additional

dynamical systems in social insect even the concept of calling the study of ants and bees social insects is like oh so then the non-social would be the nest mate and then the nest mates are hanging out and that's the composition of the social so it is baked in so deeply into the language of what is social and solitary insect what is individual and collective intelligence wow

and now we can look at it line by line career paths fun okay oh next steps join the local myrmecological society everywhere could have one all right let's go to the underwriting

Then this will be the end of this second phase.

Then we'll look at RxInfer documentation, para-documentation, fanfic.

And then we will go to phase four of the stream with just whatever else people have added in the live chat.

So thank you, Reconfigurability, for this suggestion.

And right now... Intrastream update.

I'm going to push that to GitHub.

Then in Obsidian...

shift period i set that it's you can set your own um keyboard shortcut changed and new 33 new publish so that means that the underwriting what's a

Myrmological community.

Yeah, reconfigurability, I don't know.

But myrmecology is the study of ants.

So the myrmecological societies would be like local ant enthusiast researcher learner chapters.

Okay, but let's look at it.

So now we've pushed it to Obsidian Publish.

So let's just look at how it looks in Docs.

guides learning paths here's underwriting and then now over here here's underwriting so i'm going to put this link in the chat reconfigurability there you go all right this learning path provides a comprehensive guide to understanding the intersection of active inference and underwriting designed for practitioners from both domains seeking to bridge these fields some of whom might be in the live chat i don't know

prerequisites, and this is where it could link again more densely.

I'm going to have it do this in cursor.

Comprehensively link obsidian style to relevant file names for eg prerequisites and everywhere possible.

So prerequisites, probability theory, risk assessment, basic machine learning, statistical modeling.

You know, again, somebody could say, well, I want there to be a, in the phase space of math and computer science, all the quadrants can be explored.

It could be a no math, no computer science version.

It could be math, but no computers, index card style.

It could be computers and no math, Gen Z style.

No, I'm just kidding.

It could be math and computer science together.

Okay, domain, the underwriting domain ontology.

This is where the domain experts can say, okay, what else needs to be added here in terms of the core concepts, key processes, Act-Inf domain ontology.

This draws on the model's training, which is probably also on earlier versions of the Act-Inf ontology, but also...

The files, okay, now it has upgraded all of these.

So now this is cool.

So it upgraded all of these into the Obsidian linked format.

So save that.

Now in Obsidian, I'm going to do shift period.

Changed.

Here's where the underwriting learning path was changed.

Publish it.

Now, wow.

So cool.

incredible offering by obsidian their software and their sync feature just it it happened live didn't it so now we can look at it in our local setup here's now what gets dragged but previously it was not connected to anything but now all of these and then these ones that are dimmed these ones could be added but now we oh probability theory oh

Here's what probability theory is.

Oh, what's a sigma algebra?

Oh, well, you know, that could be linked.

But back to the underwriting.

Key processes.

Each of these could be documented.

And then fundamental concepts for active inference.

Like, yeah, what is variational inference?

Open that up in a new tab.

Oh, it's a method for approximating complex probability distributions through optimization.

Okay.

Okay, intersection integration, bridging concept, risk modeling, decision-making, and learning systems.

Application areas, automated underwriting, portfolio management, claims processing, tools and technologies, technical stack.

Okay, learning progression, level one, understanding basic concepts.

So underwriting principles, again, this could be, it says the link underwriting principles does not exist, but now in here,

In the relevant location in knowledge base, add and link to and from here, the quote underwriting principles file, make it accurate, comprehensive, applicable, and more.

Okay.

So understanding basic concepts of underwriting, active inference, and risk assessment.

Tool familiarizations, integration, advanced implementation.

We could think, oh, what about multi-agent modeling in this situation?

Just add it.

Foundations of risk assessment.

Now it's getting in another level of detail.

Active inference fundamentals, practical implementations.

Okay.

Life insurance underwriting, property insurance, health insurance.

Oh, wow.

Advanced topics, system integration, hands-on, risk calculator, policy pricer, automated underwriting system, four to six weeks.

We could do it in four to six hours.

Portfolio optimizer.

That one's tough.

Three to four weeks.

Sounds good.

Certification path.

Level one, level two, level three.

Industry integration, internship program.

Junior underwriter, technical specialist, mentorship program, continuous learning, resources.

Okay, now here's the underwriting principles.

So now I'll push it in Obsidian.

Here it is in the new guides, concepts, underwriting principles.

Okay, so it was pushed.

Now, remember earlier, it said that page doesn't exist and it didn't.

But now it's going to be, see where it mentioned it, underwriting principles.

Now it's in purple.

So now here are the underwriting principles.

Utmost good faith.

Insurable interest.

Indemnity.

Proximate cause and risk pooling.

Wow.

Uberima Fides.

But this could just be semi-manually or fully automated or anywhere in between continue to unfold.

Oh, risk assessment.

We don't have that one.

Now comprehensively add and link the, quote, risk assessment file.

This will be the last part on this, and then we'll move to RxInfer, and then anything else that people suggest.

Okay, but here we go.

Risk assessment, it doesn't exist.

Okay, now it's going to write that.

uncertainty assessment yeah okay risk assessment written now even though it's probably going to continue to update it we'll push on obsidian so current state we click on that the link does not exist okay

So here's the old version of the underwriting learning path.

Now here's one of the issues.

Again, brought up a little earlier, okay?

New, select it, publish it, published, done, okay.

So here, current version, risk assessment does not exist.

So it's like, we made it in cursor.

The prompt was just add and link risk assessment.

Now reload the page.

This is the, on the, I'll put this in a live chat.

Now risk assessment.

Here's a whole article.

Risk assessment is a systematic process of evaluating potential risks and their impact in underwriting and insurance contexts.

foundational concept bridges traditional underwriting principles with modern active inference approaches to uncertainty quantification and decision making it totally does wow so that was

fun thank you and that was a structured and structuring educational journey as we explored a little bit about learning and cognitive modeling all right now last section here um for the for the rx and for learners and practitioners and then section four would you use like any other

healthy whimsical fun suggestions all right so here's what happened in the rx and first section okay all right um well rx infer is

a software package being developed by our colleagues and it is updating and developing in very exciting ways.

We're really happy that we're partnered with them and on this co-learning journey.

And recently they have done a big update on their documentation as part of the version 4.0, 4.01 now release.

And what's really cool about this documentation site, other than the fact that it has an LLM integration with Gemini, so you can chat with it there, but also this whole documentation is a plain text file repo, plain text repo, in the RxInfer repository.

This docs, and this is a very professional software codery way to do this, these documents are a website, but also the source code for the documentation, not just the code, is also available in the repo.

So what I did is I took their SRC, so here's source for SRC, right here.

I did it within the last couple of days, I think.

And so here's those same files.

So I just in RxInfer repo online, I just downloaded their whole documentation and I dragged it in to docs.

Then we're about to go through some super fun, you know, we'll see what names work.

You know, is it paradox because it's off to the side of the other docs?

Is it heterodox because it's different than their documentation?

Is it fanfic because I'm just a fan and learner and just looking to make some fun documents that help apply and understand RxInfer?

I don't know, but here we are.

let us go to README.

So this is the README of RxInfer.

So this is with their SRC.

Okay, back to here.

We're in implementations.

a guides implementations the the you know all these folder structures can can be evolved this is all just kind of like a box as we learn some emerging practices for what's happening here um but like we we will do more and different and better so everyone is welcome to learn and contribute and raise issues in github and do more

So here it is, is the docs.

Here is where I copied in the SRC.

So they already had this open source repo with documentation.

I brought it in.

Then over in cursor, as always, just like re-synced the cursor repo, just to double check.

This was when I was doing this.

And prompted something like, here, make an Obsidian linked, read me,

just to help totally understand RxInfer.

So here's their summary.

And that summary exists in our repo too.

But now here we are with the obsidian linked style with all these difference.

Loopy belief propagation.

We've been there.

and then i kept several you know some of these code examples especially it's like let us test them make sure that they work and so on but then and then we'll look through these pages right now because it was like um what's a big topic in um rx infer what's a big motivator well doing reactive message passing so here's the reactive programming

Data sources, reactive layer, and then the inference layer.

Core concepts, stream processing patterns.

Error handling.

Performance considerations.

These are all plain text.

These are mermaid mind maps.

So update frequency.

We can just add timing.

And now timing is right there.

And then when we push to GitHub, it'll be updated because this is just a markdown.

And then when it's published to Obsidian Sync, it'll just be there as part of the diagram.

Message passing in RxInfer.

So just each time I was like, huh, what would that wiki article be?

Or what would that knowledge node be?

So let's just look through them.

We have active inference examples.

and then follow along in red with where.

Okay, so here we are.

Active inference examples were linked out to, of course, the big heavy active inference one over here.

That's probably real active inference, yep.

And then a bunch of other ones around here.

So these are, especially if these can be validated and verified that they really run as we expect them to with the app models, that would be awesome.

But these are just, oh, what are active inference examples in RxInfer?

Now, they have that in the examples in their documentation.

So if you, now we're on their website, examples, examples.rxinfer.ml.

and then here's like the active inference mountain car so a good cursor a good llm if we said make a new and we'll just let's just do this right now just to test it rx infer mountain car readme.md okay new chat here write a

comprehensively professional readme specifically copying and invoking and building upon rx infers treatment of the classic mountain car setting use obsidian links densely

ensure that all analytical and RxInfer syntax threads are fully unpacked.

Because in the docs folder, in the examples, it has that full mountain car.

It has the mountain car.

but now it's going to write an obsidian style read me about the mountain car.

Okay.

Advanced systems engineering.

So this was just for systems engineering guidebook.

Like,

The LLMs are trained on systems engineering documents, just like they're trained on a variety of other technical documents.

So here's different stages of model design and architecture and lifecycle design from a systems engineering perspective.

And then this is the advanced systems engineering guidebook, I guess.

Okay.

Let's look at the mountain car.

Here's the RxInfer mountain car readme.

okay that part could some stuff again it renders really well in github but not in local obsidian so so you know but then that's where we get the meta docs that's like we like this kind of linking and that kind if it's called this or if it has this template we like that if it's like that we like this okay so we could check does this this looks pretty similar

Does that actually bring in a probabilistic model?

Okay.

And then it was like, we already have that page, but if we didn't, we could say, write that page, go back.

Inference constraints, free energy components, active inference framework, optimize the expected free energy.

Let's link active inference there.

Double bracket, active inference.

So now it's a red link because we already have that page.

Policy selection.

Oh, what is policy selection?

It's like middle click.

How do we think about policy selection in active inference?

Well, we use expected free energy.

What are the expected free energy components?

Well, one decomposition's epistemic and pragmatic value.

What variable is used to apply that?

What notation or what letter is it associated with?

Sometimes with the E and so on.

Okay, and then here's the running.

Like this just generated this obsidian style plus, plus, plus from the veridical mountain car example that the developers provided.

Yes, add many more sections as relevant, including an intro section that sets up a wonderful story as to why we're solving it.

This way.

Okay, back to the RxInferDocs.

So compiler pipeline.

pending experts and others questions and comments, but this is very fascinating to look at how it digs into the documentation and the code itself

and pulls out some topics that even in the year plus of learning about this package, we haven't necessarily gone too much into detail, but this could help a lot with automated code production and improvement and also onboarding and better understanding of performance, all these different features.

So that's the compiler pipeline.

Code generation.

All right.

accept it back to the mountain car imagine standing at the bottom of a steep valley with an underpowered car your goal reach the summit the catch your engine alone isn't strong enough to climb directly this is the classic mountain car problem but today we're going to solve it in a fundamentally different way not through traditional reinforcement or optimal control but through the lens of active inference

why active inference and it's like and then the show is on the road okay um execution engine of rx infer here's what it looks like over in github that top section looks like that in the obsidian program locally but it looks like this

on GitHub, which is epic.

Execution engine.

Message flow architecture.

Optimization flow.

Message passing.

Message scheduling.

Cool.

Factor graphs.

Key topic.

So this is a display kind that doesn't work in the GitHub, but let's look at it over here.

Let's see if it looks fine.

Okay, this one has an error.

Let's see if it can fix it.

Factor graphs.

We are getting some diagram and markdown weirdness.

and failures to render properly on github please expand improve obsidian dial link and ensure total comprehensive representation of rx confer technical contents within properly appearing diagrams and etc

Okay.

Free energy.

How is free energy playing a role in RxInfer?

How is it calculated?

That's what this article is.

And then it's like, well, this is like very technical.

That's a good thing.

It serves as a concise linkable place.

And also it can be entered into with learning paths.

Write me a learning path to get to free energy in policy inference as planning in RxInfer for an active inference agent.

And I'm coming from this perspective.

How does free energy play a role in message passing?

Here's perception belief updating with variational free energy.

and then action inference with expected free energy and where they come together.

That's epic.

Message passing and active inference.

Some of this could be low key fabricated, but having the RxInfer docs themselves there gives a scaffold.

And if it was ambiguous enough to need so much interpolation, that's a sign to improve the underlying documents

and to improve these paradox as well um more details this one i just said write a follow-up give more details on how free energy plays a role in message passing okay here okay it made the improvements to the factor graphs article let's return to factor graphs

This part still looks like it's an error.

Let's see if it saves it.

Push it to GitHub.

Unable to render rich display.

Reload it.

new version just happened now still doesn't work but people kind of oh wow that's so cool that's factor graph style um getting started how do you get started in rx infer well here's conceptual prereqs here's the installation this looks good

Basic concepts, your first model, coin toss.

That's what we did too.

Visualizing, using plots.

More advanced features, working with constraints.

Custom distributions, this is getting into some pretty advanced examples.

Message passing, the concept.

Model macro.

This is the at model macro paradigm.

This is because this is kind of the core interesting syntax that opens up an incredible world of semantics.

The at model macro automatically converts model specifications into factor graphs.

It uses this at model style syntactically

to develop these enormously performant reactive message passing setups, which can be used for batch learning or for streaming models, can have constraints applied in any which way, and enables reactivity to occur with this kind of subscription-based approach.

AST, we could explore more about that.

Add another comprehensive

rx infer documentation page fully linked about ast abstract syntax trees it's kind of an arcane topic but it matters model specification here's how you specify a generative model in rx infer here's fan fiction interactive documentation about how you do that

um rx and first stack these are some visualizations that I don't even know if they've existed before new ways and not necessarily even accurate ones but sometimes on the path towards utility and learning of the model specification through the app model macro here's the ast transformation that's the abstract syntax tree we're about to look at that page that is being written right now

Yes, add vast comprehensive sections to AST page with analytical details, diagrams, connections.

Okay, so the app model is specified syntax wise.

It's transformed using this abstract syntax tree.

From that AST transformation, the factor graph is compiled.

Rules for message passing are compiled.

Optimization passes are performed.

We could look in more detail what are those.

Then with the message rules just in time prescribed and the optimization passes of some kind, we could explore situations where they are and aren't coming into play.

Then there's this execution

engine that actually runs on those rails as constrained and specified through message passing node local message passing free energy minimization and there's some memory management too okay what is ast parses the code extracts the variables identifies the dependencies generates a graph optimization eliminates dead codes merges optimizations and optimizes memory now

We'll accept the AST article.

Let's jump over to this new AST processing article.

Abstract syntax trees play a crucial role in model specification within RxInfer.

The app model macro transforms Julia code into an AST, which is then processed to generate factor graphs for probabilistic inference.

AST type system is based on type theory principles.

Here's type-theoretic treatment of AST processing.

Here's how it connects to Julia type.

Abstract distribution, continuous or discrete.

Two examples of continuous distributions, normal Gaussian and the gamma.

message passing on ast memory management in ast and here's how variational inference is done in rx infer here's streaming inference in rx infer okay um

let's look at one quick code viz okay meanwhile um that completes our primary agenda let's reload this window um at this time if anyone has any requests or ideas write it

And I will stick around for a few more minutes.

Otherwise, I hope this has been interesting, useful, possibly relevant.

Here, CodeViz is doing its own indexing.

All right.

Let's do... Okay.

I'll just make one... Okay.

Thank you, Reconfigurability.

Okay, Munir has written one suggestion.

I'm just going to show how I'm doing that.

I know more and better and different and relevant for you.

Okay.

This is like, wait a minute.

Like, where is everything?

Okay.

This is going to be... ActiveInference...

okay and then um we'll just call that um path for a second when you wrote I have another topic experience as a method by Karl Popper and the least action principle free energy minimization theory of mind I'm curious to see the output as a learning path all right we'll call this experience as a method or the paparian learning path active inference

experience do we want to make this like jimi hendrix style experience method path develop this learning path with the stated topics comprehensively

including some Jimi Hendrix-like stylings.

Quote, are you experienced?

Okay.

Check out CodeViz.

Okay, still, the codeviz sometimes takes a while.

I know that they're aware of that.

Let's just see if it gets there by the end of the stream.

Okay.

Add comprehensively Obsidian linking to extant files and Karl Popper

philosophy everywhere possible active inference pragmatism learning path dot md this is kind of fun here's just doing tab auto complete style and you can get

Do we want to complete that one?

I don't know if it's the time.

But we'll, okay.

So let's do the Paparian.

Okay, that's the experience method one.

Here in the pragmatism path, write vastly and comprehensively related to American pragmatism and operationalism.

Okay, let's look at the are you experienced learning path.

Are you experienced?

A journey through active inference and scientific method.

Knowledge speaks, but wisdom listens, Jimi Hendrix.

I may be wrong and you may be right.

And by an effort, we may get nearer to the truth, Karl Popper.

Okay, experience as method.

Walking through the purple haze of knowledge.

Karl Popper's epistemological revolution.

Practical experiments.

Problem.

Tentative solution.

Error elimination.

New problem.

Yes, add more information on the history of American pragmatism.

Then, we're going to queue up this next one.

Returning to the experience method, add a lengthy section contrasting the Paparian Hendrix epistemology with the Hegelian synthetic dialectic method and Kant.

okay we'll return to that one after let's do a little pragmatism metaphysical club absolutely cambridge beginnings holmes wright james pearce emerson classical period 1878-1920 pearce theory of signs

James, the golden age, 1920 to 1940, mid-century transitions, logical empiricism, contemporary Renaissance, interesting, foundations of thought, operationalism and scientific practice, Bridgman, indeed, it really was that way.

Whoa, neo-operationalism, cognitive operations, I'm sure cognitive security, act in through the pragmatic lens, social dimension,

so cool so cool okay okay let's go back to the experience as method see if see if that hegelian kantian element has a jimi hendrix song that that reflects it okay philosophical crossroads bold is love critical as truth are you experienced

have you ever been experienced well i have jimi hendrix experience is not what happens to you it's what you do with what happens to you karl popper whoa hegelian dialectic the purple haze of spirit kantian foundation transcendental structures paparian revolution electric experience synthesis and contrast the wind cries method

Wind cries merry.

Integration with active inference all along the watchtower.

Kantian categories, predictive models.

Hegelian development, hierarchical learning.

Paparian testing, error correction.

The story of life is quicker than the wink of an eye.

Jimi Hendrix.

The growth of knowledge proceeds from old problems to new problems.

Karl Popper.

Remember, like Hendrix's mastery of the guitar and Popper's pursuit of truth, understanding these principles comes through practice, experimentation, and bold exploration.

Let your mind be free to experience, predict, and learn while maintaining critical thinking.

Okay.

Here, we'll just do one final one.

Ensure that this active inference, so I'm gonna type this out, generate it, probably read it.

If it looks funny and interesting, then I'll read any final comments in live chat and then that will be the end.

Ensure that this active inference learning path weaves delightfully around the who's on first famous dialogue

the topics of active inference and free energy principle should be comprehensively and technically conveyed amidst a rarefied soup of baseball lore timeless comedy

Wonderful science.

And the occasional appearance by the ghost of John Nash.

What?

Wonderful dialogue.

Intergenerational family dynamics.

Okay, that sounds good.

Deep philosophical questions of identity, agency, and the nature of reality.

As...

interpreted in a question question 20s golden quote golden era of American culture in technical terms that are accessible to a wide audience ensure detailed baseball lore

and active inference all along the every way.

New chat.

Make this happen.

Structure the learning path itself as who's on first, not just in semantic referent.

CodeBase, so you still gather 11 minutes in, still frozen.

So what is this CodeBase?

This is a large repo, so I kind of get it.

Vastly expand, vastly expanding this learning path, ensure technical

math sections and topics and diagrams and obsidian linking and long long long conversation conveying so much lore and information comma it really does boggle the minds yeah

Cursor indexing works really well.

CodeVis, not quite there for large databases yet.

Okay.

Thank you, Jeff.

Thank you, Andrew and Munir.

Yeah.

We'll see where this gets us.

If it's like funny and interesting, possibly read it, then that'll be it.

Welcome to a unique... Okay.

Active inference learning path.

Who's on first?

Introduction.

The perfect game of mind.

Welcome to a unique exploration of active inference and the free energy principle.

Structured as the immortal who's on first comedy routine.

Just as Abbott and Costello's routine plays with language and expectations, we'll use their format to unpack the fascinating world of how brains make reality.

There we are.

For those who like a little topological side with their baseball comedy.

All right.

Okay.

I don't think I'm going to read this whole thing, but it's clearly funny.

Let's just see what happens.

Act one.

Tell me about active inference.

Okay.

Brain's predictions.

Technical interlude.

First base.

You're saying there's someone called prediction on first.

Who's on first?

I'm asking you, who's making the predictions?

Deep dive, second base, strategic play.

Historical baseball analogy.

Just as Bill James revolutionized baseball with sabermetrics, Carl Fristen transformed neuroscience with a free energy principle.

That should be an obsidian link.

Okay, whoa, sensory input.

Prediction, who?

Free energy, what?

Action, I don't know.

It's like the OODA loop, but for comedy, but for the 1920s, but for baseball, but for future audiences.

Third base, action selection.

The outfield, extended concepts.

Okay, a little bit of dialogue, a little bit of chatter, a little bit of peanut gallery.

Practice drills.

Who's making predictions?

Predictive processing exercise.

What's the free energy?

Mathematical workshops.

I don't know is on policy selection.

Here we go.

Historical context.

The 1920s golden era.

Baseball statistics meets brain statistics.

That is super cool.

Add many more connections about baseball statistics and brain statistics.

give PhD dissertation level and length about how statistical parametric mapping, SPM, foresages even the future of advanced baseball analytics.

SPM, it could be, you know, posterior probability maps for where the ball is pitched or hit.

Okay, baseball statistics meets brain statistics.

Babe Ruth's batting average as a probability distribution.

Miller-Huggins strategy as policy selection and the 1927 Yankees as a predictive processing machine.

Cultural integration.

Advanced topics, the perfect game.

Statistical bullpen.

Notes for learners.

Okay, whoa, see it just changed while we're in it.

Okay, now here's the statistical SPM meets sabermetrics.

Hey Abbott, these numbers are making my head spin.

That's because you're looking at them like box scores.

You need to think about them like brain maps.

Gaussian random field theory in baseball and brains.

It literally is that way.

Advanced analytics, the convergence, spatial normalization and player normalization.

Literally, it is that way.

Temporal basis functions, pitch sequencing effects, fatigue modeling.

Statistical methods.

It's like, I feel like people are ready for SPM applied to baseball, but baseball applied to SPM is evergreen.

Okay, I'll read this last comment and then any other live chats and then it's over.

Remember, just as Abbott and Costello's routine seems confusing at first, but has a clear internal logic, active inference might initially appear complex, but follows coherent principles.

Keep practicing, and soon you'll be running the bases of cognitive science like a pro.

Ending of number 010.2.

Push the GitHub.

Then in Obsidian, push the new and the updated.

Done.

Close Obsidian.

Okay.

Ending of 10.2.

Close it.

thank you claude and so many ways we could continue from there but that's where i'll call it for tonight so i'm glad that the internet held up mostly well enough to make this happen looking forward to where people take it all from here so

Till next time, peace.