1
00:00:07,020 --> 00:00:10,080
みなさん、こんにちは

2
00:00:10,080 --> 00:00:13,559
。2022 年 9 月 1 日

3
00:00:13,559 --> 00:00:17,640


4
00:00:17,640 --> 00:00:19,380


5
00:00:19,380 --> 00:00:21,300
です。モデル ストリーム番号 6.1 でここにいます。分岐

6
00:00:21,300 --> 00:00:24,180
時間、アクティブな推論、理論とその

7
00:00:24,180 --> 00:00:25,439
一般性

8
00:00:25,439 --> 00:00:27,260
について説明します。プレゼンテーションに

9
00:00:27,260 --> 00:00:31,080
続いてディスカッションを行いますので、よろしくお願いします。

10
00:00:31,080 --> 00:00:33,300
アリとジェイコブが参加し

11
00:00:33,300 --> 00:00:36,059
てくれて、他の人は

12
00:00:36,059 --> 00:00:37,140
ライブチャットで質問

13
00:00:37,140 --> 00:00:40,860
を追加してくれました。ジオフィリア チャンピオンズに余計な苦労はしませ

14
00:00:40,860 --> 00:00:41,879


15
00:00:41,879 --> 00:00:44,040
んでした。参加してくれて本当に

16
00:00:44,040 --> 00:00:45,719


17
00:00:45,719 --> 00:00:48,000


18
00:00:48,000 --> 00:00:50,399
ありがとう。

19
00:00:50,399 --> 00:00:52,140
今日

20
00:00:52,140 --> 00:00:54,180
はこのような機会があったことを非常に

21
00:00:54,180 --> 00:00:55,680
うれしく思いますので、今日は

22
00:00:55,680 --> 00:00:58,680
分岐時間のアクティブな推論について

23
00:00:58,680 --> 00:01:00,059
お話しします。基本的に

24
00:01:00,059 --> 00:01:03,239
はアプローチのまったく異なるバージョンです。

25
00:01:03,239 --> 00:01:05,700
最初の理由はダッシュ パスです。2 番目の理由は

26
00:01:05,700 --> 00:01:08,880
ベルギーのフィルタリングを使用したもので、3 番目の理由

27
00:01:08,880 --> 00:01:12,420
は 信念伝播を

28
00:01:12,420 --> 00:01:15,540
使用して、モデルにいくつかの

29
00:01:15,540 --> 00:01:18,540
観察といくつかのアイテム状態

30
00:01:18,540 --> 00:01:21,600
を

31
00:01:21,600 --> 00:01:25,439
含めることができます。  ost Acosta Mike

32
00:01:25,439 --> 00:01:28,740
Josh と Hogwart Bowman です

33
00:01:28,740 --> 00:01:30,659
ので、まず最初

34
00:01:30,659 --> 00:01:33,360


35
00:01:33,360 --> 00:01:37,700
にアクティブな推論のコア ID であるアクション認識サイクルについて少しお話ししたいと思います

36
00:01:39,860 --> 00:01:43,259
。2 つ目は

37
00:01:43,259 --> 00:01:46,020


38
00:01:46,020 --> 00:01:48,540
エージェントです。たとえば、環境がエージェントに観察を提供します。

39
00:01:48,540 --> 00:01:50,700


40
00:01:50,700 --> 00:01:52,860
次に、エージェントはこの

41
00:01:52,860 --> 00:01:56,159
入力を取得して推論を実行する必要があります。

42
00:01:56,159 --> 00:01:58,020
入口プロセスの目標は、

43
00:01:58,020 --> 00:02:00,479


44
00:02:00,479 --> 00:02:03,899
X と Y の黒人男性

45
00:02:03,899 --> 00:02:06,060
の位置や、 ゴーストまたは

46
00:02:06,060 --> 00:02:08,038
関連する可能性のある情報が何であれ

47
00:02:08,038 --> 00:02:10,500
、それらの状態に基づいて

48
00:02:10,500 --> 00:02:13,040
、計画とアクションの選択

49
00:02:13,040 --> 00:02:16,020
とアクションの選択

50
00:02:16,020 --> 00:02:18,300
を実行できます。アクションを実行する方法、おそらくアクション

51
00:02:18,300 --> 00:02:20,819
がその環境に供給され、

52
00:02:20,819 --> 00:02:24,239
別の観測を生成し、

53
00:02:24,239 --> 00:02:27,000
このサイクルが続くまで続きます。

54
00:02:27,000 --> 00:02:29,400


55
00:02:29,400 --> 00:02:31,819
コアができたので、トレイルは終了します

56
00:02:31,819 --> 00:02:34,560
北極推論のコアとなるアイデアが

57
00:02:34,560 --> 00:02:36,720
あります。これは行動知覚サイクルです

58
00:02:36,720 --> 00:02:38,580
能動的推論については

59
00:02:38,580 --> 00:02:40,140
もう少し詳しく説明します

60
00:02:40,140 --> 00:02:42,360
深度 基本的にアクティブな推論はエージェントに関するものであり

61
00:02:42,360 --> 00:02:46,200
、このエージェントが作成するモデルを備えて

62
00:02:46,200 --> 00:02:49,319
いるエージェントに関するもの

63
00:02:49,319 --> 00:02:51,959


64
00:02:51,959 --> 00:02:53,700
であり、前述のように、画面の下部に表示され

65
00:02:53,700 --> 00:02:56,700
、これらの観測

66
00:02:56,700 --> 00:02:58,019


67
00:02:58,019 --> 00:03:00,540
はマトリックスを介して島の状態に依存するため、

68
00:03:00,540 --> 00:03:01,500
マトリックスになります。

69
00:03:01,500 --> 00:03:03,420


70
00:03:03,420 --> 00:03:05,700
考えられるラテン状態ごとに観測値の分布を提供

71
00:03:05,700 --> 00:03:07,019


72
00:03:07,019 --> 00:03:10,140


73
00:03:10,140 --> 00:03:12,540
します。

74
00:03:12,540 --> 00:03:14,760
初期項目の

75
00:03:14,760 --> 00:03:17,879
状態に対する事前のパラメーターを含む G ベクトルと、環境の遷移がどのように機能するかを説明する B マトリックスもあります。

76
00:03:17,879 --> 00:03:20,280


77
00:03:20,280 --> 00:03:23,760
基本的には、与えられた方法を説明します。

78
00:03:23,760 --> 00:03:27,180
状態とアクションは

79
00:03:27,180 --> 00:03:28,080


80
00:03:28,080 --> 00:03:30,060
、時間 t + 1

81
00:03:30,060 --> 00:03:33,720
で新しい状態を取得します。私が言ったように、アクションがあるか、ここ

82
00:03:33,720 --> 00:03:37,680
にポリシー変数があり、このアクション

83
00:03:37,680 --> 00:03:40,440
変数またはポリシー

84
00:03:40,440 --> 00:03:42,959
は、ガンマと呼ばれる精度パラメーターに依存し、

85
00:03:42,959 --> 00:03:47,040
影響を確認します。 エージェント

86
00:03:47,040 --> 00:03:49,500
のポリシーがどの程度確率論的または決定論的であるか

87
00:03:49,500 --> 00:03:52,200


88
00:03:52,200 --> 00:03:53,340
、

89
00:03:53,340 --> 00:03:56,760
ここで事前オーバーアクションがどのよう

90
00:03:56,760 --> 00:03:57,959
に定義さ

91
00:03:57,959 --> 00:03:59,879
れているかを

92
00:03:59,879 --> 00:04:02,400
確認します。  ter であり、ガンマ

93
00:04:02,400 --> 00:04:05,239
を引いたソフト最大関数として定義され

94
00:04:05,239 --> 00:04:07,980
ます。プレシジョン パラメーター

95
00:04:07,980 --> 00:04:10,140
に期待される

96
00:04:10,140 --> 00:04:12,360
自由エネルギーを掛けたものであり、特定のポリシーの期待される自由エネルギー

97
00:04:12,360 --> 00:04:15,239
は、基本的に

98
00:04:15,239 --> 00:04:18,060
将来のすべての時間ステップの合計

99
00:04:18,060 --> 00:04:19,858
です。 タイムホライズンである大文字のチームへの最初の時間ステップで

100
00:04:19,858 --> 00:04:23,040


101
00:04:23,040 --> 00:04:24,479


102
00:04:24,479 --> 00:04:27,000
あり、各タイムステップについて、予想される自由

103
00:04:27,000 --> 00:04:29,220
エネルギーは、予想されるコストプラスxiaomiエクイティとして定義されます。

104
00:04:29,220 --> 00:04:31,560


105
00:04:31,560 --> 00:04:34,020
予想されるコストは

106
00:04:34,020 --> 00:04:37,320
、予測ポストトライアル

107
00:04:37,320 --> 00:04:39,360
または将来の観測

108
00:04:39,360 --> 00:04:42,120
との間のK Divergenceです。 しかし、事前の

109
00:04:42,120 --> 00:04:44,400
選好は

110
00:04:44,400 --> 00:04:48,600
、エージェントが観察したい観察を

111
00:04:48,600 --> 00:04:51,479
定義し、これは予測事後

112
00:04:51,479 --> 00:04:54,360
がその観察の可能性を定義する

113
00:04:54,360 --> 00:04:56,160
ため、私たちがしたい

114
00:04:56,160 --> 00:04:58,139


115
00:04:58,139 --> 00:05:00,180
ことは、学習したことを実際に観察できるように、分布間の発散を最小限に抑える

116
00:05:00,180 --> 00:05:01,979
ことです

117
00:05:01,979 --> 00:05:04,500
わかりました。第 2 項は、状態

118
00:05:04,500 --> 00:05:07,320


119
00:05:07,320 --> 00:05:09,840
の指向性事後の下で予想される

120
00:05:09,840 --> 00:05:11,039


121
00:05:11,039 --> 00:05:12,600
尤度マッピングのエントロピーに関するものです。  g 指向性

122
00:05:12,600 --> 00:05:15,060
事後について これが何であるかをすぐに説明

123
00:05:15,060 --> 00:05:17,160
します。それ

124
00:05:17,160 --> 00:05:19,139
は、予想されるエネルギー リスクと曖昧さの定義、

125
00:05:19,139 --> 00:05:21,600
または溶解度あたりの予想コストとも呼ばれます。

126
00:05:21,600 --> 00:05:24,120


127
00:05:24,120 --> 00:05:26,280
そのため、モデルを提示しました。ここで、より

128
00:05:26,280 --> 00:05:29,039
正式な定義を示し

129
00:05:29,039 --> 00:05:32,039
ます。 モデルの変数

130
00:05:32,039 --> 00:05:34,680
は、ポリシーが

131
00:05:34,680 --> 00:05:38,100
Precisionパラメーターに依存することを確認しました。パラメーターのトンソル

132
00:05:38,100 --> 00:05:41,539
ごとにPrecisionのガンマ分布がある

133
00:05:43,759 --> 00:05:47,759
ため

134
00:05:47,759 --> 00:05:51,360
、bとdであり、sが実際

135
00:05:51,360 --> 00:05:53,220
にD

136
00:05:53,220 --> 00:05:55,440
に依存し、観察

137
00:05:55,440 --> 00:05:58,319
が状態に依存することがわかります 遷移マッピングの a マトリックス

138
00:05:58,319 --> 00:06:00,600
と 10

139
00:06:00,600 --> 00:06:02,100
によって、前の状態と B マトリックスに依存する状態と

140
00:06:02,100 --> 00:06:04,979


141
00:06:04,979 --> 00:06:06,660
、環境で実行されているアクションが

142
00:06:06,660 --> 00:06:09,300


143
00:06:09,300 --> 00:06:12,720
わかりました。これで、

144
00:06:12,720 --> 00:06:14,880
やりたいことが与えられたモデルができました。

145
00:06:14,880 --> 00:06:17,460
事後分布の計算

146
00:06:17,460 --> 00:06:20,280


147
00:06:20,280 --> 00:06:23,759


148
00:06:23,759 --> 00:06:25,020


149
00:06:25,020 --> 00:06:26,580


150
00:06:26,580 --> 00:06:28,380
そして、推論と呼ばれるプロセスを通じてそれ

151
00:06:28,380 --> 00:06:30,660


152
00:06:30,660 --> 00:06:32,880
を行います。たとえば

153
00:06:32,880 --> 00:06:35,699
、バイアス定理に基づく正確な推論を使用できます。これ

154
00:06:35,699 --> 00:06:38,759
は複雑であり、事後は

155
00:06:38,759 --> 00:06:41,280
事前の尤度倍に等しく

156
00:06:41,280 --> 00:06:43,860
、証拠を使用して正規化し、

157
00:06:43,860 --> 00:06:46,259
基本的に証拠は

158
00:06:46,259 --> 00:06:49,800


159
00:06:49,800 --> 00:06:53,520
すべてのラテン変数 X を合計することによって分子から得られ

160
00:06:53,520 --> 00:06:56,099
た問題は、X が

161
00:06:56,099 --> 00:06:58,680
連続確率変数の場合、この

162
00:06:58,680 --> 00:07:01,080
合計が積分に変わり

163
00:07:01,080 --> 00:07:03,720
、この間隔の分析解がない可能性がある

164
00:07:03,720 --> 00:07:05,639


165
00:07:05,639 --> 00:07:08,460
ため、この方法の正確な推論が

166
00:07:08,460 --> 00:07:10,919
扱いにくくなる可能性があることです。 このため、

167
00:07:10,919 --> 00:07:13,380
スナップ推論を使用する代わりに、

168
00:07:13,380 --> 00:07:17,039
このトルーパー

169
00:07:17,039 --> 00:07:19,380
ステレオは非常に複雑である可能性がありますが、

170
00:07:19,380 --> 00:07:22,199
この Q このバイエーショナル分布を使用して近似し

171
00:07:22,199 --> 00:07:24,060


172
00:07:24,060 --> 00:07:26,340
、これら 2 つの分布間の Divergence をできるだけ近づけようと

173
00:07:26,340 --> 00:07:28,199


174
00:07:28,199 --> 00:07:30,840
します。 ライターにはトルーパー

175
00:07:30,840 --> 00:07:32,460
ステレオが

176
00:07:32,460 --> 00:07:34,020
あり

177
00:07:34,020 --> 00:07:37,380
、指向性後方がどのようにフィットするかの例があります。

178
00:07:37,380 --> 00:07:41,160


179
00:07:41,160 --> 00:07:43,259
アクティブな推論のコンテキストでの赤の真の事後

180
00:07:43,259 --> 00:07:45,180
方向性分布は

181
00:07:45,180 --> 00:07:47,780
次のように定義されるため、モデルの

182
00:07:47,780 --> 00:07:50,160
すべての電子変数で

183
00:07:50,160 --> 00:07:52,259
あり

184
00:07:52,259 --> 00:07:54,419
、平均場近似

185
00:07:54,419 --> 00:07:57,060
と呼ばれるものを行っていますが、これは結合分布です。これは、この範囲内のすべての変数を意味します

186
00:07:57,060 --> 00:07:59,039
分布は独立していると想定される

187
00:07:59,039 --> 00:08:01,560


188
00:08:01,560 --> 00:08:05,819
ため、pi a b d および Gamma パラメータの依存関係はなくなり

189
00:08:05,819 --> 00:08:07,979


190
00:08:07,979 --> 00:08:11,879
、状態がまだ

191
00:08:11,879 --> 00:08:13,199
ポリシー ポイントに

192
00:08:13,199 --> 00:08:15,780
依存するわずかな例外を行います。これが違反分布の定義です。

193
00:08:15,780 --> 00:08:17,520


194
00:08:17,520 --> 00:08:18,840


195
00:08:18,840 --> 00:08:21,360
分布と生成モデル

196
00:08:21,360 --> 00:08:23,879
バイエーショナル プリミティブを定義して

197
00:08:23,879 --> 00:08:25,919
、違反自由エネルギーの目標が

198
00:08:25,919 --> 00:08:28,379


199
00:08:28,379 --> 00:08:30,720
近似ポストチャイルドであることを確認して、

200
00:08:30,720 --> 00:08:32,880
変分分布が

201
00:08:32,880 --> 00:08:35,339
できるだけスーパー スタイルに近くなり

202
00:08:35,339 --> 00:08:38,219
、スケールとして定義されるようにします。

203
00:08:38,219 --> 00:08:41,339
おおよその質問と生成モデルの間で、

204
00:08:41,339 --> 00:08:43,019


205
00:08:43,019 --> 00:08:45,480
これはスタイルの自由エネルギーを介して

206
00:08:45,480 --> 00:08:48,060
負の証拠の

207
00:08:48,060 --> 00:08:51,060
下限または機械学習の肘のように呼ば

208
00:08:51,060 --> 00:08:53,279
れ、

209
00:08:53,279 --> 00:08:56,399
2 つの直感的な用語に分解されるため、これがエネルギーのワイヤ

210
00:08:56,399 --> 00:08:58,860
スタイルです。これを K に分解し

211
00:08:58,860 --> 00:09:00,240


212
00:09:00,240 --> 00:09:02,880
ます。近似と真の事後分布の間の発散。

213
00:09:02,880 --> 00:09:05,220


214
00:09:05,220 --> 00:09:06,899
ブースターは

215
00:09:06,899 --> 00:09:09,360
真の後方に可能な限り良好で

216
00:09:09,360 --> 00:09:12,180
あり、ここに証拠としてありますが、これ

217
00:09:12,180 --> 00:09:13,680
は最適化する

218
00:09:13,680 --> 00:09:15,480
バイエーション分布に関して一定

219
00:09:15,480 --> 00:09:18,600
です。そうです、実際には、Via

220
00:09:18,600 --> 00:09:20,519
Sharp Energy はそこの最初の項のプロキシです。

221
00:09:20,519 --> 00:09:23,839


222
00:09:24,180 --> 00:09:26,899


223
00:09:26,899 --> 00:09:30,480
渡されているのは推論アルゴリズムであり、

224
00:09:30,480 --> 00:09:32,760
基本的には毛布のマークと呼ばれるものに基づいている

225
00:09:32,760 --> 00:09:34,680
ため、グラフィカルモデルの特定のノードの仮想事後などを計算したいとしましょう。

226
00:09:34,680 --> 00:09:37,200


227
00:09:37,200 --> 00:09:39,899


228
00:09:39,899 --> 00:09:42,240


229
00:09:42,240 --> 00:09:45,380
国の表現とは

230
00:09:45,380 --> 00:09:48,360
、このノードが a

231
00:09:48,360 --> 00:09:49,980
はブランケットのマークのみに

232
00:09:49,980 --> 00:09:52,620
依存します より具体的に

233
00:09:52,620 --> 00:09:56,160
は a の子に依存するので、ここでは D と C

234
00:09:56,160 --> 00:09:59,100
はここでは f と g のバランスに依存します

235
00:09:59,100 --> 00:10:02,459
また、

236
00:10:02,459 --> 00:10:06,180
この図の e と B などの a の共同バランスと、

237
00:10:06,180 --> 00:10:08,820
このマクロ ブランケットが示すこと

238
00:10:08,820 --> 00:10:10,740


239
00:10:10,740 --> 00:10:12,839
は、マルコフ ブラケット内の変数の値を知るだけ

240
00:10:12,839 --> 00:10:14,880


241
00:10:14,880 --> 00:10:17,640
で、

242
00:10:17,640 --> 00:10:20,459
ここで推論を実行できるということです。 この問題についてもう少し形式的な

243
00:10:20,459 --> 00:10:22,740
見方

244
00:10:22,740 --> 00:10:26,459
をすると、ここでは

245
00:10:26,459 --> 00:10:30,180
1 つの確率変数の最適なビラショナル分布がある

246
00:10:30,180 --> 00:10:33,779
ので、これはたとえば a になる可能性があり

247
00:10:33,779 --> 00:10:36,320
、右側のクエリは

248
00:10:36,320 --> 00:10:39,420
この事後分布の分析解を

249
00:10:39,420 --> 00:10:41,579
示し、それが依存しているだけであることがわかります

250
00:10:41,579 --> 00:10:44,220
ノード自体では、その親

251
00:10:44,220 --> 00:10:48,180
、その子、およびコバランス

252
00:10:48,180 --> 00:10:50,820
、およびそれが私たちが知る必要があるすべてです。それで

253
00:10:50,820 --> 00:10:52,399


254
00:10:52,399 --> 00:10:55,800
、メッセージビットは

255
00:10:55,800 --> 00:10:57,560
、この

256
00:10:57,560 --> 00:11:02,160
iaticalソリューションのメッセージへの分解から得られると言うのはなぜですか。

257
00:11:02,160 --> 00:11:05,040


258
00:11:05,040 --> 00:11:06,600


259
00:11:06,600 --> 00:11:09,180


260
00:11:09,180 --> 00:11:11,100
基本的に親から来る最初のメッセージは、ここ

261
00:11:11,100 --> 00:11:13,920
で各章ごとに 1 つのメッセージを確認でき、私たちが

262
00:11:13,920 --> 00:11:15,860
何をしているのか、これらすべてのメッセージ

263
00:11:15,860 --> 00:11:19,200
が追加されてパラメータを形成することがわかります。

264
00:11:19,200 --> 00:11:21,899
おおよそのプラス部族は、

265
00:11:21,899 --> 00:11:25,019
ここに実用的な例です。基本的に

266
00:11:25,019 --> 00:11:27,300
、確率変数 y に影響を与えようとしている

267
00:11:27,300 --> 00:11:29,519
ので、y の事後分布のような分布のパラメータを計算したいと考えて

268
00:11:29,519 --> 00:11:31,740
います。

269
00:11:31,740 --> 00:11:33,899


270
00:11:33,899 --> 00:11:36,540


271
00:11:36,540 --> 00:11:38,100
これを行う方法は、メッセージを送信

272
00:11:38,100 --> 00:11:40,740
することです。 親

273
00:11:40,740 --> 00:11:43,320
から確率変数 y までずっと

274
00:11:43,320 --> 00:11:46,079
、子とコンポーネントについても同じことが行われ

275
00:11:46,079 --> 00:11:49,019


276
00:11:49,019 --> 00:11:51,360
、因子ノードに到達するたびに、入力メッセージを結合し、

277
00:11:51,360 --> 00:11:53,579


278
00:11:53,579 --> 00:11:55,800


279
00:11:55,800 --> 00:11:57,540
すべてのメッセージを受信したら、

280
00:11:57,540 --> 00:11:59,940
それらを追加するだけで結果を y に転送します 一緒にすると、これ

281
00:11:59,940 --> 00:12:02,160
は y に対する違反分布のパラメーターを提供する

282
00:12:02,160 --> 00:12:04,800


283
00:12:04,800 --> 00:12:07,380
ので、これは

284
00:12:07,380 --> 00:12:09,060
基本的

285
00:12:09,060 --> 00:12:10,500
にフランスで実行するため

286
00:12:10,500 --> 00:12:13,260


287
00:12:13,260 --> 00:12:15,360


288
00:12:15,360 --> 00:12:18,120
に使用するアルゴリズムである購入者のダイヤモンドでした。

289
00:12:18,120 --> 00:12:21,779
将来に向けて各製品の品質を推定

290
00:12:21,779 --> 00:12:23,940


291
00:12:23,940 --> 00:12:26,160
する前に

292
00:12:26,160 --> 00:12:29,279
、コミュニティインデックスの概念を紹介したいと思います

293
00:12:29,279 --> 00:12:31,320
ええと、ここで現在のタイムステップでの状態であるツリーのルートを見ることができ

294
00:12:31,320 --> 00:12:33,720


295
00:12:33,720 --> 00:12:35,160


296
00:12:35,160 --> 00:12:38,080
、そこから

297
00:12:38,080 --> 00:12:38,579
[音楽]を見る

298
00:12:38,579 --> 00:12:39,480


299
00:12:39,480 --> 00:12:42,540
ことができます。ええと、

300
00:12:42,540 --> 00:12:45,360
インデックス

301
00:12:45,360 --> 00:12:47,100
のシーケンスによってインデックス付けされている将来はありません。 インデックス

302
00:12:47,100 --> 00:12:49,800
のアクションだけを含むサイズ 1 のシーケンス

303
00:12:49,800 --> 00:12:52,380
ええと

304
00:12:52,380 --> 00:12:55,079
、これは実際のアクションを取得した後

305
00:12:55,079 --> 00:12:56,399


306
00:12:56,399 --> 00:12:58,200


307
00:12:58,200 --> 00:13:00,360
の状態であり、アクション 1 を実行した

308
00:13:00,360 --> 00:13:03,060
後にアクション 2 が続く状態があります。

309
00:13:03,060 --> 00:13:05,519
これらのインデックスはマルチインデックスと呼ばれます。

310
00:13:05,519 --> 00:13:07,380
私たちは行動を表す

311
00:13:07,380 --> 00:13:09,180
いくつかの指標

312
00:13:09,180 --> 00:13:11,880
で構成され

313
00:13:11,880 --> 00:13:14,880
ているので、これを念頭に置いた

314
00:13:14,880 --> 00:13:17,279
ので、多文化研究を議論することができ

315
00:13:17,279 --> 00:13:19,680
ます。多文化研究の

316
00:13:19,680 --> 00:13:22,560
構造は4つのステップで構成されています。最初

317
00:13:22,560 --> 00:13:24,779
に選択ステップがあります。

318
00:13:24,779 --> 00:13:28,019
ルート ノードと UCT 基準を計算する

319
00:13:28,019 --> 00:13:30,540
ので、これは

320
00:13:30,540 --> 00:13:33,000
トラックごとに記憶できる

321
00:13:33,000 --> 00:13:36,360


322
00:13:36,360 --> 00:13:38,339
実際の値です。次に、実際に最高のベロシティ値

323
00:13:38,339 --> 00:13:41,639
を持つノードを選択します。たとえば、S1 などです。 彼は

324
00:13:41,639 --> 00:13:43,560
、アクションを実行した

325
00:13:43,560 --> 00:13:45,480
後、これから各子の速度を計算でき

326
00:13:45,480 --> 00:13:48,000
、おそらくこの

327
00:13:48,000 --> 00:13:50,760
ノードが最大値になると述べています。

328
00:13:50,760 --> 00:13:53,040
左側のノードに到達すると、子を拡張することに関する

329
00:13:53,040 --> 00:13:55,680
第 2 フェーズに進むことができます。

330
00:13:55,680 --> 00:13:57,480


331
00:13:57,480 --> 00:13:59,940
このノードと各子に対して

332
00:13:59,940 --> 00:14:02,699


333
00:14:02,699 --> 00:14:06,660
、このノードからいくつかのルールアウトをシミュレートするだけ

334
00:14:06,660 --> 00:14:08,940
です.これを取得したら

335
00:14:08,940 --> 00:14:11,220
、このノードの平均予想頻度を計算しています.

336
00:14:11,220 --> 00:14:13,980


337
00:14:13,980 --> 00:14:17,399


338
00:14:17,399 --> 00:14:21,060
ええとの祖先は

339
00:14:21,060 --> 00:14:22,500


340
00:14:22,500 --> 00:14:25,139


341
00:14:25,139 --> 00:14:27,240


342
00:14:27,240 --> 00:14:30,839
、過去にあまり探索されていないツリーの一部を探索したいので、

343
00:14:30,839 --> 00:14:32,820


344
00:14:32,820 --> 00:14:36,240
各ブランチが何回爆発したかを追跡する必要があるため、いくつかの訪問だけでなく、拡張したばかりです。

345
00:14:36,240 --> 00:14:39,240
これが計画のためのアルゴリズムで

346
00:14:39,240 --> 00:14:41,399
あり、私は常に

347
00:14:41,399 --> 00:14:44,220
最初のアプローチを議論するために必要な背景を紹介してきました。最初の

348
00:14:44,220 --> 00:14:46,620
アプローチは、活動的な

349
00:14:46,620 --> 00:14:51,000
乳児とバイラショナル マッサージの人との分岐

350
00:14:51,000 --> 00:14:54,240
です。 モデルを定義するに

351
00:14:54,240 --> 00:14:56,579
は、基本的に2つの部分に分割され、最初の部分は

352
00:14:56,579 --> 00:14:57,740


353
00:14:57,740 --> 00:15:01,019
過去と現在を表し、

354
00:15:01,019 --> 00:15:02,880
基本的に部分的に観察可能な

355
00:15:02,880 --> 00:15:04,800
マイクロ決定プロセスであり

356
00:15:04,800 --> 00:15:06,480


357
00:15:06,480 --> 00:15:09,480
、状態に依存する観察があると言うのは不快な言葉

358
00:15:09,480 --> 00:15:11,279
です。これは行列です

359
00:15:11,279 --> 00:15:14,519
そこにはアクション変数があり、

360
00:15:14,519 --> 00:15:16,320
私が

361
00:15:16,320 --> 00:15:19,079
言った

362
00:15:19,079 --> 00:15:21,860
ように状態がありますので、私が言ったように、電気機械

363
00:15:21,860 --> 00:15:24,480
はマトリックスによってパラメーター化されているように追加されてい

364
00:15:24,480 --> 00:15:27,120


365
00:15:27,120 --> 00:15:30,060
ます通常のように遷移はBメトリックによってパラメーター化され、ここ

366
00:15:30,060 --> 00:15:32,040


367
00:15:32,040 --> 00:15:34,380
にはaを定義するZベクトルもあります

368
00:15:34,380 --> 00:15:37,740
初期のイオン状態よりも前なので、これは

369
00:15:37,740 --> 00:15:41,100
標準的な人工から来ており、

370
00:15:41,100 --> 00:15:43,980
目新しさは、

371
00:15:43,980 --> 00:15:46,880
基本的に未来を

372
00:15:46,880 --> 00:15:50,040
毎回うまく拡大していることです。このモデルを持っているので

373
00:15:50,040 --> 00:15:52,740
、ええと、マルチカロット研究のように積極的に実行し

374
00:15:52,740 --> 00:15:55,800
、毎回

375
00:15:55,800 --> 00:15:57,240
ノードを拡張したい

376
00:15:57,240 --> 00:15:59,339
ので、生成モデルにいくつかの部分を追加します。

377
00:15:59,339 --> 00:16:01,199
たとえば

378
00:16:01,199 --> 00:16:03,779
、生成 v のこの部分を追加したい場合

379
00:16:03,779 --> 00:16:05,940
olume

380
00:16:05,940 --> 00:16:08,220
1 つの遷移マッピング

381
00:16:08,220 --> 00:16:11,579
B を追加します これは確率変数を追加します これは

382
00:16:11,579 --> 00:16:15,300
S12 のようなものです 次に

383
00:16:15,300 --> 00:16:17,880
、尤度マップを使用して関連する観測を追加し

384
00:16:17,880 --> 00:16:19,980
ます

385
00:16:19,980 --> 00:16:21,959
これが生成

386
00:16:21,959 --> 00:16:23,699
モデルを

387
00:16:23,699 --> 00:16:25,920
数学的に拡張する方法です これは定義されています この

388
00:16:25,920 --> 00:16:29,100
ように、ここにモデル内のすべての変数の生成モデルが表示

389
00:16:29,100 --> 00:16:31,920


390
00:16:31,920 --> 00:16:34,320
されます。モデルのようなパラメーターに対する元の事前確率がある

391
00:16:34,320 --> 00:16:38,100
ため、A B と G マトリックス

392
00:16:38,100 --> 00:16:40,980
は、時間の状態がタイプ 0 に依存し、D に依存します。

393
00:16:40,980 --> 00:16:43,639
各観測は、状態に依存します

394
00:16:43,639 --> 00:16:47,699
関連する それと a 行列に加え

395
00:16:47,699 --> 00:16:50,399
て、

396
00:16:50,399 --> 00:16:53,459
いくつかのデータパラメータに依存するアクションに対する事前分布があり

397
00:16:53,459 --> 00:16:55,500
ます。これは、事前に除算があるいくつかのデータパラメータに依存

398
00:16:55,500 --> 00:16:56,699


399
00:16:56,699 --> 00:16:59,759


400
00:16:59,759 --> 00:17:01,620


401
00:17:01,620 --> 00:17:04,380
します。  B

402
00:17:04,380 --> 00:17:05,880
遷移確率を定義するマトリックス。これ

403
00:17:05,880 --> 00:17:07,980


404
00:17:07,980 --> 00:17:11,640


405
00:17:11,640 --> 00:17:16,559
はモデルの GP 部分からのように GP バージョンにあり、これは計画が進行

406
00:17:16,559 --> 00:17:19,439
するにつれて拡張するツリー ライフ構造です。

407
00:17:19,439 --> 00:17:21,559


408
00:17:21,559 --> 00:17:25,799


409
00:17:25,799 --> 00:17:29,220
これは、モデルで展開されたすべてのマルチインデックスのセットです。

410
00:17:29,220 --> 00:17:31,980
たとえば、ここに戻ると、展開された

411
00:17:31,980 --> 00:17:34,679
マルチインデックスが 3 つあることがわかります。

412
00:17:34,679 --> 00:17:37,080


413
00:17:37,080 --> 00:17:39,780
したがって

414
00:17:39,780 --> 00:17:42,960
、マルチインデックスは過激派が言うものと同じです。

415
00:17:42,960 --> 00:17:44,220
2 つと

416
00:17:44,220 --> 00:17:48,179
マルチインデックス ええと、1 つ 1

417
00:17:48,179 --> 00:17:50,100
つわかりました。これらの軍事インデックスのそれぞれについて

418
00:17:50,100 --> 00:17:52,500
、一般性モデルに

419
00:17:52,500 --> 00:17:55,799
遷移と可能性のマッピングを追加し

420
00:17:55,799 --> 00:17:58,080


421
00:17:58,080 --> 00:18:00,480
ます。これは、拡張された戦利品インデックスのセットの各インデックス

422
00:18:00,480 --> 00:18:04,340
に対して行っていることとまったく同じです。

423
00:18:05,900 --> 00:18:09,140
将来的には、

424
00:18:09,660 --> 00:18:12,900


425
00:18:12,900 --> 00:18:15,840
このアプローチを環境でテストする必要

426
00:18:15,840 --> 00:18:17,580
があり

427
00:18:17,580 --> 00:18:20,520
ます。今のところ、迷路環境内でテストします

428
00:18:20,520 --> 00:18:24,660
。ここでは、迷路の出口

429
00:18:24,660 --> 00:18:27,840
、開始位置

430
00:18:27,840 --> 00:18:30,720
、および以前の設定の

431
00:18:30,720 --> 00:18:32,760
項目は、出口から近ければ近いほど

432
00:18:32,760 --> 00:18:35,340
、聴衆がより幸せに

433
00:18:35,340 --> 00:18:37,020
なるという

434
00:18:37,020 --> 00:18:39,840
ことです。ここでは、距離は 0 1

435
00:18:39,840 --> 00:18:43,020
1 2 3 4

436
00:18:43,020 --> 00:18:45,120
です。非常に重要な機能の 1 つ

437
00:18:45,120 --> 00:18:47,340
は、以前の好みが

438
00:18:47,340 --> 00:18:51,120
飛び交うことです。

439
00:18:51,120 --> 00:18:53,520
ここには 3 があり、距離に関しては 4 があり

440
00:18:53,520 --> 00:18:56,700
ます。5 6 7 8 のようなものはありません。

441
00:18:56,700 --> 00:19:00,000


442
00:19:00,000 --> 00:19:03,240


443
00:19:03,240 --> 00:19:05,580


444
00:19:05,580 --> 00:19:08,220
エージェント

445
00:19:08,220 --> 00:19:10,860
が注意を怠ると立ち往生

446
00:19:10,860 --> 00:19:12,720
する可能性のある局所的最小値と、この局所的最小値を回避する方法

447
00:19:12,720 --> 00:19:13,980


448
00:19:13,980 --> 00:19:16,860
は、将来の最終的な計画を立てて、

449
00:19:16,860 --> 00:19:19,799
やりがいのあるパスが実際にこれで

450
00:19:19,799 --> 00:19:21,600
あり、メモがそれにつながるものであることを確認できるようにすることです。

451
00:19:21,600 --> 00:19:23,820
極小値です。これは基本的

452
00:19:23,820 --> 00:19:26,280
にタスクに追加する課題

453
00:19:26,280 --> 00:19:28,320


454
00:19:28,320 --> 00:19:30,780
です。ここに表示されているのは、

455
00:19:30,780 --> 00:19:32,400
基本的

456
00:19:32,400 --> 00:19:34,919
に拡張されているツリーの図であり、ここ

457
00:19:34,919 --> 00:19:37,320
に結果の表があります。

458
00:19:37,320 --> 00:19:39,720


459
00:19:39,720 --> 00:19:43,620
エージェントが

460
00:19:43,620 --> 00:19:46,799
局所最小値内で立ち往生しているため

461
00:19:46,799 --> 00:19:49,440
、基本的に適切に動作しているエージェントの限界に到達することはありません。

462
00:19:49,440 --> 00:19:52,140


463
00:19:52,140 --> 00:19:55,919


464
00:19:55,919 --> 00:19:58,320
次に、時間内の部分的な束がどのようにアクティブであるかを比較する必要があります。

465
00:19:58,320 --> 00:20:00,539


466
00:20:00,539 --> 00:20:02,100


467
00:20:02,100 --> 00:20:03,659
活性化された最新技術のような以前の推論に加えて

468
00:20:03,659 --> 00:20:06,480
、基本的に

469
00:20:06,480 --> 00:20:09,000
、エージェントがそれを解決できるように環境を設計しました。エージェント

470
00:20:09,000 --> 00:20:12,299


471
00:20:12,299 --> 00:20:15,840


472
00:20:15,840 --> 00:20:18,480
は、起こったことに積極的に影響を与えるために、未来への 3 つの 5 つ、次に 8 つの時間ステップを計画する必要があります。

473
00:20:18,480 --> 00:20:20,460


474
00:20:20,460 --> 00:20:23,280
2つのプラスのタスクを適切に解決できたが、その後に起こったことは

475
00:20:23,280 --> 00:20:25,260


476
00:20:25,260 --> 00:20:27,539
、将来に評価する必要があるポリシー

477
00:20:27,539 --> 00:20:29,220
の数が、最大の粉砕さ

478
00:20:29,220 --> 00:20:31,740
れた最後のポリシーを計画する必要がある回数に応じて指数関数的に増加するためです。

479
00:20:31,740 --> 00:20:34,980


480
00:20:34,980 --> 00:20:36,780


481
00:20:36,780 --> 00:20:39,299
環境がどのように私たちのアプローチ

482
00:20:39,299 --> 00:20:41,220
を好むか、それはまったく同じであり、

483
00:20:41,220 --> 00:20:42,900


484
00:20:42,900 --> 00:20:44,880
計画の反復回数をもう一度増やすと、

485
00:20:44,880 --> 00:20:48,000
エージェントが常にそれをソートできるようになり、

486
00:20:48,000 --> 00:20:48,720


487
00:20:48,720 --> 00:20:51,720
クラッシュしないことが

488
00:20:51,720 --> 00:20:54,480
わかります。 巧妙な方法 マルチカロットの研究

489
00:20:54,480 --> 00:20:56,580
を使用して可能なすべてのポリシーのスペース

490
00:20:56,580 --> 00:20:59,400


491
00:20:59,400 --> 00:21:01,500
これは、

492
00:21:01,500 --> 00:21:05,340
bti とアクティブな入力の間の非球面的な比較でした

493
00:21:05,340 --> 00:21:07,500
今、私がこの sl でやりたいこと アイデアは

494
00:21:07,500 --> 00:21:09,780
、より理論的な暗黙のクラスの観点からデモでそれらを比較することです。

495
00:21:09,780 --> 00:21:11,400


496
00:21:11,400 --> 00:21:13,260


497
00:21:13,260 --> 00:21:15,480
したがって、基本的にここでは各円

498
00:21:15,480 --> 00:21:17,159


499
00:21:17,159 --> 00:21:19,740
は状態のカテゴリ分布に対応します。

500
00:21:19,740 --> 00:21:21,900
つまり、これらの円の 1 つ

501
00:21:21,900 --> 00:21:24,780
を保存するには、状態の数を保存する必要があることを意味します。 したがって

502
00:21:24,780 --> 00:21:26,460
、

503
00:21:26,460 --> 00:21:28,919
状態値の数に等しいパラメーターの数は問題ないため、

504
00:21:28,919 --> 00:21:30,960
3 つの値を取る状態がある場合、

505
00:21:30,960 --> 00:21:35,120
3 つのパラメーター

506
00:21:35,159 --> 00:21:38,520
を保存する必要があり、未来への時間ステップごとに、

507
00:21:38,520 --> 00:21:42,360
もう 1 つのパラメーターを保存する必要があります。

508
00:21:42,360 --> 00:21:44,039
アクティブな

509
00:21:44,039 --> 00:21:47,520
推論になると、可能な人

510
00:21:47,520 --> 00:21:48,960
ごとに呼び出されるもう 1 つのカテゴリを保存する必要もあります。

511
00:21:48,960 --> 00:21:51,240
そのため、複雑さのクラスの合計

512
00:21:51,240 --> 00:21:53,460
は、ポリシー

513
00:21:53,460 --> 00:21:57,000
の数に時間ステップの数を掛けたものに等しくなり、

514
00:21:57,000 --> 00:21:58,500


515
00:21:58,500 --> 00:22:00,360
必要なパラメーターの数を Horizo​​n に掛けた時間に等しくなります。

516
00:22:00,360 --> 00:22:01,980


517
00:22:01,980 --> 00:22:03,299


518
00:22:03,299 --> 00:22:07,080
最悪のシナリオではBCI

519
00:22:07,080 --> 00:22:09,360
が保存する必要があるため、最初に言うことは

520
00:22:09,360 --> 00:22:11,940
、btiがすべての可能な組み合わせを保存するわけではないということです

521
00:22:11,940 --> 00:22:14,520


522
00:22:14,520 --> 00:22:16,980
生成モデルのツリー構造を使用して

523
00:22:16,980 --> 00:22:19,380


524
00:22:19,380 --> 00:22:22,200
、過去と現在の分布を 1 つだけ保存するため、過去と現在の

525
00:22:22,200 --> 00:22:24,179
最初のステップで、

526
00:22:24,179 --> 00:22:27,419
すべて

527
00:22:27,419 --> 00:22:30,179
の取引を展開すると、ex

528
00:22:30,179 --> 00:22:34,080
にアクションの数が保存されます。 タイマーの力

529
00:22:34,080 --> 00:22:36,539
はマイナス G にある

530
00:22:36,539 --> 00:22:38,940
ため、これは当然のことながら指数関数的です

531
00:22:38,940 --> 00:22:42,360


532
00:22:42,360 --> 00:22:44,760
が、実際

533
00:22:44,760 --> 00:22:46,799
には取引全体を拡大することはあり

534
00:22:46,799 --> 00:22:49,320
ません。

535
00:22:49,320 --> 00:22:51,360
しかし、他の2つはそうではないので、

536
00:22:51,360 --> 00:22:53,820
実際には、このアルゴリズムの実際の複雑さのクラス

537
00:22:53,820 --> 00:22:57,000
は、

538
00:22:57,000 --> 00:22:59,159
私たちが作成している拡張の数に線形

539
00:22:59,159 --> 00:23:01,340


540
00:23:03,620 --> 00:23:06,539
です。外国人は、標準的な職業ほど多くのストレージスペースを必要としません

541
00:23:06,539 --> 00:23:09,960


542
00:23:09,960 --> 00:23:13,080


543
00:23:13,080 --> 00:23:14,520
.2番目のアプローチについてお話したいと思います. は

544
00:23:14,520 --> 00:23:16,380
ベイジアン フィルタリングに基づい

545
00:23:16,380 --> 00:23:20,340
ているため、まずバイアスとフィルタリングの

546
00:23:20,340 --> 00:23:22,559
利点は

547
00:23:22,559 --> 00:23:24,240


548
00:23:24,240 --> 00:23:25,679
、状態

549
00:23:25,679 --> 00:23:29,220
と実際にわかっている観測値を含む単純な生成モデルから始まる

550
00:23:29,220 --> 00:23:31,679
推論アルゴリズムです。 私たちが行っているch観測と

551
00:23:31,679 --> 00:23:34,620
、前の状態と可能性が何であるかもわかっているので

552
00:23:34,620 --> 00:23:36,720


553
00:23:36,720 --> 00:23:38,280
、たとえば

554
00:23:38,280 --> 00:23:41,400
、小惑星を使用して、

555
00:23:41,400 --> 00:23:44,820
いくつかの観測が与えられた状態の事後計算

556
00:23:44,820 --> 00:23:46,860
を計算できます。

557
00:23:46,860 --> 00:23:47,880


558
00:23:47,880 --> 00:23:51,860


559
00:23:53,039 --> 00:23:56,159
経験的事前確率として使用できる状態の事後がある

560
00:23:56,159 --> 00:23:59,159
ので、これが経験的事前

561
00:23:59,159 --> 00:24:01,460


562
00:24:01,460 --> 00:24:03,659
確率であり、次の時間ステップにつながる遷移確率もわかっているため、

563
00:24:03,659 --> 00:24:05,279


564
00:24:05,279 --> 00:24:07,679
この情報

565
00:24:07,679 --> 00:24:08,820
と実行中のアクションを使用できます。

566
00:24:08,820 --> 00:24:11,159
環境で実際に実行して、

567
00:24:11,159 --> 00:24:13,380


568
00:24:13,380 --> 00:24:15,840
タイム ステップ 1 での状態

569
00:24:15,840 --> 00:24:18,360
の予測事後を計算し

570
00:24:18,360 --> 00:24:20,220


571
00:24:20,220 --> 00:24:22,620


572
00:24:22,620 --> 00:24:24,659


573
00:24:24,659 --> 00:24:26,760
ます 遷移

574
00:24:26,760 --> 00:24:29,820
マッピングのように、s0 の次元を平均化する

575
00:24:29,820 --> 00:24:32,279


576
00:24:32,279 --> 00:24:34,980
と、別の観測

577
00:24:34,980 --> 00:24:36,659


578
00:24:36,659 --> 00:24:38,400
が行われ、前の予測ステップから取得した予測ポスト チャネルを使用できます。

579
00:24:38,400 --> 00:24:41,400


580
00:24:41,400 --> 00:24:42,080


581
00:24:42,080 --> 00:24:45,120
この新しい

582
00:24:45,120 --> 00:24:47,460
観測結果と、証拠を統合する 2 つのステップと

583
00:24:47,460 --> 00:24:50,340


584
00:24:50,340 --> 00:24:52,440
、遷移マッピングによる予測 um による S1 の um は、必要

585
00:24:52,440 --> 00:24:54,179
な回数だけ反復される

586
00:24:54,179 --> 00:24:56,179


587
00:24:56,179 --> 00:24:59,039
ため、これ

588
00:24:59,039 --> 00:25:00,900
が私が望む 2 番目のアプローチにつながります。 ベイジアンフィルタリングを使用

589
00:25:00,900 --> 00:25:02,820
した分岐時間アクティブ推論である今日を提示する

590
00:25:02,820 --> 00:25:04,860


591
00:25:04,860 --> 00:25:07,140
ため、最初に、状態に関する過去の観察をこれ以上保存しません。これ

592
00:25:07,140 --> 00:25:09,720


593
00:25:09,720 --> 00:25:11,700


594
00:25:11,700 --> 00:25:14,159
は、必要なすべての情報

595
00:25:14,159 --> 00:25:16,679


596
00:25:16,679 --> 00:25:18,960
が、コーランのタイムスタンプのような初期状態の信念内に保存されている

597
00:25:18,960 --> 00:25:22,679
ためです。 強力な時間ステップとして

598
00:25:22,679 --> 00:25:25,559
OKなので、観察の試み

599
00:25:25,559 --> 00:25:27,480
があります。証拠の統合ステップを実行して、時間ステップ T での状態

600
00:25:27,480 --> 00:25:31,200
についての信念を取得し、展開したい

601
00:25:31,200 --> 00:25:34,740


602
00:25:34,740 --> 00:25:37,140
各子に対して前方予測を実行できます。

603
00:25:37,140 --> 00:25:39,600


604
00:25:39,600 --> 00:25:41,640
例として

605
00:25:41,640 --> 00:25:44,460
、これを計算し、次にこれを計算し

606
00:25:44,460 --> 00:25:46,559
ます。多文化がこのグラフを展開するステータスである場合

607
00:25:46,559 --> 00:25:49,260
は、前方予測を行います。

608
00:25:49,260 --> 00:25:51,659
これについても同様にイオンを生成

609
00:25:51,659 --> 00:25:54,419
し、関連する観測を展開して、

610
00:25:54,419 --> 00:25:57,480
それが主なアイデアであるため、

611
00:25:57,480 --> 00:25:59,640
ここでの唯一の違いは

612
00:25:59,640 --> 00:26:01,620


613
00:26:01,620 --> 00:26:04,559
、過去の決定プロセスの欠落を観察することができ

614
00:26:04,559 --> 00:26:06,320
ず、

615
00:26:06,320 --> 00:26:08,700
拡大時間ステップしかないことです。 また

616
00:26:08,700 --> 00:26:11,100
、推論アルゴリズムを

617
00:26:11,100 --> 00:26:15,840
違反パスから bazel patreon に変更

618
00:26:15,840 --> 00:26:18,720
します。一般性モデルのより正式な定義

619
00:26:18,720 --> 00:26:21,120
を次に示します。

620
00:26:21,120 --> 00:26:22,400
ここ

621
00:26:22,400 --> 00:26:25,440
で、最初のダウンステップの可能性と以前の過大評価を確認できます。これ

622
00:26:25,440 --> 00:26:28,200
はチームの例で

623
00:26:28,200 --> 00:26:31,620
あり、次に

624
00:26:31,620 --> 00:26:33,720


625
00:26:33,720 --> 00:26:37,080
各将来の州のように、それぞれについてです。 観察または

626
00:26:37,080 --> 00:26:38,820
各ルーチンは、すでに拡張されていることを示しています。

627
00:26:38,820 --> 00:26:40,679


628
00:26:40,679 --> 00:26:42,059


629
00:26:42,059 --> 00:26:45,799


630
00:26:45,900 --> 00:26:49,860
パフォーマンスの観点から、尤度マッピングと遷移マッピングが関連付けられています。ここでは、Biogen フィルタリングを

631
00:26:49,860 --> 00:26:51,960
使用したバンチング時間アクティブ推論

632
00:26:51,960 --> 00:26:55,679
を同じアルゴリズムと比較

633
00:26:55,679 --> 00:26:57,900
しています。

634
00:26:57,900 --> 00:27:01,559
同じタスクについて、

635
00:27:01,559 --> 00:27:03,299
そのうちの 1 つ

636
00:27:03,299 --> 00:27:06,179
が約分単位の桁数で実行されていることがわかります。

637
00:27:06,179 --> 00:27:08,460
4 分から 7 分の間で 4

638
00:27:08,460 --> 00:27:10,380
分 他のパフォーマーの 1 人が

639
00:27:10,380 --> 00:27:13,380
2 秒から 11 秒の間で速く

640
00:27:13,380 --> 00:27:14,340


641
00:27:14,340 --> 00:27:16,860
なったので、このパフォーマンスのスピードアップは

642
00:27:16,860 --> 00:27:19,740
基本的に推論アルゴリズムの変更によって可能になりました

643
00:27:19,740 --> 00:27:20,659


644
00:27:20,659 --> 00:27:24,200


645
00:27:24,720 --> 00:27:27,480
が、今私たちがやりたいことはもっと定義できるよう

646
00:27:27,480 --> 00:27:31,380
にすることです 各時点での1つの観察と状態よりも、

647
00:27:31,380 --> 00:27:34,559


648
00:27:34,559 --> 00:27:36,779
これを行うには

649
00:27:36,779 --> 00:27:38,159
、保険

650
00:27:38,159 --> 00:27:40,320
アルゴリズムを

651
00:27:40,320 --> 00:27:42,600
フィルタリングよりも優れたものから信じる

652
00:27:42,600 --> 00:27:45,199
伝播にもう一度変更

653
00:27:45,240 --> 00:27:47,940
することです。基本的に

654
00:27:47,940 --> 00:27:51,240
信念伝播とは、

655
00:27:51,240 --> 00:27:54,179
入力として関数を受け取るアルゴリズムです。 いくつかの

656
00:27:54,179 --> 00:27:55,740
State 変数

657
00:27:55,740 --> 00:27:58,140
とこの関数について、それが f i

658
00:27:58,140 --> 00:28:01,620
と呼ぶ n 個の要素のセットに因数分解されることがわかってい

659
00:28:01,620 --> 00:28:03,659
ます。

660
00:28:03,659 --> 00:28:05,940
問題は、他のすべての乱数を周辺化するときに、この関数の限界に対する国民分布のような限界分布をどのように計算できるかということです。

661
00:28:05,940 --> 00:28:07,980


662
00:28:07,980 --> 00:28:11,700


663
00:28:11,700 --> 00:28:14,460


664
00:28:14,460 --> 00:28:18,659
変数は 1 つの SM を除いて

665
00:28:18,659 --> 00:28:20,640
問題ないので、

666
00:28:20,640 --> 00:28:23,880
そのすべての SM の分布

667
00:28:23,880 --> 00:28:25,860
と、伝播が解決していると私が信じている方法を疎外したいと考えています。

668
00:28:25,860 --> 00:28:28,860
このタスクは基本的に

669
00:28:28,860 --> 00:28:30,600


670
00:28:30,600 --> 00:28:33,779
計算グラフを介してメッセージを渡すことによって行われる

671
00:28:33,779 --> 00:28:35,520
ため、グラフには 2 種類の

672
00:28:35,520 --> 00:28:37,919
ノードが

673
00:28:37,919 --> 00:28:39,840
あり、たとえば F1 などの分布の因子を表す因子ノードがあり

674
00:28:39,840 --> 00:28:43,440
、次に

675
00:28:43,440 --> 00:28:45,919


676
00:28:45,960 --> 00:28:48,779
X1

677
00:28:48,779 --> 00:28:51,179
などの確率変数があり、それらのいくつかがある場合があります。  F2

678
00:28:51,179 --> 00:28:54,000
と X2 は

679
00:28:54,000 --> 00:28:56,399
問題ありません。おそらく

680
00:28:56,399 --> 00:28:58,380
、2 つの間の遷移マッピングがある

681
00:28:58,380 --> 00:28:59,520


682
00:28:59,520 --> 00:29:01,500
ので、これが 2 番目

683
00:29:01,500 --> 00:29:04,440
です。ここでやりたいことは、グラフを介していくつかのメッセージを渡すことです。

684
00:29:04,440 --> 00:29:07,140


685
00:29:07,140 --> 00:29:12,059
ノード X から実際のノードへのメッセージに関しては、

686
00:29:12,059 --> 00:29:14,520
これは、ここにもう 1 つある

687
00:29:14,520 --> 00:29:16,559
ためです。出力メッセージを計算するために行う

688
00:29:16,559 --> 00:29:19,679


689
00:29:19,679 --> 00:29:20,940


690
00:29:20,940 --> 00:29:24,059
ことは、この音符に向かっていることがわかっている他の矢印からの入力メッセージを乗算する

691
00:29:24,059 --> 00:29:27,059
ことです。

692
00:29:27,059 --> 00:29:29,220
すべての入力メッセージを乗算し

693
00:29:29,220 --> 00:29:31,919
、

694
00:29:31,919 --> 00:29:36,179
ファクターからのメッセージになると、

695
00:29:36,179 --> 00:29:39,059


696
00:29:39,059 --> 00:29:41,940
基本的

697
00:29:41,940 --> 00:29:46,559


698
00:29:46,559 --> 00:29:49,260
にこのファクターノード

699
00:29:49,260 --> 00:29:51,480
に関連付けられたファクター

700
00:29:51,480 --> 00:29:53,520
を取得し、それをすべての受信メッセージで乗算して、すべてのインコを取得します

701
00:29:53,520 --> 00:29:56,039
メッセージを ming して、

702
00:29:56,039 --> 00:29:58,620
この Factor ノードに関連付けられた事実を乗算します。

703
00:29:58,620 --> 00:30:01,440
次に、すべての入力ディメンションを周辺化

704
00:30:01,440 --> 00:30:04,260
して、メッセージが

705
00:30:04,260 --> 00:30:07,740
これとまったく同じ形状になるようにし

706
00:30:07,740 --> 00:30:10,679
ます。ターゲット確率変数として出力される

707
00:30:10,679 --> 00:30:13,020
ため、これが周辺化と

708
00:30:13,020 --> 00:30:15,000
言えます。 写真内にある

709
00:30:15,000 --> 00:30:17,039
すべてのメッセージに対してこれを行い、

710
00:30:17,039 --> 00:30:20,520


711
00:30:20,520 --> 00:30:23,100
それらのメッセージを使用して

712
00:30:23,100 --> 00:30:26,220
、このアルゴリズムの目標である限界を計算します。

713
00:30:26,220 --> 00:30:28,260
その方法は、

714
00:30:28,260 --> 00:30:30,679
すべての入力メッセージを取得して

715
00:30:30,679 --> 00:30:33,659
乗算することです。 それらを一緒にすると、これ

716
00:30:33,659 --> 00:30:36,059
により

717
00:30:36,059 --> 00:30:39,840
、必要な特定の状態の限界分布が得られる

718
00:30:39,840 --> 00:30:42,360
ため、

719
00:30:42,360 --> 00:30:44,760
多要素分岐時間アクティビティのマルチモーダルにつながります。

720
00:30:44,760 --> 00:30:46,679
これは、これについて

721
00:30:46,679 --> 00:30:48,600


722
00:30:48,600 --> 00:30:50,340
もう少し話すことができるようにするために以前に開発してきた最後のアプローチです。

723
00:30:50,340 --> 00:30:52,380
アプローチ 私は

724
00:30:52,380 --> 00:30:55,140
一時的なスタイルの概念を導入しなければならなかった

725
00:30:55,140 --> 00:30:58,620
ので、一番上の作業スライドは、

726
00:30:58,620 --> 00:30:59,580


727
00:30:59,580 --> 00:31:04,080
私たちが持っている状態と観察のセットにすぎず、すべての

728
00:31:04,080 --> 00:31:05,760
観察

729
00:31:05,760 --> 00:31:08,100
はそうです. これは、

730
00:31:08,100 --> 00:31:10,140
変数を常にまたは時間として複製するプレートの回転で

731
00:31:10,140 --> 00:31:11,159


732
00:31:11,159 --> 00:31:14,159
あり、破線があります。これらの

733
00:31:14,159 --> 00:31:16,620
破線が行っていることは

734
00:31:16,620 --> 00:31:19,140
、観測を

735
00:31:19,140 --> 00:31:21,840
あそこの州のサブセットに接続することです。たとえば

736
00:31:21,840 --> 00:31:24,059
、観測のものがあるかもしれません これ

737
00:31:24,059 --> 00:31:28,158
はステージ 1 と状態 2 に依存し

738
00:31:28,260 --> 00:31:30,659
、おそらく観測もあります

739
00:31:30,659 --> 00:31:32,700
が、この観測 2 は状態 2 にのみ依存

740
00:31:32,700 --> 00:31:35,340
するため、破線になっている理由

741
00:31:35,340 --> 00:31:37,380


742
00:31:37,380 --> 00:31:40,559
は、状態と観測の間でパス スパース マッピングを使用できるためです。

743
00:31:40,559 --> 00:31:42,480


744
00:31:42,480 --> 00:31:46,100
すべての可能な接続が

745
00:31:46,799 --> 00:31:50,880
OKである必要はありません.2つのスライドの合計製品スライド

746
00:31:50,880 --> 00:31:52,980


747
00:31:52,980 --> 00:31:55,860
は、これらの矢印である遷移マッピングを介して接続できます.この

748
00:31:55,860 --> 00:31:57,360
矢印はまったく同じですが

749
00:31:57,360 --> 00:32:00,419
、2つの時間ステップ間では、たとえば、

750
00:32:00,419 --> 00:32:04,080
これはあそこの状態です. 観察が状態の任意のサブセットに依存するのとまったく同じように

751
00:32:04,080 --> 00:32:06,179
、前の時間ステップとして

752
00:32:06,179 --> 00:32:08,399
任意の方法

753
00:32:08,399 --> 00:32:11,159


754
00:32:11,159 --> 00:32:13,260
で状態に依存できます

755
00:32:13,260 --> 00:32:15,840
が、この表現は少し異なります

756
00:32:15,840 --> 00:32:17,820


757
00:32:17,820 --> 00:32:20,159
生成モデル全体を提示することになると実際的ではないため、

758
00:32:20,159 --> 00:32:22,380
これらの上部

759
00:32:22,380 --> 00:32:23,519
ワイヤ サイズ

760
00:32:23,519 --> 00:32:28,080
を t s t と呼ばれる正方形として表すだけです。そのため、

761
00:32:28,080 --> 00:32:30,419
上部の右側のサイズに注目し、

762
00:32:30,419 --> 00:32:32,700
ここの背景は灰色になってい

763
00:32:32,700 --> 00:32:35,220
ます。これは、上部のスライド内の観察が

764
00:32:35,220 --> 00:32:37,500
それらが実際に

765
00:32:37,500 --> 00:32:40,320
観測されている場合、将来的には背景

766
00:32:40,320 --> 00:32:42,960
は白になります。観測が

767
00:32:42,960 --> 00:32:44,760
観測されていない

768
00:32:44,760 --> 00:32:46,740
ためです。では、生成モデルを提示できるこのよりコンパクトなプレゼンテーションを取得しましょう。

769
00:32:46,740 --> 00:32:49,140


770
00:32:49,140 --> 00:32:51,419
ここで

771
00:32:51,419 --> 00:32:52,919
初期の時間ステップ

772
00:32:52,919 --> 00:32:56,039
を確認し、そこから

773
00:32:56,039 --> 00:32:58,860


774
00:32:58,860 --> 00:33:03,000
マルチカルト研究が私たちに求めたときに、ニュートラルプラスサイズを正確に拡張できるので、そこから

775
00:33:03,000 --> 00:33:04,500
始めて、UC基準を計算するかもしれません。

776
00:33:04,500 --> 00:33:07,980
これは

777
00:33:07,980 --> 00:33:10,679
、最高の基準を持つノード

778
00:33:10,679 --> 00:33:12,419


779
00:33:12,419 --> 00:33:13,279


780
00:33:13,279 --> 00:33:15,899
です。 したがって、

781
00:33:15,899 --> 00:33:17,539


782
00:33:17,539 --> 00:33:20,039
ここで状態を計算するために前方予測を使用するだけで、状態

783
00:33:20,039 --> 00:33:22,380
から

784
00:33:22,380 --> 00:33:24,480
、未来を予測するためにもう一度前方予測を使用します 再

785
00:33:24,480 --> 00:33:27,120
観測 この上部の 1 つの

786
00:33:27,120 --> 00:33:28,380
スライス

787
00:33:28,380 --> 00:33:31,100
外部

788
00:33:35,480 --> 00:33:38,640
変数にもう一度関連付けられます。これは、時間 T

789
00:33:38,640 --> 00:33:41,279
での一時的なサイズの確率に

790
00:33:41,279 --> 00:33:43,919
将来の

791
00:33:43,919 --> 00:33:46,200
すべての時間制御サイズを掛けた

792
00:33:46,200 --> 00:33:47,340


793
00:33:47,340 --> 00:33:51,120
積です。 現在の研究では、

794
00:33:51,120 --> 00:33:54,659
各観測は

795
00:33:54,659 --> 00:33:56,039
最初のタイプのスライドに依存しているため、これは

796
00:33:56,039 --> 00:33:58,440
最初の数回であり、この観測

797
00:33:58,440 --> 00:34:00,360
はこの最上位サイズ内の状態のサブセットに依存し

798
00:34:00,360 --> 00:34:03,360


799
00:34:03,360 --> 00:34:05,940
、ツリーの最上部にいるため、

800
00:34:05,940 --> 00:34:09,839
タイムステップ T での状態 その後は何

801
00:34:09,839 --> 00:34:12,899
にも依存しません将来の各人気のあるサイズ

802
00:34:12,899 --> 00:34:15,780


803
00:34:15,780 --> 00:34:18,540
について

804
00:34:18,540 --> 00:34:20,099
は、観測

805
00:34:20,099 --> 00:34:22,560
がストップウォッチスライド内の状態に依存する

806
00:34:22,560 --> 00:34:25,079
という事実がまだあるという事実にまだ依存していますが、この

807
00:34:25,079 --> 00:34:28,079
トピックの状態 スライドは

808
00:34:28,079 --> 00:34:30,060
、現在の一番上のスライドのように、前の状態に依存する

809
00:34:30,060 --> 00:34:31,619
ので、たとえば

810
00:34:31,619 --> 00:34:33,899
、この右上のサイズの

811
00:34:33,899 --> 00:34:37,739
半分のバランスが、この上の 1 つのスライスの内側にある

812
00:34:37,739 --> 00:34:39,659


813
00:34:39,659 --> 00:34:41,520
ので、大丈夫です。 これは、生成

814
00:34:41,520 --> 00:34:43,440
モデルが定義さ

815
00:34:43,440 --> 00:34:46,500
れる方法であり、インスタンスを実行する方法は

816
00:34:46,500 --> 00:34:50,339
、IP IP アルゴリズムと呼ばれるものを使用することです。つまり、I

817
00:34:50,339 --> 00:34:53,520
は推論を表し、P は予測を表します。

818
00:34:53,520 --> 00:34:56,399


819
00:34:56,399 --> 00:34:58,980
このスライドは推論タブに関するもので

820
00:34:58,980 --> 00:35:01,560
あり、目標は計算することです。

821
00:35:01,560 --> 00:35:05,160
ステージの後方 ええと、

822
00:35:05,160 --> 00:35:07,740
現在のテンプレート スライドのようなイニシャル

823
00:35:07,740 --> 00:35:09,900
は、所見が与えられているので

824
00:35:09,900 --> 00:35:11,820
、この導出については説明しませんが、YouTube で

825
00:35:11,820 --> 00:35:13,440
見ている場合はビデオを一時停止できますが、

826
00:35:13,440 --> 00:35:15,000


827
00:35:15,000 --> 00:35:15,660
ええと

828
00:35:15,660 --> 00:35:18,300
、基本的に導出を行って

829
00:35:18,300 --> 00:35:19,800
から、 私たちはこのソリューションを取得し

830
00:35:19,800 --> 00:35:21,000
ます。

831
00:35:21,000 --> 00:35:23,040
これは

832
00:35:23,040 --> 00:35:25,980
、すべてのプレーヤーとのすべての電気的マッピングで製品を取得し

833
00:35:25,980 --> 00:35:28,260
、ビルド伝播を使用し

834
00:35:28,260 --> 00:35:30,839
てこの機能を実際に疎外するように指示するだけです。

835
00:35:30,839 --> 00:35:34,140


836
00:35:34,140 --> 00:35:36,599
それはまさに私たちが

837
00:35:36,599 --> 00:35:39,180
やろうとしていることです。

838
00:35:39,180 --> 00:35:41,160
タイムスタンプなので、ここに戻ると、

839
00:35:41,160 --> 00:35:43,320
ここでいくつかの観察があり、ビルド伝播を使用

840
00:35:43,320 --> 00:35:44,940


841
00:35:44,940 --> 00:35:49,079
して初期トポグラフィ内の状態を計算する

842
00:35:49,079 --> 00:35:52,320
ため、これがISTEの各ステップです P

843
00:35:52,320 --> 00:35:53,820
は興味のあるもので

844
00:35:53,820 --> 00:35:56,520
あり

845
00:35:56,520 --> 00:35:59,339
、マルチカルト研究が

846
00:35:59,339 --> 00:36:02,040
一般性モデルの一部を拡張するように指示するたびに p ステップを実行する必要がある

847
00:36:02,040 --> 00:36:03,540
ため、この導出を行うつもりはありません

848
00:36:03,540 --> 00:36:05,460
が、基本的

849
00:36:05,460 --> 00:36:09,119
に ID は計算す​​ることです 現在のテンプレート スライドで行った観察を考慮

850
00:36:09,119 --> 00:36:11,760
して、次のコンポーネント サイズの状態の事後分布を

851
00:36:11,760 --> 00:36:13,980


852
00:36:13,980 --> 00:36:16,640


853
00:36:16,640 --> 00:36:19,440
示します。したがって、ここでもバルコニーが表示されます。

854
00:36:19,440 --> 00:36:22,320
必要な上位 5 枚のスライドの状態のすべての親について、ある種の合計が得られます。

855
00:36:22,320 --> 00:36:24,420


856
00:36:24,420 --> 00:36:27,300


857
00:36:27,300 --> 00:36:29,700
事後形式を計算します。

858
00:36:29,700 --> 00:36:33,000
これは私たちが知っている遷移マッピングで

859
00:36:33,000 --> 00:36:35,760
あり、これ

860
00:36:35,760 --> 00:36:37,980
は前のサンプルサイズからの事後分布である

861
00:36:37,980 --> 00:36:39,720


862
00:36:39,720 --> 00:36:41,220
ため、基本的に私たちが行っていることは

863
00:36:41,220 --> 00:36:43,140
、この場合

864
00:36:43,140 --> 00:36:45,960
、実行できる遷移レベルの期待値を取って前方予測

865
00:36:45,960 --> 00:36:46,920


866
00:36:46,920 --> 00:36:49,320
を行うことです. これをステージに使用

867
00:36:49,320 --> 00:36:53,040
し、観察を一時停止し

868
00:36:53,040 --> 00:36:56,040
て、メインの画像に戻るために、

869
00:36:56,040 --> 00:36:57,839
最初に ISTEP を使用し

870
00:36:57,839 --> 00:36:59,760
て、状態と最初の

871
00:36:59,760 --> 00:37:01,859
2 枚のスライドの事後計算を行います。

872
00:37:01,859 --> 00:37:05,040
は ISTEP であり、

873
00:37:05,040 --> 00:37:07,560
この事後分布を

874
00:37:07,560 --> 00:37:11,280
使用して将来の州の事後分布を計算できます。

875
00:37:11,280 --> 00:37:13,020
したがって、この

876
00:37:13,020 --> 00:37:15,540
二重スライドの状態である可能性があります。次に

877
00:37:15,540 --> 00:37:17,099
、重要なステップをもう一度使用して

878
00:37:17,099 --> 00:37:20,400


879
00:37:20,400 --> 00:37:22,320
、対応する将来の観測値の分布を計算できます。

880
00:37:22,320 --> 00:37:24,180
バタフライを止めるために、

881
00:37:24,180 --> 00:37:27,780
それを行うか、スライドのすべてのトップのように時間ステップを実行し

882
00:37:27,780 --> 00:37:29,579


883
00:37:29,579 --> 00:37:32,180
ます。将来的に拡張したい

884
00:37:33,060 --> 00:37:35,460
です。次に

885
00:37:35,460 --> 00:37:38,520
、このアプローチを定義して最後に行う必要があるのは、

886
00:37:38,520 --> 00:37:40,920
予想される無料です

887
00:37:40,920 --> 00:37:43,380
これを定義するには、

888
00:37:43,380 --> 00:37:46,079
最初にすべての観測を

889
00:37:46,079 --> 00:37:48,480
離れたサブセットにグループ化する

890
00:37:48,480 --> 00:37:51,599
ことにより、基本的に o i は、

891
00:37:51,599 --> 00:37:54,060


892
00:37:54,060 --> 00:37:57,720
このイオンをミュートすることにより、

893
00:37:57,720 --> 00:38:00,919
右上のサイズ インデックス内のすべての観測のセットになり

894
00:38:05,940 --> 00:38:08,220
ます。 期待される自由エネルギー

895
00:38:08,220 --> 00:38:10,320
を定義する方法は、これらの観測を

896
00:38:10,320 --> 00:38:13,380


897
00:38:13,380 --> 00:38:16,380


898
00:38:16,380 --> 00:38:20,220
サブセットにグループ化し

899
00:38:20,220 --> 00:38:22,260
ました

900
00:38:22,260 --> 00:38:23,460


901
00:38:23,460 --> 00:38:25,380


902
00:38:25,380 --> 00:38:27,800
前の

903
00:38:31,560 --> 00:38:33,540
um 予測後のスタイル プロセスの

904
00:38:33,540 --> 00:38:34,740
観察の間のカレンダー バージョンに変換する

905
00:38:34,740 --> 00:38:36,480
ので、これはリスク タームであり、

906
00:38:36,480 --> 00:38:38,520
起こることと私たちが望むことの間の色のバージョン

907
00:38:38,520 --> 00:38:40,859


908
00:38:40,859 --> 00:38:43,500


909
00:38:43,500 --> 00:38:45,900


910
00:38:45,900 --> 00:38:49,520
です。 いつものように、尤度マッピングの期待されるエントロピーとして定義されている

911
00:38:49,520 --> 00:38:53,579


912
00:38:53,579 --> 00:38:57,180
ため、この構築方程式はおそらく紙を作成

913
00:38:57,180 --> 00:38:59,940
していない人にとっては新しいものですが、

914
00:38:59,940 --> 00:39:01,380


915
00:39:01,380 --> 00:39:04,859


916
00:39:04,859 --> 00:39:07,320
より直感的になる特定のケースを1つ見ることができ、

917
00:39:07,320 --> 00:39:09,359
基本的に特定のケースは

918
00:39:09,359 --> 00:39:11,760
それぞれが サブセット

919
00:39:11,760 --> 00:39:15,599
は上位 5 つの観測値に対応し、この

920
00:39:15,599 --> 00:39:19,020
場合、特定の処理の予想フレナジーである

921
00:39:19,020 --> 00:39:21,000
ため、1 つの特定の

922
00:39:21,000 --> 00:39:22,820
マルチインデックス

923
00:39:22,820 --> 00:39:26,520
は

924
00:39:26,520 --> 00:39:27,859


925
00:39:27,859 --> 00:39:30,720
、特定の

926
00:39:30,720 --> 00:39:32,820
観測値に曖昧さを加えたリスク、または特定の観測値にすぎないため、あいまいさとリスクが依然として存在し

927
00:39:32,820 --> 00:39:36,000
ます。

928
00:39:36,000 --> 00:39:37,619
ここで、

929
00:39:37,619 --> 00:39:39,480
これらのアプローチをまとめてテストするために提示する必要がある

930
00:39:39,480 --> 00:39:42,000
ので、分岐

931
00:39:42,000 --> 00:39:44,040
時間と 2 回目のチャンスをさまざまな時間と比較

932
00:39:44,040 --> 00:39:46,380
します。 このようなフィルタリングではないテストと

933
00:39:46,380 --> 00:39:48,420
、伝播に基づく最後のアプローチは

934
00:39:48,420 --> 00:39:50,520


935
00:39:50,520 --> 00:39:52,500


936
00:39:52,500 --> 00:39:56,940
、これら 5 つのデータセットの分散を使用することです。

937
00:39:56,940 --> 00:39:58,980
基本的に

938
00:39:58,980 --> 00:40:01,079


939
00:40:01,079 --> 00:40:04,319
は、ガイドとして環境

940
00:40:04,319 --> 00:40:05,640


941
00:40:05,640 --> 00:40:07,920
を表すので、これで問題ありません 環境には

942
00:40:07,920 --> 00:40:10,619
3 つの異なる形状

943
00:40:10,619 --> 00:40:13,980
があります。

944
00:40:13,980 --> 00:40:16,319
画像の右下隅に向かっ

945
00:40:16,319 --> 00:40:18,480
て引っ張る必要がある添加物があります。正方形があり、正方形

946
00:40:18,480 --> 00:40:21,180
は画像の左下隅に引っ張る必要

947
00:40:21,180 --> 00:40:23,160


948
00:40:23,160 --> 00:40:25,940
があります。位置が多すぎるためです。

949
00:40:25,940 --> 00:40:29,880
X と Y では、

950
00:40:29,880 --> 00:40:34,380
なんらかの形式の状態集約を行い

951
00:40:34,380 --> 00:40:36,960


952
00:40:36,960 --> 00:40:39,180


953
00:40:39,180 --> 00:40:41,579


954
00:40:41,579 --> 00:40:43,500
、形状がこれらの 8 つの位置のいずれかにある場合、左上隅の 8 番目の最初の

955
00:40:43,500 --> 00:40:45,780
位置について、それらを 1 つの状態に集約します。

956
00:40:45,780 --> 00:40:48,839
インデックス 0 で、

957
00:40:48,839 --> 00:40:50,760
この場合はインデックス 1

958
00:40:50,760 --> 00:40:53,400


959
00:40:53,400 --> 00:40:56,760
となり、以下同様に 2 3 4

960
00:40:56,760 --> 00:40:59,339


961
00:40:59,339 --> 00:41:03,359
が 19 に加算されます。

962
00:41:03,359 --> 00:41:05,579
たとえば

963
00:41:05,579 --> 00:41:07,079
、私たちが行っていることは、基本的

964
00:41:07,079 --> 00:41:09,420
に状態空間を縮小することです。

965
00:41:09,420 --> 00:41:11,460
これらのアプローチの一部は、um 状態空間全体

966
00:41:11,460 --> 00:41:14,280
を解決するのに十分強力ではないため、まだ何かを行うことができ

967
00:41:14,280 --> 00:41:16,380


968
00:41:16,380 --> 00:41:17,960


969
00:41:17,960 --> 00:41:20,940
ます。ここでは、財務表現とベイジアン フィルタリングを比較した結果を示し

970
00:41:20,940 --> 00:41:23,640


971
00:41:23,640 --> 00:41:25,560
ます。

972
00:41:25,560 --> 00:41:28,700
信念伝搬

973
00:41:28,819 --> 00:41:31,319
研究の合格に基づく最後のものは

974
00:41:31,319 --> 00:41:34,079
、4 の粒度を使用する

975
00:41:34,079 --> 00:41:36,900


976
00:41:36,900 --> 00:41:41,460
必要がありました。これは、セルが 4 のサイズを持つように、正方形のサイズのような長さが正方形のような 4x4 セットのようなものであることを意味

977
00:41:41,460 --> 00:41:44,339
します。  4

978
00:41:44,339 --> 00:41:46,260
で、この設定で

979
00:41:46,260 --> 00:41:49,560
96 回解決でき

980
00:41:49,560 --> 00:41:53,640


981
00:41:53,640 --> 00:41:54,420


982
00:41:54,420 --> 00:41:58,980
ました。1 回の試行で 1 um の平均時間は約 5 秒

983
00:41:58,980 --> 00:42:02,339
で、ベースとフィルタリングのアプローチで 2

984
00:42:02,339 --> 00:42:04,859
の粒度まで下げることができた

985
00:42:04,859 --> 00:42:07,920
ので、今回はセル

986
00:42:07,920 --> 00:42:09,420
2 x 2 のサイズが

987
00:42:09,420 --> 00:42:12,119
あり、これにより、この

988
00:42:12,119 --> 00:42:15,420
粒度で、水素が時間のタスク 98 を解決できるようになりますが、

989
00:42:15,420 --> 00:42:19,740
問題は、顆粒

990
00:42:19,740 --> 00:42:21,180


991
00:42:21,180 --> 00:42:23,240


992
00:42:23,339 --> 00:42:25,140


993
00:42:25,140 --> 00:42:27,119
のサイズを小さくするためです また

994
00:42:27,119 --> 00:42:30,180
、ステージ空間のサイズ

995
00:42:30,180 --> 00:42:32,880
を大きくすると、計算時間も同様に増加し

996
00:42:32,880 --> 00:42:35,579
ます。つまり、最後のアプローチで

997
00:42:35,579 --> 00:42:37,319
各トレーラーを実行するのに約 17

998
00:42:37,319 --> 00:42:40,020
秒かかる

999
00:42:40,020 --> 00:42:43,079
ことを意味します。

1000
00:42:43,079 --> 00:42:46,020


1001
00:42:46,020 --> 00:42:48,000
可能性と遷移のマッピング。

1002
00:42:48,000 --> 00:42:51,599
これにより、クールな

1003
00:42:51,599 --> 00:42:54,420
範囲の 1 つだけのように下げる

1004
00:42:54,420 --> 00:42:56,040
ことができるため

1005
00:42:56,040 --> 00:42:58,500


1006
00:42:58,500 --> 00:43:02,640
、画像内のすべての X と Y の位置を区別

1007
00:43:02,640 --> 00:43:05,040
することができ、この粒度で解決できます。

1008
00:43:05,040 --> 00:43:07,200
タスクは完全に

1009
00:43:07,200 --> 00:43:08,760


1010
00:43:08,760 --> 00:43:10,800
完了し、分布の因数分解を利用できるため

1011
00:43:10,800 --> 00:43:13,859
、以前のすべてのアプローチよりもはるかに高速になり

1012
00:43:13,859 --> 00:43:15,780
、

1013
00:43:15,780 --> 00:43:18,839
タスクを約 2.5 秒で解決できる

1014
00:43:18,839 --> 00:43:21,480
ので、1 つだけ明確にしたいと思います。

1015
00:43:21,480 --> 00:43:24,180
ここで、この

1016
00:43:24,180 --> 00:43:25,980
アプローチはすべてのy位置を直接モデル化することができたので、

1017
00:43:25,980 --> 00:43:30,240
すべての博覧会すべての

1018
00:43:30,240 --> 00:43:31,980
形状は

1019
00:43:31,980 --> 00:43:34,740
、あなたが知っているように、環境の表示の形状を知っているように、オリエントとは

1020
00:43:34,740 --> 00:43:36,780
何ですか

1021
00:43:36,780 --> 00:43:38,460


1022
00:43:38,460 --> 00:43:40,800


1023
00:43:40,800 --> 00:43:42,960
基本的に、

1024
00:43:42,960 --> 00:43:45,900
各形状は異なるサイズを持つことができ、

1025
00:43:45,900 --> 00:43:49,500
このスケール Dimension は、形状やスケールの可能な方向のようなものであり、

1026
00:43:49,500 --> 00:43:51,359
基本的にこれは状態空間の

1027
00:43:51,359 --> 00:43:54,420
約 700 000 の構成を処理するための信頼できるアプローチです。

1028
00:43:54,420 --> 00:43:57,740


1029
00:43:57,740 --> 00:44:00,780
結果

1030
00:44:00,780 --> 00:44:03,480
は、このアプローチが

1031
00:44:03,480 --> 00:44:06,180
非常に優れたパフォーマンスにつながる可能性があるように、毎日のパフォーマンスにアプローチすることを示して

1032
00:44:06,180 --> 00:44:08,640
いますが、どうすればそれを交換できますか?

1033
00:44:08,640 --> 00:44:10,920
非常に

1034
00:44:10,920 --> 00:44:14,160
小さなコード例

1035
00:44:14,160 --> 00:44:17,640
があります。環境から a b c および d マトリックスを取得しています。

1036
00:44:17,640 --> 00:44:19,440


1037
00:44:19,440 --> 00:44:21,200
C 行列の

1038
00:44:21,200 --> 00:44:24,000
対称性

1039
00:44:24,000 --> 00:44:27,599
は、エージェントの以前の好みに対応し、

1040
00:44:27,599 --> 00:44:29,700
すでに何度か述べたように

1041
00:44:29,700 --> 00:44:31,740
、a は可能性に対応し、b は

1042
00:44:31,740 --> 00:44:33,780
遷移に対応し、は

1043
00:44:33,780 --> 00:44:35,520
初期状態の事前

1044
00:44:35,520 --> 00:44:37,440


1045
00:44:37,440 --> 00:44:40,980
分布であり、bti 3 を作成する方法は次のとおりです。 エージェントは

1046
00:44:40,980 --> 00:44:43,859
、トップ ワイヤー スライドを作成するだけです。ビルダー

1047
00:44:43,859 --> 00:44:45,900
は、アンダースコア ゼロと呼ばれるアクションが 1 つあることをビルダーに伝え、そのアクション

1048
00:44:45,900 --> 00:44:49,260
の

1049
00:44:49,260 --> 00:44:50,760
数を指定します。 この

1050
00:44:50,760 --> 00:44:52,380
命令が

1051
00:44:52,380 --> 00:44:55,619
取り得る値は、システムの状態ごとに 1 つの状態を追加するだけな

1052
00:44:55,619 --> 00:44:57,420
ので、X

1053
00:44:57,420 --> 00:44:59,700
位置、Y 位置、形状のスケールと

1054
00:44:59,700 --> 00:45:02,220
向き、および 2 番目の

1055
00:45:02,220 --> 00:45:05,040
パラメーターとして、パックが

1056
00:45:05,040 --> 00:45:08,099
状態に対する試行のパラメーターであるため、 これで

1057
00:45:08,099 --> 00:45:10,079
、生成モデル内にシステムの状態

1058
00:45:10,079 --> 00:45:11,640
ができました。

1059
00:45:11,640 --> 00:45:14,099
次に

1060
00:45:14,099 --> 00:45:16,980
、ステージごとに観察を直接追加する必要があります。マトリックスを介してこの状態に依存する

1061
00:45:16,980 --> 00:45:19,619
1つの異なる観察を追加

1062
00:45:19,619 --> 00:45:23,040


1063
00:45:23,040 --> 00:45:25,619
するため、マトリックスと親のリストを提供します

1064
00:45:25,619 --> 00:45:27,300
そこで

1065
00:45:27,300 --> 00:45:29,579
、これは基本的

1066
00:45:29,579 --> 00:45:33,660
に一般性モデルの各状態の観察を追加する

1067
00:45:33,660 --> 00:45:36,660
ため、最後のステップの前

1068
00:45:36,660 --> 00:45:39,119
に遷移を追加するだけなので、基本的に

1069
00:45:39,119 --> 00:45:42,480
システムの各段階で、

1070
00:45:42,480 --> 00:45:44,940
使用する必要がある B マトリックスとは

1071
00:45:44,940 --> 00:45:47,339
何か、素数とは何かを言います。 このテキストの親。

1072
00:45:47,339 --> 00:45:50,160
たとえば、エージェントの X での位置は

1073
00:45:50,160 --> 00:45:52,380


1074
00:45:52,380 --> 00:45:54,780
、前の前の用語の時間ステップでの X での発音

1075
00:45:54,780 --> 00:45:56,460
と、外国語で実行されているアクションに依存します。

1076
00:45:56,460 --> 00:45:57,660


1077
00:45:57,660 --> 00:46:00,259


1078
00:46:00,319 --> 00:46:03,420
モデル内のobabilities

1079
00:46:03,420 --> 00:46:05,700
と右上のサイズを構築する前の最後のステップ

1080
00:46:05,700 --> 00:46:08,339
は、以前の設定を定義することだけです.

1081
00:46:08,339 --> 00:46:10,800


1082
00:46:10,800 --> 00:46:12,599
表示データセットでは

1083
00:46:12,599 --> 00:46:15,180
、X Yとブロブの形状に関する設定

1084
00:46:15,180 --> 00:46:19,500
を適用する必要があるためです。 ここ

1085
00:46:19,500 --> 00:46:22,020
に 1 つの要因があるとします。つまり、これは観察の X サブセットの 1 つです。それに

1086
00:46:22,020 --> 00:46:24,300
関連付けられ

1087
00:46:24,300 --> 00:46:26,160
た 3 つのマトリックスを提供します。

1088
00:46:26,160 --> 00:46:27,720


1089
00:46:27,720 --> 00:46:30,839
次に

1090
00:46:30,839 --> 00:46:33,300
、上部の 1 つのスライス

1091
00:46:33,300 --> 00:46:36,540
を返した関数 build を呼び出し、在庫を使用する PCI 3 マップ エージェントを作成します。

1092
00:46:36,540 --> 00:46:39,119
価格のスライドと

1093
00:46:39,119 --> 00:46:40,680


1094
00:46:40,680 --> 00:46:42,599
、アルゴリズムに使用してもらいたい多くの計画の反復と

1095
00:46:42,599 --> 00:46:44,760
、トレーダーの

1096
00:46:44,760 --> 00:46:49,140
探査と探査

1097
00:46:49,140 --> 00:46:52,640
式の活用

1098
00:46:52,800 --> 00:46:56,400
の探査定数を提供します。これは、特にここで

1099
00:46:56,400 --> 00:46:57,599
開発してきたグラフィカル ユーザー インターフェイスであり

1100
00:46:57,599 --> 00:47:00,720
、最初の供給を確認できます。

1101
00:47:00,720 --> 00:47:03,780
ソフトウェアを使用している場合は

1102
00:47:03,780 --> 00:47:05,940
、視点のスライドをクリックして、

1103
00:47:05,940 --> 00:47:08,220
すべて

1104
00:47:08,220 --> 00:47:11,099
の状態変数

1105
00:47:11,099 --> 00:47:13,619
で異なる投稿スタイルを確認できます。違いも確認できます。

1106
00:47:13,619 --> 00:47:16,079
それらについての情報をストップウォッチ スタイルとして、これ

1107
00:47:16,079 --> 00:47:17,700
までに訪問された回数を調べて

1108
00:47:17,700 --> 00:47:19,980


1109
00:47:19,980 --> 00:47:22,559
から、右側の左側のボタンを使用して、

1110
00:47:22,559 --> 00:47:25,200
基本的にステップバイステップのマルチカージ調査を実行して、

1111
00:47:25,200 --> 00:47:27,300
何が起こるかを確認します。

1112
00:47:27,300 --> 00:47:29,579
インターフェースでは

1113
00:47:29,579 --> 00:47:31,500
、子を追加するだけで、それらの子

1114
00:47:31,500 --> 00:47:33,119
をクリックし

1115
00:47:33,119 --> 00:47:35,760


1116
00:47:35,760 --> 00:47:38,400
て木のそれらの部分を探索できるようになります。将来的にウォータースライドという用語に関する情報があるので、これは

1117
00:47:38,400 --> 00:47:40,440


1118
00:47:40,440 --> 00:47:42,119


1119
00:47:42,119 --> 00:47:44,880
別のツールです エージェントの

1120
00:47:44,880 --> 00:47:47,819
計画と信念の両方を分析するために使用します。

1121
00:47:47,819 --> 00:47:49,940


1122
00:47:49,940 --> 00:47:52,380
これで

1123
00:47:52,380 --> 00:47:53,640
、別のアプローチの提示は終わりです。このプレゼンテーション

1124
00:47:53,640 --> 00:47:55,380
を締めくくる時が来ました

1125
00:47:55,380 --> 00:47:58,079


1126
00:47:58,079 --> 00:47:59,520
。3 つの異なるアプローチを見てきました。

1127
00:47:59,520 --> 00:48:01,859


1128
00:48:01,859 --> 00:48:04,500


1129
00:48:04,500 --> 00:48:06,180
積極的な入場と医療芸術の研究を使用して

1130
00:48:06,180 --> 00:48:07,200


1131
00:48:07,200 --> 00:48:11,119
、3番目のものはビジネスに基づいて

1132
00:48:11,119 --> 00:48:13,980
おり、最後のものはIPアルゴリズムに基づいています。

1133
00:48:13,980 --> 00:48:16,260
これは、信念

1134
00:48:16,260 --> 00:48:19,920
伝播と

1135
00:48:19,920 --> 00:48:23,579
用語の前方予測の混合です。 最初のパフォーマンスのsは、bti

1136
00:48:23,579 --> 00:48:27,480
vnpは基本的

1137
00:48:27,480 --> 00:48:29,280
に2番目のものよりもパフォーマンスが

1138
00:48:29,280 --> 00:48:31,619
低いように遅かった.3番目のものよりもパフォーマンスが低い.

1139
00:48:31,619 --> 00:48:33,859


1140
00:48:34,020 --> 00:48:37,140


1141
00:48:37,140 --> 00:48:39,420


1142
00:48:39,420 --> 00:48:41,040


1143
00:48:41,040 --> 00:48:43,680
たとえば

1144
00:48:43,680 --> 00:48:48,059
、画像ベースの問題をどのように解決する

1145
00:48:48,059 --> 00:48:50,160
か、生成モデルの構造を今のところどのように学習できるかが明確でないなど、解決できるタスク

1146
00:48:50,160 --> 00:48:51,660


1147
00:48:51,660 --> 00:48:54,780
モデラーはモデルの説明を提供する必要があり

1148
00:48:54,780 --> 00:48:56,579
ますが、

1149
00:48:56,579 --> 00:48:58,740


1150
00:48:58,740 --> 00:49:02,579
データからそれを学習することができ、

1151
00:49:02,579 --> 00:49:05,220
また今のところ、基本的に

1152
00:49:05,220 --> 00:49:08,760
、有用な

1153
00:49:08,760 --> 00:49:12,240
一連のアクションを使用

1154
00:49:12,240 --> 00:49:14,880
してアクションを提供してきました。

1155
00:49:14,880 --> 00:49:17,520


1156
00:49:17,520 --> 00:49:20,700


1157
00:49:20,700 --> 00:49:22,619
右側に 1 つの位置、次にもう 1

1158
00:49:22,619 --> 00:49:24,480
つ、さらにもう 1 つですが、

1159
00:49:24,480 --> 00:49:27,480
計画を説明可能にするために私たちが行ってきたことは

1160
00:49:27,480 --> 00:49:29,760
、これらすべてのアクションを

1161
00:49:29,760 --> 00:49:32,220
まとめて、おそらく l を実行することです。

1162
00:49:32,220 --> 00:49:34,380
全部で 8 アクションか、全部で 4 アクションかもしれません

1163
00:49:34,380 --> 00:49:37,619
が、これには限界があり、

1164
00:49:37,619 --> 00:49:39,960


1165
00:49:39,960 --> 00:49:41,700
このように関数のシーケンスを

1166
00:49:41,700 --> 00:49:43,920
自動的

1167
00:49:43,920 --> 00:49:46,319
に実行できれば本当に素晴らしいでしょ

1168
00:49:46,319 --> 00:49:48,720


1169
00:49:48,720 --> 00:49:52,740
う。 プレゼンテーション、はい

1170
00:49:52,740 --> 00:49:54,859


1171
00:49:56,640 --> 00:49:59,760
、プレゼンテーションをありがとうございました。実際に

1172
00:49:59,760 --> 00:50:03,140
私たちの反応をうまく活用してください。

1173
00:50:04,140 --> 00:50:05,520


1174
00:50:05,520 --> 00:50:08,460
非常に興味深い多くの

1175
00:50:08,460 --> 00:50:11,760
資料や事柄について

1176
00:50:11,760 --> 00:50:13,680
話し合います。最初に 1 つの一般的な質問から始めます。

1177
00:50:13,680 --> 00:50:16,200
次に、Jacob と Ali がいくつかのコンテキスト

1178
00:50:16,200 --> 00:50:17,700
について質問するのを楽しみにして

1179
00:50:17,700 --> 00:50:20,760
います。

1180
00:50:20,760 --> 00:50:23,940
このチームとあなたはどのようにし

1181
00:50:23,940 --> 00:50:26,880
てこの問題に取り組むようになったのですか?

1182
00:50:26,880 --> 00:50:29,400
アクティブな推論に取り組んでいて拡張機能に興味を持って

1183
00:50:29,400 --> 00:50:31,680
いたのですか?それとも

1184
00:50:31,680 --> 00:50:34,319
別の隣接する領域で働いていてこの

1185
00:50:34,319 --> 00:50:35,640
アルゴリズムに

1186
00:50:35,640 --> 00:50:37,319
たどり着いたの

1187
00:50:37,319 --> 00:50:39,180
ですか? 私はケント

1188
00:50:39,180 --> 00:50:41,040
大学で博士号を取得したように始めています。

1189
00:50:41,040 --> 00:50:43,319


1190
00:50:43,319 --> 00:50:44,280


1191
00:50:44,280 --> 00:50:47,700
基本的に全世界とマレク

1192
00:50:47,700 --> 00:50:49,200
は、このプロの微生物研究所の 2 つです。

1193
00:50:49,200 --> 00:50:51,720
ジェクトは私の監督者なので、これ

1194
00:50:51,720 --> 00:50:53,700
が私たちが博士号を取得して一緒に仕事をするようになった方法で

1195
00:50:53,700 --> 00:50:56,460


1196
00:50:56,460 --> 00:50:59,220
あり、ラ・コスタに敗れたのは私が一緒に働いていた共同研究者です。

1197
00:50:59,220 --> 00:51:01,440


1198
00:51:01,440 --> 00:51:03,900


1199
00:51:03,900 --> 00:51:06,240
神経

1200
00:51:06,240 --> 00:51:09,359
科学の カリフォルニアはどこで、それは

1201
00:51:09,359 --> 00:51:11,280


1202
00:51:11,280 --> 00:51:14,099
発音中のようなプレゼンテーションを通して、彼が私と一緒に働くことに興味を持っていたことを私に知っています。

1203
00:51:14,099 --> 00:51:16,500
これ

1204
00:51:16,500 --> 00:51:18,599
が私がラーソン・アコスタと一緒に仕事を始めた方法

1205
00:51:18,599 --> 00:51:21,420


1206
00:51:21,420 --> 00:51:23,160
です。

1207
00:51:23,160 --> 00:51:26,220
コンピューター サイエンスのような学校

1208
00:51:26,220 --> 00:51:29,760
でコーディングを

1209
00:51:29,760 --> 00:51:31,740
学び、ケント大学に入学し

1210
00:51:31,740 --> 00:51:34,500
て機械学習について学び

1211
00:51:34,500 --> 00:51:36,599
始めました。ここで

1212
00:51:36,599 --> 00:51:37,400


1213
00:51:37,400 --> 00:51:40,079
強化学習や積極的な

1214
00:51:40,079 --> 00:51:43,440
影響力についての経験を積むようになりました。

1215
00:51:43,440 --> 00:51:45,599
当初、マイケルもそうでした

1216
00:51:45,599 --> 00:51:48,960
が、2 人の教師とロボットの

1217
00:51:48,960 --> 00:51:52,140
女性はすでに能動的推論に興味を持っていました。

1218
00:51:52,140 --> 00:51:55,020


1219
00:51:55,020 --> 00:51:57,240


1220
00:51:57,240 --> 00:51:59,040
よく言えば、私はサイドプロジェクトに興味があります。もちろん、それが

1221
00:51:59,040 --> 00:52:00,839


1222
00:52:00,839 --> 00:52:03,960
すべての始まりであり

1223
00:52:03,960 --> 00:52:06,240
、その後博士号を取得する

1224
00:52:06,240 --> 00:52:09,300
ことになったので、基本的には両方とも少しです。

1225
00:52:09,300 --> 00:52:10,920
私は自分の住所を機械学習から来ています。

1226
00:52:10,920 --> 00:52:12,720
長い話は純粋なものから来ています。

1227
00:52:12,720 --> 00:52:16,260
数学と、

1228
00:52:16,260 --> 00:52:19,020
神経科学と簡単な人のように

1229
00:52:19,020 --> 00:52:22,260
、主題からテーブルへのマーケティングをもたらします。

1230
00:52:22,260 --> 00:52:24,780
ありがとうございます。

1231
00:52:24,780 --> 00:52:27,119
さらに多くの質問がありますが、

1232
00:52:27,119 --> 00:52:30,619
最初に質問でアリはどう

1233
00:52:31,700 --> 00:52:34,800


1234
00:52:34,800 --> 00:52:38,700
ですか。 素晴らしいプレゼンテーションです。

1235
00:52:38,700 --> 00:52:41,579
ええと、本当に多くのことを学びました。えーと

1236
00:52:41,579 --> 00:52:43,859
、いくつかの質問をさせていただければ、いくつかコメントをしたいと思い

1237
00:52:43,859 --> 00:52:47,220


1238
00:52:47,220 --> 00:52:49,380
ます。ええと、能動的

1239
00:52:49,380 --> 00:52:51,960
推論スラッシュ fep の研究が最近行われていることをよくご存じのとおりです。

1240
00:52:51,960 --> 00:52:54,900
基本的には 2 つの

1241
00:52:54,900 --> 00:52:58,619
異なる道筋です。理論的な作業は、

1242
00:52:58,619 --> 00:53:01,559
主に根底にある基本原則の開発に向けられてい

1243
00:53:01,559 --> 00:53:03,599


1244
00:53:03,599 --> 00:53:06,359
ます。

1245
00:53:06,359 --> 00:53:07,800


1246
00:53:07,800 --> 00:53:10,440
indおよびより

1247
00:53:10,440 --> 00:53:13,160
応用指向の研究は、おそらく研究者の

1248
00:53:13,160 --> 00:53:15,359


1249
00:53:15,359 --> 00:53:17,819
理論

1250
00:53:17,819 --> 00:53:20,940
物理学と実験物理学の違いと同じです.ええと、

1251
00:53:20,940 --> 00:53:22,980
これについて私に同意するかどう

1252
00:53:22,980 --> 00:53:26,119
かはわかりませんが、残念ながら

1253
00:53:26,119 --> 00:53:28,020
応用指向の研究と

1254
00:53:28,020 --> 00:53:30,800
特に. アクティブなインプリントの作業とさまざまな

1255
00:53:30,800 --> 00:53:33,240
アルゴリズムの実装は

1256
00:53:33,240 --> 00:53:36,119


1257
00:53:36,119 --> 00:53:38,940
、少なくとも

1258
00:53:38,940 --> 00:53:41,460
研究と理論的な側面と比較して、必要なほど多くの認識を得ていません。

1259
00:53:41,460 --> 00:53:44,579
つまり、関連する

1260
00:53:44,579 --> 00:53:47,780
公開された文献の量は比較的以前の関心事である

1261
00:53:47,780 --> 00:53:50,520
ため、この

1262
00:53:50,520 --> 00:53:52,140
コンテキストに照らして

1263
00:53:52,140 --> 00:53:54,780
あなたのライン の研究は私に

1264
00:53:54,780 --> 00:53:57,960
ははるかに大胆で、はるかに

1265
00:53:57,960 --> 00:54:00,119
重要なものになっているように見えるので、それを祝福したいと

1266
00:54:00,119 --> 00:54:04,339
思いましたが、私は

1267
00:54:04,339 --> 00:54:07,380
科学技術の統合の大ファンですので

1268
00:54:07,380 --> 00:54:10,280
、私の最初の質問は

1269
00:54:10,280 --> 00:54:14,480
、ええとの可能性についてのあなたの意見についてです

1270
00:54:14,480 --> 00:54:18,300


1271
00:54:18,300 --> 00:54:20,400


1272
00:54:20,400 --> 00:54:23,400


1273
00:54:23,400 --> 00:54:26,000
例として、アクティブなインプリントのさまざまなアルゴリズムの実装を統合し

1274
00:54:26,000 --> 00:54:28,260
ます。 学習は、将来と研究

1275
00:54:28,260 --> 00:54:30,980
の可能な主題としての生成モデルの構造

1276
00:54:30,980 --> 00:54:34,500


1277
00:54:34,500 --> 00:54:36,960
です。ここで

1278
00:54:36,960 --> 00:54:39,480
数週間前の非常に最近の論文、

1279
00:54:39,480 --> 00:54:42,660
つまり

1280
00:54:42,660 --> 00:54:44,700
アクティブインプリントの学習生成モデルをまったく見ているかどうかはわかりません。

1281
00:54:44,700 --> 00:54:46,859
私が正しければテンソルネットワークを使用して

1282
00:54:46,859 --> 00:54:49,140


1283
00:54:49,140 --> 00:54:54,119
、そのタスクに対する興味深い物理学に触発されたアプローチを概説しますが

1284
00:54:54,119 --> 00:54:56,160


1285
00:54:56,160 --> 00:54:59,400
、

1286
00:54:59,400 --> 00:55:00,960
おそらく論文

1287
00:55:00,960 --> 00:55:02,640
の時点であなたの仕事を認識していなかったため、論文の分岐時間のアクティブな推論への引用は含まれていません 彼らの

1288
00:55:02,640 --> 00:55:05,700
執筆ですが、この作品

1289
00:55:05,700 --> 00:55:07,319


1290
00:55:07,319 --> 00:55:10,680


1291
00:55:10,680 --> 00:55:13,980
は、あなたが今言及した制限のいくつかを克服するために、btaiとの潜在的な統合のかなり良い候補であると私には見えます.

1292
00:55:13,980 --> 00:55:16,559
または別の最近の

1293
00:55:16,559 --> 00:55:19,619
例.

1294
00:55:19,619 --> 00:55:23,280


1295
00:55:23,280 --> 00:55:25,260


1296
00:55:25,260 --> 00:55:28,200


1297
00:55:28,200 --> 00:55:30,540
無限の地平線を導き出そうとする試みである制御原理から

1298
00:55:30,540 --> 00:55:32,700
ええと 平均 ええと アクティブな推論の驚きの定式化

1299
00:55:32,700 --> 00:55:34,500


1300
00:55:34,500 --> 00:55:36,480
ええと、私はあなたのコンパが本当に好きでした 分岐時間アクティブインプリント

1301
00:55:36,480 --> 00:55:38,700
のさまざまなバリアント、

1302
00:55:38,700 --> 00:55:40,619


1303
00:55:40,619 --> 00:55:43,920
特にベンチマーク分析の詳細な概要と

1304
00:55:43,920 --> 00:55:46,380
ええと

1305
00:55:46,380 --> 00:55:48,359
、あなたの仕事で洗練されたアクティブ推論

1306
00:55:48,359 --> 00:55:50,940
を分岐時間アクティブインタレストのサブセットとして説明したことは知っています

1307
00:55:50,940 --> 00:55:53,160
が、これらに関係なく、

1308
00:55:53,160 --> 00:55:55,980
私が今言及した特定の例です。

1309
00:55:55,980 --> 00:55:59,640


1310
00:55:59,640 --> 00:56:02,460


1311
00:56:02,460 --> 00:56:04,339
アクティブな推論実装の他のバリアントとの統合の可能性という観点

1312
00:56:04,339 --> 00:56:07,260


1313
00:56:07,260 --> 00:56:10,559
から、

1314
00:56:10,559 --> 00:56:13,260


1315
00:56:13,260 --> 00:56:15,599


1316
00:56:15,599 --> 00:56:18,000
btai の将来をどのように見ていますか?

1317
00:56:18,000 --> 00:56:20,339
分岐時間のアクティブな

1318
00:56:20,339 --> 00:56:24,359
インプリントが、いつの日

1319
00:56:24,359 --> 00:56:26,640
か他のすべてのアプローチを真に

1320
00:56:26,640 --> 00:56:29,520
統合された種類のフレームワークに組み込む可能性がある

1321
00:56:29,520 --> 00:56:32,940


1322
00:56:32,940 --> 00:56:34,160


1323
00:56:34,160 --> 00:56:36,839
と思いますか? フランスで

1324
00:56:36,839 --> 00:56:38,640


1325
00:56:38,640 --> 00:56:41,520
活発な推理が盛んに行われてきた打ち上げ時とのつながりを模索してきまし

1326
00:56:41,520 --> 00:56:44,819
たが、洗練された入り口と

1327
00:56:44,819 --> 00:56:46,440
は言えません。 発音に基づいて実際に話し

1328
00:56:46,440 --> 00:56:48,660


1329
00:56:48,660 --> 00:56:51,900
てきましたが、私の労働者が

1330
00:56:51,900 --> 00:56:53,880
どのようなものであったかについての考えをすぐに与えることができ、これの結論で

1331
00:56:53,880 --> 00:56:55,079


1332
00:56:55,079 --> 00:56:56,940
あり、基本

1333
00:56:56,940 --> 00:56:58,559
的には

1334
00:56:58,559 --> 00:57:01,020


1335
00:57:01,020 --> 00:57:03,059
、私が地元の観客のエネルギーと呼んでいるものをどのように逆伝播するかについてです。

1336
00:57:03,059 --> 00:57:05,460
基本的に

1337
00:57:05,460 --> 00:57:08,280


1338
00:57:08,280 --> 00:57:11,160
は、将来の1つのノードに関連するエネルギーに期待される

1339
00:57:11,160 --> 00:57:13,920
ものである

1340
00:57:13,920 --> 00:57:16,079
ため、

1341
00:57:16,079 --> 00:57:16,740


1342
00:57:16,740 --> 00:57:18,660


1343
00:57:18,660 --> 00:57:20,819
基本的にバンドマンの方程式

1344
00:57:20,819 --> 00:57:22,740
と強化学習のこの種のすべての

1345
00:57:22,740 --> 00:57:25,140
文献から得られるマルチカロット研究のように、それらを取引で上向きに伝播

1346
00:57:25,140 --> 00:57:28,440
すると、 洗練されたインプリント

1347
00:57:28,440 --> 00:57:31,099
に非常に近いアプローチは、

1348
00:57:31,099 --> 00:57:34,339
基本的に

1349
00:57:34,339 --> 00:57:37,200
洗練された推論

1350
00:57:37,200 --> 00:57:40,680
がベンマン方程式にインスピレーションを与えて

1351
00:57:40,680 --> 00:57:43,440
いるため、報酬を得るの

1352
00:57:43,440 --> 00:57:45,240
ではなく、期待される自由エネルギーに適用しているため、

1353
00:57:45,240 --> 00:57:48,599


1354
00:57:48,599 --> 00:57:51,359
これらを伝播する下向きの検索に行くと過小評価されます。

1355
00:57:51,359 --> 00:57:53,640
将来に向けたローカル コストの場合、

1356
00:57:53,640 --> 00:57:55,859
実際に行っていることは、パスのようなコンピューティングです。

1357
00:57:55,859 --> 00:57:58,380
期待される自由エネルギーの tegral である

1358
00:57:58,380 --> 00:58:00,960
ため、これはアクティブな

1359
00:58:00,960 --> 00:58:03,299
推論

1360
00:58:03,299 --> 00:58:06,000
で

1361
00:58:06,000 --> 00:58:08,700
あり、期待される友情の開始のすべての将来の時間の合計を素晴らしいものとして取っているだけなので、

1362
00:58:08,700 --> 00:58:10,140
これは洗練された推論であり、

1363
00:58:10,140 --> 00:58:11,940
これは

1364
00:58:11,940 --> 00:58:14,339
あなたが言及した他のアプローチに関して現在アクティブな影響を与えています。

1365
00:58:14,339 --> 00:58:16,440


1366
00:58:16,440 --> 00:58:18,900
ええと、それらの論文を読んでいないので、私は意識的

1367
00:58:18,900 --> 00:58:20,099
にそのこと

1368
00:58:20,099 --> 00:58:21,720
を述べていますが、パンチングタイムは

1369
00:58:21,720 --> 00:58:22,920
実際には非常に一般的な

1370
00:58:22,920 --> 00:58:25,020
フレームワークであると信じているので

1371
00:58:25,020 --> 00:58:27,059
、それらのいくつかは関連している可能性があります

1372
00:58:27,059 --> 00:58:30,780
が、これに関する研究はこれ以上ありません。

1373
00:58:30,780 --> 00:58:32,400
あなたは非常に

1374
00:58:32,400 --> 00:58:35,339
素晴らしいコメントです。ヤコブは何か質問はありますか。

1375
00:58:35,339 --> 00:58:36,660


1376
00:58:36,660 --> 00:58:39,960
ええと、もう一度

1377
00:58:39,960 --> 00:58:41,760
素晴らしいプレゼンテーションに感謝します。確かに、元の論文を読んで理解できなかっ

1378
00:58:41,760 --> 00:58:44,760
た多くのことを明確に説明して

1379
00:58:44,760 --> 00:58:48,720


1380
00:58:48,720 --> 00:58:49,920


1381
00:58:49,920 --> 00:58:51,059


1382
00:58:51,059 --> 00:58:55,020
くれました。 あなたが言及したあなたの論文で、生成モデルのさまざまなコンポーネント

1383
00:58:55,020 --> 00:58:56,940
の構造を学習するという問題に再び戻ることに疑問に思っ

1384
00:58:56,940 --> 00:58:59,400


1385
00:58:59,400 --> 00:59:01,140


1386
00:59:01,140 --> 00:59:03,059
ています

1387
00:59:03,059 --> 00:59:04,920


1388
00:59:04,920 --> 00:59:05,640


1389
00:59:05,640 --> 00:59:09,240


1390
00:59:09,240 --> 00:59:11,940


1391
00:59:11,940 --> 00:59:13,559
状態空間表現を学習するための一般関数近似器としてディープ ニューラル ネットワークを使用

1392
00:59:13,559 --> 00:59:15,599
する必要が

1393
00:59:15,599 --> 00:59:19,079
ありましたが、ニューラル ネットワークがこの生成モデルのファクトリ グラフ表現にどのように適合するかについて考えたことがあるのではないか

1394
00:59:19,079 --> 00:59:21,540


1395
00:59:21,540 --> 00:59:24,140


1396
00:59:24,140 --> 00:59:27,540
と思います。 これらの異なるコンポーネントの構造を学習するには、

1397
00:59:27,540 --> 00:59:30,839
おそらく 2 つの方法が

1398
00:59:30,839 --> 00:59:32,760


1399
00:59:32,760 --> 00:59:35,700
あると思います

1400
00:59:35,700 --> 00:59:37,079


1401
00:59:37,079 --> 00:59:39,299


1402
00:59:39,299 --> 00:59:41,760


1403
00:59:41,760 --> 00:59:42,900


1404
00:59:42,900 --> 00:59:46,200


1405
00:59:46,200 --> 00:59:49,619
好みと、ええと、

1406
00:59:49,619 --> 00:59:54,000
そのステップをディープニューラルネットワークに置き換えて表現を学習するような以前の信念のようなもの

1407
00:59:54,000 --> 00:59:55,740


1408
00:59:55,740 --> 00:59:58,859


1409
00:59:58,859 --> 01:00:02,339


1410
01:00:02,339 --> 01:00:05,059
ですが

1411
01:00:05,059 --> 01:00:07,920


1412
01:00:07,920 --> 01:00:10,559
、おそらくアジア人

1413
01:00:10,559 --> 01:00:12,299
が観察を受けるように、これらのさまざまなコンポーネントの次元を動的に変更できる別の側面もあります テンソル

1414
01:00:12,299 --> 01:00:14,280
の尤度マッピングでキャプチャされなかった、

1415
01:00:14,280 --> 01:00:16,260
またはおそらくそれ

1416
01:00:16,260 --> 01:00:18,119
は O のマルチエージェント設定です ネ エージェントには

1417
01:00:18,119 --> 01:00:21,059
他のエージェントにはないアフォーダンスがあり

1418
01:00:21,059 --> 01:00:24,200
、観察を通じて新しい遷移マッピングを

1419
01:00:24,200 --> 01:00:29,760
学習

1420
01:00:29,760 --> 01:00:32,460
する必要が

1421
01:00:32,460 --> 01:00:33,540


1422
01:00:33,540 --> 01:00:35,160


1423
01:00:35,160 --> 01:00:37,740


1424
01:00:37,740 --> 01:00:40,260
あります ディープ ラーニングの

1425
01:00:40,260 --> 01:00:42,180
領域は非常に興味深いと思います。

1426
01:00:42,180 --> 01:00:45,780
アクティブなインターンがより複雑なタスクにスケーリングできるようにする必要が

1427
01:00:45,780 --> 01:00:48,359
あり

1428
01:00:48,359 --> 01:00:50,579
ます。最近では、この論文はまだ

1429
01:00:50,579 --> 01:00:52,980
公開されていませんが

1430
01:00:52,980 --> 01:00:55,319
、アクティブな推論のディープ ラーニング バージョンに取り組んでいるので、今の

1431
01:00:55,319 --> 01:00:58,140
ところは 写真の中に分岐時間

1432
01:00:58,140 --> 01:00:59,339
がないので、テイクアウトの研究はもうありません。

1433
01:00:59,339 --> 01:01:00,540


1434
01:01:00,540 --> 01:01:02,720
その理由は、アクティブな影響力のためだけに

1435
01:01:02,720 --> 01:01:05,460
それを機能させることはすでに驚くほど難しいから

1436
01:01:05,460 --> 01:01:08,460


1437
01:01:08,460 --> 01:01:10,380
です。

1438
01:01:10,380 --> 01:01:13,559


1439
01:01:13,559 --> 01:01:15,960
ディープ アクティブ エントランスの独自の実装です

1440
01:01:15,960 --> 01:01:19,440
が、たとえば

1441
01:01:19,440 --> 01:01:22,619
、表示データ セットについて話しましたが、これらのアプリで

1442
01:01:22,619 --> 01:01:25,200
ディープ アクティブ インフルエンスを機能させることができませんでした。

1443
01:01:25,200 --> 01:01:28,380


1444
01:01:28,380 --> 01:01:31,380
これらの環境でこれについて説明している

1445
01:01:31,380 --> 01:01:33,119
ので、ええと、私は

1446
01:01:33,119 --> 01:01:35,280
これについてフィールドとしてプレゼンテーションを行ってきました

1447
01:01:35,280 --> 01:01:37,559
が、基本的にインターネット上の実装の一部に

1448
01:01:37,559 --> 01:01:40,559
は間違い

1449
01:01:40,559 --> 01:01:42,839


1450
01:01:42,839 --> 01:01:45,180
が含まれています。

1451
01:01:45,180 --> 01:01:46,920
可能であれば紙の正確な間違いは

1452
01:01:46,920 --> 01:01:49,619
私が理解していないことであり、ええと、

1453
01:01:49,619 --> 01:01:52,020
別のズーターのために、私は私の質問に答えることができませんでした.

1454
01:01:52,020 --> 01:01:54,420


1455
01:01:54,420 --> 01:01:55,500


1456
01:01:55,500 --> 01:01:57,180


1457
01:01:57,180 --> 01:01:59,240


1458
01:01:59,240 --> 01:02:00,900
驚くべき

1459
01:02:00,900 --> 01:02:02,940
ことに、少なくともにもかかわらず環境で機能させることは非常に難しいため

1460
01:02:02,940 --> 01:02:05,640


1461
01:02:05,640 --> 01:02:07,859


1462
01:02:07,859 --> 01:02:10,619
、ディープ ニューラル

1463
01:02:10,619 --> 01:02:13,020
ネットワークが実際に何を学習しているのか、なぜ

1464
01:02:13,020 --> 01:02:15,359
この環境で失敗するのかを分析する分析に関する最初の論文が作成される予定

1465
01:02:15,359 --> 01:02:17,760


1466
01:02:17,760 --> 01:02:20,160
です。

1467
01:02:20,160 --> 01:02:21,660
私が正しいことを願っているこの実装を適用してみてください。

1468
01:02:21,660 --> 01:02:22,920


1469
01:02:22,920 --> 01:02:25,680
ええと

1470
01:02:25,680 --> 01:02:27,780
、特にターゲットゲーム

1471
01:02:27,780 --> 01:02:29,819
やこのようなものが好きな2つの異なる

1472
01:02:29,819 --> 01:02:32,280


1473
01:02:32,280 --> 01:02:34,859
タスクです。  reemergy と

1474
01:02:34,859 --> 01:02:35,940
、効果的な

1475
01:02:35,940 --> 01:02:38,579
推論の実装が実際にタスクを解決できることを知っ

1476
01:02:38,579 --> 01:02:41,280
ています。この um に関するパラメーターの予備的な結果

1477
01:02:41,280 --> 01:02:43,260


1478
01:02:43,260 --> 01:02:46,200
は、いくつかのタスクがあるように見えるか、

1479
01:02:46,200 --> 01:02:49,039
または深いアクティブな影響

1480
01:02:49,039 --> 01:02:51,599
が実際には、たとえば dqm よりも優れ

1481
01:02:51,599 --> 01:02:54,119
ていることです。

1482
01:02:54,119 --> 01:02:56,160
強化学習の文献からのベンチマークであり

1483
01:02:56,160 --> 01:03:00,180
、ええと、それは単純なバスケットではありません。

1484
01:03:00,180 --> 01:03:03,599
なぜなら

1485
01:03:03,599 --> 01:03:06,420
、私がいたとき、それを実装するのは非常に困難だった

1486
01:03:06,420 --> 01:03:09,619
からです。それは、大規模な

1487
01:03:09,619 --> 01:03:12,960
深層学習の側面に向け

1488
01:03:12,960 --> 01:03:15,119
たものでした。

1489
01:03:15,119 --> 01:03:17,819


1490
01:03:17,819 --> 01:03:20,760


1491
01:03:20,760 --> 01:03:23,640
ベンチマークのようなより標準的な強化学習を打ち負かすことができる非常に堅牢なものを作ること

1492
01:03:23,640 --> 01:03:26,819
、そしてそうです、構造学習の他の機会を打ち負かす

1493
01:03:26,819 --> 01:03:28,740
ことが

1494
01:03:28,740 --> 01:03:31,200
できませんでした。

1495
01:03:31,200 --> 01:03:33,119


1496
01:03:33,119 --> 01:03:35,280
あなたの質問

1497
01:03:35,280 --> 01:03:37,500
にそうです。基本的に私が言わなければならなかっ

1498
01:03:37,500 --> 01:03:39,359
たことです。

1499
01:03:39,359 --> 01:03:41,760
ありがとうございまし

1500
01:03:41,760 --> 01:03:44,579
た。プレゼンテーションの非常に印象的な側面の 1 つ

1501
01:03:44,579 --> 01:03:47,160


1502
01:03:47,160 --> 01:03:49,020
計算の複雑さの分析だった

1503
01:03:49,020 --> 01:03:51,359
ので、これに戻ることができるかもしれません。なぜなら、

1504
01:03:51,359 --> 01:03:53,280
それは私たちが疑問に思って

1505
01:03:53,280 --> 01:03:56,099
おり、何度か議論したから

1506
01:03:56,099 --> 01:03:58,799
です。ええ、あなたは理論上の

1507
01:03:58,799 --> 01:04:01,460
複雑さのクラスを Big O 表記法で提示し

1508
01:04:01,460 --> 01:04:05,220
、次にいくつかの実用的な側面についても議論しました。

1509
01:04:05,220 --> 01:04:09,059


1510
01:04:09,059 --> 01:04:12,119
特定のハードウェアの実際のクロック時間のようなものは、

1511
01:04:12,119 --> 01:04:15,299
どの言語または um

1512
01:04:15,299 --> 01:04:18,000
ハードウェアで実行したか正確にはわかりませんでしたが、

1513
01:04:18,000 --> 01:04:20,640
理論的な複雑さのクラスと

1514
01:04:20,640 --> 01:04:23,460
いくつかのランタイム プロビジョニングを提供したので、

1515
01:04:23,460 --> 01:04:26,660


1516
01:04:26,660 --> 01:04:31,380
この大きな O

1517
01:04:31,380 --> 01:04:34,440
計算の複雑さの分析

1518
01:04:34,440 --> 01:04:37,740
は、アクティブな推論と分岐時間のアクティブな推論のさまざまなバリアントに光を当てます。分析

1519
01:04:37,740 --> 01:04:40,559


1520
01:04:40,559 --> 01:04:44,579
で実際の計算

1521
01:04:44,579 --> 01:04:49,260
リソースに負担が

1522
01:04:49,260 --> 01:04:52,440


1523
01:04:52,440 --> 01:04:55,200


1524
01:04:55,200 --> 01:04:58,319
かかったのは、これが以前に言及したクラッシュを引き起こした RAM オーバーフローでした。

1525
01:04:58,319 --> 01:05:00,960


1526
01:05:00,960 --> 01:05:03,180
理論的には計算の

1527
01:05:03,180 --> 01:05:05,280
複雑さと指数関数で起こっているような一時ファイルが必要です 爆破

1528
01:05:05,280 --> 01:05:07,980
してから、実際に

1529
01:05:07,980 --> 01:05:10,020
この種の分析を

1530
01:05:10,020 --> 01:05:11,640
スケーリングするのに

1531
01:05:11,640 --> 01:05:15,420
役立つものは何ですか。この複雑さの分析のような最初のこと

1532
01:05:15,420 --> 01:05:17,700


1533
01:05:17,700 --> 01:05:19,980


1534
01:05:19,980 --> 01:05:22,859


1535
01:05:22,859 --> 01:05:25,079
は、状態の分布のすべてのパラメーターを格納するために必要なスペースの観点から行われました。 ここ

1536
01:05:25,079 --> 01:05:27,359


1537
01:05:27,359 --> 01:05:29,880


1538
01:05:29,880 --> 01:05:32,039
で、状態のすべての事後分布と同様に、状態のすべての分布を格納するために必要なスペースの量に本当に関心が

1539
01:05:32,039 --> 01:05:34,079


1540
01:05:34,079 --> 01:05:37,020
ありますが、標準のアクティブな推論で何が起こるか

1541
01:05:37,020 --> 01:05:39,180
は、

1542
01:05:39,180 --> 01:05:41,640
利用可能なポリシーの数

1543
01:05:41,640 --> 01:05:42,839
エージェントに 2 つの

1544
01:05:42,839 --> 01:05:44,280
アクション

1545
01:05:44,280 --> 01:05:47,160
があるとします ここに 1 つがあります ここに 1 つ オーケーアクション

1546
01:05:47,160 --> 01:05:49,020
0 アクション ここに 1 つ 最初の

1547
01:05:49,020 --> 01:05:52,079
ステップで 2 番目のステップで 2 つのアクションがあります

1548
01:05:52,079 --> 01:05:54,660


1549
01:05:54,660 --> 01:05:56,940
基本的に、エージェント

1550
01:05:56,940 --> 01:05:57,839


1551
01:05:57,839 --> 01:06:01,200
が実際に実行できるブラックポリシーを変形しました それは

1552
01:06:01,200 --> 01:06:05,579
ゼロゼロゼロワンワンゼロとワンワンに行くことができ、

1553
01:06:05,579 --> 01:06:07,440
このクラスの数は基本的に、たとえば右側の道路の

1554
01:06:07,440 --> 01:06:10,920
ように、時間ステップごとに2倍になり

1555
01:06:10,920 --> 01:06:12,660
ます。

1556
01:06:12,660 --> 01:06:15,180


1557
01:06:15,180 --> 01:06:16,559
以前のプロセスのそれぞれについて、各アクションを再度クリックできるようになったたびに使用します。

1558
01:06:16,559 --> 01:06:18,059


1559
01:06:18,059 --> 01:06:21,059
この指数関数的な成長は

1560
01:06:21,059 --> 01:06:23,160


1561
01:06:23,160 --> 01:06:25,619
、たとえば、ポリシーの

1562
01:06:25,619 --> 01:06:27,839
ソーシャル メンバー

1563
01:06:27,839 --> 01:06:29,940


1564
01:06:29,940 --> 01:06:31,920
の事前確率で非常

1565
01:06:31,920 --> 01:06:34,380
に問題があります。 これらのボーナスごとに予想される自由エネルギー

1566
01:06:34,380 --> 01:06:36,720
を混同する必要があるポリシーの事前確率を定義しますが

1567
01:06:36,720 --> 01:06:38,640


1568
01:06:38,640 --> 01:06:40,500


1569
01:06:40,500 --> 01:06:42,240


1570
01:06:42,240 --> 01:06:45,119
、タイマーが増加を適用していなかったため、指数関数的な数に対してそれを行う必要がある

1571
01:06:45,119 --> 01:06:47,280


1572
01:06:47,280 --> 01:06:49,079
ため、これが最初の問題

1573
01:06:49,079 --> 01:06:52,460
であり

1574
01:06:52,460 --> 01:06:55,140
、説明的にもこれです 指数関数的

1575
01:06:55,140 --> 01:06:57,000
爆発は保険証券の数に限定されません。

1576
01:06:57,000 --> 01:06:59,819
なぜなら、私たちはまだ大丈夫だと覚えている

1577
01:06:59,819 --> 01:07:02,220
からです。おそらくこれ

1578
01:07:02,220 --> 01:07:04,200


1579
01:07:04,200 --> 01:07:06,720
については、バイヤー

1580
01:07:06,720 --> 01:07:08,460
スタイルの推論で使用される変分分布を調べる必要があります

1581
01:07:08,460 --> 01:07:12,299
が

1582
01:07:12,299 --> 01:07:15,960
、 状態はポリシーに依存する

1583
01:07:15,960 --> 01:07:19,260
ため、ポリシーごと

1584
01:07:19,260 --> 01:07:22,680
に状態の分布を保存する必要

1585
01:07:22,680 --> 01:07:25,079
が

1586
01:07:25,079 --> 01:07:26,880
あります。 ポリシー

1587
01:07:26,880 --> 01:07:28,260
は、格納する必要があるステレオの指数関数的な数があることを意味する

1588
01:07:28,260 --> 01:07:30,420


1589
01:07:30,420 --> 01:07:32,059


1590
01:07:32,059 --> 01:07:34,980


1591
01:07:34,980 --> 01:07:37,380
ため、これは標準的な北極圏の推論内で発生する種類の問題

1592
01:07:37,380 --> 01:07:38,579


1593
01:07:38,579 --> 01:07:39,960


1594
01:07:39,960 --> 01:07:42,299


1595
01:07:42,299 --> 01:07:45,539
です。ポリシーの数は指数関数的に増加して

1596
01:07:45,539 --> 01:07:48,359
おり、州の分布も格納する必要

1597
01:07:48,359 --> 01:07:50,819
があります。

1598
01:07:50,819 --> 01:07:53,119


1599
01:07:53,339 --> 01:07:55,619
起動時のアクティブな

1600
01:07:55,619 --> 01:07:59,400
推論が有用になる各時間ステップでは

1601
01:07:59,400 --> 01:08:00,960
、グラフ構造のような構造を使用して、

1602
01:08:00,960 --> 01:08:03,480


1603
01:08:03,480 --> 01:08:05,339


1604
01:08:05,339 --> 01:08:09,539
時間ステップとポリシーのすべての可能な組み合わせを保存する必要が

1605
01:08:09,539 --> 01:08:11,579
ある

1606
01:08:11,579 --> 01:08:14,700
ことを回避します。 直線的に成長して

1607
01:08:14,700 --> 01:08:17,158
いる理由は、過去と現在の

1608
01:08:17,158 --> 01:08:19,799
状態ごとに 1 つの分布をメモリに保持している

1609
01:08:19,799 --> 01:08:21,899


1610
01:08:21,899 --> 01:08:24,299
だけであり、現在の

1611
01:08:24,299 --> 01:08:27,000
時間ステップが来て初めて、将来何が起こるかを想像し始める

1612
01:08:27,000 --> 01:08:28,979


1613
01:08:28,979 --> 01:08:31,920
ためです。この成長は、次の

1614
01:08:31,920 --> 01:08:34,500
ように指数関数的です 将来

1615
01:08:34,500 --> 01:08:36,779
、可能性のあるすべての極地を探索しなけれ

1616
01:08:36,779 --> 01:08:38,640
ばならないとしても、指数関数的な

1617
01:08:38,640 --> 01:08:41,399
成長は

1618
01:08:41,399 --> 01:08:43,620
続くでしょうが、マルチカージの研究を使用しているためです。  h

1619
01:08:43,620 --> 01:08:46,380
基本

1620
01:08:46,380 --> 01:08:48,120
的に、ツリーのごく一部のみを調査します。

1621
01:08:48,120 --> 01:08:51,359
これは、モデルの展開数に関して複雑

1622
01:08:51,359 --> 01:08:55,500
さが指数関数的から線形に移動した場所である

1623
01:08:55,500 --> 01:08:57,299


1624
01:08:57,299 --> 01:08:59,939
ため

1625
01:08:59,939 --> 01:09:02,698
、このモデルで新しいブランチを展開するたびに必要になります。

1626
01:09:02,698 --> 01:09:05,520
この将来のタイムスタンプにもう 1 つのカテゴリカルを保存

1627
01:09:05,520 --> 01:09:08,100
するのは

1628
01:09:08,100 --> 01:09:10,819
良いことです。これは

1629
01:09:10,819 --> 01:09:14,439
、[音楽] の指数関数的な

1630
01:09:14,439 --> 01:09:15,600


1631
01:09:15,600 --> 01:09:18,060
複雑さから、生成モデルの拡張数に関して線形の複雑さに移行できる方法です。これは

1632
01:09:18,060 --> 01:09:20,698


1633
01:09:20,698 --> 01:09:22,920


1634
01:09:22,920 --> 01:09:26,698
容量のためでした。

1635
01:09:26,698 --> 01:09:28,679
クラスハードウェアに関しては、基本

1636
01:09:28,679 --> 01:09:30,899
的に自分のコンピューターだけでした。実際に

1637
01:09:30,899 --> 01:09:34,859
重要なGPUは、このようなものは何も使用しませんでしたが、

1638
01:09:34,859 --> 01:09:38,179
CPUは基本的

1639
01:09:39,060 --> 01:09:41,640
に非常に興味深いものであり、ハードウェア

1640
01:09:41,640 --> 01:09:44,698
または実装側では

1641
01:09:44,698 --> 01:09:46,080


1642
01:09:46,080 --> 01:09:49,979
、PythonまたはJuliaのForney labのようなパッケージがどこに

1643
01:09:49,979 --> 01:09:52,500
ありますか? パラダイムを渡す反応的なメッセージ

1644
01:09:52,500 --> 01:09:56,100
が開発されていますか、

1645
01:09:56,100 --> 01:09:59,460
それとも gpu がこのように関連していると思います

1646
01:09:59,460 --> 01:10:01,980
か?

1647
01:10:01,980 --> 01:10:04,320


1648
01:10:04,320 --> 01:10:07,080


1649
01:10:07,080 --> 01:10:09,360
スペース要件ではなく、コンピューティングの運用面がどのように

1650
01:10:09,360 --> 01:10:11,420
計算されるかを練習します。

1651
01:10:11,420 --> 01:10:15,239
最初に言うことは、

1652
01:10:15,239 --> 01:10:18,659
スペースの複雑さも時間に関連して

1653
01:10:18,659 --> 01:10:20,159
おり、計算の複雑さを知っている

1654
01:10:20,159 --> 01:10:23,520
ということです。

1655
01:10:23,520 --> 01:10:25,679


1656
01:10:25,679 --> 01:10:28,020


1657
01:10:28,020 --> 01:10:31,679


1658
01:10:31,679 --> 01:10:33,239
指数関数的な数の積がある場合

1659
01:10:33,239 --> 01:10:34,920


1660
01:10:34,920 --> 01:10:36,900
、それらの各ポリシーで予想される自由エネルギーの指数関数的な数を計算する必要があります。

1661
01:10:36,900 --> 01:10:39,960


1662
01:10:39,960 --> 01:10:41,640


1663
01:10:41,640 --> 01:10:44,100
また、Via スタイルの事後変数を保存する必要がある場合の事後変数についても同じことが言えます。

1664
01:10:44,100 --> 01:10:45,600
それらの指数関数的な数があり、

1665
01:10:45,600 --> 01:10:48,360
それらを計算する必要があるため、

1666
01:10:48,360 --> 01:10:50,400
これもソリューションで抽出可能になり

1667
01:10:50,400 --> 01:10:52,080


1668
01:10:52,080 --> 01:10:55,980
、実装に関しては、

1669
01:10:55,980 --> 01:10:57,659
何人かの人々が

1670
01:10:57,659 --> 01:11:00,780
Juliaで電話ラボを開発していることを知ってい

1671
01:11:00,780 --> 01:11:02,100
ます私は独自の実装を提供しています Python

1672
01:11:02,100 --> 01:11:03,420


1673
01:11:03,420 --> 01:11:06,480
ではええと、ええと、これらは

1674
01:11:06,480 --> 01:11:10,800
gpusの観点からの可能性です。それらの使用法

1675
01:11:10,800 --> 01:11:12,239
は

1676
01:11:12,239 --> 01:11:13,199


1677
01:11:13,199 --> 01:11:16,280
、

1678
01:11:16,280 --> 01:11:18,600
アイソグラフィックモデルが許可する場合にのみ、ええと本当に役立つと思います

1679
01:11:18,600 --> 01:11:20,340
並列化の

1680
01:11:20,340 --> 01:11:23,760
場合、たとえば、gpu が非常に役立つケースの 1 つ

1681
01:11:23,760 --> 01:11:27,060
は、画像の場合です。これは、

1682
01:11:27,060 --> 01:11:29,340
画像内の各位置を一般

1683
01:11:29,340 --> 01:11:31,620
に並行し

1684
01:11:31,620 --> 01:11:33,960
て処理できるためです。別のモデル

1685
01:11:33,960 --> 01:11:35,880
が必要な場合、マッピングの可能性がわかりません。

1686
01:11:35,880 --> 01:11:37,679
次の 4 ピクセルを購入します。 お互い

1687
01:11:37,679 --> 01:11:39,840
が画像内のパッチのようであり、すべての画像

1688
01:11:39,840 --> 01:11:42,719
のすべての事後を計算する必要

1689
01:11:42,719 --> 01:11:45,300


1690
01:11:45,300 --> 01:11:48,179


1691
01:11:48,179 --> 01:11:51,840
があった場合、並列化の可能性が非常に大きくなりますが、たとえばメッセージ

1692
01:11:51,840 --> 01:11:53,640
が前のメッセージへの依存関係で

1693
01:11:53,640 --> 01:11:56,820
ある場合、ええと、

1694
01:11:56,820 --> 01:11:59,219
入力

1695
01:11:59,219 --> 01:12:02,940
メッセージが到着するのを待っているだけの

1696
01:12:02,940 --> 01:12:05,040
GPU の

1697
01:12:05,040 --> 01:12:08,040
一部であり、分析ソリューションの

1698
01:12:08,040 --> 01:12:10,320
一部は他のメッセージを必要とするため、基本的に制限があります。

1699
01:12:10,320 --> 01:12:13,140


1700
01:12:13,140 --> 01:12:16,260


1701
01:12:16,260 --> 01:12:20,159
GPU の使用はありますが、おそらく画像ベースの生成モデルなど

1702
01:12:20,159 --> 01:12:22,199
の特定のジェネレーター モデルで使用

1703
01:12:22,199 --> 01:12:24,360


1704
01:12:24,360 --> 01:12:27,960
するか、ええと、そうそう割引し

1705
01:12:27,960 --> 01:12:30,600
ます。 非常に単純な場合は、GPU の複雑さから

1706
01:12:30,600 --> 01:12:32,400
多くの恩恵を受けることはないと思い

1707
01:12:32,400 --> 01:12:37,040


1708
01:12:37,560 --> 01:12:39,120


1709
01:12:39,120 --> 01:12:40,280
ます。

1710
01:12:40,280 --> 01:12:40,679
[音楽]

1711
01:12:40,679 --> 01:12:42,239
うーん、

1712
01:12:42,239 --> 01:12:44,699
Ali さんに感謝します。別の質問が必要な場合は、Ali または Jakob

1713
01:12:44,699 --> 01:12:48,019
に質問できます。別の質問についても質問し

1714
01:12:49,400 --> 01:12:53,040
たいと思います。

1715
01:12:53,040 --> 01:12:54,179


1716
01:12:54,179 --> 01:12:55,980


1717
01:12:55,980 --> 01:12:57,840
ブランチタイムアクシデントプリンスの将来の実装の可能

1718
01:12:57,840 --> 01:12:59,460
性

1719
01:12:59,460 --> 01:13:03,000
ダニエルとジェイコブは私が

1720
01:13:03,000 --> 01:13:08,400
ジュリアの大ファンであることを知っ

1721
01:13:08,400 --> 01:13:11,040
ているので、ジュエリーの実装にブランチタイムアクティブ推論を持たせる計画があるかどうか知りたかった

1722
01:13:11,040 --> 01:13:12,780


1723
01:13:12,780 --> 01:13:15,179
ので、私たちはすでに

1724
01:13:15,179 --> 01:13:18,960
Cを持っていると思うので plus plus and python 私が正しければ

1725
01:13:18,960 --> 01:13:20,880
、最初の分岐時の

1726
01:13:20,880 --> 01:13:23,159
アクティブな推論は C

1727
01:13:23,159 --> 01:13:26,400
plus plus で実装され、マルチモーダルは

1728
01:13:26,400 --> 01:13:30,540
Python で

1729
01:13:30,540 --> 01:13:32,100


1730
01:13:32,100 --> 01:13:35,580
実装されたので、btai の他の形式の実装の将来の計画は何

1731
01:13:35,580 --> 01:13:36,659
ですか?

1732
01:13:36,659 --> 01:13:39,120
今のところ、私はちょうど計画していました

1733
01:13:39,120 --> 01:13:40,560
Python

1734
01:13:40,560 --> 01:13:43,440
um を使用する

1735
01:13:43,440 --> 01:13:45,600
だけですが、Julia で報告するのはそれほど難しいことではないと思います。今のところ

1736
01:13:45,600 --> 01:13:48,420
、使用法の声がありません。

1737
01:13:48,420 --> 01:13:51,840
それを共有しましょう。また、将来の可能性についても同様です。

1738
01:13:51,840 --> 01:13:54,360


1739
01:13:54,360 --> 01:13:56,760
パンチングタイムアクティブ推論私は

1740
01:13:56,760 --> 01:13:59,520


1741
01:13:59,520 --> 01:14:01,800
スラントアルゴリズムの実装に取り​​組み始めている

1742
01:14:01,800 --> 01:14:02,780


1743
01:14:02,780 --> 01:14:07,260
ので、これは同時に場所と

1744
01:14:07,260 --> 01:14:09,000
マッピングであるため、

1745
01:14:09,000 --> 01:14:10,560
これらの環境をナビゲート

1746
01:14:10,560 --> 01:14:12,840
するときにマップを作成すると、これも可能性のようになります

1747
01:14:12,840 --> 01:14:17,179
が、 このええと、

1748
01:14:17,179 --> 01:14:20,699
基本的に私は

1749
01:14:20,699 --> 01:14:22,620


1750
01:14:22,620 --> 01:14:24,480
、非常に多数の状態に依存する観測を行うことが

1751
01:14:24,480 --> 01:14:27,540
できることを指数関数的に説明しようとしていました。したがって、

1752
01:14:27,540 --> 01:14:30,179
必要なのは

1753
01:14:30,179 --> 01:14:32,400
、ツリーとして保存される条件付き確率テーブル

1754
01:14:32,400 --> 01:14:35,400
のようなものであり、生物学的

1755
01:14:35,400 --> 01:14:37,380
には 条件付き確率表を使用したルールを奨励でき

1756
01:14:37,380 --> 01:14:39,600
ます。

1757
01:14:39,600 --> 01:14:41,460
たとえば

1758
01:14:41,460 --> 01:14:45,300
、a と b が与えられた場合に C の確率が適切であるという学校があり、

1759
01:14:45,300 --> 01:14:48,420
a が 1 に等しい場合、

1760
01:14:48,420 --> 01:14:50,699


1761
01:14:50,699 --> 01:14:53,880
B で分岐したい場合、0 1 になります。

1762
01:14:53,880 --> 01:14:57,980
おそらくこれ

1763
01:14:57,980 --> 01:15:01,320
これが意味することは、a

1764
01:15:01,320 --> 01:15:04,020
が 1 に等しく、B が 0 に等しい場合

1765
01:15:04,020 --> 01:15:06,239
、a c の確率分布は 0.9 インチ

1766
01:15:06,239 --> 01:15:08,580
の最初の値で 0.1 になるということです。

1767
01:15:08,580 --> 01:15:11,580
2番目の値は es であり、

1768
01:15:11,580 --> 01:15:14,280
基本的には、

1769
01:15:14,280 --> 01:15:16,260
テーブル全体を表すのではなく

1770
01:15:16,260 --> 01:15:18,719
、ツリー構造を選択して

1771
01:15:18,719 --> 01:15:20,940
、世界のダイナミクスと

1772
01:15:20,940 --> 01:15:23,460
尤度関数に関するルールを切り取ることで

1773
01:15:23,460 --> 01:15:25,800
あり、課題は実行できるようにする

1774
01:15:25,800 --> 01:15:28,380
ことです このツリーからの前方予測

1775
01:15:28,380 --> 01:15:31,500
と、フランスでもストリームからの予測です。

1776
01:15:31,500 --> 01:15:34,020
これは別の図であり

1777
01:15:34,020 --> 01:15:35,760


1778
01:15:35,760 --> 01:15:39,020
、将来

1779
01:15:39,659 --> 01:15:42,179
的にどの UI に統合される可能性

1780
01:15:42,179 --> 01:15:44,640
があり

1781
01:15:44,640 --> 01:15:48,360


1782
01:15:48,360 --> 01:15:50,820
ますか?

1783
01:15:50,820 --> 01:15:53,699
ツリー構造

1784
01:15:53,699 --> 01:15:55,800
により

1785
01:15:55,800 --> 01:15:58,679
、冗長性を回避し、いくつかの新しい

1786
01:15:58,679 --> 01:16:01,380
タイプの分析を可能にできるため、真剣に向きを変えますジェイコブ質問がありますか、

1787
01:16:01,380 --> 01:16:03,239
それとも私が尋ねることができます

1788
01:16:03,239 --> 01:16:06,000
ええええと、

1789
01:16:06,000 --> 01:16:10,440
ええと、スラムスレッドを続けます私は

1790
01:16:10,440 --> 01:16:12,659


1791
01:16:12,659 --> 01:16:15,000
あなたがあなたかどうか疑問に思っています

1792
01:16:15,000 --> 01:16:18,000
Slam を

1793
01:16:18,000 --> 01:16:20,880
画像分類問題に適用することを検討しており、

1794
01:16:20,880 --> 01:16:25,140
おそらく、これに適合するように画像分類

1795
01:16:25,140 --> 01:16:27,840
問題をどのように再構成する必要があるかを検討しています。

1796
01:16:27,840 --> 01:16:30,780
まず第一に、分岐時間の

1797
01:16:30,780 --> 01:16:32,520
アクティブな推論スキームですが、全体的な

1798
01:16:32,520 --> 01:16:35,340
アクティブな推論スキーム

1799
01:16:35,340 --> 01:16:38,400


1800
01:16:38,400 --> 01:16:40,280
は、エージェントがアクションを実行

1801
01:16:40,280 --> 01:16:44,100


1802
01:16:44,100 --> 01:16:48,320


1803
01:16:48,320 --> 01:16:52,440
するたびに生成プロセスが変化する、

1804
01:16:52,440 --> 01:16:54,659
これら

1805
01:16:54,659 --> 01:16:56,880
の種類の継続的に進化する問題にはるかに適しているように思われるためです。

1806
01:16:56,880 --> 01:17:00,480


1807
01:17:00,480 --> 01:17:02,040
少なくとも機械学習

1808
01:17:02,040 --> 01:17:03,719
スキームでは、それは

1809
01:17:03,719 --> 01:17:06,179
単なる入力と出力であり

1810
01:17:06,179 --> 01:17:10,380


1811
01:17:10,380 --> 01:17:12,780
、ネットワークを介して戻って伝播されるいくつかのええとエラーええと、

1812
01:17:12,780 --> 01:17:14,159


1813
01:17:14,159 --> 01:17:15,719
それで

1814
01:17:15,719 --> 01:17:18,060
私はあなたがどのようにあなたがどのように考えているのか疑問に思っています

1815
01:17:18,060 --> 01:17:19,679


1816
01:17:19,679 --> 01:17:20,400


1817
01:17:20,400 --> 01:17:23,880
ええと、アクティブな推論による画像の画像分類

1818
01:17:23,880 --> 01:17:27,000
と、全体

1819
01:17:27,000 --> 01:17:29,760


1820
01:17:29,760 --> 01:17:32,580
として、

1821
01:17:32,580 --> 01:17:35,760
ええと、動的環境で画像が入力としてどのように機能するかについて

1822
01:17:35,760 --> 01:17:37,739
です。ええと、もう一度印象に感謝しますえ

1823
01:17:37,739 --> 01:17:39,060


1824
01:17:39,060 --> 01:17:41,040
えと、ええと、基本的に

1825
01:17:41,040 --> 01:17:43,560
画像分類のよう

1826
01:17:43,560 --> 01:17:45,540
なものは、 あなたが今言ったように、このストップウォッチ構造を持っている

1827
01:17:45,540 --> 01:17:47,640


1828
01:17:47,640 --> 01:17:48,900
ため、フランスでアクティブな

1829
01:17:48,900 --> 01:17:51,540
エンジンがapになるのは非常に困難です ある意味では、これ

1830
01:17:51,540 --> 01:17:54,239
はトランジション マッピングが

1831
01:17:54,239 --> 01:17:56,460
恒等関数のような

1832
01:17:56,460 --> 01:17:57,540
ものである

1833
01:17:57,540 --> 01:18:00,000
ことに

1834
01:18:00,000 --> 01:18:02,520


1835
01:18:02,520 --> 01:18:04,380
少し似ています.

1836
01:18:04,380 --> 01:18:06,960
分類

1837
01:18:06,960 --> 01:18:09,360
ええと、アクティブな推論は

1838
01:18:09,360 --> 01:18:11,760


1839
01:18:11,760 --> 01:18:13,920
、このような分類

1840
01:18:13,920 --> 01:18:15,960


1841
01:18:15,960 --> 01:18:18,179


1842
01:18:18,179 --> 01:18:20,580
にはあまり適し

1843
01:18:20,580 --> 01:18:21,900


1844
01:18:21,900 --> 01:18:24,659
ていないと思います。アクティブな推論を適用する必要がある場合、共鳴するものや、基本的にはるかに適しているものを知っているような分類モデルのようなものだと思います。

1845
01:18:24,659 --> 01:18:26,159


1846
01:18:26,159 --> 01:18:27,780


1847
01:18:27,780 --> 01:18:30,480
モデルの構造を変更して、それが上部の壁であることを削除し

1848
01:18:30,480 --> 01:18:32,699
、単に

1849
01:18:32,699 --> 01:18:36,300
観察する必要があります。そうしないと

1850
01:18:36,300 --> 01:18:39,000


1851
01:18:39,000 --> 01:18:41,760
、Atari ゲームの黒いマニュアルのようなある種の動的または暴力が必要になります。

1852
01:18:41,760 --> 01:18:44,400


1853
01:18:44,400 --> 01:18:47,400
この場合

1854
01:18:47,400 --> 01:18:50,640
、環境の時間的ダイナミクスをモデル

1855
01:18:50,640 --> 01:18:52,440
化できます。ここでは、アクティブな影響が非常に

1856
01:18:52,440 --> 01:18:55,679
役立ちます。

1857
01:18:55,679 --> 01:18:57,840
アクションと、それらがトランジションにどのように影響するかを考えてください。

1858
01:18:57,840 --> 01:19:00,960


1859
01:19:00,960 --> 01:19:03,540
基本的には画像を圧縮するエンコーダーを使用できるため、

1860
01:19:03,540 --> 01:19:05,640


1861
01:19:05,640 --> 01:19:08,699
技術的にはここに画像があり

1862
01:19:08,699 --> 01:19:10,500
、生成するエンコーダーへのチャネル経由のようなエンコーダー ネットワークがあります。

1863
01:19:10,500 --> 01:19:13,380
パラメータ

1864
01:19:13,380 --> 01:19:16,199


1865
01:19:16,199 --> 01:19:18,960
は状態の分布の平均と分散であり、

1866
01:19:18,960 --> 01:19:21,000
そこにデコーダがあり

1867
01:19:21,000 --> 01:19:24,000


1868
01:19:24,000 --> 01:19:27,179
、基本的に潜在変数から別の画像を生成します。

1869
01:19:27,179 --> 01:19:28,920
次に

1870
01:19:28,920 --> 01:19:30,120


1871
01:19:30,120 --> 01:19:33,420
、出力するデジタルネットワークでもある遷移ネットワークのようなものがあり

1872
01:19:33,420 --> 01:19:36,000
ます

1873
01:19:36,000 --> 01:19:38,040
次の時間ステップとしての状態全体の分布の平均と分散として、

1874
01:19:38,040 --> 01:19:39,060


1875
01:19:39,060 --> 01:19:41,040
そしてそうです、そしてここ

1876
01:19:41,040 --> 01:19:43,080
には将来の画像用の別のエンコーダーと将来の画像用の別の

1877
01:19:43,080 --> 01:19:45,600
デコーダーも

1878
01:19:45,600 --> 01:19:48,480
あり、これらの遷移ネットワークは

1879
01:19:48,480 --> 01:19:50,280
基本的に考慮に入れる必要があります

1880
01:19:50,280 --> 01:19:52,679
アクションと次の状態を予測

1881
01:19:52,679 --> 01:19:54,840
するための状態です。これは

1882
01:19:54,840 --> 01:19:57,719
、ディープ アクティブな推論アドレスを作成するために必要な種類のアーキテクチャで

1883
01:19:57,719 --> 01:20:00,179


1884
01:20:00,179 --> 01:20:01,980
あり、私は アイデンティティ

1885
01:20:01,980 --> 01:20:03,960
に対する攻撃

1886
01:20:03,960 --> 01:20:07,199
や静的環境などの動的環境により適していると思いますが、

1887
01:20:07,199 --> 01:20:09,120
これを適用するのは実際にははるかに複雑

1888
01:20:09,120 --> 01:20:11,400


1889
01:20:11,400 --> 01:20:13,679


1890
01:20:13,679 --> 01:20:15,020


1891
01:20:15,020 --> 01:20:18,900
です。静的分析と動的分析に関する非常に魅力的なポイントであるイメージ スラムについていくつかの考え

1892
01:20:18,900 --> 01:20:20,580


1893
01:20:20,580 --> 01:20:24,060
を与える

1894
01:20:24,060 --> 01:20:27,139
ことができます。 画像分類タスクを疑似的に動的化できる方法で

1895
01:20:27,139 --> 01:20:30,780


1896
01:20:30,780 --> 01:20:33,120
、いくつかのオプションの 1 つは

1897
01:20:33,120 --> 01:20:37,020


1898
01:20:37,020 --> 01:20:39,480
画像の大規模なデータベース間のナビゲーションであり

1899
01:20:39,480 --> 01:20:42,420
、

1900
01:20:42,420 --> 01:20:44,580
大規模な経験的画像データベース

1901
01:20:44,580 --> 01:20:47,639
またはビデオからのフレームでトレーニングするための有益な例を選択するか、

1902
01:20:47,639 --> 01:20:50,820
AI の迅速なエンジニアリングによる動的フィードバックで潜在的に選択します。

1903
01:20:50,820 --> 01:20:53,639
画像を生成するので、画像

1904
01:20:53,639 --> 01:20:56,880


1905
01:20:56,880 --> 01:21:00,420


1906
01:21:00,420 --> 01:21:02,580
全体のレベルでダイナミクスを使用する動的な質問応答タスクになりますが

1907
01:21:02,580 --> 01:21:04,380
、画像全体を取り込みます。別のアプローチ

1908
01:21:04,380 --> 01:21:07,800
は、注意のみを取る眼球運動能動推論モデルのいくつかに基づいて構築できます。

1909
01:21:07,800 --> 01:21:10,320


1910
01:21:10,320 --> 01:21:11,580


1911
01:21:11,580 --> 01:21:15,179
少量の

1912
01:21:15,179 --> 01:21:18,120
画像で、状態空間またはコンプを潜在的に削減します

1913
01:21:18,120 --> 01:21:20,040
計算の複雑さを

1914
01:21:20,040 --> 01:21:24,179
非常に大きくし、目の動きや注意

1915
01:21:24,179 --> 01:21:26,880
に関するポリシーの選択に関連するいくつかの下位レベルのエンティティのダイナミクスを作成し

1916
01:21:26,880 --> 01:21:29,699


1917
01:21:29,699 --> 01:21:33,060
、それをスラムの下位レベルのように扱い、

1918
01:21:33,060 --> 01:21:35,460


1919
01:21:35,460 --> 01:21:37,679
どのような画像を上位レベルの画像として見ているのかを分類し

1920
01:21:37,679 --> 01:21:40,020
ます。 スラムです

1921
01:21:40,020 --> 01:21:42,300
が、ポリシーは、画像のどの部分が正しくスキャンされているかのレベルで制定されてい

1922
01:21:42,300 --> 01:21:43,920
ます。

1923
01:21:43,920 --> 01:21:45,179


1924
01:21:45,179 --> 01:21:46,560


1925
01:21:46,560 --> 01:21:48,900


1926
01:21:48,900 --> 01:21:50,760


1927
01:21:50,760 --> 01:21:53,280
これは、タスクとして登録を必要とする他の

1928
01:21:53,280 --> 01:21:56,159
アイデアにとっては非常に

1929
01:21:56,159 --> 01:21:58,800
良い設定です。 アクティブな影響

1930
01:21:58,800 --> 01:22:01,080
非常に興味深い

1931
01:22:01,080 --> 01:22:03,780
私はまた、モデルと学習の階層的なネストである

1932
01:22:03,780 --> 01:22:05,460


1933
01:22:05,460 --> 01:22:08,760
他のさまざまな

1934
01:22:08,760 --> 01:22:11,639
アクティブな提案が持っていた2つのモジュールまたは機能についても

1935
01:22:11,639 --> 01:22:15,060


1936
01:22:15,060 --> 01:22:16,440


1937
01:22:16,440 --> 01:22:20,520
尋ねたかったので、ネストと学習

1938
01:22:20,520 --> 01:22:22,739
は理論的および実現された

1939
01:22:22,739 --> 01:22:25,320
計算の複雑さにどのように影響する

1940
01:22:25,320 --> 01:22:29,159
ので、私は次のように思います 私はあなたが実際に助けることができると思います

1941
01:22:29,159 --> 01:22:30,920


1942
01:22:30,920 --> 01:22:34,980
が、アクティブな幼児エージェントの計算の複雑さを使用して、

1943
01:22:34,980 --> 01:22:37,800
たとえば1つのアイデアを使用します 私

1944
01:22:37,800 --> 01:22:39,179
は画像の生成モデルについて話し

1945
01:22:39,179 --> 01:22:41,100


1946
01:22:41,100 --> 01:22:44,280
ていましたが、あなたが画像のようなものを持っていると想像してみてください。画像は、

1947
01:22:44,280 --> 01:22:46,679
それ以上ではなく、おそらく宇宙の原子よりも多くの

1948
01:22:46,679 --> 01:22:48,659
数百万の可能な組み合わせの権利のようになる可能性

1949
01:22:48,659 --> 01:22:50,219


1950
01:22:50,219 --> 01:22:52,380


1951
01:22:52,380 --> 01:22:56,060
があります。 畳み込みニューラル ネットワーク

1952
01:22:56,060 --> 01:22:58,920
の構造を模倣することで、

1953
01:22:58,920 --> 01:23:01,020
ちょっとしたことを行うこと

1954
01:23:01,020 --> 01:23:04,560
ができます。たとえば、さまざま

1955
01:23:04,560 --> 01:23:06,360
な線パターンなどを抽出する生成的な世界をピクセルのパッチで作成できる

1956
01:23:06,360 --> 01:23:08,760
ので

1957
01:23:08,760 --> 01:23:12,120
、水平線や対角線、

1958
01:23:12,120 --> 01:23:14,100
水平線などを作成できます。

1959
01:23:14,100 --> 01:23:16,080
あなたの階層の最初のレベルは、

1960
01:23:16,080 --> 01:23:18,420
それらの情報を抽出し、

1961
01:23:18,420 --> 01:23:19,980
パターンの

1962
01:23:19,980 --> 01:23:22,080
パターンなど

1963
01:23:22,080 --> 01:23:23,760


1964
01:23:23,760 --> 01:23:25,620
を知ってもらいます。カテゴリ分布として知っているこれを作成できると思います

1965
01:23:25,620 --> 01:23:28,800
が、VR の他のモデルでは

1966
01:23:28,800 --> 01:23:30,540
基本的にそれは非常に始まりです あなたはピクセルを持っています

1967
01:23:30,540 --> 01:23:33,360
、そしてあなたは小さなエッジと

1968
01:23:33,360 --> 01:23:35,100
このようなものとエッジの組み合わせ

1969
01:23:35,100 --> 01:23:38,639
を持っていて、基本的にオブジェクトを持つことまでずっとあり

1970
01:23:38,639 --> 01:23:40,620
ます

1971
01:23:40,620 --> 01:23:44,159
が、これは 実装に関しては非常に複雑

1972
01:23:44,159 --> 01:23:47,100


1973
01:23:47,100 --> 01:23:49,980
で、おそらく推論プロセスに GPU を使用する必要

1974
01:23:49,980 --> 01:23:51,480
があります。

1975
01:23:51,480 --> 01:23:54,239
非常に多数のパッチが存在するため

1976
01:23:54,239 --> 01:23:56,540
、トレーニングを高速化する必要があります

1977
01:23:56,540 --> 01:23:59,280
が、それでもこれは削減するための非常に良い方法だと思います

1978
01:23:59,280 --> 01:24:02,520


1979
01:24:02,520 --> 01:24:05,100
エージェントの状態空間

1980
01:24:05,100 --> 01:24:07,080
基本的に標準のアクティブな影響エージェントの入力として画像を配置しようとすると、

1981
01:24:07,080 --> 01:24:09,000


1982
01:24:09,000 --> 01:24:12,000
より多くの

1983
01:24:12,000 --> 01:24:14,159
可能性のある画像と番号付けまたは

1984
01:24:14,159 --> 01:24:15,659
宇宙のパターンを持たなければならないため、小さな画像でも可能性がある

1985
01:24:15,659 --> 01:24:17,219


1986
01:24:17,219 --> 01:24:21,320
ため、 階層はその上で本当に

1987
01:24:21,600 --> 01:24:23,699
役立つので、これ以外の別の質問があり

1988
01:24:23,699 --> 01:24:26,520
ました.2番目の側面は

1989
01:24:26,520 --> 01:24:29,159
、たとえば

1990
01:24:29,159 --> 01:24:31,500
、ツリーが継続

1991
01:24:31,500 --> 01:24:33,900
するときに

1992
01:24:33,900 --> 01:24:37,860
事前確率を更新するか、事前確率または他のタイプの更新に関するポリシーを検討したいかを学習することでした.

1993
01:24:37,860 --> 01:24:40,320


1994
01:24:40,320 --> 01:24:42,120
他の設定で修正される可能性のあるさまざまなパラメーターです。

1995
01:24:42,120 --> 01:24:45,239


1996
01:24:45,239 --> 01:24:48,719
ええと、学習可能な祈りを持っていることについて1つ言えること

1997
01:24:48,719 --> 01:24:51,300
は、場合によってはこれが本当にうまくいかない可能性があるということです。

1998
01:24:51,300 --> 01:24:52,320


1999
01:24:52,320 --> 01:24:55,020
あなたが好きではない場合は、観察があり、状態があると想像してください。

2000
01:24:55,020 --> 01:24:57,620


2001
01:24:58,320 --> 01:25:00,540
これらは

2002
01:25:00,540 --> 01:25:03,000
観察です。ええと、申し訳ありませんが、これは

2003
01:25:03,000 --> 01:25:05,639
状態であり、これが観察に

2004
01:25:05,639 --> 01:25:08,100
なります。3つの可能な状態2つの可能な

2005
01:25:08,100 --> 01:25:10,139
観察

2006
01:25:10,139 --> 01:25:14,100
。 は完全に

2007
01:25:14,100 --> 01:25:15,960
一様なので、パラメータはどこでもすべて 1 である可能性があります。

2008
01:25:15,960 --> 01:25:17,699


2009
01:25:17,699 --> 01:25:21,300
何が起こるかという

2010
01:25:21,300 --> 01:25:24,060
と、観察の 1 つを行う

2011
01:25:24,060 --> 01:25:26,520


2012
01:25:26,520 --> 01:25:28,860


2013
01:25:28,860 --> 01:25:31,620
と、状態の一様分布内の入口プロセスと同じくらい多くのことが得られるということです。

2014
01:25:31,620 --> 01:25:34,199
マトリックス

2015
01:25:34,199 --> 01:25:37,199
は基本的にすべて1であるため

2016
01:25:37,199 --> 01:25:39,840
、観測ごと

2017
01:25:39,840 --> 01:25:42,300
に、基本的にそれを生成する可能性が高い実際のような状態はありません。

2018
01:25:42,300 --> 01:25:44,520


2019
01:25:44,520 --> 01:25:45,780
つまり、推論プロセス

2020
01:25:45,780 --> 01:25:47,340
は状態の均一な分布を持ち

2021
01:25:47,340 --> 01:25:50,940
、基本的に

2022
01:25:50,940 --> 01:25:52,920
これは問題です。 最終

2023
01:25:52,920 --> 01:25:54,300


2024
01:25:54,300 --> 01:25:58,860
的には、いくつかの

2025
01:25:58,860 --> 01:26:02,760
状態の可能性が高くなる可能性がありますが、各状態が

2026
01:26:02,760 --> 01:26:04,080
異なる観測値を生成する可能性が高くないマトリックスのようなものになります

2027
01:26:04,080 --> 01:26:06,360
nd したがって、基本的

2028
01:26:06,360 --> 01:26:08,280
に学習の失敗があります。

2029
01:26:08,280 --> 01:26:10,199
なぜなら

2030
01:26:10,199 --> 01:26:12,480
、あなたが再び起こった場合に好きになれないからです。

2031
01:26:12,480 --> 01:26:14,580


2032
01:26:14,580 --> 01:26:18,000
パラメータを更新する方法を覚えていれば、観察

2033
01:26:18,000 --> 01:26:20,040


2034
01:26:20,040 --> 01:26:22,380
している状態観測ペアの数を数えるだけ

2035
01:26:22,380 --> 01:26:25,440
です。

2036
01:26:25,440 --> 01:26:27,300
すでに観測されている 常に 3 分の 1 のような 1 つの

2037
01:26:27,300 --> 01:26:30,360
ポイントのようなものです。たとえば

2038
01:26:30,360 --> 01:26:33,420
、一様な分布の

2039
01:26:33,420 --> 01:26:35,100
場合、すべての状態の観測の 3 分の 1 を同時にカウントします。

2040
01:26:35,100 --> 01:26:36,840


2041
01:26:36,840 --> 01:26:38,820


2042
01:26:38,820 --> 01:26:42,199


2043
01:26:42,199 --> 01:26:44,159
この観測を生成するのは、それら

2044
01:26:44,159 --> 01:26:46,500
がすべてこれらの観測を生成する可能性が高い

2045
01:26:46,500 --> 01:26:48,900
ためです。そのため、どの状態がどの観測を生成する

2046
01:26:48,900 --> 01:26:51,659
かを明らかに知ることができないという

2047
01:26:51,659 --> 01:26:53,219
こと

2048
01:26:53,219 --> 01:26:55,440
は

2049
01:26:55,440 --> 01:26:58,560
、状態が出現した上記の時間をカウントするだけです

2050
01:26:58,560 --> 01:27:00,719
が、観測に関してはわかりませ

2051
01:27:00,719 --> 01:27:04,620
ん。 これは、たとえば派生物やこのようなものを使用

2052
01:27:04,620 --> 01:27:07,380
して行列を追加して

2053
01:27:07,380 --> 01:27:09,900


2054
01:27:09,900 --> 01:27:11,880
も、環境のダイナミクスを台無しにできないことを示すビジョナリー ケースです。  NTS

2055
01:27:11,880 --> 01:27:13,620
と環境の可能性

2056
01:27:13,620 --> 01:27:14,760
も同様に

2057
01:27:14,760 --> 01:27:18,480
、デジタルネットワークを使用する

2058
01:27:18,480 --> 01:27:21,780
ことでこの問題を回避できるかもしれませんが

2059
01:27:21,780 --> 01:27:23,880


2060
01:27:23,880 --> 01:27:26,219
、電気影響モデル内のパラメーターを学習するの

2061
01:27:26,219 --> 01:27:29,639
は本当の課題のようです

2062
01:27:29,639 --> 01:27:33,199


2063
01:27:33,199 --> 01:27:35,719


2064
01:27:35,719 --> 01:27:39,480


2065
01:27:39,480 --> 01:27:42,239


2066
01:27:42,239 --> 01:27:45,540
モデルが実行できる場合、ユダヤ人の旗に関しては、クライオである可能性が均一ではない

2067
01:27:45,540 --> 01:27:47,699
ため、これは積極的な影響で学習するための課題の1つです。これは

2068
01:27:47,699 --> 01:27:51,259


2069
01:27:53,460 --> 01:27:56,100


2070
01:27:56,100 --> 01:27:59,040
、状態空間を指定する際に遭遇したものです。 どのような

2071
01:27:59,040 --> 01:28:02,880
ポリシーが可能であり、それは

2072
01:28:02,880 --> 01:28:04,560
興味深い会話です。

2073
01:28:04,560 --> 01:28:07,699
モデラーとして私たちをモデルに関与さ

2074
01:28:07,699 --> 01:28:10,320
せ、

2075
01:28:10,320 --> 01:28:14,280


2076
01:28:14,280 --> 01:28:16,920
足場と制約をどこ

2077
01:28:16,920 --> 01:28:20,580


2078
01:28:20,580 --> 01:28:24,540
に設定するかを

2079
01:28:24,540 --> 01:28:27,179
明確にするのに役立つからです。

2080
01:28:27,179 --> 01:28:29,520
たとえそのローカル

2081
01:28:29,520 --> 01:28:31,920
コンテキストがその状態空間でまだ巨大であっても、

2082
01:28:31,920 --> 01:28:34,860
それはまだほんの先端に過ぎないかもしれません

2083
01:28:34,860 --> 01:28:37,620
全体のモデル構造の観点から見た氷山であり、実際に全体のモデル

2084
01:28:37,620 --> 01:28:40,080
構造を調査する必要があると言っているわけではありません

2085
01:28:40,080 --> 01:28:42,000


2086
01:28:42,000 --> 01:28:45,659
が、理論的には

2087
01:28:45,659 --> 01:28:47,400
非常に重要です。または

2088
01:28:47,400 --> 01:28:49,920
、光がどこにあるかを見て

2089
01:28:49,920 --> 01:28:51,659
、ウサギを帽子に入れているだけかもしれません。

2090
01:28:51,659 --> 01:28:54,060
モデルは特定の方法で実行される可能性が

2091
01:28:54,060 --> 01:28:56,820
あります 決定論的でさえ

2092
01:28:56,820 --> 01:28:59,940
あります 最初に秘密が語られているためです うーん

2093
01:28:59,940 --> 01:29:02,059


2094
01:29:02,639 --> 01:29:04,159


2095
01:29:04,159 --> 01:29:07,260
もう1つ質問があり

2096
01:29:07,260 --> 01:29:09,600
ます それからあなたのジャカをします

2097
01:29:09,600 --> 01:29:10,800
ええと、

2098
01:29:10,800 --> 01:29:14,699
あなたは3つの

2099
01:29:14,699 --> 01:29:16,800
異なるアプローチを並べて対比させました

2100
01:29:16,800 --> 01:29:19,080


2101
01:29:19,080 --> 01:29:21,300
ベイジアンフィルタリングと信念

2102
01:29:21,300 --> 01:29:22,620
伝播

2103
01:29:22,620 --> 01:29:28,080
を渡す変分メッセージ、および教訓的な使用か実用的な

2104
01:29:28,080 --> 01:29:29,280


2105
01:29:29,280 --> 01:29:32,420
使用かどうかこれらの異なる

2106
01:29:32,420 --> 01:29:37,320
アプローチが有用または

2107
01:29:37,320 --> 01:29:38,940
専門的

2108
01:29:38,940 --> 01:29:41,580
であるとどこで見ますか、どこが優れているか、またはどこ

2109
01:29:41,580 --> 01:29:43,620
が一般化または別の特殊なケースな

2110
01:29:43,620 --> 01:29:45,780


2111
01:29:45,780 --> 01:29:48,380
ので、たとえば

2112
01:29:48,380 --> 01:29:51,480
その方法

2113
01:29:51,480 --> 01:29:52,860
特に

2114
01:29:52,860 --> 01:29:55,500
過去を追跡

2115
01:29:55,500 --> 01:29:57,840
し、内部に新しい観察結果を得るたびに、バイアス言語でモデルを構築します。

2116
01:29:57,840 --> 01:30:03,020
未来に行くので、ここに

2117
01:30:03,840 --> 01:30:04,620


2118
01:30:04,620 --> 01:30:08,219


2119
01:30:08,219 --> 01:30:09,960


2120
01:30:09,960 --> 01:30:12,120


2121
01:30:12,120 --> 01:30:14,280


2122
01:30:14,280 --> 01:30:16,620


2123
01:30:16,620 --> 01:30:18,840
行かせてください. 新しい

2124
01:30:18,840 --> 01:30:21,659
観察では、それに関連付けられた状態のようなネットワークが

2125
01:30:21,659 --> 01:30:23,520


2126
01:30:23,520 --> 01:30:25,260
あり、何が起こるかという

2127
01:30:25,260 --> 01:30:27,120


2128
01:30:27,120 --> 01:30:29,340


2129
01:30:29,340 --> 01:30:32,820
と、このようなメッセージがあり、時間をさかのぼるメッセージもあるという

2130
01:30:32,820 --> 01:30:35,820
ことです。これらのメッセージにより、自分の

2131
01:30:35,820 --> 01:30:38,100
過去に何が起こったのかを理解する

2132
01:30:38,100 --> 01:30:42,480
ため、このように再訪したり

2133
01:30:42,480 --> 01:30:43,980
、過去についての理解を更新したりするこの機能

2134
01:30:43,980 --> 01:30:46,260
は

2135
01:30:46,260 --> 01:30:47,639
、さまざまな時間のメッセージ

2136
01:30:47,639 --> 01:30:50,280
通過アルゴリズムに非常に固有のものであり

2137
01:30:50,280 --> 01:30:52,980
、たとえばベースとフィルタリングには表示されません。

2138
01:30:52,980 --> 01:30:55,199
設定

2139
01:30:55,199 --> 01:30:59,880
は、現在のランダムな実行可能性の信念状態のみを保持し

2140
01:30:59,880 --> 01:31:02,880


2141
01:31:02,880 --> 01:31:06,840
、新しい観測とそれに関連付けられた新しい状態を取得したときのように拡張

2142
01:31:06,840 --> 01:31:09,480
するためです。 事後情報

2143
01:31:09,480 --> 01:31:11,940
を取得するために予測を実行するだけで

2144
01:31:11,940 --> 01:31:13,440
、それを

2145
01:31:13,440 --> 01:31:15,420
取り除くので

2146
01:31:15,420 --> 01:31:17,460


2147
01:31:17,460 --> 01:31:20,219
、過去の状態に対するあなたの信念に対処するための悪いボードメッセージを持つ

2148
01:31:20,219 --> 01:31:22,739
ことができないため、現在、この種の偽造能力を実際に持つことはできません

2149
01:31:22,739 --> 01:31:25,980


2150
01:31:25,980 --> 01:31:27,780
信念伝播

2151
01:31:27,780 --> 01:31:31,260
アルゴリズムを使用すると、ID が行われたことと非常によく似ています。

2152
01:31:31,260 --> 01:31:33,659


2153
01:31:33,659 --> 01:31:35,520
信念伝播

2154
01:31:35,520 --> 01:31:37,980
設定で信念伝播を使用すると、よりスケーラブルな

2155
01:31:37,980 --> 01:31:42,420
アプローチになり、

2156
01:31:42,420 --> 01:31:45,540
異なるアイテムの状態と異なる

2157
01:31:45,540 --> 01:31:48,199
観測を行うことができます。この

2158
01:31:48,199 --> 01:31:51,360
ptibf アプローチは

2159
01:31:51,360 --> 01:31:55,560
1 つの観測と 1 つの状態にのみ制限され

2160
01:31:55,560 --> 01:31:57,860
ます。たとえば

2161
01:31:57,860 --> 01:32:01,560
、表示環境としてテキストの X 位置ニュートラル アプリケーションがある

2162
01:32:01,560 --> 01:32:03,780
場合は

2163
01:32:03,780 --> 01:32:05,639


2164
01:32:05,639 --> 01:32:07,080
、

2165
01:32:07,080 --> 01:32:09,480
それらの X 位置と Y 位置のすべての組み合わせに対応する 1 つの確率変数を作成する必要があります。 は

2166
01:32:09,480 --> 01:32:11,820
、位置を表すランダム実行可能変数

2167
01:32:11,820 --> 01:32:14,820


2168
01:32:14,820 --> 01:32:16,980
であり、博覧会と Y 位置についてご存知のそれぞれに 2 つの値がある

2169
01:32:16,980 --> 01:32:19,380
場合は、al  l

2170
01:32:19,380 --> 01:32:22,139
組み合わせは、

2171
01:32:22,139 --> 01:32:25,920
すべてのパスワードの 1 倍の各値のように

2172
01:32:25,920 --> 01:32:28,800
なり、これは多くの変数で指数関数的に増加する

2173
01:32:28,800 --> 01:32:30,420
ため、

2174
01:32:30,420 --> 01:32:32,580
現在スケーラブルで

2175
01:32:32,580 --> 01:32:34,739
あり、この変数が 2 つの追加の値を取り、組み合わせの合計数を取ることができるとします。

2176
01:32:34,739 --> 01:32:37,080


2177
01:32:37,080 --> 01:32:38,460
これらの 3 つの確率

2178
01:32:38,460 --> 01:32:40,739
変数の 8 つのようになります

2179
01:32:40,739 --> 01:32:43,020
8 つの可能な組み合わせ 基本的にすべて

2180
01:32:43,020 --> 01:32:45,179
の X と Y の位置または 2 つの

2181
01:32:45,179 --> 01:32:47,639
スケールの可能性の h おそらくスケール 1 と

2182
01:32:47,639 --> 01:32:48,900
スケール 2 で

2183
01:32:48,900 --> 01:32:51,239
あり、この指数関数的成長は、複数の変数を

2184
01:32:51,239 --> 01:32:53,520
持つこの能力を持っていない場合、完全に魔法になります。

2185
01:32:53,520 --> 01:32:55,620


2186
01:32:55,620 --> 01:32:57,540


2187
01:32:57,540 --> 01:33:00,060


2188
01:33:00,060 --> 01:33:02,159


2189
01:33:02,159 --> 01:33:04,860
これは、モデル化しようとする状態と観察の数が拡大するためです。これは、Alexaのもう1つの

2190
01:33:04,860 --> 01:33:07,980
アプローチであるマルチマルチファクターと

2191
01:33:07,980 --> 01:33:11,520
マルチモダリティが

2192
01:33:11,520 --> 01:33:13,440
、より多くの状態でより複雑なアプローチにスケーリングするのに非常に役立つ場所

2193
01:33:13,440 --> 01:33:16,800
です。 すばらしい観察結果

2194
01:33:16,800 --> 01:33:20,760
でした。Jacob さん、締めくくりの

2195
01:33:20,760 --> 01:33:24,080
質問や考え

2196
01:33:26,400 --> 01:33:30,600
はありますか

2197
01:33:30,600 --> 01:33:32,460


2198
01:33:32,460 --> 01:33:35,940
本当に興奮したので

2199
01:33:35,940 --> 01:33:40,260
、あなたの 5 つの論文すべてを読みました。ええと、それ

2200
01:33:40,260 --> 01:33:44,219
は 5 番目の権利です。つまり、ええと、

2201
01:33:44,219 --> 01:33:49,080
5 つの論文をメモまで公開した

2202
01:33:49,080 --> 01:33:51,719
ということです。なぜなら、人々が活発な推論を目にする機会がそうでない場合よりも多いからです。

2203
01:33:51,719 --> 01:33:55,080


2204
01:33:55,080 --> 01:33:58,699
自由エネルギーの原理は、基本的には投機的

2205
01:33:58,699 --> 01:34:01,920


2206
01:34:01,920 --> 01:34:05,340
であり、実際のアプリケーションではあまり実用的な価値のない努力である

2207
01:34:05,340 --> 01:34:09,600
ため、私の意見では、

2208
01:34:09,600 --> 01:34:12,540
あなたの仕事は、私が言及したように、

2209
01:34:12,540 --> 01:34:16,159
この初期の、しかし

2210
01:34:16,159 --> 01:34:19,980
指数関数的に成長している感じに非常に

2211
01:34:19,980 --> 01:34:23,000
歓迎される追加があります。 ええと

2212
01:34:23,000 --> 01:34:26,219
、分岐

2213
01:34:26,219 --> 01:34:28,679
時間のアクティブな推論のための将来のよりエキサイティングな開発、またはおそらく

2214
01:34:28,679 --> 01:34:29,580


2215
01:34:29,580 --> 01:34:33,360
あなたが将来思いつくかもしれない他の

2216
01:34:33,360 --> 01:34:36,600
バリアントええとええと、私は間違いなく

2217
01:34:36,600 --> 01:34:39,420
あなたの仕事をこれからもフォローし続けます。

2218
01:34:39,420 --> 01:34:41,940


2219
01:34:41,940 --> 01:34:43,980
今日私たちに参加してくれてありがとう

2220
01:34:43,980 --> 01:34:46,139
問題ありません 招待してくれてありがとう

2221
01:34:46,139 --> 01:34:48,300
ここで発表できることをとても楽しみにしてい

2222
01:34:48,300 --> 01:34:51,719
ます 招待してくれ

2223
01:34:51,719 --> 01:34:54,780
てありがとう ジェイコブ

2224
01:34:54,780 --> 01:34:58,679


2225
01:34:58,679 --> 01:35:02,880
イオンとディスカッションええと、

2226
01:35:02,880 --> 01:35:07,139
アリもええと、数か月前にあなたの仕事にリンク

2227
01:35:07,139 --> 01:35:10,800
しました。また、

2228
01:35:10,800 --> 01:35:14,100


2229
01:35:14,100 --> 01:35:17,639
ええと、アクティブな推論モデリングの将来について非常に興奮し

2230
01:35:17,639 --> 01:35:20,880


2231
01:35:20,880 --> 01:35:24,840
ました。

2232
01:35:24,840 --> 01:35:27,840
インスティテュートと

2233
01:35:27,840 --> 01:35:30,540
ええと、ますます複雑な状態空間でアクティブな推論を実行

2234
01:35:30,540 --> 01:35:33,500
することの計算コストを削減するこのアプローチ

2235
01:35:33,500 --> 01:35:38,280


2236
01:35:38,280 --> 01:35:41,040


2237
01:35:41,040 --> 01:35:42,900


2238
01:35:42,900 --> 01:35:46,139
は、これらのモデルの採用

2239
01:35:46,139 --> 01:35:50,699
に実際に到達するためのおそらく最良の方法であると思い

2240
01:35:50,699 --> 01:35:53,460
ます 今日

2241
01:35:53,460 --> 01:35:55,139


2242
01:35:55,139 --> 01:35:57,719


2243
01:35:57,719 --> 01:35:58,679
は

2244
01:35:58,679 --> 01:36:01,619
ご参加いただきありがとうござい

2245
01:36:01,619 --> 01:36:04,800


2246
01:36:04,800 --> 01:36:09,000
ました。ディープ アクティブ

2247
01:36:09,000 --> 01:36:11,280
推論ディープ ブランチング タイム アクティブ

2248
01:36:11,280 --> 01:36:14,179
インターンズについての論文を読むのを楽しみにして

2249
01:36:14,179 --> 01:36:18,239
います。どういたしまして。どういたしまして。 いつでも戻ってきて、私たち

2250
01:36:18,239 --> 01:36:20,639
は確かに

2251
01:36:20,639 --> 01:36:22,320
観察し

2252
01:36:22,320 --> 01:36:25,219
ます

2253
01:36:25,219 --> 01:36:29,360


2254
01:36:34,020 --> 01:36:36,440


2255
01:36:36,659 --> 01:36:39,500


2256
01:36:39,780 --> 01:36:42,500


