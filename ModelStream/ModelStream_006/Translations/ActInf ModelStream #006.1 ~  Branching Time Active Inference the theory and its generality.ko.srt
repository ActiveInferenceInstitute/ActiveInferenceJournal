1
00:00:07,020 --> 00:00:10,080
안녕하세요. 여러분을 환영합니다

2
00:00:10,080 --> 00:00:13,559
. 2022년 9월 1일입니다.

3
00:00:13,559 --> 00:00:17,640
모델 스트림 번호

4
00:00:17,640 --> 00:00:19,380
6.1

5
00:00:19,380 --> 00:00:21,300
에 있습니다. 분기

6
00:00:21,300 --> 00:00:24,180
시간 능동 추론 이론과

7
00:00:24,180 --> 00:00:25,439
일반성

8
00:00:25,439 --> 00:00:27,260
에 대해 논의할 예정입니다.

9
00:00:27,260 --> 00:00:31,080
프레젠테이션과 토론을 할 예정입니다. 감사합니다.

10
00:00:31,080 --> 00:00:33,300


11
00:00:33,300 --> 00:00:36,059


12
00:00:36,059 --> 00:00:37,140


13
00:00:37,140 --> 00:00:40,860
참여해 주신 Ali와 Jacob 그리고 더 이상 고민하지 않고 라이브 채팅에 질문을 추가할 다른 분들이 geophilia

14
00:00:40,860 --> 00:00:41,879
Champions

15
00:00:41,879 --> 00:00:44,040
에 참여해 주셔서 정말

16
00:00:44,040 --> 00:00:45,719
감사합니다.

17
00:00:45,719 --> 00:00:48,000
안녕하세요 친절한

18
00:00:48,000 --> 00:00:50,399
소개에 대단히 감사합니다.

19
00:00:50,399 --> 00:00:52,140
오늘

20
00:00:52,140 --> 00:00:54,180
저는 이 기회를 갖게 되어 매우 기쁩니다.

21
00:00:54,180 --> 00:00:55,680
그래서 오늘은 분기 시간 능동적 추론에 대해 이야기할 것입니다

22
00:00:55,680 --> 00:00:58,680


23
00:00:58,680 --> 00:01:00,059
음 기본적으로 접근 방식의 정말 다른

24
00:01:00,059 --> 00:01:03,239
버전입니다.

25
00:01:03,239 --> 00:01:05,700
첫 번째 이유는 대시 통과이므로 두 번째

26
00:01:05,700 --> 00:01:08,880
는 벨기에 필터링을 사용하고 세

27
00:01:08,880 --> 00:01:12,420
번째는  믿음 전파를

28
00:01:12,420 --> 00:01:15,540
사용하여 모델이 여러 관찰과 여러 항목 상태를 포함할 수 있도록 합니다.

29
00:01:15,540 --> 00:01:18,540


30
00:01:18,540 --> 00:01:21,600
이 작업은

31
00:01:21,600 --> 00:01:25,439
우리와 협력하여 실현되었습니다.  OST Acosta Mike

32
00:01:25,439 --> 00:01:28,740
Josh와 Hogwart Bowman

33
00:01:28,740 --> 00:01:30,659
그래서 우선

34
00:01:30,659 --> 00:01:33,360


35
00:01:33,360 --> 00:01:37,700
능동적 추론의 핵심 ID인 행동 인식 주기에 대해 조금 이야기

36
00:01:39,860 --> 00:01:43,259
하고 싶습니다. 두 번째는

37
00:01:43,259 --> 00:01:46,020


38
00:01:46,020 --> 00:01:48,540
예를 들어 환경이 에이전트에게 관찰을 제공하는 에이전트입니다.

39
00:01:48,540 --> 00:01:50,700
환경의 이미지

40
00:01:50,700 --> 00:01:52,860
와 에이전트는 이

41
00:01:52,860 --> 00:01:56,159
입력을 받아서 추론을 수행해야

42
00:01:56,159 --> 00:01:58,020
하며 진입 프로세스의 목표

43
00:01:58,020 --> 00:02:00,479


44
00:02:00,479 --> 00:02:03,899
는 X와 Y에서 흑인

45
00:02:03,899 --> 00:02:06,060
의 위치 또는  고스트 또는

46
00:02:06,060 --> 00:02:08,038
관련 정보가 무엇이든 관계가 있을 수 있습니다.

47
00:02:08,038 --> 00:02:10,500
그런 다음 해당 상태를 기반으로

48
00:02:10,500 --> 00:02:13,040
계획 및 작업 선택

49
00:02:13,040 --> 00:02:16,020


50
00:02:16,020 --> 00:02:18,300
을 수행할 수 있고 작업을 수행할 작업을 선택하는 방법을 선택할 수 있습니다. 이 작업

51
00:02:18,300 --> 00:02:20,819
은 환경에 공급되어

52
00:02:20,819 --> 00:02:24,239
또 다른 관찰을 생성하고

53
00:02:24,239 --> 00:02:27,000
이 주기는 다음이 될 때까지 계속됩니다.  Trail

54
00:02:27,000 --> 00:02:29,400
Ends

55
00:02:29,400 --> 00:02:31,819
이제 코어

56
00:02:31,819 --> 00:02:34,560
가 있으므로 동작 인식 주기인 북극 추론의 핵심 아이디어

57
00:02:34,560 --> 00:02:36,720
가

58
00:02:36,720 --> 00:02:38,580
있습니다. 능동적 추론에 대해 조금 더 이야기하겠습니다.

59
00:02:38,580 --> 00:02:40,140
깊이

60
00:02:40,140 --> 00:02:42,360
그래서 기본적으로 활성 추론은

61
00:02:42,360 --> 00:02:46,200
내가 말했듯이 여기 화면 하단에 표시되는 관찰이 에이전트가 만드는 모델의 장비인

62
00:02:46,200 --> 00:02:49,319
에이전트

63
00:02:49,319 --> 00:02:51,959


64
00:02:51,959 --> 00:02:53,700
에 관한

65
00:02:53,700 --> 00:02:56,700
것이며 이러한 관찰

66
00:02:56,700 --> 00:02:58,019


67
00:02:58,019 --> 00:03:00,540
은 매트릭스가 되도록 매트릭스를 통해 섬 상태에 따라 달라집니다.

68
00:03:00,540 --> 00:03:01,500


69
00:03:01,500 --> 00:03:03,420


70
00:03:03,420 --> 00:03:05,700
가능한 각 라틴 상태에 대한 관찰 분포를 제공합니다

71
00:03:05,700 --> 00:03:07,019


72
00:03:07,019 --> 00:03:10,140


73
00:03:10,140 --> 00:03:12,540
. 초기 항목 상태에 대한 사전 매개변수를 포함하는 G 벡터

74
00:03:12,540 --> 00:03:14,760


75
00:03:14,760 --> 00:03:17,879


76
00:03:17,879 --> 00:03:20,280
와 환경의 전환이 작동하는 방식을 설명하는 B 매트릭스도

77
00:03:20,280 --> 00:03:23,760
있으므로 기본적으로 주어진 방법을 설명합니다.

78
00:03:23,760 --> 00:03:27,180
상태와 행동 우리

79
00:03:27,180 --> 00:03:28,080


80
00:03:28,080 --> 00:03:30,060
는 시간 t에 1을 더한 새 상태를 얻습니다.

81
00:03:30,060 --> 00:03:33,720
제가 말했듯이 행동이 있거나 여기

82
00:03:33,720 --> 00:03:37,680
에 정책 변수가 있고 이 행동

83
00:03:37,680 --> 00:03:40,440
변수 또는 정책은 감마

84
00:03:40,440 --> 00:03:42,959
라고 하는 정밀도 매개변수에 따라 달라

85
00:03:42,959 --> 00:03:47,040
지며 영향을 보게 될 것입니다.  에이전트

86
00:03:47,040 --> 00:03:49,500
의 정책이 얼마나 확률적이거나 결정론적일지

87
00:03:49,500 --> 00:03:52,200


88
00:03:52,200 --> 00:03:53,340
그래서

89
00:03:53,340 --> 00:03:56,760
여기에서 이전 오버 액션이 어떻게 정의되는지 확인

90
00:03:56,760 --> 00:03:57,959


91
00:03:57,959 --> 00:03:59,879
하므로 게임 매개변수에 따라 달라집니다.

92
00:03:59,879 --> 00:04:02,400
그것은 감마

93
00:04:02,400 --> 00:04:05,239
를 뺀 soft Max 함수로 정의됩니다.

94
00:04:05,239 --> 00:04:07,980
정밀도 매개변수

95
00:04:07,980 --> 00:04:10,140
는

96
00:04:10,140 --> 00:04:12,360
예상 자유 에너지와 특정 정책에 대한 예상 자유 에너지

97
00:04:12,360 --> 00:04:15,239
는 기본적으로

98
00:04:15,239 --> 00:04:18,060
모든 미래 시간 단계의 합이므로 t +

99
00:04:18,060 --> 00:04:19,858
1에서

100
00:04:19,858 --> 00:04:23,040
Time Horizon인 대문자 팀에 대한 미래의 첫 단계

101
00:04:23,040 --> 00:04:24,479


102
00:04:24,479 --> 00:04:27,000
이며 각 시간 단계에 대해 예상 자유

103
00:04:27,000 --> 00:04:29,220
에너지는 예상 비용 플러스 xiaomi 주식으로 정의됩니다. 예상 비용

104
00:04:29,220 --> 00:04:31,560


105
00:04:31,560 --> 00:04:34,020


106
00:04:34,020 --> 00:04:37,320
은 예측 후 시험

107
00:04:37,320 --> 00:04:39,360
또는 미래 관찰

108
00:04:39,360 --> 00:04:42,120
과 사이의 K 다이버전스입니다.  이전 선호도이지만 이전

109
00:04:42,120 --> 00:04:44,400
선호도는

110
00:04:44,400 --> 00:04:48,600
에이전트가 관찰하고자 하는 관찰을 정의

111
00:04:48,600 --> 00:04:51,479
하고 예측 사후

112
00:04:51,479 --> 00:04:54,360
는 관찰 가능성

113
00:04:54,360 --> 00:04:56,160
을 정의하므로 우리가 원하는

114
00:04:56,160 --> 00:04:58,139


115
00:04:58,139 --> 00:05:00,180
것은 우리가 배운 것을 실제로 관찰할 수 있도록 분포 사이의 발산을 최소화하는 것입니다.

116
00:05:00,180 --> 00:05:01,979


117
00:05:01,979 --> 00:05:04,500
좋아요 그리고 두 번째 용어는

118
00:05:04,500 --> 00:05:07,320
우도 매핑

119
00:05:07,320 --> 00:05:09,840
의 엔트로피에

120
00:05:09,840 --> 00:05:11,039


121
00:05:11,039 --> 00:05:12,600
관한 것입니다.  g 방향성

122
00:05:12,600 --> 00:05:15,060
사후에 대해 이것이 무엇인지 잠시 후에 설명하겠습니다

123
00:05:15,060 --> 00:05:17,160
어 그것은

124
00:05:17,160 --> 00:05:19,139
예상되는 에너지 위험에

125
00:05:19,139 --> 00:05:21,600
모호성을 더한 정의 또는 용해도당 예상 비용이라고도

126
00:05:21,600 --> 00:05:24,120


127
00:05:24,120 --> 00:05:26,280


128
00:05:26,280 --> 00:05:29,039


129
00:05:29,039 --> 00:05:32,039
합니다.  모델의 변수에서 우리

130
00:05:32,039 --> 00:05:34,680
는 정책이 Precision 매개변수에 의존한다는 것을 확인했습니다.

131
00:05:34,680 --> 00:05:38,100
우리는 매개변수

132
00:05:38,100 --> 00:05:41,539


133
00:05:43,759 --> 00:05:47,759
의 톤수 각각에 대해 Precision에 대한 감마 분포를 가지고

134
00:05:47,759 --> 00:05:51,360
있으므로 b와 d 그리고 우리는 s가 실제로

135
00:05:51,360 --> 00:05:53,220
D에

136
00:05:53,220 --> 00:05:55,440
의존하고 관찰

137
00:05:55,440 --> 00:05:58,319
이 상태에 의존한다는 것을 봅니다.  전이 매핑을 위한 a 매트릭스

138
00:05:58,319 --> 00:06:00,600
와 10 가지를 통해

139
00:06:00,600 --> 00:06:02,100
우리는

140
00:06:02,100 --> 00:06:04,979
이전 상태와 B 매트릭스뿐만

141
00:06:04,979 --> 00:06:06,660
아니라 환경에서 수행되는 작업에 따라 달라지는 상태를

142
00:06:06,660 --> 00:06:09,300


143
00:06:09,300 --> 00:06:12,720
갖게 되므로 이제 우리가 원하는 것이 주어진 모델을 갖게 되었습니다.

144
00:06:12,720 --> 00:06:14,880


145
00:06:14,880 --> 00:06:17,460


146
00:06:17,460 --> 00:06:20,280


147
00:06:20,280 --> 00:06:23,759


148
00:06:23,759 --> 00:06:25,020
사후 분포 계산이라고 부르는 확률의 측면 변수에 대한 사후 신념을 계산할 수 있기를 원하는 일부 관찰

149
00:06:25,020 --> 00:06:26,580


150
00:06:26,580 --> 00:06:28,380


151
00:06:28,380 --> 00:06:30,660
추론

152
00:06:30,660 --> 00:06:32,880
이라고 하는 프로세스를 통해 이를 수행합니다. 예를 들어 편향 정리에 기반한 정확한 추론을 사용할 수 있습니다.

153
00:06:32,880 --> 00:06:35,699


154
00:06:35,699 --> 00:06:38,759
따라서 복소수는 사후

155
00:06:38,759 --> 00:06:41,280
확률 곱하기 사전과 같습니다. 그런 다음

156
00:06:41,280 --> 00:06:43,860
증거를 사용하여 정규화

157
00:06:43,860 --> 00:06:46,259
하고 기본적으로 증거는 다음과 같습니다.

158
00:06:46,259 --> 00:06:49,800


159
00:06:49,800 --> 00:06:53,520
모든 라틴어 변수 X를 합산하여 분자에서

160
00:06:53,520 --> 00:06:56,099
얻은 문제는 X가

161
00:06:56,099 --> 00:06:58,680
이

162
00:06:58,680 --> 00:07:01,080
합계가 적분으로 바뀌고 이 간격에

163
00:07:01,080 --> 00:07:03,720
대한 분석 솔루션이 없을 수

164
00:07:03,720 --> 00:07:05,639


165
00:07:05,639 --> 00:07:08,460
있으므로 X가 연속 무작위 변수일 때 이 방법이 정확한 추론

166
00:07:08,460 --> 00:07:10,919
이 다루기 어려워질 수 있다는 것입니다.

167
00:07:10,919 --> 00:07:13,380
이 때문에 스냅 추론을 통해 대신 수행하는

168
00:07:13,380 --> 00:07:17,039
것은 이 Trooper

169
00:07:17,039 --> 00:07:19,380
스테레오가 매우 복잡할 수 있지만

170
00:07:19,380 --> 00:07:22,199
이 Q를 사용하여 근사화

171
00:07:22,199 --> 00:07:24,060


172
00:07:24,060 --> 00:07:26,340


173
00:07:26,340 --> 00:07:28,199


174
00:07:28,199 --> 00:07:30,840
할 것입니다.  우리는

175
00:07:30,840 --> 00:07:32,460
당신의 작가에 트루퍼 스테레오를 가지고 있고 여기

176
00:07:32,460 --> 00:07:34,020


177
00:07:34,020 --> 00:07:37,380
에 방향성 후방이 어떻게 적합할 수 있는지에 대한 예가 있습니다

178
00:07:37,380 --> 00:07:41,160


179
00:07:41,160 --> 00:07:43,259
능동적 추론의 맥락에서 빨간색의 진정한 후방

180
00:07:43,259 --> 00:07:45,180
방향성 분포는 다음

181
00:07:45,180 --> 00:07:47,780
과 같이 정의되므로 모델

182
00:07:47,780 --> 00:07:50,160
의 모든 전자

183
00:07:50,160 --> 00:07:52,259
변수와 우리가 평균 필드 근사라고 부르는 것을 수행하고 있지만 공동 분포입니다.

184
00:07:52,259 --> 00:07:54,419


185
00:07:54,419 --> 00:07:57,060


186
00:07:57,060 --> 00:07:59,039
분포는 독립적인 것으로 가정하므로

187
00:07:59,039 --> 00:08:01,560


188
00:08:01,560 --> 00:08:05,819
pi a b d 및 감마

189
00:08:05,819 --> 00:08:07,979
매개변수에 대한 종속성이 더 이상 없으며

190
00:08:07,979 --> 00:08:11,879
상태가 정책 포인트에 여전히 의존하는 약간의 예외

191
00:08:11,879 --> 00:08:13,199


192
00:08:13,199 --> 00:08:15,780


193
00:08:15,780 --> 00:08:17,520


194
00:08:17,520 --> 00:08:18,840
가 있습니다.

195
00:08:18,840 --> 00:08:21,360
분포 및 생성 모델 우리

196
00:08:21,360 --> 00:08:23,879
는 biational Primitive를 정의할 수 있으므로

197
00:08:23,879 --> 00:08:25,919
위반 자유 에너지의 목표는

198
00:08:25,919 --> 00:08:28,379


199
00:08:28,379 --> 00:08:30,720
대략적인 사후 자식을 확인하여

200
00:08:30,720 --> 00:08:32,880
변형 분포가

201
00:08:32,880 --> 00:08:35,339
가능한 한 슈퍼 스타일에 가깝게 유지되도록 하는 것이며

202
00:08:35,339 --> 00:08:38,219
스케일 Divergence로 정의됩니다.

203
00:08:38,219 --> 00:08:41,339
대략적인 질문과 생성 모델 사이에서

204
00:08:41,339 --> 00:08:43,019


205
00:08:43,019 --> 00:08:45,480
스타일 자유 에너지를 통한 이 또한

206
00:08:45,480 --> 00:08:48,060


207
00:08:48,060 --> 00:08:51,060
기계 학습에서 부정적인 증거 하한 또는 팔꿈치처럼 불리며

208
00:08:51,060 --> 00:08:53,279


209
00:08:53,279 --> 00:08:56,399
두 개의 직관적인 용어

210
00:08:56,399 --> 00:08:58,860
로 분해되므로 이것이 에너지에 대한 와이어 스타일입니다

211
00:08:58,860 --> 00:09:00,240


212
00:09:00,240 --> 00:09:02,880
. 근사값과 실제

213
00:09:02,880 --> 00:09:05,220
사후값 사이의 K 다이버전스로 분해합니다. 이것이 근사값을 만드는 용어입니다.

214
00:09:05,220 --> 00:09:06,899
부스터는

215
00:09:06,899 --> 00:09:09,360
진정한 후방에 가능한 한 좋을

216
00:09:09,360 --> 00:09:12,180
것이며 여기에 증거가 있지만 우리

217
00:09:12,180 --> 00:09:13,680
가 최적화하고

218
00:09:13,680 --> 00:09:15,480
있는 바이에이셔널 분포와 관련하여 일정

219
00:09:15,480 --> 00:09:18,600
하므로 실제로 Via

220
00:09:18,600 --> 00:09:20,519
Sharp Energy는 저쪽에 있는 첫 번째 용어에 대한 프록시입니다.

221
00:09:20,519 --> 00:09:23,839


222
00:09:24,180 --> 00:09:26,899
따라서

223
00:09:26,899 --> 00:09:30,480
통과하는 것은

224
00:09:30,480 --> 00:09:32,760
기본적으로

225
00:09:32,760 --> 00:09:34,680
The Mark of blankets라고 하는 것을 기반으로 하는 추론 알고리즘입니다. 따라서 그래픽 모델의 특정 노드에

226
00:09:34,680 --> 00:09:37,200
대한 가상 후방을 계산하고 싶다고 가정해 보겠습니다.

227
00:09:37,200 --> 00:09:39,899


228
00:09:39,899 --> 00:09:42,240


229
00:09:42,240 --> 00:09:45,380


230
00:09:45,380 --> 00:09:48,360
a는 담요의 마크에만 의존합니다.

231
00:09:48,360 --> 00:09:49,980


232
00:09:49,980 --> 00:09:52,620
특히 그것은

233
00:09:52,620 --> 00:09:56,160
a의 자식에 의존하므로 여기서 D와 C

234
00:09:56,160 --> 00:09:59,100
는 여기에서 f와 g의 균형에 의존합니다.

235
00:09:59,100 --> 00:10:02,459
또한

236
00:10:02,459 --> 00:10:06,180
이 그림에서 예를 들어 e와 B의 공동 균형에서

237
00:10:06,180 --> 00:10:08,820
그리고 이 매크로 블랭킷이 말하는 것은

238
00:10:08,820 --> 00:10:10,740
실제로 여기에서

239
00:10:10,740 --> 00:10:12,839


240
00:10:12,839 --> 00:10:14,880
추론을 수행할 수 있도록 Markov 브래킷 내부의 변수 값만 알면 됩니다.

241
00:10:14,880 --> 00:10:17,640


242
00:10:17,640 --> 00:10:20,459


243
00:10:20,459 --> 00:10:22,740
이 질문에 대한 좀 더 형식적인 음 관점

244
00:10:22,740 --> 00:10:26,459
이므로 여기

245
00:10:26,459 --> 00:10:30,180
에 하나의 무작위 변수에 대한 최적의 비합리적 분포

246
00:10:30,180 --> 00:10:33,779
가 있으므로 예를 들어 a가 될 수

247
00:10:33,779 --> 00:10:36,320
있고 오른쪽의 쿼리

248
00:10:36,320 --> 00:10:39,420
는 이 어

249
00:10:39,420 --> 00:10:41,579
사후에 대한

250
00:10:41,579 --> 00:10:44,220
분석적 솔루션을 제공합니다.  노드 자체에서 그 부모

251
00:10:44,220 --> 00:10:48,180
의 자식과 코밸런스

252
00:10:48,180 --> 00:10:50,820
그리고 그것이 우리가 알아야 할 전부입니다.

253
00:10:50,820 --> 00:10:52,399
그래서

254
00:10:52,399 --> 00:10:55,800
메시지 비트가

255
00:10:55,800 --> 00:10:57,560
이

256
00:10:57,560 --> 00:11:02,160
iatical 솔루션의 분해에서 메시지로 나온다고 말함으로써 여기서

257
00:11:02,160 --> 00:11:05,040
변형 사후를 형성하기 위해 함께 추가되는 메시지를

258
00:11:05,040 --> 00:11:06,600


259
00:11:06,600 --> 00:11:09,180
볼 수 있습니다.

260
00:11:09,180 --> 00:11:11,100
기본적으로 부모로부터 오는 첫 번째

261
00:11:11,100 --> 00:11:13,920
메시지는 각 장에 대해 하나의 메시지를 볼 수 있으며

262
00:11:13,920 --> 00:11:15,860
우리가 수행하는 모든 메시지

263
00:11:15,860 --> 00:11:19,200
는 매개 변수를 형성하기 위해 추가됩니다.

264
00:11:19,200 --> 00:11:21,899
대략적인 더하기 부족은

265
00:11:21,899 --> 00:11:25,019
여기에 실용적인 예가 있습니다. 기본적으로 우리

266
00:11:25,019 --> 00:11:27,300
는 무작위 변수 y에 영향을 미치려고 합니다.

267
00:11:27,300 --> 00:11:29,519
그래서 우리는 y

268
00:11:29,519 --> 00:11:31,740


269
00:11:31,740 --> 00:11:33,899
의 사후 분포와 같은 분포인 음의 매개변수를 계산하고 싶습니다.

270
00:11:33,899 --> 00:11:36,540


271
00:11:36,540 --> 00:11:38,100
이를 수행하는 방법은

272
00:11:38,100 --> 00:11:40,740
메시지를 보내는 것입니다.  부모

273
00:11:40,740 --> 00:11:43,320
로부터 랜덤 변수 y

274
00:11:43,320 --> 00:11:46,079
를 통해 자식

275
00:11:46,079 --> 00:11:49,019
과 구성 요소에 대해 동일

276
00:11:49,019 --> 00:11:51,360
하고 요소 노드에 도달할 때마다 입력 메시지를 결합하고

277
00:11:51,360 --> 00:11:53,579


278
00:11:53,579 --> 00:11:55,800


279
00:11:55,800 --> 00:11:57,540
모든 메시지를 수신했을 때 결과를 y로 전달

280
00:11:57,540 --> 00:11:59,940
합니다.  함께 그리고

281
00:11:59,940 --> 00:12:02,160
이것은 우리에게 y에 대한 위반 분포의 매개변수를 제공

282
00:12:02,160 --> 00:12:04,800


283
00:12:04,800 --> 00:12:07,380
하므로 이것은

284
00:12:07,380 --> 00:12:09,060
기본적으로 우리가 프랑스에서 수행하는 데 사용하는 알고리즘인 구매자의 다이아몬드였습니다.

285
00:12:09,060 --> 00:12:10,500


286
00:12:10,500 --> 00:12:13,260
이제 저는

287
00:12:13,260 --> 00:12:15,360


288
00:12:15,360 --> 00:12:18,120
우리가 기대하는 데 사용하는 계획 알고리즘인 multicarage 연구에 대해 이야기할 것입니다.

289
00:12:18,120 --> 00:12:21,779
미래로 각 제품의 품질을 예측

290
00:12:21,779 --> 00:12:23,940


291
00:12:23,940 --> 00:12:26,160
하기 전에

292
00:12:26,160 --> 00:12:29,279
커뮤니티 지수의 개념을 소개하고 싶습니다.

293
00:12:29,279 --> 00:12:31,320
음 그래서 여기서 우리는 현재 시간 단계의 상태인 트리의 뿌리를 볼 수

294
00:12:31,320 --> 00:12:33,720


295
00:12:33,720 --> 00:12:35,160


296
00:12:35,160 --> 00:12:38,080
있고 거기에서 우리

297
00:12:38,080 --> 00:12:38,579


298
00:12:38,579 --> 00:12:39,480


299
00:12:39,480 --> 00:12:42,540
는 미래에 가지지 않을 [음악]을 볼 수 있습니다.

300
00:12:42,540 --> 00:12:45,360


301
00:12:45,360 --> 00:12:47,100


302
00:12:47,100 --> 00:12:49,800


303
00:12:49,800 --> 00:12:52,380
인덱스 uh 1의 동작만 포함하는 크기 1의 시퀀스는

304
00:12:52,380 --> 00:12:55,079


305
00:12:55,079 --> 00:12:56,399
실제

306
00:12:56,399 --> 00:12:58,200


307
00:12:58,200 --> 00:13:00,360


308
00:13:00,360 --> 00:13:03,060
동작을 취한 후 동작 1을 수행한 다음 동작 2를 수행할 때 상태를 갖는 상태입니다.

309
00:13:03,060 --> 00:13:05,519
이 인덱스를 다중 인덱스라고 합니다.

310
00:13:05,519 --> 00:13:07,380
우리는

311
00:13:07,380 --> 00:13:09,180


312
00:13:09,180 --> 00:13:11,880
여기에서 행동을 나타내는 몇 가지 지표로 구성되어

313
00:13:11,880 --> 00:13:14,880
있기 때문에 이제 이것을 염두에 두고

314
00:13:14,880 --> 00:13:17,279
다자간 연구에 대해 논의할 수 있으므로

315
00:13:17,279 --> 00:13:19,680
다문화 연구가 구조화되는 방식

316
00:13:19,680 --> 00:13:22,560
은 먼저 4단계로 구성되어 있습니다.

317
00:13:22,560 --> 00:13:24,779
먼저 선택 단계에서 시작합니다.

318
00:13:24,779 --> 00:13:28,019
루트 노드와 UCT 기준을 계산하여

319
00:13:28,019 --> 00:13:30,540


320
00:13:30,540 --> 00:13:33,000
각 트랙에 대해 기억할 수 있는 실제 값입니다.

321
00:13:33,000 --> 00:13:36,360
그런 다음

322
00:13:36,360 --> 00:13:38,339
실제로 가장 높은 속도 값

323
00:13:38,339 --> 00:13:41,639
을 가진 노드를 선택합니다. 예를 들어 S1일 수 있습니다.  그는

324
00:13:41,639 --> 00:13:43,560
조치를 취한

325
00:13:43,560 --> 00:13:45,480
후 여기에서

326
00:13:45,480 --> 00:13:48,000
각 자식의 속도를 계산할 수 있으며 아마도 이

327
00:13:48,000 --> 00:13:50,760
노드가 가장 높은 값이 될 것입니다.

328
00:13:50,760 --> 00:13:53,040
일단 왼쪽 노드

329
00:13:53,040 --> 00:13:55,680
에 도달하면 자식을 확장하는 두 번째 단계로 이동할 수 있습니다.

330
00:13:55,680 --> 00:13:57,480


331
00:13:57,480 --> 00:13:59,940
이 노드와 각 자식에

332
00:13:59,940 --> 00:14:02,699
대해 우리가 할 일은

333
00:14:02,699 --> 00:14:06,660
이 노드에서 일부 규칙 아웃을 시뮬레이션하는 것입니다. 이 노드

334
00:14:06,660 --> 00:14:08,940


335
00:14:08,940 --> 00:14:11,220


336
00:14:11,220 --> 00:14:13,980
가 있으면 이

337
00:14:13,980 --> 00:14:17,399
노드에 대한 평균 예상

338
00:14:17,399 --> 00:14:21,060
빈도를 계산합니다.  과거

339
00:14:21,060 --> 00:14:22,500


340
00:14:22,500 --> 00:14:25,139


341
00:14:25,139 --> 00:14:27,240
에 많이 탐색되지 않은 나무의 일부를 탐색하고 싶기 때문에

342
00:14:27,240 --> 00:14:30,839


343
00:14:30,839 --> 00:14:32,820


344
00:14:32,820 --> 00:14:36,240
각 가지가 몇 번이나 폭발했는지 추적해야 하기 때문에 방문 횟수뿐만 아니라 방금 확장한 어의 조상입니다.

345
00:14:36,240 --> 00:14:39,240
그래서 이것이 계획을 위한 알고리즘

346
00:14:39,240 --> 00:14:41,399
이었고 저는 항상 두 개의 마사지를 받는 활동적인 영아를 분기

347
00:14:41,399 --> 00:14:44,220
하는 첫 번째 접근 방식을 논의하는 데 필요한 배경을 소개했습니다.

348
00:14:44,220 --> 00:14:46,620


349
00:14:46,620 --> 00:14:51,000


350
00:14:51,000 --> 00:14:54,240
그래서 먼저 우리는 필요합니다.  모델을 정의하기

351
00:14:54,240 --> 00:14:56,579
위해 기본적으로 두 부분으로 나뉩니다. 첫 번째 부분은

352
00:14:56,579 --> 00:14:57,740


353
00:14:57,740 --> 00:15:01,019
과거와 현재

354
00:15:01,019 --> 00:15:02,880
를 나타내며 기본적으로 부분적으로 관찰 가능한

355
00:15:02,880 --> 00:15:04,800
미세 결정 프로세스입니다. 이것은 상태에 따라 관찰

356
00:15:04,800 --> 00:15:06,480
이 있다고 말하는 공격적인 단어

357
00:15:06,480 --> 00:15:09,480


358
00:15:09,480 --> 00:15:11,279
입니다. 이것은 매트릭스입니다.

359
00:15:11,279 --> 00:15:14,519
우리는 거기에 동작 변수가 있고

360
00:15:14,519 --> 00:15:16,320


361
00:15:16,320 --> 00:15:19,079


362
00:15:19,079 --> 00:15:21,860
내가 말했듯이 전기 기계

363
00:15:21,860 --> 00:15:24,480
는 행렬에 의해 매개 변수화되는 것처럼 추가

364
00:15:24,480 --> 00:15:27,120
하고 있습니다. 평소처럼 전환

365
00:15:27,120 --> 00:15:30,060
은 B 메트릭에 의해 매개 변수화되며 여기

366
00:15:30,060 --> 00:15:32,040


367
00:15:32,040 --> 00:15:34,380
에는 a를 정의하는 Z 벡터도 있습니다.

368
00:15:34,380 --> 00:15:37,740
초기 이온 상태보다 이전에 이것은

369
00:15:37,740 --> 00:15:41,100
표준 인공에서 나온 것이고

370
00:15:41,100 --> 00:15:43,980
참신함은 우리가 기본적으로 미래를 잘 확장하고 있다는 것입니다.

371
00:15:43,980 --> 00:15:46,880


372
00:15:46,880 --> 00:15:50,040
그래서 우리는 괜찮습니다. 그래서 우리는

373
00:15:50,040 --> 00:15:52,740
이 모델

374
00:15:52,740 --> 00:15:55,800
을 가지고 있습니다.

375
00:15:55,800 --> 00:15:57,240
우리는 노드를 확장하고 싶습니다

376
00:15:57,240 --> 00:15:59,339


377
00:15:59,339 --> 00:16:01,199
. 생성 모델에 일부 비트

378
00:16:01,199 --> 00:16:03,779
를 추가할 것이므로 예를 들어 생성 v의 이 부분을 추가하려는 경우

379
00:16:03,779 --> 00:16:05,940
olume 우리는

380
00:16:05,940 --> 00:16:08,220
하나의 전이 매핑을

381
00:16:08,220 --> 00:16:11,579
추가할 것입니다 B 이것은 임의의 변수를 추가할 것입니다 어

382
00:16:11,579 --> 00:16:15,300
여기 S12와 같습니다 그런 다음 우도 맵을

383
00:16:15,300 --> 00:16:17,880
사용하여 관련 관찰을 추가할 것입니다

384
00:16:17,880 --> 00:16:19,980


385
00:16:19,980 --> 00:16:21,959
그래서 이것은 우리가 수학적으로 갈 때 생성 모델을 확장하는 방법입니다

386
00:16:21,959 --> 00:16:23,699


387
00:16:23,699 --> 00:16:25,920
이것은 정의됩니다  이와

388
00:16:25,920 --> 00:16:29,100
같이 여기에서 모델의 모든 변수에 대한 생성 모델을 볼 수 있습니다. 모델

389
00:16:29,100 --> 00:16:31,920


390
00:16:31,920 --> 00:16:34,320
과 같은 매개 변수에 대한 원래

391
00:16:34,320 --> 00:16:38,100
의 우선 순위가 있으므로 A B 및 G 행렬

392
00:16:38,100 --> 00:16:40,980
은 시간 유형 0의 상태가 D에 따라 달라집니다.

393
00:16:40,980 --> 00:16:43,639
각 관찰은 상태에 따라 달라집니다.

394
00:16:43,639 --> 00:16:47,699
그것과 행렬

395
00:16:47,699 --> 00:16:50,399
에 그리고 우리는 이전

396
00:16:50,399 --> 00:16:53,459


397
00:16:53,459 --> 00:16:55,500
에 분할이 있는 일부 데이터 매개 변수에 의존하는 작업에 대한

398
00:16:55,500 --> 00:16:56,699
사전

399
00:16:56,699 --> 00:16:59,759
분포를 가지고 있습니다. 그러면 평소와 같이

400
00:16:59,759 --> 00:17:01,620
상태는 이전 상태

401
00:17:01,620 --> 00:17:04,380
와 이전 작업에 따라 달라집니다.

402
00:17:04,380 --> 00:17:05,880
전환 확률을 정의하는 B 매트릭스

403
00:17:05,880 --> 00:17:07,980


404
00:17:07,980 --> 00:17:11,640
이므로

405
00:17:11,640 --> 00:17:16,559
모델의 GP 부분에서와 같이 GP 버전에 있으며 이것은 계획이

406
00:17:16,559 --> 00:17:19,439
진행됨에 따라 확장되는 트리 수명 구조입니다.

407
00:17:19,439 --> 00:17:21,559


408
00:17:21,559 --> 00:17:25,799
따라서 모델에서 확장된 모든 다중 인덱스 집합입니다.

409
00:17:25,799 --> 00:17:29,220


410
00:17:29,220 --> 00:17:31,980
예를 들어 여기로 돌아오면

411
00:17:31,980 --> 00:17:34,679


412
00:17:34,679 --> 00:17:37,080
확장된 3개의

413
00:17:37,080 --> 00:17:39,780


414
00:17:39,780 --> 00:17:42,960
다중 인덱스가 있으므로 I는 다중 인덱스와 동일합니다.

415
00:17:42,960 --> 00:17:44,220
2

416
00:17:44,220 --> 00:17:48,179
및 다중 인덱스 어 1 하나

417
00:17:48,179 --> 00:17:50,100
좋습니다. 이제 각 군사

418
00:17:50,100 --> 00:17:52,500
인덱스에 대해 일반성 모델에

419
00:17:52,500 --> 00:17:55,799
전환 및 우도 매핑을 추가

420
00:17:55,799 --> 00:17:58,080
하므로 확장된

421
00:17:58,080 --> 00:18:00,480
전리품 인덱스 세트의 각 인덱스에 대해 정확히 수행하는 작업입니다.

422
00:18:00,480 --> 00:18:04,340


423
00:18:05,900 --> 00:18:09,140
미래에

424
00:18:09,660 --> 00:18:12,900
있었으므로 이제 우리

425
00:18:12,900 --> 00:18:15,840
는 환경에서 이 접근 방식을 테스트해야

426
00:18:15,840 --> 00:18:17,580
하며 지금

427
00:18:17,580 --> 00:18:20,520
은 미로 환경

428
00:18:20,520 --> 00:18:24,660
에서 테스트할 것입니다. 여기에는 미로의 출구가 있고

429
00:18:24,660 --> 00:18:27,840
여기에는 시작 위치가

430
00:18:27,840 --> 00:18:30,720
있고 그 다음에는 이전 기본 설정이 있습니다.

431
00:18:30,720 --> 00:18:32,760
항목은 우리

432
00:18:32,760 --> 00:18:35,340
가 출구에서 가까울수록

433
00:18:35,340 --> 00:18:37,020
청중이 더 행복해질 것입니다.

434
00:18:37,020 --> 00:18:39,840
그래서 여기서 우리는 0의 거리를 갖게 됩니다. 하나

435
00:18:39,840 --> 00:18:43,020
하나 둘 셋 넷

436
00:18:43,020 --> 00:18:45,120
음 정말 중요한 한 가지 기능

437
00:18:45,120 --> 00:18:47,340
은 이전 선호도가 통과한다는 것입니다.

438
00:18:47,340 --> 00:18:51,120
4가 있고 여기

439
00:18:51,120 --> 00:18:53,520
에는 3이 있고 여기에는 거리 측면에서 4가 있습니다.

440
00:18:53,520 --> 00:18:56,700
5 6

441
00:18:56,700 --> 00:19:00,000
7 8 우리는 4를 가지고 있습니다. 이것이

442
00:19:00,000 --> 00:19:03,240
생성하는 것은 파란색 셀이고 이

443
00:19:03,240 --> 00:19:05,580
파란색 측면 파란색 셀은 실제로

444
00:19:05,580 --> 00:19:08,220


445
00:19:08,220 --> 00:19:10,860
조심하지 않으면 에이전트가 멈출

446
00:19:10,860 --> 00:19:12,720
수 있는 지역 최소값과 이 지역 최소값

447
00:19:12,720 --> 00:19:13,980


448
00:19:13,980 --> 00:19:16,860
을 피하는 방법은

449
00:19:16,860 --> 00:19:19,799
보상 경로가 실제로 이 경로

450
00:19:19,799 --> 00:19:21,600
이고 메모가

451
00:19:21,600 --> 00:19:23,820
로컬 최소값이므로 이것은 기본적으로

452
00:19:23,820 --> 00:19:26,280
우리가 작업에 uh를 추가하는 과제입니다.

453
00:19:26,280 --> 00:19:28,320


454
00:19:28,320 --> 00:19:30,780
여기에서 볼 수 있는 것은

455
00:19:30,780 --> 00:19:32,400
기본적으로 확장되는 트리의 그림입니다.

456
00:19:32,400 --> 00:19:34,919
여기에

457
00:19:34,919 --> 00:19:37,320
우리가 증가함에 따라 볼 수 있는 결과 테이블

458
00:19:37,320 --> 00:19:39,720
이 있습니다.  로컬 최소값 안에 갇혀

459
00:19:39,720 --> 00:19:43,620
있는 에이전트에서 이동하는 계획 반복의 수

460
00:19:43,620 --> 00:19:46,799
그래서

461
00:19:46,799 --> 00:19:49,440


462
00:19:49,440 --> 00:19:52,140
기본적으로 적절하게 작동하는 에이전트에 대한 한계에 도달하지 않습니다. 다음으로

463
00:19:52,140 --> 00:19:55,919
0이 상단의 100을 설정

464
00:19:55,919 --> 00:19:58,320
하는 경우 시간에 부분적인 묶음이 어떻게 활성화되는지 비교해야 합니다.

465
00:19:58,320 --> 00:20:00,539
i  활성화된

466
00:20:00,539 --> 00:20:02,100
이전과 같은 최신 기술에 대한 참조

467
00:20:02,100 --> 00:20:03,659


468
00:20:03,659 --> 00:20:06,480
플러스 기본적으로 우리

469
00:20:06,480 --> 00:20:09,000
는 에이전트가 문제를 해결할 수 있도록 환경을 설계

470
00:20:09,000 --> 00:20:12,299
했습니다. 발생한 일에 적극적인 영향을 미치기

471
00:20:12,299 --> 00:20:15,840
위해 미래로 35, 8 시간 단계를 계획해야 합니다.

472
00:20:15,840 --> 00:20:18,480


473
00:20:18,480 --> 00:20:20,460


474
00:20:20,460 --> 00:20:23,280
두 가지 더하기 작업을 제대로 해결할 수 있었지만 그 이후에 일어난 일은

475
00:20:23,280 --> 00:20:25,260


476
00:20:25,260 --> 00:20:27,539
미래에 대해 평가해야 하는 정책

477
00:20:27,539 --> 00:20:29,220
의 수가

478
00:20:29,220 --> 00:20:31,740
가장 큰 파쇄된 마지막 정책에 대해 계획해야 하는 횟수와 함께 기하급수적으로 증가하기 때문

479
00:20:31,740 --> 00:20:34,980
입니다.

480
00:20:34,980 --> 00:20:36,780


481
00:20:36,780 --> 00:20:39,299
환경이 우리의 접근

482
00:20:39,299 --> 00:20:41,220
방식과 얼마나 비슷한지, 그리고

483
00:20:41,220 --> 00:20:42,900


484
00:20:42,900 --> 00:20:44,880
계획 반복 횟수를 다시

485
00:20:44,880 --> 00:20:48,000
한 번 늘리면 에이전트가 항상 정렬할 수 있게

486
00:20:48,000 --> 00:20:48,720


487
00:20:48,720 --> 00:20:51,720
되고 충돌이 발생하지 않는 것을 볼 수

488
00:20:51,720 --> 00:20:54,480
있습니다.  영리한 패션 멀티 캐럿 연구를

489
00:20:54,480 --> 00:20:56,580
사용하여 가능한 모든 정책의 공간

490
00:20:56,580 --> 00:20:59,400


491
00:20:59,400 --> 00:21:01,500
이것은 bti와 활성 입력 간의 약간의 비정형 비교였습니다.

492
00:21:01,500 --> 00:21:05,340


493
00:21:05,340 --> 00:21:07,500
이제 이 sl에서 하고 싶은 일입니다.  ide

494
00:21:07,500 --> 00:21:09,780


495
00:21:09,780 --> 00:21:11,400
는 훨씬 더 이론적 인 implicity 클래스와 같은 데모에서 비교하는

496
00:21:11,400 --> 00:21:13,260


497
00:21:13,260 --> 00:21:15,480
것이므로 기본적으로 여기에서 각 원

498
00:21:15,480 --> 00:21:17,159


499
00:21:17,159 --> 00:21:19,740
은 상태의 범주 분포에 해당합니다. 즉

500
00:21:19,740 --> 00:21:21,900
, 해당 원 중 하나

501
00:21:21,900 --> 00:21:24,780
를 저장하려면 상태 수를 저장해야합니다.  따라서

502
00:21:24,780 --> 00:21:26,460


503
00:21:26,460 --> 00:21:28,919
State 값의 수와 동일한 매개변수의 수는 괜찮습니다.

504
00:21:28,919 --> 00:21:30,960
세 개의 값을 갖는 상태가 있는 경우

505
00:21:30,960 --> 00:21:35,120
세 개의 매개변수를 저장해야 합니다.

506
00:21:35,159 --> 00:21:38,520
그런 다음 미래로의 각 단계마다

507
00:21:38,520 --> 00:21:42,360
매개변수를 하나 더 저장해야 합니다.

508
00:21:42,360 --> 00:21:44,039
그것은 능동적

509
00:21:44,039 --> 00:21:47,520
추론에 이르고 우리는 또한

510
00:21:47,520 --> 00:21:48,960
각각의 가능한 사람에 대해 호출되는 범주를 하나 더 저장해야 합니다.

511
00:21:48,960 --> 00:21:51,240
그래서 전체 복잡성

512
00:21:51,240 --> 00:21:53,460
클래스는

513
00:21:53,460 --> 00:21:57,000


514
00:21:57,000 --> 00:21:58,500
시간 Horizon에

515
00:21:58,500 --> 00:22:00,360
필요한 매개변수 수를 곱할 때까지 정책 수 곱하기 시간 단계 수와 같습니다.

516
00:22:00,360 --> 00:22:01,980


517
00:22:01,980 --> 00:22:03,299


518
00:22:03,299 --> 00:22:07,080
최악의 시나리오에서 각 범주 분포에 대해 저장 BCI는

519
00:22:07,080 --> 00:22:09,360
저장해야 하므로 가장 먼저 말할

520
00:22:09,360 --> 00:22:11,940
것은 bti가 가능한 모든 단일 조합을 저장하지 않는다는

521
00:22:11,940 --> 00:22:14,520
것입니다.  생성 모델의 트리 구조를 사용하여

522
00:22:14,520 --> 00:22:16,980


523
00:22:16,980 --> 00:22:19,380


524
00:22:19,380 --> 00:22:22,200
과거와 현재에 대한 하나의 분포만 저장하므로 과거와 현재

525
00:22:22,200 --> 00:22:24,179
에 대한 첫 번째 단계를 수행

526
00:22:24,179 --> 00:22:27,419
한 다음

527
00:22:27,419 --> 00:22:30,179
모든 거래를 확장하면 ex로 이동하여

528
00:22:30,179 --> 00:22:34,080
어 작업 수를 저장합니다.  타이머의 힘

529
00:22:34,080 --> 00:22:36,539
은 마이너스 G

530
00:22:36,539 --> 00:22:38,940
이므로

531
00:22:38,940 --> 00:22:42,360
저쪽의 변화로 인해 이것은 여전히 ​​기하급수적

532
00:22:42,360 --> 00:22:44,760
이지만 실제로

533
00:22:44,760 --> 00:22:46,799
는 거래 전체를 확장하지 않으므로 우리가 하는 일은

534
00:22:46,799 --> 00:22:49,320
이것을 확장할 것입니다.

535
00:22:49,320 --> 00:22:51,360
그러나 다른 두 가지가 아니므로

536
00:22:51,360 --> 00:22:53,820
실제로 이 알고리즘의 실제 복잡도 클래스

537
00:22:53,820 --> 00:22:57,000


538
00:22:57,000 --> 00:22:59,159
는 우리가 외국에서 만들고 있는 확장 횟수에서 선형입니다.

539
00:22:59,159 --> 00:23:01,340


540
00:23:03,620 --> 00:23:06,539


541
00:23:06,539 --> 00:23:09,960


542
00:23:09,960 --> 00:23:13,080
이제 우리가 원하는 표준 작업만큼 많은 저장 공간이 필요하지 않습니다. 두 번째 접근 방식에 대해 이야기하고 싶습니다.

543
00:23:13,080 --> 00:23:14,520


544
00:23:14,520 --> 00:23:16,380
베이지안 필터링을 기반으로

545
00:23:16,380 --> 00:23:20,340
하므로 먼저 편향과 필터링의

546
00:23:20,340 --> 00:23:22,559
장점은

547
00:23:22,559 --> 00:23:24,240


548
00:23:24,240 --> 00:23:25,679
상태

549
00:23:25,679 --> 00:23:29,220
와 우리가 실제로 알고 있는 관찰을 포함하는 간단한 생성 모델로 시작하는

550
00:23:29,220 --> 00:23:31,679
추론 알고리즘입니다.  ch 관측

551
00:23:31,679 --> 00:23:34,620
우리는 또한 이전 상태

552
00:23:34,620 --> 00:23:36,720
와 가능성이 무엇인지 알고 있으며

553
00:23:36,720 --> 00:23:38,280
예를 들어

554
00:23:38,280 --> 00:23:41,400
소행성을 사용하여

555
00:23:41,400 --> 00:23:44,820
일부 관측이 주어진 상태의 사후를 계산할 수 있습니다.

556
00:23:44,820 --> 00:23:46,860
예, 우리는 일단 이렇게 완료합니다.

557
00:23:46,860 --> 00:23:47,880


558
00:23:47,880 --> 00:23:51,860


559
00:23:53,039 --> 00:23:56,159
경험적 사전으로 사용할 수 있는 상태의 사후가

560
00:23:56,159 --> 00:23:59,159
있으므로 여기에 경험적 사전

561
00:23:59,159 --> 00:24:01,460


562
00:24:01,460 --> 00:24:03,659
이 있으며 다음 시간 단계로 이어지는 전이 확률도 알고

563
00:24:03,659 --> 00:24:05,279


564
00:24:05,279 --> 00:24:07,679
있으므로 이 정보와 작업을 사용할 수 있습니다.

565
00:24:07,679 --> 00:24:08,820


566
00:24:08,820 --> 00:24:11,159


567
00:24:11,159 --> 00:24:13,380


568
00:24:13,380 --> 00:24:15,840


569
00:24:15,840 --> 00:24:18,360
우리가 방금 수행한 작업(u0)과

570
00:24:18,360 --> 00:24:20,220
이전

571
00:24:20,220 --> 00:24:22,620
에 수행한 관찰 및 이것이 수행되는 방식이 주어진 시간 단계 1에서 상태에 대한 예측 사후를 계산하기 위해 환경에서 실제로 수행하는 것은 다음

572
00:24:22,620 --> 00:24:24,659
을 통해 기본 및 예측을 수행하는 것입니다

573
00:24:24,659 --> 00:24:26,760
.  전환 매핑과 같이

574
00:24:26,760 --> 00:24:29,820
s0의 차원을 평균화

575
00:24:29,820 --> 00:24:32,279


576
00:24:32,279 --> 00:24:34,980
한 다음 또 다른 관찰이

577
00:24:34,980 --> 00:24:36,659


578
00:24:36,659 --> 00:24:38,400
나오고 이전 예측 단계에서 얻은 예측 포스트 채널을 사용할 수 있습니다.

579
00:24:38,400 --> 00:24:41,400
이제

580
00:24:41,400 --> 00:24:42,080


581
00:24:42,080 --> 00:24:45,120
이 새로운 관찰에 따라 S1에 대해 음

582
00:24:45,120 --> 00:24:47,460


583
00:24:47,460 --> 00:24:50,340
, 그리고 증거를 통합하는 두 단계와

584
00:24:50,340 --> 00:24:52,440
전이 매핑을 통한 예측 음은

585
00:24:52,440 --> 00:24:54,179


586
00:24:54,179 --> 00:24:56,179
필요한 만큼 반복될

587
00:24:56,179 --> 00:24:59,039
것이므로 이것이 제가 원하는 두 번째 접근 방식으로 이어집니다

588
00:24:59,039 --> 00:25:00,900
.  베이지안 필터링을

589
00:25:00,900 --> 00:25:02,820
사용한 분기 시간 활성 추론인 오늘을 제시하기

590
00:25:02,820 --> 00:25:04,860


591
00:25:04,860 --> 00:25:07,140
위해 먼저 우리가 필요로 하는

592
00:25:07,140 --> 00:25:09,720


593
00:25:09,720 --> 00:25:11,700


594
00:25:11,700 --> 00:25:14,159
모든 정보가

595
00:25:14,159 --> 00:25:16,679


596
00:25:16,679 --> 00:25:18,960
꾸란 타임스탬프 상태와 같은 초기 상태에 대한 신념 내에 저장되기 때문에 상태에 대한 과거 관찰을 더 이상 저장하지 않습니다.

597
00:25:18,960 --> 00:25:22,679
강력한 시간 단계로

598
00:25:22,679 --> 00:25:25,559
좋아 그래서 우리는 증거 단계

599
00:25:25,559 --> 00:25:27,480
의 통합을 수행하여

600
00:25:27,480 --> 00:25:31,200


601
00:25:31,200 --> 00:25:34,740
시간 단계 T의 상태에 대한 믿음을 얻은 다음 확장하려는

602
00:25:34,740 --> 00:25:37,140
각 어린이에 대해 전방 예측을 수행할 수 있습니다.

603
00:25:37,140 --> 00:25:39,600


604
00:25:39,600 --> 00:25:41,640
예를 들어 우리는 이것을 계산한 다음 이것 등등을 계산할 것입니다.

605
00:25:41,640 --> 00:25:44,460


606
00:25:44,460 --> 00:25:46,559
만약 다중 집단이 이 차트를 확장할 상태

607
00:25:46,559 --> 00:25:49,260
라면 우리는

608
00:25:49,260 --> 00:25:51,659
예측을 전달합니다.  ion 뿐만 아니라 이것에 대해서도

609
00:25:51,659 --> 00:25:54,419
관련 관찰을 확장

610
00:25:54,419 --> 00:25:57,480
하므로 이것이 주요 아이디어이므로

611
00:25:57,480 --> 00:25:59,640
여기서 유일한 차이점

612
00:25:59,640 --> 00:26:01,620


613
00:26:01,620 --> 00:26:04,559
은 과거에 대한 결정 프로세스의 관찰 가능한 출발이 더 이상 없다는 것입니다.

614
00:26:04,559 --> 00:26:06,320


615
00:26:06,320 --> 00:26:08,700
확대 시간 단계 만 있고 우리는  또한

616
00:26:08,700 --> 00:26:11,100


617
00:26:11,100 --> 00:26:15,840
위반 전달에서 bazel patreon으로 추론 알고리즘을 변경

618
00:26:15,840 --> 00:26:18,720
하고 여기

619
00:26:18,720 --> 00:26:21,120
에 일반성 모델의 보다 공식적인 정의가 있으므로

620
00:26:21,120 --> 00:26:22,400
여기에서 초기 다운스텝에

621
00:26:22,400 --> 00:26:25,440
대한 가능성과 이전 과장을 볼 수 있습니다.

622
00:26:25,440 --> 00:26:28,200


623
00:26:28,200 --> 00:26:31,620


624
00:26:31,620 --> 00:26:33,720


625
00:26:33,720 --> 00:26:37,080
그리고 관찰 또는

626
00:26:37,080 --> 00:26:38,820
각 루틴은 우리가 이미 확장되었다고 말합니다. 우리

627
00:26:38,820 --> 00:26:40,679


628
00:26:40,679 --> 00:26:42,059
는 성능 측면에서 관련 가능성 매핑 및

629
00:26:42,059 --> 00:26:45,799
전환 매핑을 가지고

630
00:26:45,900 --> 00:26:49,860
있습니다. 여기에서

631
00:26:49,860 --> 00:26:51,960


632
00:26:51,960 --> 00:26:55,679
Biogen 필터링을 사용하여 동일한 알고리즘에 대한 번칭 시간 활성 추론을 비교

633
00:26:55,679 --> 00:26:57,900
하므로 btai하지만 다양한 시간 사람

634
00:26:57,900 --> 00:27:01,559
과 우리  동일한 작업에 대해 그들 중 하나가 약 분 규모의 규모로 수행하고 있음을 확인하십시오.

635
00:27:01,559 --> 00:27:03,299


636
00:27:03,299 --> 00:27:06,179


637
00:27:06,179 --> 00:27:08,460
4분에서 7분 사이에 4

638
00:27:08,460 --> 00:27:10,380
분이 남았고 다른 연주자 중 한 명이

639
00:27:10,380 --> 00:27:13,380
2초에서 11초 사이에서 빨라졌습니다.

640
00:27:13,380 --> 00:27:14,340


641
00:27:14,340 --> 00:27:16,860
따라서 이러한 성능 향상은

642
00:27:16,860 --> 00:27:19,740
기본적으로 어 추론 알고리즘의 변경으로 가능해

643
00:27:19,740 --> 00:27:20,659


644
00:27:20,659 --> 00:27:24,200


645
00:27:24,720 --> 00:27:27,480
졌지만 이제 우리가 원하는 것은

646
00:27:27,480 --> 00:27:31,380
더 많은 것을 정의할 수 있게 되는 것입니다.  각 시점에서 하나의 관찰 및 상태보다

647
00:27:31,380 --> 00:27:34,559


648
00:27:34,559 --> 00:27:36,779
우리가 할 일은

649
00:27:36,779 --> 00:27:38,159
보험

650
00:27:38,159 --> 00:27:40,320
알고리즘을

651
00:27:40,320 --> 00:27:42,600
필터링보다 나은

652
00:27:42,600 --> 00:27:45,199


653
00:27:45,240 --> 00:27:47,940
것에서 믿음 전파로 다시 한 번 변경하는 것입니다. 믿음 전파는 기본적으로

654
00:27:47,940 --> 00:27:51,240
믿음 전파는

655
00:27:51,240 --> 00:27:54,179
함수를 입력으로 취하는 알고리즘입니다.  일부

656
00:27:54,179 --> 00:27:55,740
상태 변수

657
00:27:55,740 --> 00:27:58,140
와 이 함수에 대해 우리는 그것이 우리가

658
00:27:58,140 --> 00:28:01,620
fi라고 부르는 일련의 n 요인으로 분해된다는 것을 알고

659
00:28:01,620 --> 00:28:03,659


660
00:28:03,659 --> 00:28:05,940
있습니다. 질문은 우리

661
00:28:05,940 --> 00:28:07,980


662
00:28:07,980 --> 00:28:11,700


663
00:28:11,700 --> 00:28:14,460
가 다른 모든 임의의 변수를 주변화할 때 이 함수의 주변에 대한 국가와 같은 주변 분포를 어떻게 계산할 수 있는지입니다.

664
00:28:14,460 --> 00:28:18,659
하나의 SM을 제외한 변수는

665
00:28:18,659 --> 00:28:20,640
괜찮으므로

666
00:28:20,640 --> 00:28:23,880
모든 SM의 분포

667
00:28:23,880 --> 00:28:25,860
와 전파가 해결한다고 생각하는 방식을 소외시키고 싶습니다.

668
00:28:25,860 --> 00:28:28,860
이 작업은 기본적으로

669
00:28:28,860 --> 00:28:30,600


670
00:28:30,600 --> 00:28:33,779
계산 그래프를 통해 메시지를 전달하는

671
00:28:33,779 --> 00:28:35,520
것이므로 그래프에는 두 종류의

672
00:28:35,520 --> 00:28:37,919
노드가 있습니다. 예를 들어 F1과 같이 분포의 요소를 나타내는 요소 노드가 있습니다.

673
00:28:37,919 --> 00:28:39,840


674
00:28:39,840 --> 00:28:43,440
그런 다음 X1과 같은 임의의 변수

675
00:28:43,440 --> 00:28:45,919


676
00:28:45,960 --> 00:28:48,779


677
00:28:48,779 --> 00:28:51,179
가 있고 그 중 여러 개가 있을 수 있습니다.  그래서 F2

678
00:28:51,179 --> 00:28:54,000
와 X2는

679
00:28:54,000 --> 00:28:56,399
좋습니다

680
00:28:56,399 --> 00:28:58,380
. 둘 사이에 전환 매핑이 있을 수

681
00:28:58,380 --> 00:28:59,520


682
00:28:59,520 --> 00:29:01,500
있으므로 이것이 두 번째이며 이제 우리

683
00:29:01,500 --> 00:29:04,440
가 원하는 것은 그래프를 통해 일부 메시지를 전달

684
00:29:04,440 --> 00:29:07,140
하는 것입니다.

685
00:29:07,140 --> 00:29:12,059


686
00:29:12,059 --> 00:29:14,520


687
00:29:14,520 --> 00:29:16,559


688
00:29:16,559 --> 00:29:19,679
출력 메시지를 계산하기 위해

689
00:29:19,679 --> 00:29:20,940


690
00:29:20,940 --> 00:29:24,059


691
00:29:24,059 --> 00:29:27,059
우리가 할 일은 이 음표를 향해 가는 다른 화살표에서 오는 입력 메시지

692
00:29:27,059 --> 00:29:29,220
를 곱하고 모든 입력 메시지를 곱하고 다음

693
00:29:29,220 --> 00:29:31,919
을 출력하는 것입니다.  요인

694
00:29:31,919 --> 00:29:36,179
에 대한 메시지에 관한 결과

695
00:29:36,179 --> 00:29:39,059


696
00:29:39,059 --> 00:29:41,940
우리는 기본적으로

697
00:29:41,940 --> 00:29:46,559


698
00:29:46,559 --> 00:29:49,260
이 요인 노드에 연결된 이 요인

699
00:29:49,260 --> 00:29:51,480


700
00:29:51,480 --> 00:29:53,520
을 취하여 들어오는 모든 메시지를 곱하여 모든 inco를 취할 것입니다.

701
00:29:53,520 --> 00:29:56,039
메시지를 생성하고

702
00:29:56,039 --> 00:29:58,620
이 팩터 노드와 관련된 사실로 곱한

703
00:29:58,620 --> 00:30:01,440
다음 모든

704
00:30:01,440 --> 00:30:04,260
입력 차원을 주변화하여 이 메시지

705
00:30:04,260 --> 00:30:07,740
와 정확히 동일한 모양의 메시지

706
00:30:07,740 --> 00:30:10,679
가 대상 임의 변수로 출력

707
00:30:10,679 --> 00:30:13,020
되도록 하므로 이것이 주변화 및

708
00:30:13,020 --> 00:30:15,000
말하기입니다.  사진 내부에서

709
00:30:15,000 --> 00:30:17,039
할 수 있는 모든 단일 메시지에 대해 그렇게

710
00:30:17,039 --> 00:30:20,520
한 다음

711
00:30:20,520 --> 00:30:23,100
해당 메시지를 사용하여

712
00:30:23,100 --> 00:30:26,220
이 알고리즘의 목표인 한계를 계산합니다.

713
00:30:26,220 --> 00:30:28,260
우리가 하는 방식

714
00:30:28,260 --> 00:30:30,679
은 모든 입력 메시지를 받아서

715
00:30:30,679 --> 00:30:33,659
곱하는 것입니다.  그것들을 함께 그리고 이것은

716
00:30:33,659 --> 00:30:36,059


717
00:30:36,059 --> 00:30:39,840
우리가 원했던 특정 상태에 대한 한계 분포를 제공

718
00:30:39,840 --> 00:30:42,360
하므로 이에 대해 조금 더

719
00:30:42,360 --> 00:30:44,760


720
00:30:44,760 --> 00:30:46,679
말할 수 있도록 이전에 개발한 마지막 접근 방식인 다중 요소 분기 시간 활동에 대한 다중 모드로 이어집니다.

721
00:30:46,679 --> 00:30:48,600


722
00:30:48,600 --> 00:30:50,340


723
00:30:50,340 --> 00:30:52,380
접근 방식 저는

724
00:30:52,380 --> 00:30:55,140
시간적 스타일의 개념을 도입해야

725
00:30:55,140 --> 00:30:58,620
했기 때문에 상위 작업 슬라이드는 단지 상태와 관찰의 집합일 뿐이며

726
00:30:58,620 --> 00:30:59,580


727
00:30:59,580 --> 00:31:04,080
우리는 영지와 모든

728
00:31:04,080 --> 00:31:05,760
관찰

729
00:31:05,760 --> 00:31:08,100
을 가지고 있습니다.  그의 판 회전

730
00:31:08,100 --> 00:31:10,140
은 변수를 항상 또는 시간에 따라 복제하는

731
00:31:10,140 --> 00:31:11,159


732
00:31:11,159 --> 00:31:14,159
것입니다.

733
00:31:14,159 --> 00:31:16,620
그런 다음 점선이 있습니다. 점선이 하는 일은

734
00:31:16,620 --> 00:31:19,140
관찰을 저기 있는 상태의 하위 집합에 연결하는

735
00:31:19,140 --> 00:31:21,840
것이므로 예

736
00:31:21,840 --> 00:31:24,059
를 들어 관찰이 있을 수 있습니다.  이것은

737
00:31:24,059 --> 00:31:28,158
1단계와 상태 2에 의존

738
00:31:28,260 --> 00:31:30,659
하고 관찰도

739
00:31:30,659 --> 00:31:32,700
있을 수 있지만 이 관찰 2는 상태 2에만 의존

740
00:31:32,700 --> 00:31:35,340
하므로 점선인 이유

741
00:31:35,340 --> 00:31:37,380


742
00:31:37,380 --> 00:31:40,559
는 상태와 관찰 사이에 경로 희소 매핑을 가질 수 있기

743
00:31:40,559 --> 00:31:42,480
때문입니다.

744
00:31:42,480 --> 00:31:46,100
모든 가능한 연결이

745
00:31:46,799 --> 00:31:50,880
정상일 필요는 없으며 총 2개의 슬라이드

746
00:31:50,880 --> 00:31:52,980


747
00:31:52,980 --> 00:31:55,860
는 이 화살표인 전환 매핑을 통해 연결될 수 있습니다. 이

748
00:31:55,860 --> 00:31:57,360
화살표는 정확히 동일하지만

749
00:31:57,360 --> 00:32:00,419
두 시간 단계

750
00:32:00,419 --> 00:32:04,080
사이에 있음을 의미합니다.  관찰이 상태의 임의의 하위 집합에 의존하는 것처럼 임의의 방식

751
00:32:04,080 --> 00:32:06,179
으로 이전 시간 단계로 상태에 의존할 수

752
00:32:06,179 --> 00:32:08,399


753
00:32:08,399 --> 00:32:11,159


754
00:32:11,159 --> 00:32:13,260


755
00:32:13,260 --> 00:32:15,840
있지만 이 표현은 약간

756
00:32:15,840 --> 00:32:17,820


757
00:32:17,820 --> 00:32:20,159
전체 생성 모델을 제시할 때 비실용적

758
00:32:20,159 --> 00:32:22,380
이므로 우리가 하는 일은 이 상단

759
00:32:22,380 --> 00:32:23,519
와이어 크기

760
00:32:23,519 --> 00:32:28,080
를 t s t라고 하는 사각형으로 나타내는 것입니다.

761
00:32:28,080 --> 00:32:30,419


762
00:32:30,419 --> 00:32:32,700


763
00:32:32,700 --> 00:32:35,220


764
00:32:35,220 --> 00:32:37,500
그들이 실제로 관찰된다면

765
00:32:37,500 --> 00:32:40,320
미래에는 배경

766
00:32:40,320 --> 00:32:42,960
이 흰색이 될 것입니다. 어 관찰이 관찰되지 않기 때문입니다.

767
00:32:42,960 --> 00:32:44,760


768
00:32:44,760 --> 00:32:46,740
이제 이 더 간결한

769
00:32:46,740 --> 00:32:49,140
프레젠테이션을 가져

770
00:32:49,140 --> 00:32:51,419
와서 생성 모델을 제시할 수 있으므로 여기에서

771
00:32:51,419 --> 00:32:52,919
초기 시간 단계

772
00:32:52,919 --> 00:32:56,039
를 본 다음 거기에서 우리는

773
00:32:56,039 --> 00:32:58,860


774
00:32:58,860 --> 00:33:03,000
다중 컬트 연구가 우리에게 요청했을 때 정확히 일부 중립 플러스 크기를 확장할 수 있으므로

775
00:33:03,000 --> 00:33:04,500
거기서 시작

776
00:33:04,500 --> 00:33:07,980
하여 UC 기준

777
00:33:07,980 --> 00:33:10,679


778
00:33:10,679 --> 00:33:12,419


779
00:33:12,419 --> 00:33:13,279


780
00:33:13,279 --> 00:33:15,899
을 계산할 수 있습니다.  따라서

781
00:33:15,899 --> 00:33:17,539


782
00:33:17,539 --> 00:33:20,039
여기에서 상태를 계산하기 위해 순방향 예측을 사용하고 상태에서

783
00:33:20,039 --> 00:33:22,380


784
00:33:22,380 --> 00:33:24,480
다시 한 번 순방향 예측을 사용하여 futu를 예측합니다.  재

785
00:33:24,480 --> 00:33:27,120
관찰 이 상위 한

786
00:33:27,120 --> 00:33:28,380
슬라이스

787
00:33:28,380 --> 00:33:31,100
외부

788
00:33:35,480 --> 00:33:38,640
변수와 다시 한 번 연결

789
00:33:38,640 --> 00:33:41,279


790
00:33:41,279 --> 00:33:43,919
되며 시간 T의 시간 크기에 미래의

791
00:33:43,919 --> 00:33:46,200
모든 시간 제어 크기

792
00:33:46,200 --> 00:33:47,340


793
00:33:47,340 --> 00:33:51,120
를 곱한 확률의 곱입니다.  현재 연구

794
00:33:51,120 --> 00:33:54,659
각 관찰

795
00:33:54,659 --> 00:33:56,039
은 슬라이드의 초기 유형에

796
00:33:56,039 --> 00:33:58,440


797
00:33:58,440 --> 00:34:00,360
따라 달라집니다. 따라서 이것은 이 관찰이 이 최상위 크기 내 상태의 하위 집합에 의존하는 초기 몇 번

798
00:34:00,360 --> 00:34:03,360
이고 우리

799
00:34:03,360 --> 00:34:05,940
가 트리의 맨 위에 있기 때문에

800
00:34:05,940 --> 00:34:09,839
시간 단계 T의 상태입니다.  미래의

801
00:34:09,839 --> 00:34:12,899
각 인기 있는 크기에 대해 그 이후에는 아무 것도 의존하지 않습니다.

802
00:34:12,899 --> 00:34:15,780
우리는 여전히

803
00:34:15,780 --> 00:34:18,540


804
00:34:18,540 --> 00:34:20,099
관찰이 스톱워치 슬라이드 내의 상태에 의존

805
00:34:20,099 --> 00:34:22,560


806
00:34:22,560 --> 00:34:25,079
한다는 사실을 가지고 있지만 이 주제의 상태가

807
00:34:25,079 --> 00:34:28,079
슬라이드는 현재 상단 슬라이드와 같이 이전 슬라이드의 상태에 따라 달라집니다.

808
00:34:28,079 --> 00:34:30,060


809
00:34:30,060 --> 00:34:31,619
예를 들어

810
00:34:31,619 --> 00:34:33,899
이 상단 오른쪽 크기 내의 상태는

811
00:34:33,899 --> 00:34:37,739
이 상단 한 조각 내부의 절반 균형입니다.

812
00:34:37,739 --> 00:34:39,659


813
00:34:39,659 --> 00:34:41,520
이것은 생성

814
00:34:41,520 --> 00:34:43,440
모델이 정의

815
00:34:43,440 --> 00:34:46,500
되는 방식입니다. 이제 인스턴스를 수행하는 방식

816
00:34:46,500 --> 00:34:50,339
은 IP IP 알고리즘이라고 하는 것을 사용하므로 저는

817
00:34:50,339 --> 00:34:53,520
추론을 나타내고 P는 예측을 나타냅니다.

818
00:34:53,520 --> 00:34:56,399


819
00:34:56,399 --> 00:34:58,980
따라서 이 슬라이드는 추론 탭

820
00:34:58,980 --> 00:35:01,560
에 관한 것입니다. 목표는 다음을 계산하는 것입니다.

821
00:35:01,560 --> 00:35:05,160
내 무대 뒤 uh

822
00:35:05,160 --> 00:35:07,740
현재 템플릿 슬라이드와 같은 이니셜

823
00:35:07,740 --> 00:35:09,900
은 관찰을 통해 이 유도를 거치지 않을

824
00:35:09,900 --> 00:35:11,820


825
00:35:11,820 --> 00:35:13,440
것이지만 YouTube에서 보고 있는 경우 비디오를 일시 중지할 수 있습니다.

826
00:35:13,440 --> 00:35:15,000


827
00:35:15,000 --> 00:35:15,660


828
00:35:15,660 --> 00:35:18,300


829
00:35:18,300 --> 00:35:19,800
우리

830
00:35:19,800 --> 00:35:21,000


831
00:35:21,000 --> 00:35:23,040


832
00:35:23,040 --> 00:35:25,980
는 모든 플레이어와 함께 모든 전기적 매핑을 통해 제품을 가져간

833
00:35:25,980 --> 00:35:28,260
다음 빌드

834
00:35:28,260 --> 00:35:30,839
전파를 사용하여

835
00:35:30,839 --> 00:35:34,140
이 기능

836
00:35:34,140 --> 00:35:36,599
을 실제로 소외시키도록 지시하는 이 솔루션을 얻습니다.

837
00:35:36,599 --> 00:35:39,180


838
00:35:39,180 --> 00:35:41,160
타임스탬프 그래서 여기로 돌아가면

839
00:35:41,160 --> 00:35:43,320
여기에 약간의 관찰이 있고

840
00:35:43,320 --> 00:35:44,940
빌드 전파를 사용

841
00:35:44,940 --> 00:35:49,079
하여 초기 지형 내에서 상태를 계산

842
00:35:49,079 --> 00:35:52,320
하므로 이것이 ISTE의 각 단계입니다.

843
00:35:52,320 --> 00:35:53,820
관심

844
00:35:53,820 --> 00:35:56,520
있는 P는 다중

845
00:35:56,520 --> 00:35:59,339
컬트 연구

846
00:35:59,339 --> 00:36:02,040
에서 일반성 모델의 일부를 확장하라고 말할 때마다 p-단계를 수행해야

847
00:36:02,040 --> 00:36:03,540
하므로 다시 한 번

848
00:36:03,540 --> 00:36:05,460
이 유도를 거치지 않겠지만 기본적

849
00:36:05,460 --> 00:36:09,119
으로 ID는 다음을 계산하는 것입니다.  현재 템플릿 슬라이드에서 관찰한 바에

850
00:36:09,119 --> 00:36:11,760
따라 다음 구성 요소 크기의 상태에 대한 후방이

851
00:36:11,760 --> 00:36:13,980


852
00:36:13,980 --> 00:36:16,640


853
00:36:16,640 --> 00:36:19,440
있으므로 여기에서 발코니를 다시 한 번

854
00:36:19,440 --> 00:36:22,320
볼 수 있습니다

855
00:36:22,320 --> 00:36:24,420


856
00:36:24,420 --> 00:36:27,300
.

857
00:36:27,300 --> 00:36:29,700
사후 형식을 계산하기 위해

858
00:36:29,700 --> 00:36:33,000
이것은 우리가 알고 있는 전이 매핑

859
00:36:33,000 --> 00:36:35,760
이고

860
00:36:35,760 --> 00:36:37,980
이것은 이전 샘플 크기의 사후 분포

861
00:36:37,980 --> 00:36:39,720


862
00:36:39,720 --> 00:36:41,220
이므로 기본적으로 우리가 하는 것은

863
00:36:41,220 --> 00:36:43,140
이

864
00:36:43,140 --> 00:36:45,960
경우 우리가 할 수 있는 전환 수준의 기대치를 가지고 순방향 예측을 수행하는 것입니다.

865
00:36:45,960 --> 00:36:46,920


866
00:36:46,920 --> 00:36:49,320
이것은 단계에 대한 것이고

867
00:36:49,320 --> 00:36:53,040
관찰을 일시 중지

868
00:36:53,040 --> 00:36:56,040
하여 기본 그림으로 돌아가기 위해

869
00:36:56,040 --> 00:36:57,839
먼저 ISTEP를 사용

870
00:36:57,839 --> 00:36:59,760
하여 상태에 대한 후방과 초기

871
00:36:59,760 --> 00:37:01,859
슬라이드 몇 개를 계산

872
00:37:01,859 --> 00:37:05,040
합니다.  ISTEP이고 그런 다음

873
00:37:05,040 --> 00:37:07,560
이 사후 분포를

874
00:37:07,560 --> 00:37:11,280
사용하여 미래 상태에 대한 사후 분포를 계산할

875
00:37:11,280 --> 00:37:13,020
수 있으므로 이 이중 슬라이드의 상태를

876
00:37:13,020 --> 00:37:15,540


877
00:37:15,540 --> 00:37:17,099
다시 한 번

878
00:37:17,099 --> 00:37:20,400
사용하여 해당하는 미래 관측치의 분포를 계산할 수 있습니다.

879
00:37:20,400 --> 00:37:22,320


880
00:37:22,320 --> 00:37:24,180
나비를 멈추기

881
00:37:24,180 --> 00:37:27,780
위해 그렇게 할 것입니다. 또는

882
00:37:27,780 --> 00:37:29,579
슬라이드의 모든 상단과 같은 시간 단계를 미래에 확장하고 싶습니다.

883
00:37:29,579 --> 00:37:32,180


884
00:37:33,060 --> 00:37:35,460


885
00:37:35,460 --> 00:37:38,520
이 접근 방식을 정의하고 마지막으로 해야 할 다음 사항은

886
00:37:38,520 --> 00:37:40,920
예상되는 무료입니다.  발사는 기본적으로

887
00:37:40,920 --> 00:37:43,380
우리가 할 곳입니다. 이것은

888
00:37:43,380 --> 00:37:46,079
먼저 모든 관찰을 먼 하위 집합으로 그룹화하는

889
00:37:46,079 --> 00:37:48,480


890
00:37:48,480 --> 00:37:51,599
것이므로 기본적으로 o i는

891
00:37:51,599 --> 00:37:54,060


892
00:37:54,060 --> 00:37:57,720
이 이온을 음소거

893
00:37:57,720 --> 00:38:00,919
하여 오른쪽 상단 크기 인덱스의 모든 관찰 집합입니다. 이제 한 번 설명하겠습니다.

894
00:38:05,940 --> 00:38:08,220


895
00:38:08,220 --> 00:38:10,320


896
00:38:10,320 --> 00:38:13,380
예상 자유 에너지를 정의하는 방식은

897
00:38:13,380 --> 00:38:16,380
가능한 모든

898
00:38:16,380 --> 00:38:20,220
무작위 변수 그룹의 합계와 같으므로 각각

899
00:38:20,220 --> 00:38:22,260
의 관측치가 반복될 것입니다.

900
00:38:22,260 --> 00:38:23,460
en

901
00:38:23,460 --> 00:38:25,380


902
00:38:25,380 --> 00:38:27,800
사전

903
00:38:31,560 --> 00:38:33,540
um 예측 포스트 스타일 프로세스

904
00:38:33,540 --> 00:38:34,740
관찰 사이의 달력 버전으로

905
00:38:34,740 --> 00:38:36,480
따라서 이것은

906
00:38:36,480 --> 00:38:38,520
발생할 일과 우리가 원하는 것 사이의 색상 버전인 위험 용어입니다. 그런

907
00:38:38,520 --> 00:38:40,859


908
00:38:40,859 --> 00:38:43,500
다음

909
00:38:43,500 --> 00:38:45,900
각 관찰에 대한 모호성을 계산할 것

910
00:38:45,900 --> 00:38:49,520
입니다.  일반적

911
00:38:49,520 --> 00:38:53,579
으로 우도 매핑의 예상 엔트로피로 정의

912
00:38:53,579 --> 00:38:57,180
되므로 이 빌드 방정식은 종이를 작성

913
00:38:57,180 --> 00:38:59,940
하지 않은 사람들에게는 아마도 새로운 것일

914
00:38:59,940 --> 00:39:01,380


915
00:39:01,380 --> 00:39:04,859
수 있지만 더 직관적으로 만드는 하나의 특정 사례를 볼 수

916
00:39:04,859 --> 00:39:07,320
있으며

917
00:39:07,320 --> 00:39:09,359
기본적으로 특정 사례는

918
00:39:09,359 --> 00:39:11,760
각  하위 집합

919
00:39:11,760 --> 00:39:15,599
은 상위 5개 중 하나의 관찰에 해당하며 이

920
00:39:15,599 --> 00:39:19,020
경우

921
00:39:19,020 --> 00:39:21,000
특정 처리에 대한 예상 frenergy이므로 하나의 특정

922
00:39:21,000 --> 00:39:22,820
다중 지수

923
00:39:22,820 --> 00:39:26,520
에 대한 위험은 특정 관찰에 대한 위험에

924
00:39:26,520 --> 00:39:27,859


925
00:39:27,859 --> 00:39:30,720
모호성 또는 특정

926
00:39:30,720 --> 00:39:32,820
관찰을 더한 것이므로 여전히 모호성

927
00:39:32,820 --> 00:39:36,000
과 위험이 있습니다.

928
00:39:36,000 --> 00:39:37,619
이제 우리는

929
00:39:37,619 --> 00:39:39,480
이러한 접근 방식을 함께 테스트하기 위해 um이 필요

930
00:39:39,480 --> 00:39:42,000
하므로 분기

931
00:39:42,000 --> 00:39:44,040
시간과 두 번째 기회를 다양한 시간

932
00:39:44,040 --> 00:39:46,380
과 비교하십시오.  필터링하지 않는 테스트와

933
00:39:46,380 --> 00:39:48,420


934
00:39:48,420 --> 00:39:50,520
전파를 기반으로 하는 마지막 접근

935
00:39:50,520 --> 00:39:52,500
방식은 기본적

936
00:39:52,500 --> 00:39:56,940
으로 이 다섯 가지 데이터 세트의 분산을 사용하는 것입니다.

937
00:39:56,940 --> 00:39:58,980


938
00:39:58,980 --> 00:40:01,079
음 우리

939
00:40:01,079 --> 00:40:04,319
는 환경을 가이드로 나타내

940
00:40:04,319 --> 00:40:05,640


941
00:40:05,640 --> 00:40:07,920
므로 이것으로 괜찮습니다.  환경에는

942
00:40:07,920 --> 00:40:10,619
세 가지 다른 모양이 있습니다

943
00:40:10,619 --> 00:40:13,980


944
00:40:13,980 --> 00:40:16,319
. 이미지의 오른쪽 하단 모서리로 당겨야 하는 첨가제가

945
00:40:16,319 --> 00:40:18,480
있고 사각형이 있고 사각형

946
00:40:18,480 --> 00:40:21,180
은 이미지의 왼쪽 하단 모서리로 당겨야 합니다.

947
00:40:21,180 --> 00:40:23,160


948
00:40:23,160 --> 00:40:25,940


949
00:40:25,940 --> 00:40:29,880
위치가 너무 많기 때문입니다.  X와 Y에서 우리가 하는

950
00:40:29,880 --> 00:40:34,380
일은 어떤 형태의 상태 집계를 수행하는 것입니다

951
00:40:34,380 --> 00:40:36,960


952
00:40:36,960 --> 00:40:39,180


953
00:40:39,180 --> 00:40:41,579


954
00:40:41,579 --> 00:40:43,500
. 모양이 8개 위치 중 하나에 있으면 오른쪽 왼쪽 모서리 음 왼쪽 상단 모서리에 있는 8번째 첫 번째

955
00:40:43,500 --> 00:40:45,780
위치에 대해 하나의 상태로 집계할 것입니다.

956
00:40:45,780 --> 00:40:48,839
인덱스 0. 그리고 이것에

957
00:40:48,839 --> 00:40:50,760
대해 그것은 인덱스 1에 있을 것이고 그

958
00:40:50,760 --> 00:40:53,400
다음 등등 2 3 4

959
00:40:53,400 --> 00:40:56,760
는 제곱에 대해 19에 더할 것이고 그것이 아프면 우리

960
00:40:56,760 --> 00:40:59,339
는 20과 39 사이의 인덱스를 해당 상태에 할당할 것입니다.

961
00:40:59,339 --> 00:41:03,359


962
00:41:03,359 --> 00:41:05,579
그리고 s  예를

963
00:41:05,579 --> 00:41:07,079
들어 우리가 하고 있는 것은 기본적으로

964
00:41:07,079 --> 00:41:09,420
상태 공간을 줄이는 것이므로

965
00:41:09,420 --> 00:41:11,460
이러한 접근 방식 중 일부는 전체 상태 공간

966
00:41:11,460 --> 00:41:14,280
을 해결할 만큼 강력하지 않기

967
00:41:14,280 --> 00:41:16,380


968
00:41:16,380 --> 00:41:17,960


969
00:41:17,960 --> 00:41:20,940
때문에 여전히 무언가를 할 수 있습니다. 재무 표현과 베이지안 필터링을 비교한 결과는 다음과 같습니다.

970
00:41:20,940 --> 00:41:23,640


971
00:41:23,640 --> 00:41:25,560
그리고

972
00:41:25,560 --> 00:41:28,700
믿음 전파

973
00:41:28,819 --> 00:41:31,319
연구 통과를 기반으로 하는 마지막

974
00:41:31,319 --> 00:41:34,079
것은

975
00:41:34,079 --> 00:41:36,900


976
00:41:36,900 --> 00:41:41,460


977
00:41:41,460 --> 00:41:44,339
4의 세분성을 사용해야 했습니다.

978
00:41:44,339 --> 00:41:46,260
이 설정으로 우리는

979
00:41:46,260 --> 00:41:49,560
96번의 시간

980
00:41:49,560 --> 00:41:53,640
을 해결할 수 있었고 한 번의 시도에 대한 1um의 평균 시간

981
00:41:53,640 --> 00:41:54,420


982
00:41:54,420 --> 00:41:58,980


983
00:41:58,980 --> 00:42:02,339
은 기본 및 필터링 접근 방식을 사용하여 약 5초입니다. 우리

984
00:42:02,339 --> 00:42:04,859
는 2의 세분성으로 내려갈 수 있었습니다.

985
00:42:04,859 --> 00:42:07,920


986
00:42:07,920 --> 00:42:09,420
크기가 2 x 2

987
00:42:09,420 --> 00:42:12,119
이고 이것으로 이

988
00:42:12,119 --> 00:42:15,420
세분성으로 수소가

989
00:42:15,420 --> 00:42:19,740
시간의 작업 98을 해결할 수 있게 됩니다.

990
00:42:19,740 --> 00:42:21,180


991
00:42:21,180 --> 00:42:23,240


992
00:42:23,339 --> 00:42:25,140
하지만 문제는 우리가 그래뉼

993
00:42:25,140 --> 00:42:27,119
의 크기를 줄이기 때문에  리티 우리는 또한

994
00:42:27,119 --> 00:42:30,180
무대 공간의 크기를 증가시키고

995
00:42:30,180 --> 00:42:32,880
이것은 계산 시간의 증가와 같은 결과를 가져옵니다.

996
00:42:32,880 --> 00:42:35,579
즉,

997
00:42:35,579 --> 00:42:37,319
이제 각 예고편

998
00:42:37,319 --> 00:42:40,020


999
00:42:40,020 --> 00:42:43,079
이 마지막 접근 방식을 위해 실행되는 데 약 17

1000
00:42:43,079 --> 00:42:46,020
초가 필요하다는 것을 의미합니다.

1001
00:42:46,020 --> 00:42:48,000
우도 및 전환 매핑

1002
00:42:48,000 --> 00:42:51,599
을 사용하면 멋진

1003
00:42:51,599 --> 00:42:54,420
범위를 단 하나처럼 취소

1004
00:42:54,420 --> 00:42:56,040
할 수 있으므로 이제 이미지 내부의

1005
00:42:56,040 --> 00:42:58,500
모든 단일 X 및

1006
00:42:58,500 --> 00:43:02,640
Y 위치를 구별할 수

1007
00:43:02,640 --> 00:43:05,040
있으며 이 세분성을 통해 해결할 수 있습니다.

1008
00:43:05,040 --> 00:43:07,200
작업을 완벽하게 수행

1009
00:43:07,200 --> 00:43:08,760


1010
00:43:08,760 --> 00:43:10,800
하고 분포의 인수 분해를 활용할 수 있기

1011
00:43:10,800 --> 00:43:13,859
때문에 이전의 모든 접근 방식보다 훨씬 빠르게 진행하고

1012
00:43:13,859 --> 00:43:15,780


1013
00:43:15,780 --> 00:43:18,839
약 2.5초 안에 작업을 해결할 수

1014
00:43:18,839 --> 00:43:21,480
있으므로 한 가지만 분명히 하고 싶습니다.

1015
00:43:21,480 --> 00:43:24,180
여기 이

1016
00:43:24,180 --> 00:43:25,980
접근 방식은

1017
00:43:25,980 --> 00:43:30,240
모든 y 위치를 직접

1018
00:43:30,240 --> 00:43:31,980


1019
00:43:31,980 --> 00:43:34,740
모델링할

1020
00:43:34,740 --> 00:43:36,780
수 있기 때문입니다.

1021
00:43:36,780 --> 00:43:38,460
모양 및/또는 스케일의 가능한 방향과

1022
00:43:38,460 --> 00:43:40,800


1023
00:43:40,800 --> 00:43:42,960
같이 기본적으로

1024
00:43:42,960 --> 00:43:45,900
각 모양은 서로 다른 크기를 가질 수 있으며

1025
00:43:45,900 --> 00:43:49,500
이 스케일 치수는

1026
00:43:49,500 --> 00:43:51,359
기본적으로 이것이 약 700,000개의 상태 공간 구성을 처리할 수 있는 신뢰할 수 있는 접근 방식임을 나타냅니다

1027
00:43:51,359 --> 00:43:54,420


1028
00:43:54,420 --> 00:43:57,740


1029
00:43:57,740 --> 00:44:00,780
.  결과

1030
00:44:00,780 --> 00:44:03,480
및 이 접근 방식이

1031
00:44:03,480 --> 00:44:06,180
매우 좋은 성능으로 이어질 수 있는 것과 같은 일상적인 성능에 접근한다는 것을 보여줍니다.

1032
00:44:06,180 --> 00:44:08,640
하지만 이제 우리는 그것을 어떻게 교환

1033
00:44:08,640 --> 00:44:10,920
할 수 있습니까? 아주 작은

1034
00:44:10,920 --> 00:44:14,160
코드 예제가 있습니다

1035
00:44:14,160 --> 00:44:17,640
. 환경에서 a b

1036
00:44:17,640 --> 00:44:19,440
c 및 d 행렬을 검색하고 있습니다.

1037
00:44:19,440 --> 00:44:21,200
C 매트릭스

1038
00:44:21,200 --> 00:44:24,000
대칭

1039
00:44:24,000 --> 00:44:27,599
은 에이전트의 이전 선호도에 해당하고

1040
00:44:27,599 --> 00:44:29,700
이미 여러 번 말했듯

1041
00:44:29,700 --> 00:44:31,740
이 a는 우도에 해당합니다. b는

1042
00:44:31,740 --> 00:44:33,780
전환에 해당하고 는 초기 상태의 이전 상태

1043
00:44:33,780 --> 00:44:35,520


1044
00:44:35,520 --> 00:44:37,440
이며 bti 3을 생성하는 방식입니다.

1045
00:44:37,440 --> 00:44:40,980
에이전트는

1046
00:44:40,980 --> 00:44:43,859
상단 와이어 슬라이드 빌더를 생성하여 밑줄 0

1047
00:44:43,859 --> 00:44:45,900
이라고 하는 하나의 작업이 있다고 말한

1048
00:44:45,900 --> 00:44:49,260
다음 수를 제공합니다.

1049
00:44:49,260 --> 00:44:50,760
이

1050
00:44:50,760 --> 00:44:52,380
명령어가 취할 수 있는 값은

1051
00:44:52,380 --> 00:44:55,619


1052
00:44:55,619 --> 00:44:57,420
시스템의 모든 단일 상태에 대해 하나의 상태를 추가하기만 하면 X

1053
00:44:57,420 --> 00:44:59,700
위치 y 위치 모양 크기

1054
00:44:59,700 --> 00:45:02,220
및 방향이 지정되고 두 번째

1055
00:45:02,220 --> 00:45:05,040
매개변수로 제공되는 팩은

1056
00:45:05,040 --> 00:45:08,099
상태에 대한 시험의 매개변수이므로  이제

1057
00:45:08,099 --> 00:45:10,079
생성 모델 내에 시스템의 상태

1058
00:45:10,079 --> 00:45:11,640
가 있습니다.

1059
00:45:11,640 --> 00:45:14,099
그런 다음

1060
00:45:14,099 --> 00:45:16,980
각 단계에 대해 직접 관찰을 추가해야 합니다

1061
00:45:16,980 --> 00:45:19,619


1062
00:45:19,619 --> 00:45:23,040
. 행렬을 통해 이 상태에 의존하는 하나의 다른 관찰을 추가

1063
00:45:23,040 --> 00:45:25,619
하므로 행렬과 상위 목록을 제공합니다.

1064
00:45:25,619 --> 00:45:27,300
거기

1065
00:45:27,300 --> 00:45:29,579
그리고 이것은 기본적으로

1066
00:45:29,579 --> 00:45:33,660
일반성 모델의 각 상태에 대한 관찰을 추가

1067
00:45:33,660 --> 00:45:36,660
하므로 마지막 단계 전에

1068
00:45:36,660 --> 00:45:39,119
전이를 추가하는 것이므로 기본적으로

1069
00:45:39,119 --> 00:45:42,480
시스템의 각 단계에 대해 우리

1070
00:45:42,480 --> 00:45:44,940
는 사용해야 할 B 매트릭스가

1071
00:45:44,940 --> 00:45:47,339
무엇인지, 프라임이 무엇인지 말합니다.  이 텍스트의 부모

1072
00:45:47,339 --> 00:45:50,160
이므로 예를 들어 에이전트의 X 위치는

1073
00:45:50,160 --> 00:45:52,380


1074
00:45:52,380 --> 00:45:54,780
이전 용어 시간 단계에서 X의 발음

1075
00:45:54,780 --> 00:45:56,460
과 수행 중인 작업에 따라

1076
00:45:56,460 --> 00:45:57,660


1077
00:45:57,660 --> 00:46:00,259
달라

1078
00:46:00,319 --> 00:46:03,420
집니다.  모델 내의 obabilities

1079
00:46:03,420 --> 00:46:05,700
와 오른쪽 상단 크기를 구축하기 전의 마지막 단계

1080
00:46:05,700 --> 00:46:08,339
는

1081
00:46:08,339 --> 00:46:10,800
이전 기본 설정을 정의하는 것입니다.

1082
00:46:10,800 --> 00:46:12,599
디스플레이 데이터 세트에서 우리가 수행하는 작업

1083
00:46:12,599 --> 00:46:15,180
에 대한 X Y 및 얼룩 모양에 대한 기본 설정을 적용해야 하기 때문입니다.

1084
00:46:15,180 --> 00:46:19,500
여기

1085
00:46:19,500 --> 00:46:22,020
에 하나의 요소가 있으므로 이것은 관찰의 X

1086
00:46:22,020 --> 00:46:24,300
하위 집합 중 하나

1087
00:46:24,300 --> 00:46:26,160
이며 우리는 여기에 연결된 세 개의 매트릭스를 제공

1088
00:46:26,160 --> 00:46:27,720


1089
00:46:27,720 --> 00:46:30,839
한 다음 함수 빌드를 호출

1090
00:46:30,839 --> 00:46:33,300
하여 맨 위 슬라이스 하나를 반환

1091
00:46:33,300 --> 00:46:36,540
하고 스톡을 사용하는 PCI 세 개의 맵 에이전트를 만듭니다.

1092
00:46:36,540 --> 00:46:39,119
가격 슬라이드 및 우리

1093
00:46:39,119 --> 00:46:40,680


1094
00:46:40,680 --> 00:46:42,599
는 알고리즘이 사용하기를 원하는 여러 계획 반복

1095
00:46:42,599 --> 00:46:44,760


1096
00:46:44,760 --> 00:46:49,140
과 Traders 탐색 대 탐색

1097
00:46:49,140 --> 00:46:52,640
표현 착취

1098
00:46:52,800 --> 00:46:56,400
의 탐색 상수를 제공합니다. 이것은 우리가 특히 여기에서 개발한 그래픽 사용자 인터페이스

1099
00:46:56,400 --> 00:46:57,599
입니다. 우리는

1100
00:46:57,599 --> 00:47:00,720
초기 공급을 볼 수 있습니다.

1101
00:47:00,720 --> 00:47:03,780
우리가 소프트웨어에 있다면 우리

1102
00:47:03,780 --> 00:47:05,940
는 관점 슬라이드를 클릭하고

1103
00:47:05,940 --> 00:47:08,220


1104
00:47:08,220 --> 00:47:11,099
모든 상태 변수에

1105
00:47:11,099 --> 00:47:13,619
대해 다른 게시물 스타일을 볼 수 있습니다. 또한 다른 것을 볼 수 있습니다.

1106
00:47:13,619 --> 00:47:16,079
스톱워치 스타일에 대한 t 정보 그래서

1107
00:47:16,079 --> 00:47:17,700
지금까지 방문한 횟수는

1108
00:47:17,700 --> 00:47:19,980


1109
00:47:19,980 --> 00:47:22,559
왼쪽 오른쪽에 있는 버튼을 사용하여

1110
00:47:22,559 --> 00:47:25,200
기본적으로 단계별

1111
00:47:25,200 --> 00:47:27,300
멀티캐리지 연구를 수행할 수 있으므로 어떤 일이 일어날지

1112
00:47:27,300 --> 00:47:29,579
인터페이스에서 우리는 아이들을

1113
00:47:29,579 --> 00:47:31,500
추가

1114
00:47:31,500 --> 00:47:33,119
할 것입니다. 그런 다음

1115
00:47:33,119 --> 00:47:35,760
그 아이들을 클릭하여 나무의 해당 부분을 탐색할

1116
00:47:35,760 --> 00:47:38,400


1117
00:47:38,400 --> 00:47:40,440
수 있습니다. 미래에 워터 슬라이드라는 용어에 대한 정보

1118
00:47:40,440 --> 00:47:42,119


1119
00:47:42,119 --> 00:47:44,880
를 얻을 수 있습니다.  에이전트의

1120
00:47:44,880 --> 00:47:47,819
계획과 신념을 모두 분석하는 데 사용합니다.

1121
00:47:47,819 --> 00:47:49,940


1122
00:47:49,940 --> 00:47:52,380
이제

1123
00:47:52,380 --> 00:47:53,640
음 다른

1124
00:47:53,640 --> 00:47:55,380
접근 방식을 제시했습니다. 이제 이 프레젠테이션을 마무리할 시간

1125
00:47:55,380 --> 00:47:58,079


1126
00:47:58,079 --> 00:47:59,520
이므로 세 가지 다른 접근 방식을 보았습니다

1127
00:47:59,520 --> 00:48:01,859
. 첫 번째는

1128
00:48:01,859 --> 00:48:04,500
바이오슬래시 통과에 기반하고 분명히

1129
00:48:04,500 --> 00:48:06,180
활성 입구 및 의료 예술

1130
00:48:06,180 --> 00:48:07,200
연구를 사용

1131
00:48:07,200 --> 00:48:11,119
하여 세 번째는 비즈니스를 기반으로

1132
00:48:11,119 --> 00:48:13,980
하고 마지막

1133
00:48:13,980 --> 00:48:16,260
은 신념

1134
00:48:16,260 --> 00:48:19,920
전파와 미래 예측

1135
00:48:19,920 --> 00:48:23,579
이 혼합된 IP 알고리즘을 기반으로 합니다.  s의 성능은 첫 번째이므로 bti

1136
00:48:23,579 --> 00:48:27,480
vnp는 기본적으로 두 번째 것보다 성능이 떨어지는 것처럼 느립니다.

1137
00:48:27,480 --> 00:48:29,280


1138
00:48:29,280 --> 00:48:31,619
한 번은 세 번째 것보다 성능이

1139
00:48:31,619 --> 00:48:33,859


1140
00:48:34,020 --> 00:48:37,140
떨어지지만 괜찮습니다. 하지만

1141
00:48:37,140 --> 00:48:39,420
다음 접근 방식에 대한 성능 능력 측면에서 증가하더라도

1142
00:48:39,420 --> 00:48:41,040
여전히

1143
00:48:41,040 --> 00:48:43,680
일부가 있습니다.  예를 들어

1144
00:48:43,680 --> 00:48:48,059
이미지 기반 문제를 어떻게 해결하는지

1145
00:48:48,059 --> 00:48:50,160
또는 현재 생성 모델의 구조를 어떻게 학습할 수 있는지 명확하지 않은 작업

1146
00:48:50,160 --> 00:48:51,660


1147
00:48:51,660 --> 00:48:54,780
은 모델러가 모델에 대한 설명을 제공해야

1148
00:48:54,780 --> 00:48:56,579


1149
00:48:56,579 --> 00:48:58,740
하지만 다음과 같은 경우 매우 좋을 것입니다.

1150
00:48:58,740 --> 00:49:02,579
데이터에서 배울 수

1151
00:49:02,579 --> 00:49:05,220
있으며 현재로서는 기본적

1152
00:49:05,220 --> 00:49:08,760
으로 유용한 일련의 작업과 같은 작업을 제공하고 있습니다.

1153
00:49:08,760 --> 00:49:12,240
예

1154
00:49:12,240 --> 00:49:14,880
를 들어 설명된 구획으로 돌아가면

1155
00:49:14,880 --> 00:49:17,520
우리가 올바르게 갈 때마다 모양을 밀기만 하는 작업을 상상할 수 있습니다.

1156
00:49:17,520 --> 00:49:20,700


1157
00:49:20,700 --> 00:49:22,619
오른쪽에 한 위치, 한 위치

1158
00:49:22,619 --> 00:49:24,480
더, 한 위치 더 있지만

1159
00:49:24,480 --> 00:49:27,480
계획을 교육할 수 있게 만들기 위해 우리가 해온

1160
00:49:27,480 --> 00:49:29,760
것은 모든 작업을

1161
00:49:29,760 --> 00:49:32,220
함께 청크하고 l을 실행하는 것입니다.  총 8개의

1162
00:49:32,220 --> 00:49:34,380
액션 또는 총 4개의 액션

1163
00:49:34,380 --> 00:49:37,619
이지만 여기에는 한계

1164
00:49:37,619 --> 00:49:39,960
가 있으며

1165
00:49:39,960 --> 00:49:41,700
이와 같은 일련의 기능을

1166
00:49:41,700 --> 00:49:43,920
자동

1167
00:49:43,920 --> 00:49:46,319
으로 실행할 수

1168
00:49:46,319 --> 00:49:48,720
있다면 정말 좋을 것

1169
00:49:48,720 --> 00:49:52,740
입니다.  발표에 감사드립니다. 발표에 감사드립니다.

1170
00:49:52,740 --> 00:49:54,859


1171
00:49:56,640 --> 00:49:59,760


1172
00:49:59,760 --> 00:50:03,140
실제로 우리의 반응을 잘 활용하세요.

1173
00:50:04,140 --> 00:50:05,520


1174
00:50:05,520 --> 00:50:08,460
매우 흥미로운 많은

1175
00:50:08,460 --> 00:50:11,760
자료와 논의

1176
00:50:11,760 --> 00:50:13,680
할 사항이 있습니다. 하나의 일반적인 질문부터 시작하겠습니다.

1177
00:50:13,680 --> 00:50:16,200
그런 다음 Jacob과 Ali는 약간의 맥락에 대한

1178
00:50:16,200 --> 00:50:17,700
귀하의 질문을 기대합니다.

1179
00:50:17,700 --> 00:50:20,760


1180
00:50:20,760 --> 00:50:23,940
어떻게 이 팀과 당신

1181
00:50:23,940 --> 00:50:26,880
이 이 문제를 해결

1182
00:50:26,880 --> 00:50:29,400
하게 되었나요? 당신이 능동적 추론에 대해 작업하고 있고

1183
00:50:29,400 --> 00:50:31,680
확장에 관심이 있었나요 아니면

1184
00:50:31,680 --> 00:50:34,319
다른 인접 영역에서 작업하고 있었고 이

1185
00:50:34,319 --> 00:50:35,640
알고리즘에 대해

1186
00:50:35,640 --> 00:50:37,319
괜찮았

1187
00:50:37,319 --> 00:50:39,180
나요?  저는 켄트

1188
00:50:39,180 --> 00:50:41,040
대학에서 박사 학위를 시작한 것처럼 시작했습니다.

1189
00:50:41,040 --> 00:50:43,319


1190
00:50:43,319 --> 00:50:44,280
음

1191
00:50:44,280 --> 00:50:47,700
기본적으로 전 세계와 이 프로

1192
00:50:47,700 --> 00:50:49,200
에 대한 두 개의 미생물 실험실인 마렉입니다.

1193
00:50:49,200 --> 00:50:51,720
저는 제 상사이기 때문에

1194
00:50:51,720 --> 00:50:53,700


1195
00:50:53,700 --> 00:50:56,460
박사 학위를 통해 함께 일하게 되었고 연구소인 현장에서 몇 가지 프레젠테이션을

1196
00:50:56,460 --> 00:50:59,220
했기 때문에 함께 일해 온 공동 작업자인 La Costa에게 졌습니다.

1197
00:50:59,220 --> 00:51:01,440


1198
00:51:01,440 --> 00:51:03,900


1199
00:51:03,900 --> 00:51:06,240


1200
00:51:06,240 --> 00:51:09,359
음 캘리포니아가 있는 곳은

1201
00:51:09,359 --> 00:51:11,280
프리젠테이션을 통해서입니다. 발음하는 동안

1202
00:51:11,280 --> 00:51:14,099
그가

1203
00:51:14,099 --> 00:51:16,500
저와 함께 일하는 데 관심이 있다는 것을 알고 있기 때문에

1204
00:51:16,500 --> 00:51:18,599
이것이 제가 Larson Acosta와 함께 일하기 시작한 방법입니다.

1205
00:51:18,599 --> 00:51:21,420
음, 시간이 지나면

1206
00:51:21,420 --> 00:51:23,160
배경을 적용하겠습니다.

1207
00:51:23,160 --> 00:51:26,220
학교와 같은 아주 컴퓨터 과학에서

1208
00:51:26,220 --> 00:51:29,760
코딩을 따랐다가 음 University of Kent에 도착하여

1209
00:51:29,760 --> 00:51:31,740


1210
00:51:31,740 --> 00:51:34,500
기계 학습에 대해 공부

1211
00:51:34,500 --> 00:51:36,599
하기 시작했고 여기에서

1212
00:51:36,599 --> 00:51:37,400


1213
00:51:37,400 --> 00:51:40,079
강화 학습 또는 적극적인

1214
00:51:40,079 --> 00:51:43,440
영향에 대한 경험을 쌓기 시작했고 어 저 여자

1215
00:51:43,440 --> 00:51:45,599
처음에는 마이클도

1216
00:51:45,599 --> 00:51:48,960
그랬고 제 선생님 두 명과 로봇

1217
00:51:48,960 --> 00:51:52,140
여성도 이미 능동적

1218
00:51:52,140 --> 00:51:55,020
추론에 관심이 있었고 어느 ​​날 그녀

1219
00:51:55,020 --> 00:51:57,240
가 수업을 맡았을 때 제가 현장에 와서

1220
00:51:57,240 --> 00:51:59,040
글쎄, 나는 사이드 프로젝트에 관심을 가질

1221
00:51:59,040 --> 00:52:00,839
것이고 그것이 물론

1222
00:52:00,839 --> 00:52:03,960
모든 것이 시작된 방법이고 그

1223
00:52:03,960 --> 00:52:06,240
후 나는 결국 박사 학위

1224
00:52:06,240 --> 00:52:09,300
를 받았기 때문에 기본적으로 둘 다

1225
00:52:09,300 --> 00:52:10,920
내 주소를 학습하는 기계에서 왔습니다.

1226
00:52:10,920 --> 00:52:12,720
어 긴 이야기는 순수에서 나옵니다.

1227
00:52:12,720 --> 00:52:16,260
수학 그리고

1228
00:52:16,260 --> 00:52:19,020
신경 과학과 같은 신경 과학 및

1229
00:52:19,020 --> 00:52:22,260
주제에서 테이블로 마케팅을 가져 오는 쉬운

1230
00:52:22,260 --> 00:52:24,780


1231
00:52:24,780 --> 00:52:27,119


1232
00:52:27,119 --> 00:52:30,619


1233
00:52:31,700 --> 00:52:34,800


1234
00:52:34,800 --> 00:52:38,700
사람 훌륭합니다.  놀라운 프리젠테이션 어

1235
00:52:38,700 --> 00:52:41,579
정말 많은 것을 배웠습니다 어 글쎄 제가 할

1236
00:52:41,579 --> 00:52:43,859
수 있다면 몇 가지 논평을 하고 싶습니다

1237
00:52:43,859 --> 00:52:47,220
음 그리고 아마도 많은 질문들 어

1238
00:52:47,220 --> 00:52:49,380
잘 아시겠지만 능동적

1239
00:52:49,380 --> 00:52:51,960
추론 슬래시 fep 연구가 최근에

1240
00:52:51,960 --> 00:52:54,900
진행되고 있습니다  음 기본적으로 두 가지

1241
00:52:54,900 --> 00:52:58,619
별개의 경로 어 이론적 작업

1242
00:52:58,619 --> 00:53:01,559
은 주로

1243
00:53:01,559 --> 00:53:03,599
근본적인 기본 원칙을

1244
00:53:03,599 --> 00:53:06,359


1245
00:53:06,359 --> 00:53:07,800
개발하는 데

1246
00:53:07,800 --> 00:53:10,440
맞춰져 있습니다.  공업과 좀 더

1247
00:53:10,440 --> 00:53:13,160
응용 지향적인 연구는

1248
00:53:13,160 --> 00:53:15,359
아마도 이론 물리학과 실험 물리학 연구자 사이의 구분과 다르지 않을 것

1249
00:53:15,359 --> 00:53:17,819


1250
00:53:17,819 --> 00:53:20,940
입니다. 어,

1251
00:53:20,940 --> 00:53:22,980
하지만 당신이 이것에 대해 제 생각에 동의

1252
00:53:22,980 --> 00:53:26,119
하실지는 모르겠지만 슬프게도

1253
00:53:26,119 --> 00:53:28,020
응용 지향적 연구와

1254
00:53:28,020 --> 00:53:30,800
특히  능동 임프린트의 작업 및 다양한

1255
00:53:30,800 --> 00:53:33,240
알고리즘 구현

1256
00:53:33,240 --> 00:53:36,119


1257
00:53:36,119 --> 00:53:38,940
은 적어도

1258
00:53:38,940 --> 00:53:41,460
연구 및 이론적 측면과 비교할 때 필요한 만큼의 인식을 얻지 못했습니다.

1259
00:53:41,460 --> 00:53:44,579
관련

1260
00:53:44,579 --> 00:53:47,780
출판 문헌의 양이 이전에

1261
00:53:47,780 --> 00:53:50,520
상대적으로 중요하므로 이러한

1262
00:53:50,520 --> 00:53:52,140
맥락에서 볼

1263
00:53:52,140 --> 00:53:54,780
때 귀하의 라인  의 연구가 훨씬

1264
00:53:54,780 --> 00:53:57,960
더 대담하고 훨씬 더

1265
00:53:57,960 --> 00:54:00,119
의미 있는

1266
00:54:00,119 --> 00:54:04,339
것 같아서 축하드리고 싶었지만 어, 저는

1267
00:54:04,339 --> 00:54:07,380
과학 기술 통일의 열렬한 팬이기 때문에

1268
00:54:07,380 --> 00:54:10,280
제 첫 번째 질문

1269
00:54:10,280 --> 00:54:14,480
은 어

1270
00:54:14,480 --> 00:54:18,300


1271
00:54:18,300 --> 00:54:20,400


1272
00:54:20,400 --> 00:54:23,400


1273
00:54:23,400 --> 00:54:26,000
예를 들어 방금 언급한

1274
00:54:26,000 --> 00:54:28,260
자동 임프린트의 서로 다른 알고리즘 구현을 통합합니다.  학습은 미래와 연구를

1275
00:54:28,260 --> 00:54:30,980
위한 가능한 주제로서의 생성 모델의 구조입니다.

1276
00:54:30,980 --> 00:54:34,500


1277
00:54:34,500 --> 00:54:36,960
여기에서 어를 본 적이 있는지 잘 모르겠습니다

1278
00:54:36,960 --> 00:54:39,480
. 몇 주 전에 나온 아주 최근의 논문,

1279
00:54:39,480 --> 00:54:42,660
즉

1280
00:54:42,660 --> 00:54:44,700
능동 각인에 대한 학습 생성 모델입니다.

1281
00:54:44,700 --> 00:54:46,859
내가 맞다면 텐서 네트워크를 사용하여

1282
00:54:46,859 --> 00:54:49,140


1283
00:54:49,140 --> 00:54:54,119
해당 작업에 대한 흥미로운 물리학 영감 접근 방식을 설명하지만

1284
00:54:54,119 --> 00:54:56,160


1285
00:54:56,160 --> 00:54:59,400


1286
00:54:59,400 --> 00:55:00,960
논문

1287
00:55:00,960 --> 00:55:02,640
이 당시 귀하의 작업을 인식하지 못했기 때문에 분기 시간 활성 추론에 대한 인용을 포함하지 않습니다.  그들의

1288
00:55:02,640 --> 00:55:05,700
글이지만 이 작업은 당신이 방금 언급한 한계 중 일부를 극복

1289
00:55:05,700 --> 00:55:07,319


1290
00:55:07,319 --> 00:55:10,680
하기 위해 btai와의 잠재적인 통합을 위한 꽤 좋은 후보로 저에게 보입니다.

1291
00:55:10,680 --> 00:55:13,980


1292
00:55:13,980 --> 00:55:16,559
어 또는 또 다른 최근

1293
00:55:16,559 --> 00:55:19,619
예는 어 아마도 어

1294
00:55:19,619 --> 00:55:23,280
Sanish 롤 종이가 될 것입니다 시간

1295
00:55:23,280 --> 00:55:25,260
평균 활성 영향력을 유도합니다.  제어

1296
00:55:25,260 --> 00:55:28,200
원리에서 어 무한한 지평선을 도출하려는 시도입니다

1297
00:55:28,200 --> 00:55:30,540


1298
00:55:30,540 --> 00:55:32,700
음 평균 어 능동적 추론의 놀라운 공식

1299
00:55:32,700 --> 00:55:34,500


1300
00:55:34,500 --> 00:55:36,480
음 그래서 저는 당신의 회사가 정말 마음에 들었습니다

1301
00:55:36,480 --> 00:55:38,700


1302
00:55:38,700 --> 00:55:40,619
분기 시간 활성 인쇄물,

1303
00:55:40,619 --> 00:55:43,920
특히 벤치마크 분석의 다양한 변형에 대한 적극적인 개요 및

1304
00:55:43,920 --> 00:55:46,380
음 분기 시간 활성 관심

1305
00:55:46,380 --> 00:55:48,359
의 하위 집합으로 작업에서 정교한 활성 추론을 설명한 것을 알고

1306
00:55:48,359 --> 00:55:50,940


1307
00:55:50,940 --> 00:55:53,160
있지만 이것들에 관계없이

1308
00:55:53,160 --> 00:55:55,980
방금 언급한 특정 예입니다.

1309
00:55:55,980 --> 00:55:59,640


1310
00:55:59,640 --> 00:56:02,460


1311
00:56:02,460 --> 00:56:04,339


1312
00:56:04,339 --> 00:56:07,260
각각의 이점 메시지를 손상시키지 않고

1313
00:56:07,260 --> 00:56:10,559
일부 제한 사항을 극복하기 위해 각각 고유한 장단점이 있는 능동적 추론 구현의 다른 변형과 가능한 통합 측면에서

1314
00:56:10,559 --> 00:56:13,260


1315
00:56:13,260 --> 00:56:15,599


1316
00:56:15,599 --> 00:56:18,000
btai의 미래를 어떻게 보십니까?

1317
00:56:18,000 --> 00:56:20,339
분기 시간 활성

1318
00:56:20,339 --> 00:56:24,359
각인이 언젠가

1319
00:56:24,359 --> 00:56:26,640
진정으로 통합된 종류의 프레임워크에서 어떻게든 다른 모든 접근 방식을 포함

1320
00:56:26,640 --> 00:56:29,520


1321
00:56:29,520 --> 00:56:32,940
할 가능성

1322
00:56:32,940 --> 00:56:34,160


1323
00:56:34,160 --> 00:56:36,839
으로 보십니까?  프랑스

1324
00:56:36,839 --> 00:56:38,640


1325
00:56:38,640 --> 00:56:41,520
에서 활발히 활동하고 있는 출시 시기 능동적 추론과의 연결고리를 탐색해

1326
00:56:41,520 --> 00:56:44,819
왔고 세련된 입구와 나는

1327
00:56:44,819 --> 00:56:46,440
아직  발음을 기반으로 실제로 이야기

1328
00:56:46,440 --> 00:56:48,660
했지만

1329
00:56:48,660 --> 00:56:51,900
어, 내 작업자가 어땠는지에 대한 아이디어를 빠르게 제공할 수 있습니다.

1330
00:56:51,900 --> 00:56:53,880


1331
00:56:53,880 --> 00:56:55,079
이것

1332
00:56:55,079 --> 00:56:56,940
의 결론은 기본적으로

1333
00:56:56,940 --> 00:56:58,559
음 우리가 지역 관중 에너지라고 부르는

1334
00:56:58,559 --> 00:57:01,020
것을 다시 전파하는 방법에 관한 것

1335
00:57:01,020 --> 00:57:03,059


1336
00:57:03,059 --> 00:57:05,460
입니다.  기본적으로 미래의 한 노드

1337
00:57:05,460 --> 00:57:08,280
와 관련된 에너지에 대해 예상되는

1338
00:57:08,280 --> 00:57:11,160


1339
00:57:11,160 --> 00:57:13,920
것과

1340
00:57:13,920 --> 00:57:16,079


1341
00:57:16,079 --> 00:57:16,740


1342
00:57:16,740 --> 00:57:18,660


1343
00:57:18,660 --> 00:57:20,819
같으므로 기본적으로 bandman의 방정식에서 나오는 다중 캐럿

1344
00:57:20,819 --> 00:57:22,740


1345
00:57:22,740 --> 00:57:25,140
연구와 강화 학습에 대한 이러한 모든 종류의 문헌과 같은 거래에서 상향 전파하는

1346
00:57:25,140 --> 00:57:28,440
경우

1347
00:57:28,440 --> 00:57:31,099


1348
00:57:31,099 --> 00:57:34,339
기본적으로

1349
00:57:34,339 --> 00:57:37,200
정교한 추론이

1350
00:57:37,200 --> 00:57:40,680
벤만 방정식에 약간의 영감을 주기 때문에

1351
00:57:40,680 --> 00:57:43,440


1352
00:57:43,440 --> 00:57:45,240
단지 보상을 받는 대신 예상되는 자유 에너지에 적용하기 때문에 정교한 임프린트에 매우 가까운 접근 방식을 과소증명하게 될 것입니다.

1353
00:57:45,240 --> 00:57:48,599


1354
00:57:48,599 --> 00:57:51,359


1355
00:57:51,359 --> 00:57:53,640
미래를 향한 지역 비용, 그러면

1356
00:57:53,640 --> 00:57:55,859
효과적으로 하고 있는 것은 경로와 같은 컴퓨팅일 뿐입니다

1357
00:57:55,859 --> 00:57:58,380
.  예상되는 자유

1358
00:57:58,380 --> 00:58:00,960
에너지의 테그럴

1359
00:58:00,960 --> 00:58:03,299


1360
00:58:03,299 --> 00:58:06,000


1361
00:58:06,000 --> 00:58:08,700
이므로 이것은 예상되는 우정의 모든 미래 시간 시작의 합계를 큰 것으로 간주하는 능동적

1362
00:58:08,700 --> 00:58:10,140
추론이 될 것이므로 이것은 정교한 추론이었으며

1363
00:58:10,140 --> 00:58:11,940
이것은

1364
00:58:11,940 --> 00:58:14,339
귀하가 언급한 다른 접근 방식에 대한

1365
00:58:14,339 --> 00:58:16,440
적극적인 영향이 될 것입니다.

1366
00:58:16,440 --> 00:58:18,900
그 논문들을 읽지 않았기 때문에 의식적

1367
00:58:18,900 --> 00:58:20,099
으로 그것에 대해

1368
00:58:20,099 --> 00:58:21,720
진술하지만 예 저는 펀칭 시간이

1369
00:58:21,720 --> 00:58:22,920
실제로 실행되는 것은 매우 일반적인

1370
00:58:22,920 --> 00:58:25,020
프레임워크라고 생각하므로

1371
00:58:25,020 --> 00:58:27,059
그들 중 일부가 관련될 수 있지만 이것에 대한 더 많은

1372
00:58:27,059 --> 00:58:30,780
연구가 없습니다.

1373
00:58:30,780 --> 00:58:32,400
감사합니다.  대단히

1374
00:58:32,400 --> 00:58:35,339
훌륭한 의견입니다. Jakob

1375
00:58:35,339 --> 00:58:36,660
질문이 있으신

1376
00:58:36,660 --> 00:58:39,960
가요? 예 음 다시 한 번

1377
00:58:39,960 --> 00:58:41,760
멋진 프레젠테이션에 감사드립니다. 확실히

1378
00:58:41,760 --> 00:58:44,760
제가 이해하지 못한 많은 것들을 확실히 설명했습니다.

1379
00:58:44,760 --> 00:58:48,720


1380
00:58:48,720 --> 00:58:49,920


1381
00:58:49,920 --> 00:58:51,059


1382
00:58:51,059 --> 00:58:55,020
당신이 언급한 논문

1383
00:58:55,020 --> 00:58:56,940


1384
00:58:56,940 --> 00:58:59,400
에서 생성 모델의 다른 구성 요소의 구조를 배우는 문제로 다시

1385
00:58:59,400 --> 00:59:01,140


1386
00:59:01,140 --> 00:59:03,059


1387
00:59:03,059 --> 00:59:04,920
돌아가서 궁금합니다.  상태 공간 표현을 학습하기 위해

1388
00:59:04,920 --> 00:59:05,640


1389
00:59:05,640 --> 00:59:09,240
깊은 신경망을 일반 함수 근사자로 사용

1390
00:59:09,240 --> 00:59:11,940


1391
00:59:11,940 --> 00:59:13,559
하고

1392
00:59:13,559 --> 00:59:15,599


1393
00:59:15,599 --> 00:59:19,079


1394
00:59:19,079 --> 00:59:21,540
있습니다. 신경망이 생성 모델의 이 팩토리 그래프 표현에 어떻게 적합할 수 있는지

1395
00:59:21,540 --> 00:59:24,140


1396
00:59:24,140 --> 00:59:27,540
생각해 보셨는지 궁금합니다.  이러한 서로 다른 구성 요소

1397
00:59:27,540 --> 00:59:30,839
의 구조를 학습하는 방법에는 두 가지가 있을 수 있습니다.

1398
00:59:30,839 --> 00:59:32,760


1399
00:59:32,760 --> 00:59:35,700
하나는

1400
00:59:35,700 --> 00:59:37,079


1401
00:59:37,079 --> 00:59:39,299
슬라이드

1402
00:59:39,299 --> 00:59:41,760
에서 모델 초기화의 종류를 보여

1403
00:59:41,760 --> 00:59:42,900


1404
00:59:42,900 --> 00:59:46,200
주었을 때의 초기 단계입니다.

1405
00:59:46,200 --> 00:59:49,619
기본 설정 및 음 이전 신념

1406
00:59:49,619 --> 00:59:54,000


1407
00:59:54,000 --> 00:59:55,740
은 표현을 학습하기 위해 깊은 신경망으로 해당 단계를 uh로 대체

1408
00:59:55,740 --> 00:59:58,859
하지만 아마도 아시아인이 관찰을 받는 것처럼 이러한 다양한 구성 요소의 차원을

1409
00:59:58,859 --> 01:00:02,339


1410
01:00:02,339 --> 01:00:05,059
동적으로 변경할 수 있는 또 다른 측면이 있을 수 있습니다

1411
01:00:05,059 --> 01:00:07,920
.

1412
01:00:07,920 --> 01:00:10,559


1413
01:00:10,559 --> 01:00:12,299
텐서

1414
01:00:12,299 --> 01:00:14,280
의 우도 매핑에서 캡처되지 않았

1415
01:00:14,280 --> 01:00:16,260
거나

1416
01:00:16,260 --> 01:00:18,119
O가 있는 다중 에이전트 설정일 수 있습니다.  한 에이전트는

1417
01:00:18,119 --> 01:00:21,059
다른 에이전트에 없는 어포던스를 가지고 있으며 관찰을

1418
01:00:21,059 --> 01:00:24,200
통해 새로운 전환 매핑을 학습해야 합니다.

1419
01:00:24,200 --> 01:00:29,760
음 음 음 이에

1420
01:00:29,760 --> 01:00:32,460
대한 귀하의 생각과 이것이 분기 시간 활성 추론

1421
01:00:32,460 --> 01:00:33,540
과

1422
01:00:33,540 --> 01:00:35,160
어떻게 호환될 수 있다고

1423
01:00:35,160 --> 01:00:37,740


1424
01:00:37,740 --> 01:00:40,260
생각하는지 궁금합니다.  딥 러닝

1425
01:00:40,260 --> 01:00:42,180
음 영역은 제 생각에 꽤 흥미롭고

1426
01:00:42,180 --> 01:00:45,780
활성 인턴

1427
01:00:45,780 --> 01:00:48,359
이 보다 복잡한 작업으로 확장할 수

1428
01:00:48,359 --> 01:00:50,579
있도록 해야 하며 최근에는 이 문서가 아직

1429
01:00:50,579 --> 01:00:52,980
나오지 않았지만 활성 추론의 딥 러닝 버전을 작업하고

1430
01:00:52,980 --> 01:00:55,319
있으므로

1431
01:00:55,319 --> 01:00:58,140
현재로서는  그림 내부에 분기 시간

1432
01:00:58,140 --> 01:00:59,339
이 없으므로 더 이상 테이크 아웃 연구가 없습니다.

1433
01:00:59,339 --> 01:01:00,540


1434
01:01:00,540 --> 01:01:02,720
그 이유는 적극적인 영향력을 위해

1435
01:01:02,720 --> 01:01:05,460
작동하도록 만드는 것이 이미 놀랍도록 어렵 기 때문입니다.

1436
01:01:05,460 --> 01:01:08,460


1437
01:01:08,460 --> 01:01:10,380
음 기본적

1438
01:01:10,380 --> 01:01:13,559
으로 Etc에 일부 논문을 검토하고 어

1439
01:01:13,559 --> 01:01:15,960
다음  Deep

1440
01:01:15,960 --> 01:01:19,440
Active 시작을 직접 구현했지만 예를 들어

1441
01:01:19,440 --> 01:01:22,619
디스플레이 데이터 세트에 대해 이야기했지만 이러한 Appr

1442
01:01:22,619 --> 01:01:25,200
에 Deep Active 영향을 미칠 수 없었습니다.

1443
01:01:25,200 --> 01:01:28,380


1444
01:01:28,380 --> 01:01:31,380
이러한 환경에서 이것에 대한 oaches

1445
01:01:31,380 --> 01:01:33,119
그래서 네 그리고 저는

1446
01:01:33,119 --> 01:01:35,280
이것에 대한 필드로 프레젠테이션을 해왔습니다 어

1447
01:01:35,280 --> 01:01:37,559
그러나 기본적으로 인터넷의 일부 구현

1448
01:01:37,559 --> 01:01:40,559
에는 실수가 포함되어 있습니다

1449
01:01:40,559 --> 01:01:42,839
음 그리고 예 일부 논문

1450
01:01:42,839 --> 01:01:45,180
에는 내가 의미하지 않는 것과 같은 일부가 포함되어 있습니다  제가 이해

1451
01:01:45,180 --> 01:01:46,920
하지 못하는 종이상의 정확한 실수가 있을 수

1452
01:01:46,920 --> 01:01:49,619
있고 음

1453
01:01:49,619 --> 01:01:52,020
다른 주터들에게는 제 질문에 대답할 수 없었습니다

1454
01:01:52,020 --> 01:01:54,420


1455
01:01:54,420 --> 01:01:55,500
음 그래서 기본적

1456
01:01:55,500 --> 01:01:57,180
으로 제가 말하려는 것은 깊은 능동적 추론에 자금을 지원하려고 노력해 왔다는 것입니다

1457
01:01:57,180 --> 01:01:59,240
그리고

1458
01:01:59,240 --> 01:02:00,900
놀랍게도

1459
01:02:00,900 --> 01:02:02,940
최소한 환경에도 불구하고 작동하게 만드는 것은 상당히 어렵습니다.

1460
01:02:02,940 --> 01:02:05,640


1461
01:02:05,640 --> 01:02:07,859
따라서

1462
01:02:07,859 --> 01:02:10,619
심층

1463
01:02:10,619 --> 01:02:13,020
신경망이 실제로 학습하는 것과

1464
01:02:13,020 --> 01:02:15,359
이 환경에서 실패하는 이유를 분석하는 분석에 대한 첫 번째

1465
01:02:15,359 --> 01:02:17,760


1466
01:02:17,760 --> 01:02:20,160
논문이 있을 것입니다.

1467
01:02:20,160 --> 01:02:21,660
내가 옳기를 바라는 이 구현을 적용하려고 시도

1468
01:02:21,660 --> 01:02:22,920
합니다

1469
01:02:22,920 --> 01:02:25,680
음 두 가지 다른 작업 어 가장

1470
01:02:25,680 --> 01:02:27,780
특히 대상 게임과

1471
01:02:27,780 --> 01:02:29,819
이와 같은 것 그리고

1472
01:02:29,819 --> 01:02:32,280


1473
01:02:32,280 --> 01:02:34,859
예상 f  reemergy 그리고 아시다시피

1474
01:02:34,859 --> 01:02:35,940
효과적인

1475
01:02:35,940 --> 01:02:38,579
추론의 구현은 실제로 작업을 해결할 수

1476
01:02:38,579 --> 01:02:41,280


1477
01:02:41,280 --> 01:02:43,260
있으며 이 음에 대한 매개변수 예비 결과는

1478
01:02:43,260 --> 01:02:46,200
일부 작업이 있는 것 같

1479
01:02:46,200 --> 01:02:49,039
거나 어떤 깊은 활성 영향

1480
01:02:49,039 --> 01:02:51,599
이 실제로 예를 들어 dqm보다 더 잘 수행

1481
01:02:51,599 --> 01:02:54,119
되고 있는지입니다.

1482
01:02:54,119 --> 01:02:56,160
강화 학습 문헌의 벤치마크입니다.

1483
01:02:56,160 --> 01:03:00,180


1484
01:03:00,180 --> 01:03:03,599


1485
01:03:03,599 --> 01:03:06,420
음, 제가 구현하기가 상당히 어려웠을 때 이후로 그것은 단순한 바구니가 아닙니다. 그것은

1486
01:03:06,420 --> 01:03:09,619
큰 음 딥 러닝 측면에 더 적합

1487
01:03:09,619 --> 01:03:12,960


1488
01:03:12,960 --> 01:03:15,119
했습니다.

1489
01:03:15,119 --> 01:03:17,819


1490
01:03:17,819 --> 01:03:20,760


1491
01:03:20,760 --> 01:03:23,640
벤치마크와 같은 표준 강화 학습을

1492
01:03:23,640 --> 01:03:26,819
능가할 수 있는 매우 강력한 것을 만들려면

1493
01:03:26,819 --> 01:03:28,740


1494
01:03:28,740 --> 01:03:31,200
지금까지 조사하지 않은 것처럼 구조적 학습에 대한 다른 기회를 얻을 수 없었기

1495
01:03:31,200 --> 01:03:33,119
때문에 더 강력한 답변에 대해 생각할 시간이 더 필요합니다.

1496
01:03:33,119 --> 01:03:35,280
당신의 질문

1497
01:03:35,280 --> 01:03:37,500
에 그것은 기본적으로 제가 말해야 했던

1498
01:03:37,500 --> 01:03:39,359


1499
01:03:39,359 --> 01:03:41,760
것입니다. 우수성에 감사드립니다

1500
01:03:41,760 --> 01:03:44,579
. 프레젠테이션의 정말 놀라운 측면 중 하나입니다.

1501
01:03:44,579 --> 01:03:47,160


1502
01:03:47,160 --> 01:03:49,020
계산 복잡성의 분석

1503
01:03:49,020 --> 01:03:51,359
이었기 때문에 우리가 궁금해하고 몇 차례 논의한 것이기 때문에 여기로 돌아갈 수 있습니다.

1504
01:03:51,359 --> 01:03:53,280


1505
01:03:53,280 --> 01:03:56,099


1506
01:03:56,099 --> 01:03:58,799
네

1507
01:03:58,799 --> 01:04:01,460
, Big O 표기법으로 이론적 복잡성 클래스를 제시

1508
01:04:01,460 --> 01:04:05,220
한 다음 몇 가지 실용적인 측면에 대해서도 논의했습니다.

1509
01:04:05,220 --> 01:04:09,059


1510
01:04:09,059 --> 01:04:12,119
주어진 하드웨어의 실제 시간과 같은 시간은

1511
01:04:12,119 --> 01:04:15,299
어떤 언어 또는 음

1512
01:04:15,299 --> 01:04:18,000
하드웨어에서 실행했는지 정확히 확신할 수 없었지만

1513
01:04:18,000 --> 01:04:20,640
이론적 복잡성 클래스와

1514
01:04:20,640 --> 01:04:23,460
일부 런타임 프로비저닝을 제공했기 때문에

1515
01:04:23,460 --> 01:04:26,660


1516
01:04:26,660 --> 01:04:31,380
이 큰 O가 어떻게 작동하는지에 대한 몇 가지 생각을 듣고 싶었습니다.

1517
01:04:31,380 --> 01:04:34,440
전산 복잡성 분석

1518
01:04:34,440 --> 01:04:37,740
은 활성

1519
01:04:37,740 --> 01:04:40,559
추론의 다양한 변형과 ​​분기형 시간 활성

1520
01:04:40,559 --> 01:04:44,579
추론에 빛을 비추고 분석에서 실제 계산

1521
01:04:44,579 --> 01:04:49,260
리소스에 과세된 것은 이전에

1522
01:04:49,260 --> 01:04:52,440
언급한 충돌을 일으킨 램 오버플로

1523
01:04:52,440 --> 01:04:55,200


1524
01:04:55,200 --> 01:04:58,319
였습니다.

1525
01:04:58,319 --> 01:05:00,960


1526
01:05:00,960 --> 01:05:03,180
이론적으로 계산

1527
01:05:03,180 --> 01:05:05,280
복잡성과 기하급수적으로 발생하는 것과 같은 임시 파일이 필요합니다.  폭발

1528
01:05:05,280 --> 01:05:07,980
한 다음 실제로

1529
01:05:07,980 --> 01:05:10,020
이러한 종류의 분석을 용이하게

1530
01:05:10,020 --> 01:05:11,640
확장

1531
01:05:11,640 --> 01:05:15,420
할 수 있는 것은 알다시피 상태 분포의 모든 매개변수를 저장하는 데 필요한 공간 측면에서 이 복잡성 분석과 같은 첫 번째 작업

1532
01:05:15,420 --> 01:05:17,700
이 수행되었습니다.

1533
01:05:17,700 --> 01:05:19,980


1534
01:05:19,980 --> 01:05:22,859


1535
01:05:22,859 --> 01:05:25,079
여기에서 우리는

1536
01:05:25,079 --> 01:05:27,359


1537
01:05:27,359 --> 01:05:29,880


1538
01:05:29,880 --> 01:05:32,039
상태의 모든 사후 분포와 같은 상태의 모든 분포를 저장하기 위해 얼마나

1539
01:05:32,039 --> 01:05:34,079


1540
01:05:34,079 --> 01:05:37,020


1541
01:05:37,020 --> 01:05:39,180
많은 공간이

1542
01:05:39,180 --> 01:05:41,640
필요한지 정말로 관심이 있습니다.

1543
01:05:41,640 --> 01:05:42,839
에이전트에게 두 가지 작업이 있다고 가정해 보겠습니다.

1544
01:05:42,839 --> 01:05:44,280


1545
01:05:44,280 --> 01:05:47,160
여기에 하나가 있습니다. 하나는 여기에 있습니다. 하나는 여기에 있습니다.

1546
01:05:47,160 --> 01:05:49,020
하나는 여기에 있습니다. 첫 번째

1547
01:05:49,020 --> 01:05:52,079
단계에는 두 번째 단계에 두 개의 작업

1548
01:05:52,079 --> 01:05:54,660
이 있습니다. 우리는

1549
01:05:54,660 --> 01:05:56,940
기본적으로 에이전트가

1550
01:05:56,940 --> 01:05:57,839
음

1551
01:05:57,839 --> 01:06:01,200
실제로 수행할 수 있는 블랙 정책을 변형했습니다.  그것은 0

1552
01:06:01,200 --> 01:06:05,579
0 0 1 1 0과 1 1로 갈 수 있고

1553
01:06:05,579 --> 01:06:07,440
이 클래스 수는 기본적으로

1554
01:06:07,440 --> 01:06:10,920
각 단계마다 2를

1555
01:06:10,920 --> 01:06:12,660
곱할 것입니다.

1556
01:06:12,660 --> 01:06:15,180
이제 이전 프로세스 각각에 대해 각 작업을 다시 클릭할 수 있을 때마다 사용

1557
01:06:15,180 --> 01:06:16,559


1558
01:06:16,559 --> 01:06:18,059


1559
01:06:18,059 --> 01:06:21,059
하고 이 기하급수적 성장은

1560
01:06:21,059 --> 01:06:23,160


1561
01:06:23,160 --> 01:06:25,619
예를 들어 정책 사회 구성원의 이전과 같이 상당히 문제가 됩니다.

1562
01:06:25,619 --> 01:06:27,839


1563
01:06:27,839 --> 01:06:29,940
음

1564
01:06:29,940 --> 01:06:31,920


1565
01:06:31,920 --> 01:06:34,380
우리가 보는 정책의 이전에 대한 이 정의는  각 보너스에 대한 예상 자유 에너지

1566
01:06:34,380 --> 01:06:36,720
를 혼동해야 하는 정책보다 사전을 정의해야

1567
01:06:36,720 --> 01:06:38,640


1568
01:06:38,640 --> 01:06:40,500


1569
01:06:40,500 --> 01:06:42,240
하지만

1570
01:06:42,240 --> 01:06:45,119


1571
01:06:45,119 --> 01:06:47,280
타이머가 증가를 적용하지

1572
01:06:47,280 --> 01:06:49,079
않았기 때문에

1573
01:06:49,079 --> 01:06:52,460


1574
01:06:52,460 --> 01:06:55,140
기하급수적인 숫자에 대해 그렇게 해야 합니다.  기하급수적

1575
01:06:55,140 --> 01:06:57,000
폭발은 정책의 수에 국한되지 않습니다.

1576
01:06:57,000 --> 01:06:59,819
왜냐하면 우리는 여전히 괜찮다고 기억하기 때문입니다.

1577
01:06:59,819 --> 01:07:02,220
그래서 아마도 이것

1578
01:07:02,220 --> 01:07:04,200


1579
01:07:04,200 --> 01:07:06,720
에 대해서는 구매자 스타일 추론에 사용되는 변이 분포를

1580
01:07:06,720 --> 01:07:08,460


1581
01:07:08,460 --> 01:07:12,299
살펴봐야 할 것

1582
01:07:12,299 --> 01:07:15,960
입니다.  상태는 정책에 따라 다르

1583
01:07:15,960 --> 01:07:19,260
므로 각 정책

1584
01:07:19,260 --> 01:07:22,680
에 대해 상태 분포를 저장해야

1585
01:07:22,680 --> 01:07:25,079
하며 이것은 다시 한 번

1586
01:07:25,079 --> 01:07:26,880
문제가 됩니다.

1587
01:07:26,880 --> 01:07:28,260
이것은 우리가 저장해야 하는 스테레오의 기하급수적인 수가 있다는 것을 의미

1588
01:07:28,260 --> 01:07:30,420


1589
01:07:30,420 --> 01:07:32,059


1590
01:07:32,059 --> 01:07:34,980


1591
01:07:34,980 --> 01:07:37,380
하므로 이것은 음 표준 북극 추론 내에서 나타나는 문제의 종류

1592
01:07:37,380 --> 01:07:38,579


1593
01:07:38,579 --> 01:07:39,960


1594
01:07:39,960 --> 01:07:42,299


1595
01:07:42,299 --> 01:07:45,539
입니다. 정책의 수가 기하급수적으로 증가

1596
01:07:45,539 --> 01:07:48,359
하고 있으며 상태 분포도 저장해야 합니다.

1597
01:07:48,359 --> 01:07:50,819


1598
01:07:50,819 --> 01:07:53,119


1599
01:07:53,339 --> 01:07:55,619
이제 시작 시간 활성

1600
01:07:55,619 --> 01:07:59,400
추론이 유용해지는 각 시간 단계에

1601
01:07:59,400 --> 01:08:00,960
대해 그래프 구조와 같은 구조를 사용하여

1602
01:08:00,960 --> 01:08:03,480


1603
01:08:03,480 --> 01:08:05,339


1604
01:08:05,339 --> 01:08:09,539
시간 단계와 정책의 가능한 모든 단일 조합을 저장

1605
01:08:09,539 --> 01:08:11,579


1606
01:08:11,579 --> 01:08:14,700
해야 하는 것을 방지할 수 있습니다.

1607
01:08:14,700 --> 01:08:17,158
선형적으로 성장하는 이유는 과거와 존재의

1608
01:08:17,158 --> 01:08:19,799
각 상태에 대해 하나의 분포를 메모리에 유지하기 때문입니다

1609
01:08:19,799 --> 01:08:21,899


1610
01:08:21,899 --> 01:08:24,299
. 현재 시간 단계가 올 때만

1611
01:08:24,299 --> 01:08:27,000


1612
01:08:27,000 --> 01:08:28,979
미래에 일어날 일을 상상하기 시작

1613
01:08:28,979 --> 01:08:31,920
하고 이 성장은 여전히 ​​기하급수적입니다.

1614
01:08:31,920 --> 01:08:34,500
미래에

1615
01:08:34,500 --> 01:08:36,779
가능한 극지방을 모두 탐색

1616
01:08:36,779 --> 01:08:38,640
해야 한다면 여전히 기하급수적으로

1617
01:08:38,640 --> 01:08:41,399
성장할 것이지만 다중 차량 연구를 사용하고 있기 때문에

1618
01:08:41,399 --> 01:08:43,620
h

1619
01:08:43,620 --> 01:08:46,380
기본적으로 우리는

1620
01:08:46,380 --> 01:08:48,120
작은 양의 트리만 탐색할

1621
01:08:48,120 --> 01:08:51,359
것이며 여기에서 모델의 확장 횟수와 관련하여 복잡성

1622
01:08:51,359 --> 01:08:55,500
이 지수에서 선형으로 이동

1623
01:08:55,500 --> 01:08:57,299


1624
01:08:57,299 --> 01:08:59,939
하므로

1625
01:08:59,939 --> 01:09:02,698
이 모델에서 새 분기를 확장할 때마다 필요합니다.

1626
01:09:02,698 --> 01:09:05,520
이 어 미래 타임스탬프에 대한 범주를 하나 더 저장

1627
01:09:05,520 --> 01:09:08,100
하는 것이 좋습니다.

1628
01:09:08,100 --> 01:09:10,819
따라서 생성 모델의 확장 횟수와 관련

1629
01:09:10,819 --> 01:09:14,439
하여 기하급수적

1630
01:09:14,439 --> 01:09:15,600
[음악]

1631
01:09:15,600 --> 01:09:18,060
복잡성에서 선형 복잡성으로 이동할 수 있는 방법과 같습니다.

1632
01:09:18,060 --> 01:09:20,698


1633
01:09:20,698 --> 01:09:22,920


1634
01:09:22,920 --> 01:09:26,698


1635
01:09:26,698 --> 01:09:28,679
하드웨어 측면에서 클래스는

1636
01:09:28,679 --> 01:09:30,899
기본적으로 내 컴퓨터에 있었습니다 어 일부 진짜

1637
01:09:30,899 --> 01:09:34,859
중요한 어 GPU는 이와 같은 것을 사용하지 않았습니다.

1638
01:09:34,859 --> 01:09:38,179
CPU는 기본적으로

1639
01:09:39,060 --> 01:09:41,640
매우 흥미롭고 하드웨어

1640
01:09:41,640 --> 01:09:44,698
또는 구현 측면

1641
01:09:44,698 --> 01:09:46,080


1642
01:09:46,080 --> 01:09:49,979
에서 Python이나 Forney 연구소와 같은 Julia의 패키지를 볼 수 있습니다.

1643
01:09:49,979 --> 01:09:52,500


1644
01:09:52,500 --> 01:09:56,100
Paradigm을 통과하는 반응 메시지가 개발되고 있거나

1645
01:09:56,100 --> 01:09:59,460
gpus가 이와 관련이 있다고 보십니까?

1646
01:09:59,460 --> 01:10:01,980
스토리지 고려 사항은 어떤 종류의

1647
01:10:01,980 --> 01:10:04,320
스케일링 관계 또는 이론적이며

1648
01:10:04,320 --> 01:10:07,080


1649
01:10:07,080 --> 01:10:09,360
공간 요구 사항이 아닌 컴퓨팅의 운영 측면이 어떻게 계산되는지 연습하십시오.

1650
01:10:09,360 --> 01:10:11,420


1651
01:10:11,420 --> 01:10:15,239
그래서 가장 먼저 말할 것은

1652
01:10:15,239 --> 01:10:18,659
공간 복잡성이 시간과도 연결되어

1653
01:10:18,659 --> 01:10:20,159
있고 계산

1654
01:10:20,159 --> 01:10:23,520
복잡성을 알고 있다는

1655
01:10:23,520 --> 01:10:25,679
것입니다

1656
01:10:25,679 --> 01:10:28,020
.

1657
01:10:28,020 --> 01:10:31,679
기하급수적인 수의 제품이 있는 경우 정책에 비해 사전

1658
01:10:31,679 --> 01:10:33,239


1659
01:10:33,239 --> 01:10:34,920


1660
01:10:34,920 --> 01:10:36,900
에 각 정책에 대해 예상되는 자유 에너지

1661
01:10:36,900 --> 01:10:39,960


1662
01:10:39,960 --> 01:10:41,640


1663
01:10:41,640 --> 01:10:44,100
의 기하급수적 수를 계산해야 합니다.

1664
01:10:44,100 --> 01:10:45,600
그것들의 기하급수적인 수가 있고

1665
01:10:45,600 --> 01:10:48,360
우리는 또한 그것들을 계산해야 합니다 그래서

1666
01:10:48,360 --> 01:10:50,400
이것은 또한 솔루션에서 추출할

1667
01:10:50,400 --> 01:10:52,080
수

1668
01:10:52,080 --> 01:10:55,980
있고 음 구현 측면

1669
01:10:55,980 --> 01:10:57,659
에서 일부 사람들이

1670
01:10:57,659 --> 01:11:00,780
Julia에서 전화 연구실을 개발하고 있다는 것을

1671
01:11:00,780 --> 01:11:02,100
알고 있습니다.

1672
01:11:02,100 --> 01:11:03,420
파이썬에서

1673
01:11:03,420 --> 01:11:06,480
음 그래 그것들

1674
01:11:06,480 --> 01:11:10,800
은 uh gpus 측면에서 가능성

1675
01:11:10,800 --> 01:11:12,239
이 있습니다. 그들의 사용법은 isographical 모델이 허용

1676
01:11:12,239 --> 01:11:13,199


1677
01:11:13,199 --> 01:11:16,280
하는 경우에만 음 정말 유용할 것 같아요

1678
01:11:16,280 --> 01:11:18,600


1679
01:11:18,600 --> 01:11:20,340


1680
01:11:20,340 --> 01:11:23,760
예를 들어 병렬화의 경우 GPU가

1681
01:11:23,760 --> 01:11:27,060
매우 유용한 경우는 이미지의 각

1682
01:11:27,060 --> 01:11:29,340
위치가 일반적으로 병렬로 처리될 수 있기 때문에 이미지의

1683
01:11:29,340 --> 01:11:31,620


1684
01:11:31,620 --> 01:11:33,960
경우입니다.

1685
01:11:33,960 --> 01:11:35,880


1686
01:11:35,880 --> 01:11:37,679


1687
01:11:37,679 --> 01:11:39,840
이미지의 패치와 같이 서로

1688
01:11:39,840 --> 01:11:42,719
가 모든 이미지에 대한 모든 후방을 계산해야

1689
01:11:42,719 --> 01:11:45,300


1690
01:11:45,300 --> 01:11:48,179
하므로 병렬화의 가능성이 매우 큽니다.

1691
01:11:48,179 --> 01:11:51,840
하지만 예를 들어 메시지

1692
01:11:51,840 --> 01:11:53,640
가 이전 메시지에 대한 종속성인

1693
01:11:53,640 --> 01:11:56,820
경우 음 그냥

1694
01:11:56,820 --> 01:11:59,219
입력

1695
01:11:59,219 --> 01:12:02,940
메시지가 도착하기를 기다리는 GPU의

1696
01:12:02,940 --> 01:12:05,040


1697
01:12:05,040 --> 01:12:08,040
일부이므로 일부 분석 솔루션에는

1698
01:12:08,040 --> 01:12:10,320
다른 메시지가 필요하므로

1699
01:12:10,320 --> 01:12:13,140


1700
01:12:13,140 --> 01:12:16,260
그래픽 모델과 같은 종속성 전체에 일부 종속성이 있기

1701
01:12:16,260 --> 01:12:20,159
때문에 기본적으로 제한이 있습니다.  GPU를 사용하는 경우 예, 하지만 이미지 기반 생성 모델과 같은 유용한

1702
01:12:20,159 --> 01:12:22,199
특정 생성기 모델에서 가능

1703
01:12:22,199 --> 01:12:24,360


1704
01:12:24,360 --> 01:12:27,960
하거나 음, 예 할인이 있는 경우

1705
01:12:27,960 --> 01:12:30,600
매우 간단합니다. 그러면 gpu의 합병증으로 인해

1706
01:12:30,600 --> 01:12:32,400
많은 이점을 얻지 못할 것 같습니다.

1707
01:12:32,400 --> 01:12:37,040


1708
01:12:37,560 --> 01:12:39,120
훌륭합니다.

1709
01:12:39,120 --> 01:12:40,280
감사합니다.

1710
01:12:40,280 --> 01:12:40,679
[음악]

1711
01:12:40,679 --> 01:12:42,239
음

1712
01:12:42,239 --> 01:12:44,699
다시 Ali 또는 Jakob 다른 질문을 원하시면

1713
01:12:44,699 --> 01:12:48,019
하나 물어볼 수 있습니다.

1714
01:12:49,400 --> 01:12:53,040
네 저도 다른 점에 대해 물어보고 싶었습니다

1715
01:12:53,040 --> 01:12:54,179


1716
01:12:54,179 --> 01:12:55,980
음

1717
01:12:55,980 --> 01:12:57,840
분기 시간 사고의 가능한 향후 구현 Prince

1718
01:12:57,840 --> 01:12:59,460


1719
01:12:59,460 --> 01:13:03,000
음 Daniel과 Jacob은

1720
01:13:03,000 --> 01:13:08,400
내가 큰 Julia 팬이라는

1721
01:13:08,400 --> 01:13:11,040
것을 알고 있으므로 주얼리 구현 계획이 있는지 알고 싶었습니다

1722
01:13:11,040 --> 01:13:12,780
. 분기 시간 활성

1723
01:13:12,780 --> 01:13:15,179
추론 왜냐하면 우리는 이미 C가 있다고 생각하기 때문입니다.

1724
01:13:15,179 --> 01:13:18,960
플러스 플러스와 파이썬 내가

1725
01:13:18,960 --> 01:13:20,880
옳다면 첫 번째 분기 시간

1726
01:13:20,880 --> 01:13:23,159
활성 추론은 C

1727
01:13:23,159 --> 01:13:26,400
플러스 플러스에서 구현되었고 다중 모드는

1728
01:13:26,400 --> 01:13:30,540
파이썬에서 구현되었으므로 향후 계획은 무엇입니까?

1729
01:13:30,540 --> 01:13:32,100


1730
01:13:32,100 --> 01:13:35,580
어 다른 다른 형태의 btai 구현

1731
01:13:35,580 --> 01:13:36,659


1732
01:13:36,659 --> 01:13:39,120
그래서 지금은 계획 중이었습니다  그냥

1733
01:13:39,120 --> 01:13:40,560
Python을 사용하는

1734
01:13:40,560 --> 01:13:43,440
것이 음, 하지만 Julia에서 보고하는 것이 너무 어렵지는 않을 것

1735
01:13:43,440 --> 01:13:45,600
같고 지금

1736
01:13:45,600 --> 01:13:48,420
은 사용 목소리가 없습니다

1737
01:13:48,420 --> 01:13:51,840
음 그것을 공유하고 또한

1738
01:13:51,840 --> 01:13:54,360
미래의 가능성에 관해서도

1739
01:13:54,360 --> 01:13:56,760
펀칭 시간 활성 추론 기울기 알고리즘

1740
01:13:56,760 --> 01:13:59,520
을 구현하는 작업을 시작했습니다.

1741
01:13:59,520 --> 01:14:01,800


1742
01:14:01,800 --> 01:14:02,780
음,

1743
01:14:02,780 --> 01:14:07,260
이것은 동시에 위치 및

1744
01:14:07,260 --> 01:14:09,000
매핑이므로 탐색할 때 이러한 환경의 맵을 생성하면

1745
01:14:09,000 --> 01:14:10,560


1746
01:14:10,560 --> 01:14:12,840
이것도

1747
01:14:12,840 --> 01:14:17,179
가능성과 같지만  이 어 컨텍스트 내에서

1748
01:14:17,179 --> 01:14:20,699
기본적으로 저는

1749
01:14:20,699 --> 01:14:22,620
우리가

1750
01:14:22,620 --> 01:14:24,480
매우 많은 수의 상태에 의존하는 관찰을 할 수 있다는 기하급수적으로 갈 것입니다.

1751
01:14:24,480 --> 01:14:27,540
따라서

1752
01:14:27,540 --> 01:14:30,179
우리가 가져야

1753
01:14:30,179 --> 01:14:32,400
할 것은 트리로 저장되는 조건부 확률표와 비슷

1754
01:14:32,400 --> 01:14:35,400
하므로 생물학적으로

1755
01:14:35,400 --> 01:14:37,380
음  조건부 확률표가 있는 규칙을 권장할 수 있습니다.

1756
01:14:37,380 --> 01:14:39,600


1757
01:14:39,600 --> 01:14:41,460
예를 들어

1758
01:14:41,460 --> 01:14:45,300
a와 b가 주어지면 C의 확률이 괜찮은 학교가 있고

1759
01:14:45,300 --> 01:14:48,420
a가 1

1760
01:14:48,420 --> 01:14:50,699


1761
01:14:50,699 --> 01:14:53,880
이면 B에서 분기를 원

1762
01:14:53,880 --> 01:14:57,980
하고 0 1이 될 수 있습니다.  실점은 오케이 아홉

1763
01:14:57,980 --> 01:15:01,320
오케이 그래서 이것이 의미하는 바는 a

1764
01:15:01,320 --> 01:15:04,020
가 1이고 B가 0이면

1765
01:15:04,020 --> 01:15:06,239
a c의 확률 분포는 0.9인치

1766
01:15:06,239 --> 01:15:08,580
의 첫 번째 값에 대해 0.1이 된다는 것입니다.

1767
01:15:08,580 --> 01:15:11,580
es는 두 번째 값이므로

1768
01:15:11,580 --> 01:15:14,280
기본적으로 아이디어는

1769
01:15:14,280 --> 01:15:16,260
전체 테이블을 나타내지

1770
01:15:16,260 --> 01:15:18,719
않고 트리 구조를 선택

1771
01:15:18,719 --> 01:15:20,940
하여 세계의 역학과

1772
01:15:20,940 --> 01:15:23,460
우도 함수에 대한 규칙을

1773
01:15:23,460 --> 01:15:25,800
자르지 않은 다음 수행할 수 있도록

1774
01:15:25,800 --> 01:15:28,380
하는 것입니다.  이

1775
01:15:28,380 --> 01:15:31,500
트리에서 그리고 프랑스에서는 스트림에서도 앞으로 예측합니다.

1776
01:15:31,500 --> 01:15:34,020
그래서 이것은 미래의 UI에 통합될 수 있는 또 다른 그림입니다.

1777
01:15:34,020 --> 01:15:35,760


1778
01:15:35,760 --> 01:15:39,020


1779
01:15:39,659 --> 01:15:42,179
확실히 이러한 많은 토론을 통해 실행되는 주제는

1780
01:15:42,179 --> 01:15:44,640


1781
01:15:44,640 --> 01:15:48,360
객체를 나무로 표현한 다음 트리를 취하는 것

1782
01:15:48,360 --> 01:15:50,820
입니다.

1783
01:15:50,820 --> 01:15:53,699
트리 구조를

1784
01:15:53,699 --> 01:15:55,800


1785
01:15:55,800 --> 01:15:58,679
통해 중복을 방지하고 몇 가지 새로운

1786
01:15:58,679 --> 01:16:01,380
유형의 분석을 가능하게 하므로 심각하게 방향을 바꾸거나 숲 방향으로 전환합니다. Jacob

1787
01:16:01,380 --> 01:16:03,239
질문이 있거나 하나 물어볼 수

1788
01:16:03,239 --> 01:16:06,000


1789
01:16:06,000 --> 01:16:10,440


1790
01:16:10,440 --> 01:16:12,659


1791
01:16:12,659 --> 01:16:15,000
있습니다.

1792
01:16:15,000 --> 01:16:18,000


1793
01:16:18,000 --> 01:16:20,880
um 이미지 분류 문제에 대한

1794
01:16:20,880 --> 01:16:25,140
Slam의 적용을 고려하고 이미지 분류

1795
01:16:25,140 --> 01:16:27,840
문제가 이것에 맞도록 재구성되어야 하는 방법을 고려

1796
01:16:27,840 --> 01:16:30,780
하십시오 uh w  무엇보다도 분기 시간

1797
01:16:30,780 --> 01:16:32,520
능동 추론 체계이지만 전반적인

1798
01:16:32,520 --> 01:16:35,340
능동 추론 체계는

1799
01:16:35,340 --> 01:16:38,400
음 에이전트가 조치를 취할 때마다 생성 프로세스가 변경되는

1800
01:16:38,400 --> 01:16:40,280


1801
01:16:40,280 --> 01:16:44,100
이러한 종류의

1802
01:16:44,100 --> 01:16:48,320
지속적으로 진화하는 문제에 전반적으로 능동 임프린트가 훨씬 더 적합한 것으로 보이기 때문입니다.

1803
01:16:48,320 --> 01:16:52,440


1804
01:16:52,440 --> 01:16:54,659
반면

1805
01:16:54,659 --> 01:16:56,880
이미지 분류 문제는

1806
01:16:56,880 --> 01:17:00,480
어

1807
01:17:00,480 --> 01:17:02,040
적어도 기계 학습

1808
01:17:02,040 --> 01:17:03,719
체계

1809
01:17:03,719 --> 01:17:06,179
에서는 입력과 출력일

1810
01:17:06,179 --> 01:17:10,380
뿐이고 아마도 어

1811
01:17:10,380 --> 01:17:12,780
음 오류가 네트워크를 통해 다시 전파됩니다

1812
01:17:12,780 --> 01:17:14,159


1813
01:17:14,159 --> 01:17:15,719
음 그래서

1814
01:17:15,719 --> 01:17:18,060
어떻게 생각하는지 궁금합니다 음 어떻게 생각하는지 궁금합니다

1815
01:17:18,060 --> 01:17:19,679


1816
01:17:19,679 --> 01:17:20,400


1817
01:17:20,400 --> 01:17:23,880
어 능동적 추론을 통한 음 이미지 이미지 분류에 대해

1818
01:17:23,880 --> 01:17:27,000
그리고 전반적으로

1819
01:17:27,000 --> 01:17:29,760
이미지가

1820
01:17:29,760 --> 01:17:32,580
음 동적 환경에서 어떻게 입력으로 작용할 수 있는지에 대해

1821
01:17:32,580 --> 01:17:35,760


1822
01:17:35,760 --> 01:17:37,739


1823
01:17:37,739 --> 01:17:39,060
다시 한 번 인상에 감사드립니다

1824
01:17:39,060 --> 01:17:41,040
음 이것은 어 그래서 기본적으로

1825
01:17:41,040 --> 01:17:43,560
이미지 분류와 같은 것은 우리가

1826
01:17:43,560 --> 01:17:45,540
하지 않는다는 것입니다  방금 언급한 것처럼 이 스톱워치 구조를 가지고

1827
01:17:45,540 --> 01:17:47,640


1828
01:17:47,640 --> 01:17:48,900
있어 프랑스 엔진이 작동하기가 매우 어렵습니다.

1829
01:17:48,900 --> 01:17:51,540
어떤 의미에서 이것은

1830
01:17:51,540 --> 01:17:54,239
트랜지션 매핑

1831
01:17:54,239 --> 01:17:56,460
과 비슷합니다.

1832
01:17:56,460 --> 01:17:57,540


1833
01:17:57,540 --> 01:18:00,000


1834
01:18:00,000 --> 01:18:02,520


1835
01:18:02,520 --> 01:18:04,380
예를 들어 각 단계가 하나의 이미지가 될 수 있기 때문에 어떻게 가져올 수 있는지 생각하기

1836
01:18:04,380 --> 01:18:06,960
가 약간 어렵습니다.  분류

1837
01:18:06,960 --> 01:18:09,360
음 하지만 능동적 추론은 분류

1838
01:18:09,360 --> 01:18:11,760
를 위해 이와 같은 것에 정말 적합하지 않다고

1839
01:18:11,760 --> 01:18:13,920
생각합니다.

1840
01:18:13,920 --> 01:18:15,960


1841
01:18:15,960 --> 01:18:18,179
공명

1842
01:18:18,179 --> 01:18:20,580
하는 것이 무엇이든 또는

1843
01:18:20,580 --> 01:18:21,900


1844
01:18:21,900 --> 01:18:24,659
기본적으로 능동적 추론을 적용해야 하는 경우 음 기본적으로 훨씬 더 적합한 것을 알고 있는 것과 같은 분류 모델과 같다고 생각

1845
01:18:24,659 --> 01:18:26,159
합니다.  모델

1846
01:18:26,159 --> 01:18:27,780
의 구조를 변경해야 합니다

1847
01:18:27,780 --> 01:18:30,480
어 상단 벽이라는 것을 제거하고

1848
01:18:30,480 --> 01:18:32,699
어 전환을

1849
01:18:32,699 --> 01:18:36,300
관찰하고 그렇지 않으면 Atari 게임 블랙 매뉴얼

1850
01:18:36,300 --> 01:18:39,000
과 같은 일종의 역동성 또는 폭력이 필요합니다

1851
01:18:39,000 --> 01:18:41,760


1852
01:18:41,760 --> 01:18:44,400
이 경우 환경의 시간적 역학을

1853
01:18:44,400 --> 01:18:47,400
모델링할 수

1854
01:18:47,400 --> 01:18:50,640


1855
01:18:50,640 --> 01:18:52,440
있으므로 여기서 능동적 영향은 다음과 같은

1856
01:18:52,440 --> 01:18:55,679
이유로 정말 도움이 됩니다.

1857
01:18:55,679 --> 01:18:57,840
동작에 대해 생각하고 전환에 어떤 영향을 미치는지 알고

1858
01:18:57,840 --> 01:19:00,960
있으며

1859
01:19:00,960 --> 01:19:03,540
기본적으로 이미지를 압축하는 인코더를

1860
01:19:03,540 --> 01:19:05,640
가질 수 있으므로

1861
01:19:05,640 --> 01:19:08,699
기술적으로 여기에 이미지가 있을

1862
01:19:08,699 --> 01:19:10,500


1863
01:19:10,500 --> 01:19:13,380
것입니다.

1864
01:19:13,380 --> 01:19:16,199
매개 변수

1865
01:19:16,199 --> 01:19:18,960
는 상태 분포의 평균과 분산이며

1866
01:19:18,960 --> 01:19:21,000


1867
01:19:21,000 --> 01:19:24,000


1868
01:19:24,000 --> 01:19:27,179
기본적으로 잠재 변수에서 또 다른 이미지를 생성하는 디코더

1869
01:19:27,179 --> 01:19:28,920
를 가질 것입니다. 그런 다음 출력

1870
01:19:28,920 --> 01:19:30,120


1871
01:19:30,120 --> 01:19:33,420
하는 디지털 네트워크이기도 한 전환 네트워크와 같습니다.

1872
01:19:33,420 --> 01:19:36,000


1873
01:19:36,000 --> 01:19:38,040
다음 단계로 상태에 대한 분포의 평균 및 분산으로

1874
01:19:38,040 --> 01:19:39,060


1875
01:19:39,060 --> 01:19:41,040
그리고 예, 여기

1876
01:19:41,040 --> 01:19:43,080
에 미래 이미지를 위한 또 다른 인코더와 미래 이미지를 위한 또 다른

1877
01:19:43,080 --> 01:19:45,600
디코더가

1878
01:19:45,600 --> 01:19:48,480
있으며 이러한 전환 네트워크는

1879
01:19:48,480 --> 01:19:50,280
기본적으로 고려해야 합니다.  다음

1880
01:19:50,280 --> 01:19:52,679
상태를 예측하기 위한 작업과

1881
01:19:52,679 --> 01:19:54,840
상태이므로

1882
01:19:54,840 --> 01:19:57,719


1883
01:19:57,719 --> 01:20:00,179
깊은 활성 추론 주소

1884
01:20:00,179 --> 01:20:01,980
를 생성하는 데 필요한 아키텍처입니다.  ID 또는 정적 환경

1885
01:20:01,980 --> 01:20:03,960
에 대한 공격과 같은 동적 환경에 더 적합하다고

1886
01:20:03,960 --> 01:20:07,199


1887
01:20:07,199 --> 01:20:09,120


1888
01:20:09,120 --> 01:20:11,400


1889
01:20:11,400 --> 01:20:13,679
생각하며

1890
01:20:13,679 --> 01:20:15,020


1891
01:20:15,020 --> 01:20:18,900
정적 분석 및 동적 분석에 대한 이미지 슬램에 대한 매우 흥미로운 점에

1892
01:20:18,900 --> 01:20:20,580


1893
01:20:20,580 --> 01:20:24,060


1894
01:20:24,060 --> 01:20:27,139
대해 몇 가지 생각을 할 수 있다면 실제로 적용하기가 훨씬 더 복잡합니다.

1895
01:20:27,139 --> 01:20:30,780
이미지 분류 작업을 의사 동적화할

1896
01:20:30,780 --> 01:20:33,120
수 있는 방법으로 그 중 몇 가지 옵션은

1897
01:20:33,120 --> 01:20:37,020
대규모 이미지 데이터베이스 사이를 탐색하는

1898
01:20:37,020 --> 01:20:39,480
것이므로 잠재적

1899
01:20:39,480 --> 01:20:42,420
으로

1900
01:20:42,420 --> 01:20:44,580
대규모 경험적 이미지 데이터베이스 또는

1901
01:20:44,580 --> 01:20:47,639
비디오의 프레임 또는

1902
01:20:47,639 --> 01:20:50,820
AI를 위한 즉각적인 엔지니어링을 통한 동적 피드백에서 교육을 위한 유익한 예를 선택할 수 있습니다.

1903
01:20:50,820 --> 01:20:53,639
이미지를 생성한 다음 이미지 전체

1904
01:20:53,639 --> 01:20:56,880


1905
01:20:56,880 --> 01:21:00,420
에서 Dynamics를 사용

1906
01:21:00,420 --> 01:21:02,580
하지만 여전히 전체 이미지

1907
01:21:02,580 --> 01:21:04,380


1908
01:21:04,380 --> 01:21:07,800
를 받아들이는 동적 질문 응답 작업으로 만듭니다.

1909
01:21:07,800 --> 01:21:10,320


1910
01:21:10,320 --> 01:21:11,580


1911
01:21:11,580 --> 01:21:15,179
소량의

1912
01:21:15,179 --> 01:21:18,120
이미지에서 잠재적으로 상태

1913
01:21:18,120 --> 01:21:20,040
공간 또는 구성 요소를 줄입니다.  매우 복잡

1914
01:21:20,040 --> 01:21:24,179
하고

1915
01:21:24,179 --> 01:21:26,880


1916
01:21:26,880 --> 01:21:29,699
눈의 움직임이나 주의에 대한 정책 선택

1917
01:21:29,699 --> 01:21:33,060
과 관련된 일부 하위 수준 엔터티의 역학을 만든 다음

1918
01:21:33,060 --> 01:21:35,460
하위 수준의 슬램 및 분류와 같이 처리하여

1919
01:21:35,460 --> 01:21:37,679
어떤 종류의 이미지를

1920
01:21:37,679 --> 01:21:40,020
상위 수준으로 보고 있는지 분류합니다.  슬램

1921
01:21:40,020 --> 01:21:42,300
이지만 정책

1922
01:21:42,300 --> 01:21:43,920
은 이미지의 어느 부분

1923
01:21:43,920 --> 01:21:45,179
이 스캔되고 있는지 수준에서 제정되고 있습니다.

1924
01:21:45,179 --> 01:21:46,560


1925
01:21:46,560 --> 01:21:48,900
예 그것은 실제로

1926
01:21:48,900 --> 01:21:50,760


1927
01:21:50,760 --> 01:21:53,280
작업으로 등록해야 하는 다른

1928
01:21:53,280 --> 01:21:56,159


1929
01:21:56,159 --> 01:21:58,800
아이디어에 대한 매우 좋은 설정입니다.  적극적인 영향

1930
01:21:58,800 --> 01:22:01,080
음 너무 흥미로워요.

1931
01:22:01,080 --> 01:22:03,780
저는 모델의 계층적 중첩과 학습인

1932
01:22:03,780 --> 01:22:05,460


1933
01:22:05,460 --> 01:22:08,760
다양한 다른

1934
01:22:08,760 --> 01:22:11,639
활성 제안이 가지고 있는 두 가지 모듈 또는 기능에 대해 묻고 싶었습니다.

1935
01:22:11,639 --> 01:22:15,060


1936
01:22:15,060 --> 01:22:16,440


1937
01:22:16,440 --> 01:22:20,520
중첩과 학습

1938
01:22:20,520 --> 01:22:22,739
이 이론적 및 실현된

1939
01:22:22,739 --> 01:22:25,320
계산 복잡성에 어떤 영향을 미치는지

1940
01:22:25,320 --> 01:22:29,159
그래서 저는 다음과 같이 생각합니다.  나는 당신이

1941
01:22:29,159 --> 01:22:30,920
실제로 도움이 될 수 있지만

1942
01:22:30,920 --> 01:22:34,980
활성 유아 에이전트의 계산 복잡성을 사용할 수 있다고 생각합니다

1943
01:22:34,980 --> 01:22:37,800
음 예를 들어 하나의 아이디어  그래서 저는

1944
01:22:37,800 --> 01:22:39,179


1945
01:22:39,179 --> 01:22:41,100
이미지에 대한 생성 모델에 대해 이야기하고

1946
01:22:41,100 --> 01:22:44,280
있었습니다. 어 여러분이 이미지를 좋아한다고 상상해보세요.

1947
01:22:44,280 --> 01:22:46,679
그러면 이미지가

1948
01:22:46,679 --> 01:22:48,659
수백만 개의 가능한 조합 권한

1949
01:22:48,659 --> 01:22:50,219
과 같을 수 있습니다. 그 이상은 아니지만

1950
01:22:50,219 --> 01:22:52,380
아마도 우주의 원자보다 더 많

1951
01:22:52,380 --> 01:22:56,060
겠지만  컨볼루션 신경망

1952
01:22:56,060 --> 01:22:58,920
의 구조를 모방하여

1953
01:22:58,920 --> 01:23:01,020
할

1954
01:23:01,020 --> 01:23:04,560
수 있는 것은 픽셀 패치를 통해

1955
01:23:04,560 --> 01:23:06,360


1956
01:23:06,360 --> 01:23:08,760
예를 들어 다른 선 패턴을 추출하는 생성 세계

1957
01:23:08,760 --> 01:23:12,120


1958
01:23:12,120 --> 01:23:14,100
를 만들 수 있습니다.

1959
01:23:14,100 --> 01:23:16,080
계층 구조의 첫 번째 수준에서

1960
01:23:16,080 --> 01:23:18,420
해당 정보를 추출한 다음

1961
01:23:18,420 --> 01:23:19,980
패턴의

1962
01:23:19,980 --> 01:23:22,080
패턴 등

1963
01:23:22,080 --> 01:23:23,760


1964
01:23:23,760 --> 01:23:25,620
을 알게 될 것입니다. 범주 분포로 알고 있는 이것을 만들 수 있다고 생각

1965
01:23:25,620 --> 01:23:28,800
하지만 VR 다른 모델에서는

1966
01:23:28,800 --> 01:23:30,540
기본적으로 시작 단계입니다.

1967
01:23:30,540 --> 01:23:33,360
픽셀이 있고 작은 가장자리와

1968
01:23:33,360 --> 01:23:35,100
이와 같은 것들이 있고 가장자리의 조합이 있고

1969
01:23:35,100 --> 01:23:38,639
기본적으로 개체를 갖는 데 이르기까지

1970
01:23:38,639 --> 01:23:40,620


1971
01:23:40,620 --> 01:23:44,159
음 하지만 이것은  구현 측면에서 음과 같이 매우 복잡

1972
01:23:44,159 --> 01:23:47,100


1973
01:23:47,100 --> 01:23:49,980


1974
01:23:49,980 --> 01:23:51,480
합니다. 매우 많은 수의 패치가 있을 것이기 때문에 추론 프로세스에 GPU를

1975
01:23:51,480 --> 01:23:54,239


1976
01:23:54,239 --> 01:23:56,540
사용해야 하므로 훈련 속도를 높여야

1977
01:23:56,540 --> 01:23:59,280
하지만 여전히 이것이 감소를 위한 매우 좋은

1978
01:23:59,280 --> 01:24:02,520
방법이라고 생각합니다.  에이전트의 상태 공간은

1979
01:24:02,520 --> 01:24:05,100


1980
01:24:05,100 --> 01:24:07,080
기본적으로 이미지를

1981
01:24:07,080 --> 01:24:09,000
표준 활성 영향 에이전트의 입력으로 넣으려고 하면

1982
01:24:09,000 --> 01:24:12,000
더 많은 가능한 이미지와 같은 예와 같이 있어야

1983
01:24:12,000 --> 01:24:14,159


1984
01:24:14,159 --> 01:24:15,659
하고 우주에서 번호가 매겨지거나 패턴이

1985
01:24:15,659 --> 01:24:17,219
작은 이미지로도 확률이 높아야

1986
01:24:17,219 --> 01:24:21,320
하기 때문입니다.  계층 구조는 그 부분에 정말 도움이 될 수 있습니다.

1987
01:24:21,600 --> 01:24:23,699
그래서

1988
01:24:23,699 --> 01:24:26,520
다른 질문이 있습니다. 두 번째 측면은

1989
01:24:26,520 --> 01:24:29,159
예를 들어

1990
01:24:29,159 --> 01:24:31,500
트리가 계속

1991
01:24:31,500 --> 01:24:33,900
될 때 이전 항목

1992
01:24:33,900 --> 01:24:37,860
을 업데이트하거나 이전 항목 또는 다른 유형의 업데이트에 대한 정책을 고려하려는 경우 학습에 관한 것입니다.  다른 설정에서

1993
01:24:37,860 --> 01:24:40,320
수정될 수 있는 우리의 다른 매개변수

1994
01:24:40,320 --> 01:24:42,120


1995
01:24:42,120 --> 01:24:45,239
예 그래서

1996
01:24:45,239 --> 01:24:48,719
학습 가능한 기도를 갖는 것에 대해 말할 수 있는 한

1997
01:24:48,719 --> 01:24:51,300
가지는 어떤 경우에는 이것이 정말 잘못될 수 있다는 것입니다.

1998
01:24:51,300 --> 01:24:52,320


1999
01:24:52,320 --> 01:24:55,020
f 당신은

2000
01:24:55,020 --> 01:24:57,620
관찰이

2001
01:24:58,320 --> 01:25:00,540
있고 당신이 상태를 가지고 있다고 상상해보십시오 그래서 그것들은

2002
01:25:00,540 --> 01:25:03,000
관찰입니다 어 또는 죄송합니다 이것은

2003
01:25:03,000 --> 01:25:05,639
상태이고 이것은 관찰이 될 것입니다

2004
01:25:05,639 --> 01:25:08,100
그래서 세 가지 가능한 상태 두 가지 가능한

2005
01:25:08,100 --> 01:25:10,139
관찰 그리고 만약 당신이

2006
01:25:10,139 --> 01:25:14,100
유대인 층으로 시작한다면 그 이전에  완전히

2007
01:25:14,100 --> 01:25:15,960
균일하므로 매개변수가 모든

2008
01:25:15,960 --> 01:25:17,699
곳에서 모두 하나일 수 있습니다

2009
01:25:17,699 --> 01:25:21,300


2010
01:25:21,300 --> 01:25:24,060
. 관찰 중 하나를 수행하면 상태

2011
01:25:24,060 --> 01:25:26,520


2012
01:25:26,520 --> 01:25:28,860
의 균일한 분포 내에서 진입 프로세스와 같은 양을 제공할 것

2013
01:25:28,860 --> 01:25:31,620
입니다.

2014
01:25:31,620 --> 01:25:34,199
매트릭스

2015
01:25:34,199 --> 01:25:37,199
는 기본적으로 모두 하나이므로

2016
01:25:37,199 --> 01:25:39,840
각 관찰

2017
01:25:39,840 --> 01:25:42,300
에 대해 기본적으로 생성할 가능성이 더 높은 실제 유사 상태가 없습니다.

2018
01:25:42,300 --> 01:25:44,520


2019
01:25:44,520 --> 01:25:45,780
즉, 추론 프로세스

2020
01:25:45,780 --> 01:25:47,340
가 상태의 균일한 분포를 갖게

2021
01:25:47,340 --> 01:25:50,940
되며 기본적으로

2022
01:25:50,940 --> 01:25:52,920
이것은 문제입니다.  결국

2023
01:25:52,920 --> 01:25:54,300


2024
01:25:54,300 --> 01:25:58,860
에는 일부

2025
01:25:58,860 --> 01:26:02,760
상태가 더 가능성이 높지만 각 상태가

2026
01:26:02,760 --> 01:26:04,080
다른 관찰을 생성할 가능성이 더 높지 않은 매트릭스와 같습니다

2027
01:26:04,080 --> 01:26:06,360
.  따라서 기본적

2028
01:26:06,360 --> 01:26:08,280
으로 학습 실패가

2029
01:26:08,280 --> 01:26:10,199


2030
01:26:10,199 --> 01:26:12,480
있습니다. 다시 발생하면 좋아할 수 없기

2031
01:26:12,480 --> 01:26:14,580


2032
01:26:14,580 --> 01:26:18,000
때문입니다. 매개변수를 업데이트하는 방법을 기억한다면 관찰하고 있는

2033
01:26:18,000 --> 01:26:20,040
상태 관찰 쌍의 수를 세는 것

2034
01:26:20,040 --> 01:26:22,380


2035
01:26:22,380 --> 01:26:25,440
입니다.

2036
01:26:25,440 --> 01:26:27,300
관찰되는 것은 이미 항상

2037
01:26:27,300 --> 01:26:30,360
1/3과 같은 1점과 같습니다. 예를

2038
01:26:30,360 --> 01:26:33,420
들어 균일한 분포인 경우

2039
01:26:33,420 --> 01:26:35,100


2040
01:26:35,100 --> 01:26:36,840
모든 상태에 대한 관찰의 1/3을

2041
01:26:36,840 --> 01:26:38,820
동시에 계산할 것이며 어떤 상태가 가능했는지 식별할 수 없습니다.

2042
01:26:38,820 --> 01:26:42,199


2043
01:26:42,199 --> 01:26:44,159
이 관찰

2044
01:26:44,159 --> 01:26:46,500
을 생성하는 것은 모두 이러한 관찰을 생성할 가능성이 높기

2045
01:26:46,500 --> 01:26:48,900
때문에 어떤 상태가 어떤 관찰을 생성

2046
01:26:48,900 --> 01:26:51,659
하는지 알 수 없는 일이 일어날 것입니다.

2047
01:26:51,659 --> 01:26:53,219


2048
01:26:53,219 --> 01:26:55,440


2049
01:26:55,440 --> 01:26:58,560


2050
01:26:58,560 --> 01:27:00,719


2051
01:27:00,719 --> 01:27:04,620
이것은

2052
01:27:04,620 --> 01:27:07,380
예를 들어

2053
01:27:07,380 --> 01:27:09,900
미분 및 이와 같은 항목으로 행렬을 추가해도

2054
01:27:09,900 --> 01:27:11,880
환경의 역학을 망치지 못할 수 있음을 보여주는 비전 사례입니다.  nts

2055
01:27:11,880 --> 01:27:13,620
와 환경의 가능성

2056
01:27:13,620 --> 01:27:14,760
도

2057
01:27:14,760 --> 01:27:18,480
있으므로 디지털 네트워크를 사용하면

2058
01:27:18,480 --> 01:27:21,780
이 문제를 피할 수 있습니다. 하지만

2059
01:27:21,780 --> 01:27:23,880


2060
01:27:23,880 --> 01:27:26,219
전기 영향 모델 내에서 매개변수를 학습

2061
01:27:26,219 --> 01:27:29,639
하는 것과 같은 실제 도전인 것 같습니다.

2062
01:27:29,639 --> 01:27:33,199


2063
01:27:33,199 --> 01:27:35,719


2064
01:27:35,719 --> 01:27:39,480


2065
01:27:39,480 --> 01:27:42,239


2066
01:27:42,239 --> 01:27:45,540
모델이 실행될 수 있는 경우 유대인 국기에 관해서는 cryo와 같은 가능성이 균일하지

2067
01:27:45,540 --> 01:27:47,699
않으므로 이것은 적극적인 영향을 학습하기 위한 과제 중 하나입니다

2068
01:27:47,699 --> 01:27:51,259


2069
01:27:53,460 --> 01:27:56,100


2070
01:27:56,100 --> 01:27:59,040
. 상태 공간을 지정하는 과정에서 우리가 접한 것입니다.  그리고 어떤

2071
01:27:59,040 --> 01:28:02,880
정책이 가능하고

2072
01:28:02,880 --> 01:28:04,560
흥미로운 대화입니다. 왜냐하면

2073
01:28:04,560 --> 01:28:07,699
모델러로서 우리를 모델에 참여

2074
01:28:07,699 --> 01:28:10,320
하게 하고

2075
01:28:10,320 --> 01:28:14,280


2076
01:28:14,280 --> 01:28:16,920
스캐폴드와 제약을 어디에 설정하고

2077
01:28:16,920 --> 01:28:20,580
있는지 명확히 하는 데 도움이

2078
01:28:20,580 --> 01:28:24,540
되기 때문입니다.

2079
01:28:24,540 --> 01:28:27,179


2080
01:28:27,179 --> 01:28:29,520
로컬

2081
01:28:29,520 --> 01:28:31,920
컨텍스트가 상태 공간에서 여전히 거대하더라도 일부 슈퍼 로컬 컨텍스트 내에서 내리막 길을 굴러가는

2082
01:28:31,920 --> 01:28:34,860
것은 여전히 ​​끝일 수 있습니다.

2083
01:28:34,860 --> 01:28:37,620
전체 모델 구조의 관점에서 보면 빙산이며 실제로 전체 모델

2084
01:28:37,620 --> 01:28:40,080
구조를 탐색해야 한다는 말

2085
01:28:40,080 --> 01:28:42,000


2086
01:28:42,000 --> 01:28:45,659
은 아니지만 이론상으로는

2087
01:28:45,659 --> 01:28:47,400
매우 중요합니다. 아니면

2088
01:28:47,400 --> 01:28:49,920
빛이 있는 곳을 보고

2089
01:28:49,920 --> 01:28:51,659
모자에 토끼를 넣어 이러한 작업을 수행할 수도 있습니다.

2090
01:28:51,659 --> 01:28:54,060
특정 방식으로 작동하는 모델은 처음에 비밀

2091
01:28:54,060 --> 01:28:56,820
을 들었기 때문에 결정론적일 수도

2092
01:28:56,820 --> 01:28:59,940


2093
01:28:59,940 --> 01:29:02,059


2094
01:29:02,639 --> 01:29:04,159


2095
01:29:04,159 --> 01:29:07,260
있습니다. 음 질문이 하나 더

2096
01:29:07,260 --> 01:29:09,600
있습니다. 그래서

2097
01:29:09,600 --> 01:29:10,800
음

2098
01:29:10,800 --> 01:29:14,699
, 세 가지 다른 접근 방식을 병치하고 대조했습니다.

2099
01:29:14,699 --> 01:29:16,800


2100
01:29:16,800 --> 01:29:19,080
변형 메시지 전달

2101
01:29:19,080 --> 01:29:21,300
베이지안 필터링 및 신념

2102
01:29:21,300 --> 01:29:22,620
전파

2103
01:29:22,620 --> 01:29:28,080
그리고 교훈적 또는 실용적인 사용 여부

2104
01:29:28,080 --> 01:29:29,280


2105
01:29:29,280 --> 01:29:32,420
이러한 다양한

2106
01:29:32,420 --> 01:29:37,320
접근 방식이 유용하거나

2107
01:29:37,320 --> 01:29:38,940
특수한

2108
01:29:38,940 --> 01:29:41,580
것으로 어디에서 볼 수 있습니까?

2109
01:29:41,580 --> 01:29:43,620


2110
01:29:43,620 --> 01:29:45,780


2111
01:29:45,780 --> 01:29:48,380


2112
01:29:48,380 --> 01:29:51,480
우리는

2113
01:29:51,480 --> 01:29:52,860
특히

2114
01:29:52,860 --> 01:29:55,500
과거를 추적

2115
01:29:55,500 --> 01:29:57,840
하고 내부에 대한 새로운 관찰을 얻을 때마다 편견 언어로 모델을 구성합니다.

2116
01:29:57,840 --> 01:30:03,020
미래로 그래서 그냥 여기로 가겠습니다

2117
01:30:03,840 --> 01:30:04,620
음

2118
01:30:04,620 --> 01:30:08,219
오 아니오 예 그래서 좋아요 그래서 투자 시간은

2119
01:30:08,219 --> 01:30:09,960
예를 들어 우리가 과거를 유지

2120
01:30:09,960 --> 01:30:12,120


2121
01:30:12,120 --> 01:30:14,280


2122
01:30:14,280 --> 01:30:16,620


2123
01:30:16,620 --> 01:30:18,840
한다는 것을 표현하는 것입니다.  새로운

2124
01:30:18,840 --> 01:30:21,659
관찰을 통해 연결된 상태와 같은 네트워크를 갖게 될

2125
01:30:21,659 --> 01:30:23,520


2126
01:30:23,520 --> 01:30:25,260
것이며 앞으로 일어날 일은

2127
01:30:25,260 --> 01:30:27,120
이와 같은

2128
01:30:27,120 --> 01:30:29,340
메시지를 갖게 될 것이며 또한 시간을 거슬러 올라가는

2129
01:30:29,340 --> 01:30:32,820
메시지를 갖게 될 것입니다.

2130
01:30:32,820 --> 01:30:35,820


2131
01:30:35,820 --> 01:30:38,100
과거에 일어난 일에 대한 이해

2132
01:30:38,100 --> 01:30:42,480
그래서 다시 방문하거나 과거

2133
01:30:42,480 --> 01:30:43,980
에 대한 이해를 업데이트

2134
01:30:43,980 --> 01:30:46,260
하는 이 기능

2135
01:30:46,260 --> 01:30:47,639
은 다양한 시간 마사지 전달 알고리즘에 매우 특정한 것이며

2136
01:30:47,639 --> 01:30:50,280


2137
01:30:50,280 --> 01:30:52,980
예를 들어 분지 필터링의 기본 및 필터링

2138
01:30:52,980 --> 01:30:55,199
에 나타나지 않습니다.  우리

2139
01:30:55,199 --> 01:30:59,880
는

2140
01:30:59,880 --> 01:31:02,880
현재 임의의 실행 가능한 믿음 상태만 유지하고 확장

2141
01:31:02,880 --> 01:31:06,840
할 때 새로운 관찰과 관련된 새로운 상태를 얻을 때와 같이 설정

2142
01:31:06,840 --> 01:31:09,480
하기 때문입니다.  우리는 사후

2143
01:31:09,480 --> 01:31:11,940
를 얻기 위해 예측을 수행할 것입니다.

2144
01:31:11,940 --> 01:31:13,440
그런 다음 우리는 그것을

2145
01:31:13,440 --> 01:31:15,420
제거할 것입니다. 그래서 우리는

2146
01:31:15,420 --> 01:31:17,460


2147
01:31:17,460 --> 01:31:20,219
과거 상태에 대한 당신의 믿음을 다루기 위해 나쁜 게시판 메시지를 가질

2148
01:31:20,219 --> 01:31:22,739
수 없습니다. 그래서 우리는 이제 이런 종류의 위조 능력을 가질 수 없습니다.

2149
01:31:22,739 --> 01:31:25,980


2150
01:31:25,980 --> 01:31:27,780
신념 전파

2151
01:31:27,780 --> 01:31:31,260
알고리즘을 사용하면

2152
01:31:31,260 --> 01:31:33,659
수행되는 작업과 ID가 매우 유사합니다.

2153
01:31:33,659 --> 01:31:35,520
어 신념 전파 설정에서 신념 전파

2154
01:31:35,520 --> 01:31:37,980


2155
01:31:37,980 --> 01:31:42,420
를 사용하면 이 ptibf 접근 방식이 다른 항목 상태와 다른 관찰을 가질 수 있게 하는 보다 확장 가능한 접근 방식일

2156
01:31:42,420 --> 01:31:45,540


2157
01:31:45,540 --> 01:31:48,199


2158
01:31:48,199 --> 01:31:51,360
뿐입니다.

2159
01:31:51,360 --> 01:31:55,560
하나의 관찰과 하나의 상태로만 제한되며

2160
01:31:55,560 --> 01:31:57,860
, 예를 들어 표시된 환경

2161
01:31:57,860 --> 01:32:01,560
으로 텍스트의 X 위치 중립 응용 프로그램

2162
01:32:01,560 --> 01:32:03,780


2163
01:32:03,780 --> 01:32:05,639


2164
01:32:05,639 --> 01:32:07,080
이

2165
01:32:07,080 --> 01:32:09,480
있는 경우 이러한 X 및 Y 위치의 모든 조합에 해당하는 하나의 랜덤 변수를 생성해야 합니다.  위치를

2166
01:32:09,480 --> 01:32:11,820
설명하는 임의의 실행 가능 항목이 될 것이며

2167
01:32:11,820 --> 01:32:14,820


2168
01:32:14,820 --> 01:32:16,980
설명과 Y 위치에 대해 알고 있는 각각에 대해 두 개의 값이 있는

2169
01:32:16,980 --> 01:32:19,380
경우 al  l

2170
01:32:19,380 --> 01:32:22,139
조합은

2171
01:32:22,139 --> 01:32:25,920
모든 암호의 1배에 대한 각 값

2172
01:32:25,920 --> 01:32:28,800
과 같을 것이며 이것은 많은 변수와 함께 기하급수적으로 진행

2173
01:32:28,800 --> 01:32:30,420


2174
01:32:30,420 --> 01:32:32,580
되므로 이제 확장

2175
01:32:32,580 --> 01:32:34,739
가능하고 이 변수가 두 개의

2176
01:32:34,739 --> 01:32:37,080
추가 값을 가질 수 있고 조합의 총 수를 가질 수 있다고 가정합니다.

2177
01:32:37,080 --> 01:32:38,460
이 3개의 무작위

2178
01:32:38,460 --> 01:32:40,739
변수 중 8

2179
01:32:40,739 --> 01:32:43,020
개 가능한 조합

2180
01:32:43,020 --> 01:32:45,179
과 같을 것입니다.

2181
01:32:45,179 --> 01:32:47,639


2182
01:32:47,639 --> 01:32:48,900


2183
01:32:48,900 --> 01:32:51,239


2184
01:32:51,239 --> 01:32:53,520


2185
01:32:53,520 --> 01:32:55,620
관찰 및

2186
01:32:55,620 --> 01:32:57,540
여러

2187
01:32:57,540 --> 01:33:00,060
상태는 모델링하려는 상태 및 관찰의 수에 확장 성장

2188
01:33:00,060 --> 01:33:02,159


2189
01:33:02,159 --> 01:33:04,860
이 있기 때문에 실제로 Alexa의 다른

2190
01:33:04,860 --> 01:33:07,980
다중 다중 요소 및

2191
01:33:07,980 --> 01:33:11,520
다중 양식

2192
01:33:11,520 --> 01:33:13,440
접근 방식은 더 많은 상태로 더 복잡한 접근 방식으로 확장하는 데 정말 유용합니다.

2193
01:33:13,440 --> 01:33:16,800
그리고 관찰력

2194
01:33:16,800 --> 01:33:20,760
이 훌륭합니다. 제이콥에게 마지막

2195
01:33:20,760 --> 01:33:24,080
질문이나 생각

2196
01:33:26,400 --> 01:33:30,600
이 있습니까? 음 글쎄요, 제가 몇 달 전에 당신의 작업을 접한 것을 보셨군요.

2197
01:33:30,600 --> 01:33:32,460


2198
01:33:32,460 --> 01:33:35,940
정말 흥분

2199
01:33:35,940 --> 01:33:40,260
해서 당신의 논문 5개를 모두 읽었습니다. 어

2200
01:33:40,260 --> 01:33:44,219
그게 5번째 권리입니까 제 말은 어 당신이

2201
01:33:44,219 --> 01:33:49,080
예 5개의 논문을 노트까지 출판했습니다

2202
01:33:49,080 --> 01:33:51,719
uh 왜냐면 당신은

2203
01:33:51,719 --> 01:33:55,080
사람들이 능동적 추론을 더 자주 보기 때문입니다.

2204
01:33:55,080 --> 01:33:58,699
자유 에너지 원리는 기본적으로

2205
01:33:58,699 --> 01:34:01,920
추측에 불과하고 생각과 노력

2206
01:34:01,920 --> 01:34:05,340
은 실제 응용 프로그램에 그다지 실용적인 가치가

2207
01:34:05,340 --> 01:34:09,600
없기 때문에 제 생각

2208
01:34:09,600 --> 01:34:12,540
에는 제가 언급한 귀하의 작업에 매우

2209
01:34:12,540 --> 01:34:16,159
환영할 만한 추가 사항이 있습니다. 어 초기이지만

2210
01:34:16,159 --> 01:34:19,980
기하급수적으로 어 성장하는 느낌이 듭니다.

2211
01:34:19,980 --> 01:34:23,000
어

2212
01:34:23,000 --> 01:34:26,219
분기 시간 능동적 추론에 대한 미래의 더 흥미로운 개발 또는 미래에 나올

2213
01:34:26,219 --> 01:34:28,679
수 있는

2214
01:34:28,679 --> 01:34:29,580
다른

2215
01:34:29,580 --> 01:34:33,360
어 변종

2216
01:34:33,360 --> 01:34:36,600
어 그리고 어

2217
01:34:36,600 --> 01:34:39,420
지금부터 확실히 계속해서 여러분의 작업을 따라갈 것입니다

2218
01:34:39,420 --> 01:34:41,940
정확히 오늘 우리와 함께 해주셔서 정말 감사합니다

2219
01:34:41,940 --> 01:34:43,980


2220
01:34:43,980 --> 01:34:46,139
오  문제 없습니다 초대해 주셔서 감사합니다

2221
01:34:46,139 --> 01:34:48,300
여기에서 발표할 수 있어서 정말 기쁩니다 초대해

2222
01:34:48,300 --> 01:34:51,719
주셔서 감사합니다

2223
01:34:51,719 --> 01:34:54,780
제이콥 최종 생각이 있다면

2224
01:34:54,780 --> 01:34:58,679
예 어 음 정말

2225
01:34:58,679 --> 01:35:02,880
훌륭한 발표였습니다  ion 및 토론 uh

2226
01:35:02,880 --> 01:35:07,139
Ali도 uh 연결했습니다 uh 당신의

2227
01:35:07,139 --> 01:35:10,800
몇 달 전 작업과 또한 uh

2228
01:35:10,800 --> 01:35:14,100


2229
01:35:14,100 --> 01:35:17,639
능동적 추론 모델링의 um 미래에 대해 매우 흥분하게

2230
01:35:17,639 --> 01:35:20,880
만들었고 그것은 우리가 um 논의하고 있는 주제입니다

2231
01:35:20,880 --> 01:35:24,840


2232
01:35:24,840 --> 01:35:27,840
연구소에서 그리고

2233
01:35:27,840 --> 01:35:30,540


2234
01:35:30,540 --> 01:35:33,500


2235
01:35:33,500 --> 01:35:38,280


2236
01:35:38,280 --> 01:35:41,040


2237
01:35:41,040 --> 01:35:42,900
음 점점 더

2238
01:35:42,900 --> 01:35:46,139
복잡해지는 상태 공간에서 능동적 추론을 수행하는 계산 비용

2239
01:35:46,139 --> 01:35:50,699
을 줄이는 이 접근 방식이 아마도

2240
01:35:50,699 --> 01:35:53,460
이러한 모델의 채택에 도달하는 가장 좋은 방법이라고 생각합니다.

2241
01:35:53,460 --> 01:35:55,139


2242
01:35:55,139 --> 01:35:57,719
서로 다른 도메인에서 서로 다른 영역에 있으므로 예

2243
01:35:57,719 --> 01:35:58,679


2244
01:35:58,679 --> 01:36:01,619


2245
01:36:01,619 --> 01:36:04,800
오늘 가입해 주셔서 대단히 감사합니다

2246
01:36:04,800 --> 01:36:09,000
. Deep active inference에서 해당 논문을 읽을 수 있기를 기대합니다.

2247
01:36:09,000 --> 01:36:11,280
Deep Branching 시간 활성

2248
01:36:11,280 --> 01:36:14,179
인턴 확실히 감사합니다.

2249
01:36:14,179 --> 01:36:18,239
환영합니다.  언제든지 돌아와서 우리

2250
01:36:18,239 --> 01:36:20,639
는 음 확실히 관찰 할 것입니다

2251
01:36:20,639 --> 01:36:22,320


2252
01:36:22,320 --> 01:36:25,219
감사합니다 감사합니다

2253
01:36:25,219 --> 01:36:29,360
안녕 감사합니다 안녕

2254
01:36:34,020 --> 01:36:36,440
완벽합니다

2255
01:36:36,659 --> 01:36:39,500


2256
01:36:39,780 --> 01:36:42,500


