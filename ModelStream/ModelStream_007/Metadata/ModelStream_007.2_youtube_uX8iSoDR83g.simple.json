[
  {
    "start": 5.523,
    "end": 6.324,
    "text": " Hello and welcome.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7.004,
    "end": 10.147,
    "text": "This is model stream number 007.2.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 10.767,
    "end": 12.389,
    "text": "It's the 18th of January, 2023.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 12.569,
    "end": 18.094,
    "text": "We're back in our second session on PyMDP.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 18.914,
    "end": 20.436,
    "text": "Welcome back, Connor.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 20.776,
    "end": 32.165,
    "text": "Thanks for joining again and off to you for a presentation that you will weave together with some code examples and the notebook that we'll use is in the video description.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 32.245,
    "end": 33.266,
    "text": "So thanks again, Connor.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 33.667,
    "end": 34.007,
    "text": "Off to you.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 35.984,
    "end": 36.204,
    "text": " Great.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 36.265,
    "end": 37.026,
    "text": "Thank you, Daniel.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 37.126,
    "end": 38.649,
    "text": "It's great to be back here again.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 38.69,
    "end": 43.519,
    "text": "I think I've been here maybe four or five times now, so it's always a pleasure to be with you all.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 43.579,
    "end": 45.724,
    "text": "So yeah, as Daniel said, this is the second",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 46.889,
    "end": 72.814,
    "text": " um model stream in a two-part series where we'll be discussing implementing active inference with pyMDP so um just like there's some background that I'm assuming you either know from your own research into active inference and POMDPs in particular or because you've watched the first part of this series so um I'll just say that to start with like if you want background I would encourage you to go watch the first part where we talk about pyMDP",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 73.561,
    "end": 78.847,
    "text": " the motivation for the package, what you can do with it in kind of sweeping terms.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 79.588,
    "end": 87.857,
    "text": "And then today, we're actually going to go in and use it to code up an active inference agent performing a task, like a reinforcement learning style task.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 89.479,
    "end": 93.724,
    "text": "That's very similar to classic active inference tasks that you can find in the literature.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 95.167,
    "end": 99.691,
    "text": " Yeah, so as Daniel said, I'm going to step through these slides.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 99.771,
    "end": 107.537,
    "text": "I have pauses for questions and stuff, but we also have pauses for code, live coding or side-by-side coding.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 107.597,
    "end": 113.362,
    "text": "So I'll take a pause from the slides and I'll go over to the Colab notebook.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 113.902,
    "end": 115.903,
    "text": "The link is in the description of the YouTube video.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 116.821,
    "end": 121.462,
    "text": " And we'll kind of code up this agent based on things that we discussed in the slides.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 122.222,
    "end": 123.863,
    "text": "It's not that I'll be actually writing code.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 123.883,
    "end": 125.503,
    "text": "I'll just be running cell blocks.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 127.124,
    "end": 134.845,
    "text": "And yeah, so if anyone who's viewing wants to do it themselves, you can open the Colab notebook.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 134.905,
    "end": 145.048,
    "text": "Actually, let's start by doing that because... So this should be the Colab notebook that you get brought to when you click on the link.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 145.799,
    "end": 153.984,
    "text": " And then, and this is one copy that you need to have a Google account to use this because collab is linked to your Google drive of your Google account so if you're doing this.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 156.165,
    "end": 168.492,
    "text": "On your own, this is a shared link but it's not you can't edit it you can't write to it, so what you have to do is go to file up here and then save a copy and drive and then you'll get your own personal private copy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 169.349,
    "end": 195.607,
    "text": " notebook and i'll do that right now because i'll create a run copy where we can like manipulate it all together in real time so i'll just call it run copy um and i'll start by just uh installing into this collab environment uh py mdp so collab is kind of like jupyter notebooks it's an interactive cloud-hosted notebook for running different kinds of code but mainly python code",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 197.006,
    "end": 201.627,
    "text": " So while that's installing, and I'll run that as well, we can start with the slides.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 202.787,
    "end": 203.808,
    "text": "Okay.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 208.649,
    "end": 211.109,
    "text": "So I'll just start with a quick review from last time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 211.209,
    "end": 215.29,
    "text": "And again, go back to the video if you want to see the full picture of what we discussed.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 215.31,
    "end": 223.532,
    "text": "So the generative models, the kind of brains of the agents that we'll be constructing are these partially observed Markov decision processes or POMDPs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 224.992,
    "end": 228.134,
    "text": " They have various parameters and it's kind of up to you how to parameterize them.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 228.154,
    "end": 232.155,
    "text": "But under active inference, we typically have these four main components.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 232.595,
    "end": 237.617,
    "text": "There's fifth and sixth, depending on how complicated of a model you want to create.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 238.178,
    "end": 242.959,
    "text": "But these components kind of represents the agent's beliefs about the world that it's operating in.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 242.999,
    "end": 252.743,
    "text": "So these are usually hand designed or at least generally structured on a case by case basis, according to the behavioral task that you're trying to model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 253.204,
    "end": 253.984,
    "text": "So we have the A,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 254.742,
    "end": 263.37,
    "text": " matrix or a array which encodes the agent's beliefs about how hidden states of the world that it's doing inference about relate to the observations that it gets.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 263.39,
    "end": 270.336,
    "text": "You have the B array which encodes beliefs about transitions or beliefs about dynamics.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 270.416,
    "end": 272.738,
    "text": "So how do hidden states relate to each other over time?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 274.081,
    "end": 281.526,
    "text": " You have the C vector or C array, which encodes agents prior preferences for seeing certain sorts of sensations.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 281.566,
    "end": 285.088,
    "text": "So this kind of plays the role of a quasi reward function.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 285.649,
    "end": 292.213,
    "text": "And it has the effect of biasing agents action selection, such that it's more likely to visit states of affairs that it",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 292.913,
    "end": 295.495,
    "text": " a priori expects to see, i.e.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 295.995,
    "end": 297.036,
    "text": "goal-directed behavior.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 297.056,
    "end": 298.858,
    "text": "It wants to achieve some goal.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 299.278,
    "end": 311.547,
    "text": "And then we have the D vector, which is kind of a baseline prior about what is the state of the world before I get any observations, like what do I believe the hidden state distribution is.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 312.288,
    "end": 317.372,
    "text": "And again, I'm glossing over this because I assume that you know about things like categorical distributions",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 319.454,
    "end": 324.577,
    "text": " All the details of these different arrays are explained more in the first video.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 326.978,
    "end": 332.902,
    "text": "And just again to show the graphical model, we have the A array relating hidden states in red to observations in blue.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 333.582,
    "end": 338.986,
    "text": "We have the B matrix or B array that relate hidden states to themselves over time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 339.006,
    "end": 340.807,
    "text": "So how does the world change?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 342.099,
    "end": 351.171,
    "text": " And then we have policies, pi, which are sequences or collections of actions that affect transitions and thereby change the state of the world.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 352.284,
    "end": 361.691,
    "text": " And then you have this critical quasi pseudo value function to active inference in POMDPs, active inference in general, which is the expected free energy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 362.292,
    "end": 368.536,
    "text": "And the expected free energy is the thing you try to minimize as you optimize your beliefs about policies.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 368.936,
    "end": 373.16,
    "text": "So the best policies are those that minimize expected free energy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 374.175,
    "end": 381.902,
    "text": " And that has a bunch of interesting terms that lend active inference all of its interesting, curious, information-seeking behaviors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 382.402,
    "end": 388.327,
    "text": "And then this prior over-observations factors into the computation of that expected free energy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 388.868,
    "end": 398.396,
    "text": "So if you have a particular prior preference to see some observations, that will affect which policies get more or less expected free energy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 399.457,
    "end": 401.659,
    "text": "And then you use that to actually choose a policy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 402.779,
    "end": 408.183,
    "text": " And then, of course, we have the d vector, which parameterizes the initial beliefs about hidden states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 410.045,
    "end": 419.452,
    "text": "So today, we're going to actually dive in and write out our own a, b, c's, and d's for a particular generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 419.472,
    "end": 424.996,
    "text": "We don't have to worry about writing out our own functions that do inference or do planning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 425.137,
    "end": 431.662,
    "text": "All of that will be handled by the abstractions provided by a PIMEDP, particularly in the agent class.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 432.708,
    "end": 435.47,
    "text": " So the agent class takes the components of the generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 435.53,
    "end": 441.835,
    "text": "It gives you this very kind of black box API that you can just use to perform active inference.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 442.415,
    "end": 446.898,
    "text": "This is a very... In the last video, we talked about different levels of abstraction.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 446.938,
    "end": 455.124,
    "text": "This is like the top level of abstraction in PyMDP, where you're just passing a generative model to an agent and then kind of pressing go on the agent.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 456.909,
    "end": 458.851,
    "text": " having it interact with the task environment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 459.091,
    "end": 463.877,
    "text": "So typically, this is another class, like an environment class or a task class.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 464.277,
    "end": 468.101,
    "text": "And then you just kind of string the two together in an action perception loop.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 469.623,
    "end": 473.207,
    "text": "And you get a simulation of behavior under active inference.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 475.257,
    "end": 492.928,
    "text": " And this is a standard thing you'll see in like open AI gym or other reinforcement learning packages you'll have usually like an environment class and an agent class and they exchange actions and observations and so we we designed the API of time dp very much inspired by that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 495.669,
    "end": 496.39,
    "text": "Okay, so.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 497.523,
    "end": 506.826,
    "text": " Before we start writing down the generative model, so that A, B, C, and D, I want to spend a little bit of time exploring the idea of factorized state spaces.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 507.746,
    "end": 515.249,
    "text": "And this is important because not only the model we're working today, it's important to understand factorization in both observations and hidden states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 517.093,
    "end": 526.918,
    "text": " But for almost all the most interesting POMDP models you're going to want to build, it's going to be really crucial to factorize your system in some way.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 527.498,
    "end": 538.604,
    "text": "Not only because it becomes easier to reason about and work with when things are factorized, but also it handles a lot of computational explosions that happen if you don't factorize your state space.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 542.421,
    "end": 548.924,
    "text": " So it's often useful to categorically separate observations into different modalities and hidden states into different factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 549.424,
    "end": 558.149,
    "text": "So what this means is that when we get an observation, we're actually getting a collection of different observations, one coming from each distinct sensory modality or channel.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 558.769,
    "end": 566.613,
    "text": "So similarly for hidden states, at any given time, the hidden states are described by a distinct set of different features or what we call hidden state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 567.293,
    "end": 578.942,
    "text": " And so we refer to this as a factorized representation because the different modalities are independent of each other, and the different hidden states are also independent of each other.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 578.982,
    "end": 579.862,
    "text": "Their dynamics are.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 579.882,
    "end": 584.566,
    "text": "So they evolve in time without affecting the other hidden state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 585.066,
    "end": 587.728,
    "text": "So that's formally written down as follows.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 587.748,
    "end": 593.793,
    "text": "The modalities are conditionally independent of each other given the hidden states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 593.913,
    "end": 596.555,
    "text": "That's what this factorization of the likelihood looks like.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 599.383,
    "end": 610.608,
    "text": " So you can think of the different modalities as different sensory channels like vision, audition, somatosensation, and they provide their own distinct type of information which are then integrated together during inference.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 611.288,
    "end": 622.212,
    "text": "And factorizing the hidden states is like the idea that at any given time the world can be described by independent features, like an object being described by both its location in space as well as its identity.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 624.282,
    "end": 630.027,
    "text": " And factorizing the state's representations of the model in this way allows for a few different distinct advantages.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 630.167,
    "end": 635.351,
    "text": "One is computational efficiency, both in terms of memory and CPU.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 636.574,
    "end": 642.26,
    "text": " It simplifies the structure of the generative model itself, so it lends it a bit of interpretability and transparency.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 642.32,
    "end": 648.046,
    "text": "So there's only certain sets of variables that represent the agent's beliefs about one feature of the environment, for instance.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 648.706,
    "end": 657.655,
    "text": "And then finally, some would argue it has a degree of neuronal or biological plausibility and is consistent with the idea of factorized",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 658.656,
    "end": 661.277,
    "text": " what others would call modular representations in the brain.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 661.318,
    "end": 667.541,
    "text": "So this part of this group of neuronal populations deals with representing where something is in space.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 667.601,
    "end": 672.303,
    "text": "And this group of neuronal populations deals with representing the identity or what the thing is.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 673.804,
    "end": 676.365,
    "text": "So that's kind of the reason we do this factorization.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 680.107,
    "end": 687.611,
    "text": "So one of the most classic examples of the early examples we do in pyMVP, and this can be found on the",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 688.632,
    "end": 698.604,
    "text": " documentation and on the main page is this grid world example where the agent is kind of navigating in a 2D grid world space.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 699.425,
    "end": 705.352,
    "text": "In the notebooks online, we do like a three by three grid world, so there's nine total locations.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 706.169,
    "end": 718.793,
    "text": " And in a fully unfactorized, or what we call an enumerated state-space representation, every location in GridWorld has its own particular identity or state.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 718.833,
    "end": 725.655,
    "text": "So we just arbitrarily can label them, like location 0 all the way to location 8, and that covers all",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 726.395,
    "end": 738.509,
    "text": " nine levels of grid world um this is fine but it especially for a small state space like a three by three grid world but it leads to some it kind of taxes our our memory and our uh",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 739.361,
    "end": 746.603,
    "text": " Our interpret ability, a little bit because we have to remember exactly how our nine indices map to our.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 747.423,
    "end": 755.746,
    "text": "The different places in grid world so like if i'm in the middle of the grid, I need to like have some kind of lookup table to say okay location for is.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 757.106,
    "end": 762.988,
    "text": "Like zero or one comma one I either middle location, the grid in a factorized representation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 764.022,
    "end": 769.143,
    "text": " The grid could be represented as two orthogonal or independent hidden state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 769.303,
    "end": 777.425,
    "text": "One is something like the x displacement or the horizontal displacement, which now just takes three values, like which column of grid world are you in?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 778.185,
    "end": 784.307,
    "text": "And then vertical displacement or y position, which is something like which row of grid world am I in?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 785.509,
    "end": 794.216,
    "text": " And so now each hidden state is not a single nine dimensional vector, but it's actually a combination or a pair of two hidden state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 794.536,
    "end": 797.118,
    "text": "So two, three vectors instead of a single nine vector.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 798.789,
    "end": 804.815,
    "text": " And then a given hidden state itself is picked out by a coincidence of these two hidden state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 805.196,
    "end": 814.806,
    "text": "So if the X position is one and the Y position is two, then it means I'm in two or one comma two.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 814.866,
    "end": 817.929,
    "text": "So like the middle bottom of the of the grid world.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 819.952,
    "end": 828.0,
    "text": " And then once you do this, so once we have a factorized hidden state representation, it has implications for the way we construct the generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 828.4,
    "end": 839.911,
    "text": "So in a kind of simple generative model, you would just have one B array that in the original GridWorld example just is like nine possible hidden states, the nine possible locations of where I just was.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 840.672,
    "end": 843.516,
    "text": " that maps to the nine possible subsequent hidden states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 843.556,
    "end": 845.759,
    "text": "So the nine possible locations I could be going to.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 846.56,
    "end": 850.485,
    "text": "And then you'd have that nine by nine matrix conditioned on the different actions.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 851.266,
    "end": 858.736,
    "text": "So in the GridWorld demo, the actions are typically local, like move up, move left, move down, move right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 859.682,
    "end": 883.538,
    "text": " but once you factorize things you're going to actually now have a collection of b matrices and this is a consequence of the factorization across the transition models that we discussed a few slides ago so you're going to have one b matrix or one set of b arrays for the x displacement so how does the agent move in the x direction so these are what each of these x these x displacement",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 885.038,
    "end": 887.539,
    "text": " B matrices look like conditioned on different actions.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 887.619,
    "end": 889.3,
    "text": "So this is what it looks like for moving left.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 889.88,
    "end": 891.981,
    "text": "This is what the B matrix looks like for moving right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 892.521,
    "end": 893.821,
    "text": "And this is what it looks like for stay.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 894.282,
    "end": 901.964,
    "text": "And then similarly, you have another B matrix that encodes the agent's abilities to move in the vertical direction or Y displacement.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 902.404,
    "end": 909.607,
    "text": "And similarly, they actually look identical because the world is like rotation and translation invariant.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 911.226,
    "end": 928.047,
    "text": " And you'll have another smaller be array just for why movement, this is a very simple example we're not going to actually do this in code because it's kind of trivial but it's just an example of how instead of having a location only a new very representation, you can split that up into basically a y axis and an X axis.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 929.529,
    "end": 930.09,
    "text": "So now we're going to.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 930.711,
    "end": 940.716,
    "text": " We're not going to simulate an active inference agent, but we're just going to play around with these data structures to get you used to the idea of factorized representations and how that manifests in the code.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 941.357,
    "end": 942.717,
    "text": "So now we'll go over to Colab.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 943.998,
    "end": 949.181,
    "text": "So if you've been running this on your own, this should all be downloaded.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 950.381,
    "end": 953.283,
    "text": "So you've installed infractively-PyMdp.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 953.303,
    "end": 955.184,
    "text": "That's the whole name of the package.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 956.257,
    "end": 957.999,
    "text": " that's now in your environment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 958.259,
    "end": 964.465,
    "text": "And then you should also run this some basic imports like numpy and pyMdp, which is now in the environment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 966.447,
    "end": 970.572,
    "text": "Okay, and so the basic variables that you'll see are things like",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 972.1,
    "end": 990.98,
    "text": " yeah so there's a few variables that are almost always part of any PIMDP workflow and this is very much mirrored on how it's done in SPM in the DEM toolbox so typically you'll have a list that specifies the dimensionalities with a number of different levels of each hidden state factor so for our three",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 991.741,
    "end": 999.423,
    "text": " our 3 by 3 grid world, nine possible states, we have one x factor of three levels and one y factor of three levels.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1000.063,
    "end": 1004.004,
    "text": "And then the length of that list tells us the total number of hidden state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1004.484,
    "end": 1007.644,
    "text": "So in this case, we have two hidden state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1008.225,
    "end": 1012.465,
    "text": "And then similarly, you have hidden states are factorized.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1012.525,
    "end": 1015.546,
    "text": "And then similarly, you factorize your control states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1016.066,
    "end": 1019.187,
    "text": "So for every hidden state factor, there's also going to be a control state factor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1020.0,
    "end": 1028.587,
    "text": " And the fact that these are also three-dimensional each just basically means that the agent has three possible actions in the x-axis and three possible actions in the y-axis.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1029.087,
    "end": 1032.91,
    "text": "And then the number of control factors is also going to be two in that case.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1034.611,
    "end": 1044.88,
    "text": "And so we have some nice utility functions that can quickly build a B array given the two things that are necessary, the numStates and numControls variables.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1045.46,
    "end": 1048.843,
    "text": "So you just do initialize empty B.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1051.493,
    "end": 1054.375,
    "text": " B, numStates, numControls.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1055.815,
    "end": 1064.04,
    "text": "And then you'll have a B matrix that has the correct shapes and stuff.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1065.601,
    "end": 1071.884,
    "text": "So three rows, three columns, and three possible actions for the x direction and similarly for the y direction.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1071.924,
    "end": 1074.245,
    "text": "So this is just basic setting up your variables.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1078.86,
    "end": 1083.963,
    "text": " And often we'll have these solution cells that are hidden underneath each little quasi exercise.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1083.983,
    "end": 1086.005,
    "text": "So that's something you can do as well.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1088.426,
    "end": 1088.827,
    "text": "Okay.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1089.007,
    "end": 1092.309,
    "text": "And so that's just initializing an empty array, right?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1092.349,
    "end": 1097.913,
    "text": "So we don't actually know what those contingencies are that we saw in the slides.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1098.193,
    "end": 1099.634,
    "text": "But if we want to populate this thing,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1100.95,
    "end": 1105.174,
    "text": " So this is what each factor-specific B array looks like.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1105.214,
    "end": 1112.562,
    "text": "Then we have to go into these matrices and actually fill out the rows, columns, and third order slices with numbers.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1113.122,
    "end": 1123.432,
    "text": "So for instance, this loop where we loop over factors and we fill out the different entries of the B array, what this will do is just encode those local actions, like move left, move right,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1124.133,
    "end": 1142.768,
    "text": " for the x factor and then move up move down for the y factor and so once you've run that code you basically filled out all the numbers in that that big empty b array that you started and then you can use things like the plot likelihood function to to plot these uh likelihood distributions action conditioned likelihood distributions as",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1144.088,
    "end": 1165.167,
    "text": " matrices so this is move left for instance if we're in the x hidden state factor if we change this to a one we've changed the action index then this is move right and then similarly if we change this this is move down if we're doing action one here",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1170.432,
    "end": 1180.015,
    "text": " Oh, and just so darker colors, whether it's grayscale or red or whatever, almost unanimously in PyMDP, the darker colors represent more probability.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1180.215,
    "end": 1182.456,
    "text": "So that's just for.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1184.117,
    "end": 1187.438,
    "text": "So instead of having to display numbers, we'll just show darker numbers.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1188.553,
    "end": 1193.156,
    "text": " Okay, so now let's go back to the slides and talk about the A arrays.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1193.997,
    "end": 1211.309,
    "text": "So in our unfactorized fully enumerated grid world example, and again, I'll refer you to the documentation of PIME-BP if you want to play around with that example, the hidden state factors, which are just these nine kind of arbitrarily labeled locations,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1212.432,
    "end": 1220.162,
    "text": " map to an observation modality, which is like the agent's sensation of its own position, kind of a proprioceptive GPS modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1220.182,
    "end": 1223.327,
    "text": "You could think of it as like they're sensing where they are at any given time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1224.108,
    "end": 1228.774,
    "text": "And so there are various ways you could encode that, but let's just pretend that they have a",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1230.012,
    "end": 1231.873,
    "text": " a very high fidelity GPS.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1231.893,
    "end": 1236.816,
    "text": "So they're getting precise GPS readouts of where they are at any given time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1236.876,
    "end": 1242.64,
    "text": "So in a fully enumerated world, that A matrix, that likelihood modality would look like this.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1243.663,
    "end": 1255.246,
    "text": " When we start factorizing things, so splitting up the hidden state factors into an X factor and a Y factor, that choice not only manifests in the B arrays, but it also manifests in the structure of the A arrays.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1255.286,
    "end": 1265.669,
    "text": "And I think this is one of the most key things to understand, because when it comes to coding these things up yourself, understanding how these arrays are structured is really important to getting things working",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1267.289,
    "end": 1268.23,
    "text": " like successfully.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1269.191,
    "end": 1272.615,
    "text": "So it's basically getting used to multi-dimensional indexing.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1273.315,
    "end": 1283.665,
    "text": "So briefly, in summary, when you have multiple hidden state factors, that manifests as extra lagging dimensions or extra",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1284.465,
    "end": 1289.189,
    "text": " higher order dimensions in your A array.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1289.249,
    "end": 1291.691,
    "text": "So it's not really an A matrix anymore, it's an A tensor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1292.191,
    "end": 1296.595,
    "text": "So that means if you have two hidden state factors, the number of lagging dimensions, i.e.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1296.775,
    "end": 1300.839,
    "text": "excluding rows, that's what I mean when I say lagging dimensions, will be two.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1300.899,
    "end": 1303.661,
    "text": "So you have columns and slices in addition to rows.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1304.261,
    "end": 1310.467,
    "text": "So this is really important to understand when either using SPM or PyMDP to do POMDP-based active inference.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1311.277,
    "end": 1319.225,
    "text": " And another way of saying this is for each additional random variable that we're conditioning our observations on, we have an additional lagging dimension in our array.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1319.805,
    "end": 1327.713,
    "text": "So this is the same principle as with the B matrices because we condition the next state both on the past state and the past action.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1327.733,
    "end": 1329.595,
    "text": "That's why the B arrays are also tensors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1330.095,
    "end": 1335.48,
    "text": "So we have two extra dimensions in the B array, one for each conditioning variable, past state and past action.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1336.181,
    "end": 1348.03,
    "text": " So now in the x and y factorized grid world, we have two lagging dimensions, where the first lagging dimension, the columns in blue, index a particular x location.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1348.81,
    "end": 1354.434,
    "text": "And the second lagging dimension, the slices, if you will, index a particular y location.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1355.095,
    "end": 1359.918,
    "text": "So now what I'm going to do is unwrap these slices of the multidimensional A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1364.321,
    "end": 1384.677,
    "text": " And so you can see that each slice of the A matrix, so that each purple indexed third order slice corresponds to conditioning on a particular setting of y. So a particular conditional distribution over observations for the three settings of x for a fixed value of y. So each slice is exactly this conditional distribution.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1386.357,
    "end": 1394.597,
    "text": " where we're looking at the conditional distributions over observations for each setting of x. So those are the columns indexed by the blue numbers at the bottom.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1396.084,
    "end": 1402.93,
    "text": " But we're fixing to one value of y. So that's the conditional distribution over observations 0, 1, and 2.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1403.13,
    "end": 1417.123,
    "text": "So being in the top row, given that we're in the first row, y equals 0 for the three possible settings of x. And then we move down to this next set of observations and the next slice of y. And it looks like that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1417.884,
    "end": 1418.845,
    "text": "And then finally like that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1421.246,
    "end": 1428.011,
    "text": " So this is the case where our GPS is noiseless and high fidelity.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1428.051,
    "end": 1442.721,
    "text": "That's why we have hyper dark cells and then everything else is white is because the agent believes that its observations are high fidelity signals of the actual hidden state, namely the x comma y location.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1443.822,
    "end": 1445.363,
    "text": "So then when we pack these back together,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1446.837,
    "end": 1465.153,
    "text": " we see how this full A matrix or set of conditional distributions will be represented by a nine by three by three tensor, where again, each lagging dimension exists to encode the conditional dependencies between that particular hidden state factor indexed by the lagging dimension and the observations for this modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1465.894,
    "end": 1483.924,
    "text": " So when I index into the i-th column and the j-th slice of this A matrix or A tensor, I'm basically slicing out a particular conditional distribution over observations where I'm deciding what settings of the conditional distributions or the conditional random variables I'm interested in.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1487.306,
    "end": 1490.468,
    "text": "OK, so yeah, that's a kind of critical concept.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1490.528,
    "end": 1493.27,
    "text": "And to just make it more",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1494.861,
    "end": 1515.085,
    "text": " um tangible and clear and I mean to be clear this isn't the only way to encode conditional dependencies in categorical distributions but it's just the way that was originally uh used in SPM to encode these dependencies and then we just borrowed that convention when building a pine BP and it's pretty useful because it makes",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1515.822,
    "end": 1527.414,
    "text": " generating things like conditional expectations pretty straightforward using linear algebra operations like higher order dot products and stuff like that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1528.235,
    "end": 1538.485,
    "text": "So we have this kind of unwrapped representation of the ARA here, and we can use this to refer back to when we're building our ARA.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1540.511,
    "end": 1549.699,
    "text": " One thing I didn't mention that is also important is that in the same way we can factorize hidden states, we can factorize modalities so we'll have we'll talk about that in a second.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1550.339,
    "end": 1559.487,
    "text": "But just for now let's assume we have one single GPS sensing modality of nine possible levels of where I am in grid world so it's just a list of one number nine.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1560.325,
    "end": 1563.59,
    "text": " and then the number of modalities will trivially be one, the length of that list.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1564.391,
    "end": 1574.184,
    "text": "And then we can use similarly this utils initialize empty A array, which takes the number of observation modalities, their dimensions, and the number of hidden states,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1575.145,
    "end": 1582.207,
    "text": " And then it creates the A array with the proper dimensions and everything.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1582.947,
    "end": 1593.57,
    "text": "So I've also created this combined list called A location dims, which is a combination of the number of observation modality dimensions and the number of hidden state factor dimensions.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1593.93,
    "end": 1595.311,
    "text": "So that's, as we said, going to be 933.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1597.071,
    "end": 1608.34,
    "text": " And so then we can populate the entry of our first modality in the A matrix, which is trivially here the only modality, with a matrix of zeros.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1609.841,
    "end": 1613.563,
    "text": "This is actually what's happening under the hood in this thing, so we don't need to do it here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1614.624,
    "end": 1621.169,
    "text": "But then if we just run that, then we'll see that the shape of A0 is the same as A location divs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1625.174,
    "end": 1627.567,
    "text": " okay so that's just initializing it so we now have one",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1628.84,
    "end": 1633.563,
    "text": " a array that has one modality whose shape is 9 by 3 by 3.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1633.804,
    "end": 1636.466,
    "text": "And then we just go and fill it out like we saw up here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1637.226,
    "end": 1642.83,
    "text": "So I'm filling it out under the assumption of this noiseless, high-quality GPS sensor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1643.491,
    "end": 1654.799,
    "text": "So you can see when I'm indexing into the lagging dimension here, the y dimension, which is the third dimension of the tensor, I'm saying for this particular value of y, which is when y is 0,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1657.037,
    "end": 1666.262,
    "text": " we're in the first row of grid world, then the conditional distribution over the three settings of the GPS, given all the settings of X, is just an identity matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1666.282,
    "end": 1669.123,
    "text": "So I'm just coding that little chunk right there.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1669.623,
    "end": 1672.845,
    "text": "And then we can go through each of the slices iteratively and do that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1674.706,
    "end": 1684.571,
    "text": "So yeah, one of the things I think is a disadvantage currently of both PyMDP and the SPM is I think we need better ways to make people not have to do these",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1685.7,
    "end": 1690.363,
    "text": " multidimensional indexing operations to encode a particular conditional independency structure.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1690.403,
    "end": 1700.15,
    "text": "And I thought of ways to do that, but it's actually pretty hard to do that in a generic, flexible way where people can just come to the table with their own semantics and then all this gets done for them.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1700.55,
    "end": 1706.194,
    "text": "So for now, you still have to kind of do this by hand or write some algorithmic way to do it that's specific to your task.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1707.054,
    "end": 1709.276,
    "text": "But yeah, that's just something to mention.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1710.477,
    "end": 1711.738,
    "text": "It's not ideal that we have",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1712.458,
    "end": 1713.298,
    "text": " users doing this.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1713.418,
    "end": 1716.119,
    "text": "But at the moment, I can't really think of a better way to do it.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1718.2,
    "end": 1724.923,
    "text": "And then once we've encoded that, we can look at our little conditional distributions given different settings of y. And that's just one choice.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1724.943,
    "end": 1730.925,
    "text": "We could also condition on x and look at for all settings of y, x equals 0.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1734.226,
    "end": 1736.147,
    "text": "You can slice this up however you want, right?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1738.428,
    "end": 1740.989,
    "text": "That's just a visualization choice.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1747.148,
    "end": 1759.212,
    "text": " And these are our three collections of conditional distributions, one for each setting of y. OK, now let's go back to the slides.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1761.433,
    "end": 1768.736,
    "text": "Yeah, so one thing I didn't mention or I said I would mention is we just had a single observation modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1768.776,
    "end": 1770.997,
    "text": "But just as for hidden states, we can factorize",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1772.868,
    "end": 1775.49,
    "text": " and we don't have to fully enumerate our observation space.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1775.89,
    "end": 1780.512,
    "text": "So we can separate the grid GPS observations into an X and a Y GPS.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1781.153,
    "end": 1794.58,
    "text": "So now you're observing a pair of different observations at any given time, one X observation and one Y. So just like we had a separate B array for each hidden state factor, similarly, we now have a separate A array for each observation modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1795.14,
    "end": 1798.782,
    "text": "So we would populate one big A object array with these different",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1799.582,
    "end": 1801.483,
    "text": " modality-specific A-arrays.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1802.144,
    "end": 1807.967,
    "text": "So in this case, if we had X observations and Y observations, we would have two A subarrays.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1808.487,
    "end": 1817.733,
    "text": "Each one would have size three by three by three, because three observations, and then for the two possible states of the hidden state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1819.854,
    "end": 1823.156,
    "text": "So yeah, that wraps up the slides I had on",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1824.383,
    "end": 1831.228,
    "text": " multi-factor, multi-modality factorized representations and how that affects A and B arrays.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1832.109,
    "end": 1839.195,
    "text": "So before we move on to the contextual multi-armed bandit, let's open it up for questions or comments.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1839.615,
    "end": 1847.161,
    "text": "If anything was unclear and someone wants to contribute their own way of explaining something, I'm happy to talk about that now.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1850.103,
    "end": 1850.423,
    "text": "Awesome.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 1850.704,
    "end": 1853.586,
    "text": "Jakob, Ben, Adam, and Karl, if you'd like.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 1856.36,
    "end": 1859.782,
    "text": " Yeah, thanks a lot for the great overview.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 1859.882,
    "end": 1863.444,
    "text": "I had a question on initializing the B matrix.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 1864.024,
    "end": 1873.149,
    "text": "So in this case, we initialized it with the simplest policy, just all of the available actions the agent has.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 1873.909,
    "end": 1874.169,
    "text": "Is there",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 1876.636,
    "end": 1885.52,
    "text": " Would there be any particular use case in the GridWorld example where we would want to initialize it with a sequence of policies?",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 1885.92,
    "end": 1890.423,
    "text": "And is that needed if we want to do planning of different temporal depth?",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 1893.324,
    "end": 1897.026,
    "text": "So when you say sequence of policies, can you give me an example?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1898.172,
    "end": 1908.899,
    "text": " Instead of conditioning it on just move up, you would condition it on move up and down.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 1912.061,
    "end": 1914.262,
    "text": "Fixed sequences of actions.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 1916.063,
    "end": 1916.804,
    "text": "Right, right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1916.844,
    "end": 1918.845,
    "text": "That's interesting.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1919.085,
    "end": 1925.049,
    "text": "Typically, when we're building these transition likelihoods, this is more of a consequence of the fact that it's a POM",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1926.118,
    "end": 1929.959,
    "text": " a POMDP with an emphasis on the M. So it's Markovian.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1930.559,
    "end": 1942.603,
    "text": "So if you want to encode something like, what is the predicted next hidden state given I did move up and move down in the last two time steps?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1943.603,
    "end": 1952.346,
    "text": "If I'm understanding correctly, you're saying condition my B matrix, my next hidden state, on a sequence of two possible past actions.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1953.134,
    "end": 1966.337,
    "text": " Then we're breaking the Markov property of the dynamics because we're saying the next instance not just depends on what I did at the last time step and the state, but it depends on also what I did two time steps ago.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1966.897,
    "end": 1974.799,
    "text": "So now you have a higher order temporal dependence, like a semi-Markov model or really just not a Markov model, but a higher order model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1975.919,
    "end": 1979.42,
    "text": "And that's not something that's currently supported in PyMDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1979.48,
    "end": 1981.7,
    "text": "The natural way you get around that is by building",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1982.219,
    "end": 1983.259,
    "text": " a hierarchical model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1984.28,
    "end": 1991.042,
    "text": "So at each individual level of the hierarchy, you have a POMDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 1991.522,
    "end": 2003.326,
    "text": "But then when you look at a single layer, like the bottom layer of this hierarchical model, it is a semi-Markov model or non-Markovian if you take into account what all the other layers are doing.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2005.1,
    "end": 2010.025,
    "text": " But that's not currently supported at the level of a single Markov model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2010.045,
    "end": 2015.43,
    "text": "You can't build a B matrix that's dependent on more than what happened at the last time step.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2015.47,
    "end": 2022.936,
    "text": "It always has to... Yeah, you can't have an extra lagging dimension that encodes also what were they doing two time steps ago.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2025.439,
    "end": 2030.804,
    "text": "So that's one interpretation of... When you say policy, like up-down, I think of...",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2031.365,
    "end": 2036.726,
    "text": " two actions that happen in sequence.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2037.947,
    "end": 2052.451,
    "text": "But maybe another thing, and correct me if I'm reading too deeply into your question, another thing would be, can I have actions in a different control state factor affect the dynamics of a particular hidden state factor?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2052.491,
    "end": 2056.612,
    "text": "So say I had one hidden state factor, which is move up,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2058.13,
    "end": 2063.834,
    "text": " and another, or I said one factor, which is y displacement, another factor that's x displacement.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2064.294,
    "end": 2070.138,
    "text": "Can I have the dynamics of the y factor not just depend on my y action, but also on my x action?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2071.879,
    "end": 2081.285,
    "text": "So that's the idea of basically breaking this conditional, sorry, this independence property.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2082.226,
    "end": 2082.606,
    "text": "Where is it?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2082.706,
    "end": 2082.886,
    "text": "Here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2082.906,
    "end": 2084.187,
    "text": "I don't know.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2084.207,
    "end": 2086.029,
    "text": "Let me find it.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2086.429,
    "end": 2086.609,
    "text": "Here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2088.809,
    "end": 2101.695,
    "text": " So if you allowed the lower right shows that the dynamic, the state of one factor over time only depends on the state of that factor at the previous time step.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2102.135,
    "end": 2113.34,
    "text": "But if you said, I could also make this conditionally dependent on not just factor f, but say factor i or q at t minus 1.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2118.254,
    "end": 2130.802,
    "text": " This is something that's also not currently supported, but I think is an interesting idea, which is you would actually have interactions between maybe pairs of hidden state factors in hidden state space.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2131.503,
    "end": 2135.505,
    "text": "This actually can be accommodated under PyMDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2135.925,
    "end": 2142.169,
    "text": "Like mathematically, I haven't built in the functionality to do it, but I think there's nothing that stops you in principle from doing this.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2142.249,
    "end": 2145.992,
    "text": "So this would be as if I can have actions from different control factors",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2146.562,
    "end": 2150.465,
    "text": " all influencing the next state of one hidden state factor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2152.506,
    "end": 2161.953,
    "text": "And that is something that will probably make the message passing a little bit more, maybe not more complicated, but maybe its convergence properties wouldn't be as guaranteed.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2162.294,
    "end": 2165.536,
    "text": "I don't know what it looks because you're introducing weird loops in your graph.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2167.58,
    "end": 2169.684,
    "text": " in the fact graph that represents the generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2170.225,
    "end": 2173.33,
    "text": "But that's something in theory could be entertained.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2173.35,
    "end": 2175.613,
    "text": "But I don't know if that's actually what you had in mind.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2175.654,
    "end": 2180.261,
    "text": "Maybe you had more in mind of breaking the Markov property when you say condition them.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2181.664,
    "end": 2208.756,
    "text": " yeah it was um thank you for the answer it was more of a clarification also on the mathematical notation uh because uh pi uh is interpreted as policy which i guess can mean both individual actions and sequences of actions um so just wanted to clarify that yeah that's a good point so when i said pi up here i meant um",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 2210.484,
    "end": 2215.517,
    "text": " I meant, yeah, so if Pi was a sequence of actions,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2216.286,
    "end": 2225.769,
    "text": " any given time, the B matrix that you're indexing out is conditioned on the action that's entailed by the policy at that particular time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2226.249,
    "end": 2241.753,
    "text": "But the B matrix will never be entailed on what's going on in the full policy, but just by, okay, at time T, I take out this slice of the B matrix because at time T, this is the action entailed by this policy of sequence length H or something.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2242.394,
    "end": 2243.494,
    "text": "But yeah, that's a good point.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2243.514,
    "end": 2243.614,
    "text": "So",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2244.269,
    "end": 2248.513,
    "text": " In a trivial case, policy length is one, and it's just one action.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2250.234,
    "end": 2253.777,
    "text": "The policy is just an action that comes down to slice out the B matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2256.219,
    "end": 2256.84,
    "text": "Thanks, Jakob.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 2257.3,
    "end": 2259.522,
    "text": "Adam, anything you'd like to add, go for it.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 2260.263,
    "end": 2261.204,
    "text": "Yeah, a couple of follow-ups.",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2261.704,
    "end": 2263.726,
    "text": "Thank you for this very clear presentation, Connor.",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2263.766,
    "end": 2267.049,
    "text": "So first, just to follow on what Jakob just asked,",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2268.305,
    "end": 2282.155,
    "text": " It seems like another potential way if you wanted to do this sort of two-time step model would be to actually condenser or kind of permute those two time steps into a single variable.",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2282.995,
    "end": 2288.539,
    "text": "The same way that you could condense the row and column into a single nine-row",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2290.72,
    "end": 2314.57,
    "text": " vector or you can break it down into two could you similarly break down the last two moves and sort of combine them into a permutation of all possibilities of the last two moves and have those be the hidden states yeah uh you could do that as well I don't I haven't seen that actually done in practice the only thing is you'd have to actually have to somehow change the um",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2316.331,
    "end": 2333.744,
    "text": " You have to change the scheduling, I guess, of the message passing and the action to accommodate the fact that before I determine what my last hidden state was, I need to wait two time steps so I can get not only the proximal action I did, but also have this memory of the action two time steps ago.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2334.975,
    "end": 2343.457,
    "text": " Yeah, I was imagining that you'd have some special case for the first move where it's like undefined and then the last move.",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2343.617,
    "end": 2348.259,
    "text": "Then after that, you'd have the last two moves, a separate matrix for those or something.",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2349.519,
    "end": 2350.979,
    "text": "Yeah, like a moving window kind of.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2350.999,
    "end": 2353.34,
    "text": "So it's always remembering the last.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2353.36,
    "end": 2355.301,
    "text": "Yeah, I could see that working.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2356.441,
    "end": 2359.882,
    "text": "I think like the active, like kind of the canonical active inference",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2361.135,
    "end": 2377.783,
    "text": " answer to that is instead of having to kind of manufacture this special way of represent of basically baking memory into a Markovian system, the classical way to handle that is just to build a hierarchical model because the hierarchical model handles that memory easily by just having",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2379.705,
    "end": 2396.218,
    "text": " like nested Markovian processes, where if you were to look at a single process, it looks like it has memory, but that's just because its priors for its own Markovian process are evolving as a function of another POMDP that's operating at a slower timescale.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2396.338,
    "end": 2400.582,
    "text": "So I could imagine doing that exact thing that you're talking about if you had a",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2401.775,
    "end": 2405.617,
    "text": " low-level POMDP that was moving twice as fast as the top-level POMDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2405.957,
    "end": 2423.544,
    "text": "And so basically what the top-level POMDP is doing is setting an initial prior over one action that then allows this low-level POMDP to condition whatever it does next on a belief that whatever I do next, I know that I just took this action two time steps ago.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2423.884,
    "end": 2425.584,
    "text": "But you don't actually have to handcraft that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2425.664,
    "end": 2426.485,
    "text": "It's just by building",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2427.604,
    "end": 2451.578,
    "text": " uh one palm dp like within another palm dp um but i don't see that there's anything in principle going against what you're describing as well it's just yeah i like your approach a lot better yeah this is this is um i mean essentially what i learned from from working with carl was that like anytime you're trying to imbue a system with more complex non-markovian memory full dynamics",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2452.58,
    "end": 2460.333,
    "text": " or higher order dependencies, that's when the natural move is to go to a hierarchical model because it kind of handles it all naturally.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2462.377,
    "end": 2465.041,
    "text": "So my next question is about the",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2466.405,
    "end": 2482.28,
    "text": " what you were sort of tweaking in that formula just a couple minutes ago where you were suggesting the possibility that there could be feedback loops between the hidden states in theory, but as currently implemented, if I understood correctly, that's not the case.",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2482.32,
    "end": 2485.963,
    "text": "The state of one of the hidden states depends only on",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2489.907,
    "end": 2510.519,
    "text": " the previous states of that the previous state of that hidden state as currently now what i want to make yeah hidden factor what i want to make sure i understand is that is that also something about the markovian assumption or is that just sort of an implementation or design decision completely separate from the markov",
    "speaker": "SPEAKER_04"
  },
  {
    "start": 2512.253,
    "end": 2514.114,
    "text": " Yeah, that's a good question.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2514.134,
    "end": 2518.577,
    "text": "That's separate from the Markovian assumption.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2518.917,
    "end": 2531.284,
    "text": "So that's something having to do with just how the graph that represents the generative model, which you could think of as a Bayesian graph, like a bunch of nodes that affect a layer of observations.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2532.245,
    "end": 2534.866,
    "text": "So you say a bunch of hidden state nodes that all have",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2538.17,
    "end": 2542.852,
    "text": " all the observation nodes conditionally depend on the state of all the hidden state factor nodes.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2543.632,
    "end": 2551.895,
    "text": "By constructing it this way, you basically have a graph that it's very easy to do inference on that has stationary fixed points.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2551.915,
    "end": 2560.418,
    "text": "So the inference does not depend on initial conditions of the posteriors and things like that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2560.438,
    "end": 2566.681,
    "text": "The way the generic model is set up right now is like a bipartite graph that resembles a classic",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2567.601,
    "end": 2583.133,
    "text": " um uh model from machine learning called like a restricted Boltzmann machine so this is where all the hidden states can all affect one uh observation modality but there's no interactions between the observation layers so there's no",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2584.034,
    "end": 2589.98,
    "text": " lines going between observations within one modality, and there's also no lines going between hidden state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2590.36,
    "end": 2607.577,
    "text": "So that's kind of what one of the advantages of this assumption is, is when you have the hidden state factors be only dependent on their own past state and their own past action within that control factor, then you're not introducing these loops in the graph that make inference a little bit harder.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2608.177,
    "end": 2614.3,
    "text": " So you'll see this structure when people are using restricted Boltzmann machines or even deep neural networks.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2614.36,
    "end": 2623.466,
    "text": "It's very hard to get fixed point solutions for the posteriors when you have interactions between nodes in a single layer.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2624.306,
    "end": 2630.391,
    "text": " So it's not quite the same thing as the Markov property.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2630.411,
    "end": 2638.098,
    "text": "It has more having to do with generating an acyclic graph so you can do a fast, efficient, and fixed point inference on it.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2638.799,
    "end": 2642.281,
    "text": "I mean, that's my general answer to that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2642.402,
    "end": 2647.346,
    "text": "Because if you actually draw out the factor graph for these things, it looks like that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2647.406,
    "end": 2650.929,
    "text": "But there might be another reason this is done that I'm actually not aware of.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2652.379,
    "end": 2657.004,
    "text": " Maybe that's something that Carl would know, or someone else.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 2662.07,
    "end": 2668.316,
    "text": "If you want to add anything, Carl, otherwise... And then after this, we'll head into the script.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 2668.637,
    "end": 2669.217,
    "text": "Go for it, Carl.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 2669.237,
    "end": 2669.518,
    "text": "Thank you.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 2671.472,
    "end": 2675.874,
    "text": " Yeah, I think everything that needs to be said has already been said very, very clearly and very usefully.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2676.694,
    "end": 2678.615,
    "text": "But yes, Conor's absolutely right.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2679.696,
    "end": 2687.259,
    "text": "So I look at this in terms of the overall architecture of the graphical model you bring to the table.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2689.1,
    "end": 2690.941,
    "text": " It can only have a number of different attributes.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2691.422,
    "end": 2692.242,
    "text": "How deep is it?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2692.502,
    "end": 2693.823,
    "text": "How many levels does it have?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2694.604,
    "end": 2708.754,
    "text": "We're not in this presentation talking about deep MDP or generative models based upon hierarchically composed Markov decision processes.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2716.818,
    "end": 2741.245,
    "text": " below and that lends this attribute of depth to any given generative model but probably more important certainly from the point of view of the current discussion is the breadth and the breadth basically the number of conditionally independent factors in physics this is simply known as the mean field approximation it's you know it's just the factorization of a joint distribution in this instance",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2742.961,
    "end": 2760.027,
    "text": " what we're aiming for is an approximate post-trade distribution, but it's a factorization into conditionally independent factors that incidentally also induces certain Markov blankets and resolves a lot of the message passing and means that sort of variational iterations are more robust.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2760.367,
    "end": 2764.389,
    "text": "But from the point of view of why do you do that?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2764.469,
    "end": 2769.791,
    "text": "Well, you do that because to maximize the marginal likelihood of the evidence for your",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2770.29,
    "end": 2774.931,
    "text": " generative model, you have to carve the nature out there at its joints in the right kind of way.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2774.991,
    "end": 2789.035,
    "text": "So if the world you're trying to navigate or exchange with or explain does have this factorization, these conditional independences, it is carved in this way, then your model has to comply in order to have the maximum evidence.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2789.355,
    "end": 2797.437,
    "text": "So when learning that particular factorization or that structure, you would normally apply a process of basic model",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2797.517,
    "end": 2800.219,
    "text": " selection or structure alone to get the number of factors right.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2800.84,
    "end": 2806.884,
    "text": "And that is getting the right kind of mean field approximation apt for this world and these data.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2807.285,
    "end": 2819.254,
    "text": "And the right factorization will simply minimize variational free energy and therefore minimize the computational complexity and also the computational complexity expressed in terms of thermodynamics, for example.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2819.574,
    "end": 2821.276,
    "text": "So it's a really important sort of thing.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2822.036,
    "end": 2825.937,
    "text": " Just a couple of little endorsement comments.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2828.137,
    "end": 2835.359,
    "text": "Conditioning any one state with any one factor on states from other factors destroys that particular factorization.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2835.399,
    "end": 2838.239,
    "text": "So you don't have to worry about introducing loops and things.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2838.88,
    "end": 2850.662,
    "text": "All you're doing is saying that particular factorization has gone away, you've coarse-grained, and you now have to lump together all the elements of one factor and the other factor into one bigger factor, and now you've got a more coarse-grained factorization and",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2851.618,
    "end": 2864.368,
    "text": " a more mathematically complex model because you haven't done as many carvings to leverage the conditional independences that you're trying to model.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2865.609,
    "end": 2868.351,
    "text": "The first question about the policies, that was an interesting one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2868.671,
    "end": 2877.217,
    "text": "I suspect it may be an artifact of the way that we condition everything on pi without forewarning people.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2877.237,
    "end": 2879.399,
    "text": "Pi is actually quite a complicated variable",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2880.64,
    "end": 2887.924,
    "text": " First of all, it's basically an index or a name for quite a complicated combination of things.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2888.245,
    "end": 2899.191,
    "text": "So not only is it a sequence of actions upon which you condition each individual transition at any point in time, over time.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2899.252,
    "end": 2900.492,
    "text": "So it's a sequence of actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2900.532,
    "end": 2902.434,
    "text": "So in answer to Jacob's question,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2905.23,
    "end": 2921.689,
    "text": " energy is exploring lots and lots of different sequences as you roll out into the future um but also um induced by the factorization as Connor was saying um the that pie actually has to now entail",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2922.448,
    "end": 2927.23,
    "text": " an action for every factor of a fixed combination.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2927.69,
    "end": 2934.853,
    "text": "So if you change the combination of actions for two factors, you now have a different policy, even at one time step, even for one step ahead.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2935.173,
    "end": 2943.256,
    "text": "So the notion of a policy as a combination of actions is still in play when you have a",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2943.772,
    "end": 2946.875,
    "text": " factorized mean field approximation of the hidden states.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2947.336,
    "end": 2949.699,
    "text": "So it's a subtle point.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2950.219,
    "end": 2958.328,
    "text": "Usually one would resolve it by actually explicitly writing down, usually using the variable u, the thing that you're conditioning the state transitions on.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2958.768,
    "end": 2965.556,
    "text": "And then u comes from a family of combinations of u's over factors and over time.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2966.076,
    "end": 2976.1,
    "text": " so you can have deep and shallow policies, but even if you've got very shallow policies, one step ahead or one look ahead policies, there's still a subset of combinations of actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2976.6,
    "end": 2986.543,
    "text": "So it could be that you can either only move up or down, sorry, up or to the left, but you can't move diagonally, for example.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2987.384,
    "end": 2994.066,
    "text": "And that will be placed in terms of priors over pi, namely combinations of actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2996.573,
    "end": 2999.487,
    "text": " Oh, sorry, one final just for Adam's benefit.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2999.889,
    "end": 3000.612,
    "text": "That notion of...",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3002.984,
    "end": 3004.685,
    "text": " including semi-Markovian dynamics.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3004.745,
    "end": 3006.686,
    "text": "And again, Colin's absolutely right.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3006.806,
    "end": 3015.952,
    "text": "The way that, as a physicist, the way you do that is by appealing to the depth of the hierarchical model, which always entails time.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3015.972,
    "end": 3018.593,
    "text": "And that's an absolutely crucial observation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3019.294,
    "end": 3027.178,
    "text": "There's no point in adding depth to a generative model unless you are mindful it is introducing a separation of temporal timescales.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3027.198,
    "end": 3029.36,
    "text": "And I think that's a profound,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3030.22,
    "end": 3035.445,
    "text": " this sort of structural insight into the nature of generative models and has all sorts of implications.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3036.146,
    "end": 3047.057,
    "text": "But then you're just speaking to this notion of sort of having combinations or little histories or little caches of legacy states as, if you like, a super state.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3047.978,
    "end": 3053.183,
    "text": "Strictly speaking, that is exactly what is done effectively in continuous state space models.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3053.263,
    "end": 3054.223,
    "text": " with Kalman filters.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3054.263,
    "end": 3059.985,
    "text": "So you, you, you actually have now two kinds of random variables, the position and the velocity.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3060.565,
    "end": 3063.446,
    "text": "So you, you, you've now got a sort of dual representation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3063.866,
    "end": 3066.387,
    "text": "And if you generalize that, you get a generalized course of motion.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3066.487,
    "end": 3078.011,
    "text": "So, you know, um, um, and technically, um, when you're doing variational message passing, you now use something called a chef phase, uh, free energy as opposed to, which is a variant of variational free energy.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3078.031,
    "end": 3078.071,
    "text": "Um,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3079.42,
    "end": 3105.037,
    "text": " However, when you move to discrete state spaces, those generalised coordinates now actually are replaced just by having states that unfold in time under the probability transition matrix, so that you shouldn't in principle ever need to do that, but you can now regard, if you like, the little local history, the little packet or trajectory or orbit, the path that you're taking at this point, at this",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3105.097,
    "end": 3112.664,
    "text": " temporal scale as sufficiently discretized and coarse-grained with the different probability transition matrices.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3113.044,
    "end": 3116.287,
    "text": "And then at the slower timescale, then it's a succession of initial states.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3116.747,
    "end": 3118.629,
    "text": "That's normally how we would think about that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3118.829,
    "end": 3131.22,
    "text": "But it's an interesting game to think about what kinds of structures in these discrete states-based models echo the equivalent moves one has to make in continuous states-based",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3133.3,
    "end": 3161.61,
    "text": " i'm thinking here particularly of generalized filtering and basing smoothing and basing filtering and the like yeah thank you that's really it's really nice to have uh those afterthought like because that clarifies i think and justifies a lot of the preceding slides so what what carl just said um yeah that's that's a good i i so you can kind of map the depth of the hierarchy think of the depth of the hierarchy as a discretization of",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3162.549,
    "end": 3166.354,
    "text": " what is smoothly handled with generalized filtering and generalized coordinates of motion.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3167.835,
    "end": 3180.891,
    "text": "So states evolving at this POMDP are kind of like a quasi-velocity variable, because they are evolving slower than the position variable, which is like the low-level, faster clock POMDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3183.439,
    "end": 3212.138,
    "text": " One just tiny footnote there is it relates to the continuous and differentiable free energy landscape and the discretization that is required on modern digital hardware around sampling and the discretization problem on a continuous but hidden function and the approaches that we have to take to discretize the continuous nature of time especially.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 3214.491,
    "end": 3215.011,
    "text": " Absolutely.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3219.513,
    "end": 3219.934,
    "text": "Okay.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3222.075,
    "end": 3226.917,
    "text": "So I think we should proceed to the multi on bandit.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3229.218,
    "end": 3237.582,
    "text": "Okay, so now having discussed these kind of factorized representations, we're in a position to build our multi factor generative model for",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3238.12,
    "end": 3241.743,
    "text": " what I'm calling a contextual two-armed bandit or contextual multi-armed bandit.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3242.143,
    "end": 3261.1,
    "text": "This is coming from the reinforcement learning literature, this term contextual, but it's based directly on a kind of gambling task that was introduced in Ryan Smith, Christopher White, Carl Friston's step-by-step tutorial on active inference.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3261.56,
    "end": 3265.804,
    "text": "So you basically have a multi-armed bandit, two-armed bandit, but you have to first find a clue",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3266.744,
    "end": 3274.273,
    "text": " or forage information to figure out which of the two slot machines or arms of the bandit is more favorable.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3274.673,
    "end": 3281.341,
    "text": "And this is echoed as well in the original tea maze example, where you have a rat that has to choose between two arms",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3282.077,
    "end": 3285.14,
    "text": " one is more rewarding than the other, but you don't know which one is rewarding.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3285.18,
    "end": 3292.326,
    "text": "So you have to visit a informative queue state first that tells you the left one is rewarding right now, or the right one is rewarding.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3292.626,
    "end": 3303.476,
    "text": "So this, I'm just kind of gathering all these things into the term contextual bandit, because that's kind of analogous term for this problem that you'll find in like reinforcement learning world.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3303.496,
    "end": 3304.897,
    "text": "Okay.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3308.14,
    "end": 3316.663,
    "text": " So in the multi-armed bandit or two-armed bandit task, an agent has to choose to play one of two slot machines, and they can only play one at a time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3317.063,
    "end": 3321.824,
    "text": "So one of the slot machines gives more reward than the other, but the agent doesn't know which is the better one.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3322.305,
    "end": 3329.267,
    "text": "So at any given time, the agent can choose to play the left or the right machine, that's what we'll call them, or can choose to ask for a hint.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3330.345,
    "end": 3337.33,
    "text": " And if it chooses to ask for a hint instead of playing the machine, it receives information about which of the two slot machines is better.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3337.79,
    "end": 3343.934,
    "text": "So this already sets up the basic dilemma of tasks like this, the so-called explore-exploit dilemma.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3344.474,
    "end": 3348.417,
    "text": "So you first forge for information that will ultimately lead to getting more reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3348.937,
    "end": 3359.139,
    "text": " Or do you gamble immediately in order to get rewards sooner, but at the risk of not having enough information to know which slot machine I should actually play?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3359.879,
    "end": 3367.821,
    "text": "So to encode this task structure into a generative model for a POMDP, we equip the agent with three observation modalities.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3368.201,
    "end": 3373.923,
    "text": "First, we have this hint modality, which is the sensory channel the agent uses to perceive the hint.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3374.023,
    "end": 3375.463,
    "text": "So just what is the state of the hint?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3376.283,
    "end": 3381.586,
    "text": " Then there's a reward modality, which tells the agent whether it won or lost at the selected machine.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3382.246,
    "end": 3388.87,
    "text": "And then finally, there's a choice modality, which is just the agent's proprioceptive observation of its own choice.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3389.851,
    "end": 3394.013,
    "text": "This is equivalent to the GPS modality that we were working with in GridWorld.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3394.033,
    "end": 3402.818,
    "text": "And in terms of hidden state factors, we first have a context factor, which is a binary variable encoding which slot machine is the more rewarding one.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3404.014,
    "end": 3407.097,
    "text": " either the left machine is better or the right machine is better.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3407.137,
    "end": 3409.499,
    "text": "So those are the names of the two context variables.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3410.18,
    "end": 3414.424,
    "text": "You could just arbitrary enable them like context A, context B, or something like that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3414.924,
    "end": 3420.81,
    "text": "And then we have a choice hidden state factor, which is simply encoding the choice state that the agent currently occupies.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3422.382,
    "end": 3428.185,
    "text": " And finally, as Carl was just explaining, for each hidden state factor, you also have a control factor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3428.746,
    "end": 3446.055,
    "text": "So we'll have a context control factor, which as we'll see is trivial since the agent can't control the context in this particular simulation, and a choice control factor, which is the control factor that allows the agent to model its own actions or choices.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3446.776,
    "end": 3450.778,
    "text": "So even for a shallow policy horizon, as Carl was explaining,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3452.037,
    "end": 3478.673,
    "text": " a policy will still be comprised of two actions so it'll be there'll be a context action and a choice action but as we'll see the context action will always be to do nothing or basically to not be able to interfere in the dynamics of the context hidden state factors so basically action selection comes down to just choosing the state of the choice control factor on that u choice variable so now we're going to look at the different levels of the hidden state factors",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3479.901,
    "end": 3485.542,
    "text": " So as we said, the context one is a binary, or you could think of it as like a Bernoulli variable.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3485.622,
    "end": 3487.843,
    "text": "So it's either left better, right better.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3487.863,
    "end": 3490.943,
    "text": "It's a distribution over these two states of the context.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3491.703,
    "end": 3494.884,
    "text": "And this is just the unchanging state of the world for a particular trial.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3494.964,
    "end": 3498.625,
    "text": "Either left machine has a better payoff probability or the right one does.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3499.425,
    "end": 3504.986,
    "text": "And then the choice hidden state factor has four levels, which correspond to the four possible choice states that the agent can be in.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3505.566,
    "end": 3507.747,
    "text": "So this can either be the neutral starting location",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3508.75,
    "end": 3513.913,
    "text": " the hint state, which is the location they occupy when they're acquiring the hint.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3515.293,
    "end": 3518.195,
    "text": "Or they can be playing the left machine, or they can be playing the right machine.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3518.795,
    "end": 3520.516,
    "text": "And so now for the control state factors.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3522.077,
    "end": 3524.758,
    "text": "The control state factor for the context only has one level.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3525.358,
    "end": 3531.881,
    "text": "You can call it do nothing, or it's just a trivial one-dimensional variable, and the agent will always take this action with 100% probability.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3533.686,
    "end": 3543.692,
    "text": " So, in other words, the agent has no control over the state of the context and then the choice control state has four levels corresponding to the decision to change.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3544.953,
    "end": 3555.4,
    "text": "The s choice the hidden state factor for the choice state in one of four different ways either can move to the start location, it can move to the hint location.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3556.092,
    "end": 3558.434,
    "text": " it can play the left machine or it can play the right machine.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3559.014,
    "end": 3568.441,
    "text": "So what choice state the agent is in is kind of obviously under the agent's control, which is encoded by the fact that this U choice variable has four levels.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3569.902,
    "end": 3584.132,
    "text": "So optimizing a posterior distribution over this choice control state factor, that's what action selection and planning boils down to, is basically choosing what level of U choice I'm inferring",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3584.591,
    "end": 3591.194,
    "text": " what the distribution over U choice is, and then sampling or taking the argmax of that distribution to actually make an action.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3592.735,
    "end": 3595.756,
    "text": "Okay, so now let's review the observation modalities and their different levels.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3596.136,
    "end": 3605.3,
    "text": "The first modality is the hint modality, which can either give the outcomes of null, like I'm not at the hint state, so I'm getting no sensory information from that channel.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3606.18,
    "end": 3607.781,
    "text": "A left is better hint.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3608.41,
    "end": 3610.414,
    "text": " hint left or right is better hint.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3611.115,
    "end": 3620.011,
    "text": "And they're just named that because we'll see in the A matrix how seeing that observation relates to seeing the state of the context.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3622.315,
    "end": 3630.462,
    "text": " We have the null observation because, as I said, if the agent isn't in the choice state of getting a hint, it still needs to receive some information from that modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3630.863,
    "end": 3646.076,
    "text": "So that's why we often have in both the SPM and the PIME VPN implementations, we have this null observation that just encodes an observation that has no information about hidden states within some particular factor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3646.917,
    "end": 3649.499,
    "text": "And then we have a reward modality, which similarly",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3650.182,
    "end": 3658.168,
    "text": " has a null observation for when the agent isn't playing either slot machine, and then two possible reward observations, either a loss or a reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3658.569,
    "end": 3662.732,
    "text": "But this is a choice that depends on what you're trying to do.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3662.752,
    "end": 3668.176,
    "text": "You could also make a reward have like 10 different reward levels that have different like magnitudes of reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3668.236,
    "end": 3671.919,
    "text": "It's just a choice to call these like loss and reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3672.019,
    "end": 3674.661,
    "text": "The point being that one is preferred relative to the other.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3675.694,
    "end": 3682.879,
    "text": " And then finally, we have the choice modality, which just allows the agent to unambiguously infer what choice state it's in.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3682.919,
    "end": 3686.481,
    "text": "So it just allows it to infer what it's doing.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3686.802,
    "end": 3690.764,
    "text": "And this is important because remember, in active inference, everything has to be inferred.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3691.345,
    "end": 3695.768,
    "text": "Everything is in the game of minimizing free energy and",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3696.648,
    "end": 3709.709,
    "text": " um coming up with uh posteriors approximate beliefs about the state of the world including your own choice state so that's why we often equip agents with a proprioceptive sense of where where i am like a gps",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3711.067,
    "end": 3730.506,
    "text": " um yeah okay and and so that that's the three observation modalities we've done the hidden states and the controls so now we're in a position to start building the a arrays for this agent's generative model so for each modality specific a array we're going to have as many rows as there are levels of that modality and then two columns and four slices",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3731.209,
    "end": 3732.97,
    "text": " And so why is it two columns, four slices?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3733.03,
    "end": 3741.954,
    "text": "Because each column corresponds to a setting of the context hidden state factor, and each third order slice corresponds to a setting of the choice state hidden state factor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3742.594,
    "end": 3750.998,
    "text": "And these lagging dimensions of two columns, four slices will be the same for every single A matrix, not the values in them, but that shape.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3751.499,
    "end": 3760.043,
    "text": "So the only thing that will change across modalities, the modality-specific A arrays, is the number of rows, which is the number of observation levels.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3761.003,
    "end": 3772.251,
    "text": " So for the hint modality, each slice of this A matrix tells us the mapping between the two possible context states and the observations in the hint modality for a fixed choice state that the agent could be in.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3772.952,
    "end": 3788.163,
    "text": "So for instance, if the agent is in the start choice state, what we're seeing now, regardless of whether the left or the right machine is better, the agent will always get the null observation, which has zero information about the state of the context, as you can see, because given an observation of the null observation,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3788.658,
    "end": 3792.681,
    "text": " observation in the hint modality, you have no idea whether the left is better or the right is better.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3793.441,
    "end": 3802.607,
    "text": "However, if the agent is in the visit a hint state or acquire a hint state, then the mapping between the context state and the two hint observations will be informative.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3803.325,
    "end": 3812.091,
    "text": " And when I say informative, I just mean that the columns of this matrix will be independent from each other, and they will be low entropy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3812.131,
    "end": 3818.175,
    "text": "So another way of saying that is that there will be low entropy in the observation-conditioned rows of the matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3818.755,
    "end": 3824.299,
    "text": "So briefly, what we're seeing here, where gray scale, darker colors means more probability.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3825.737,
    "end": 3832.64,
    "text": " If the slot left's machine is better, that's the context, then the agent is more likely to see the hint left observation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3832.72,
    "end": 3837.443,
    "text": "And if the right machine is better, they're more likely to see the hint right observation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3837.943,
    "end": 3842.425,
    "text": "So this slice of the A matrix is what gives those observation levels their meaning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3842.585,
    "end": 3849.869,
    "text": "The very reason they're called hint left and hint right is just because of the kind of diagonal structure in this slice of the matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3850.469,
    "end": 3852.37,
    "text": "And then finally, for the other states,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3853.879,
    "end": 3858.962,
    "text": " If I'm playing the left or the right machine, I'm never getting any informative observations from this modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3861.764,
    "end": 3864.426,
    "text": "Okay, and then we move on to the reward modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3864.726,
    "end": 3868.028,
    "text": "So again, two columns and four slices, like for all the ARAs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3868.408,
    "end": 3872.851,
    "text": "But now we're looking at the mapping between the two contexts and the reward observation levels.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3873.471,
    "end": 3877.574,
    "text": "So no loss reward for each possible choice state the agent can be in.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3878.194,
    "end": 3881.476,
    "text": "So as we can see, if the agent is in starting location or getting the hint,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3882.159,
    "end": 3885.32,
    "text": " they're not getting any reward observation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3885.361,
    "end": 3888.422,
    "text": "They get the trivial, meaningless, null observation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3888.502,
    "end": 3900.488,
    "text": "However, if the agent is playing the left or the right machine, there's a probabilistic mapping between the context, the left machine or the right machine being better, and the expected reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3900.528,
    "end": 3907.391,
    "text": "So if the context is left is better, then the agent is more likely to see the reward if and only if they're playing the left machine.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3908.973,
    "end": 3913.236,
    "text": " Likewise, if they're playing the right machine, this matrix is the same.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3913.316,
    "end": 3916.018,
    "text": "So if you're playing right, then you're more likely to see reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3916.578,
    "end": 3923.163,
    "text": "So this sub-matrix within this big A tensor is what determines the payoff structure of the task.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3926.705,
    "end": 3929.907,
    "text": "Or the agent's beliefs about that payoff structure, I should say, because this is the A array.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3929.967,
    "end": 3932.349,
    "text": "It's not the actual rules of the game.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3933.049,
    "end": 3937.773,
    "text": "So now we're finally up to the choice modality, which again is just their observation of their own",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3939.029,
    "end": 3945.394,
    "text": " choice state, which you can see only depends on the state of the choice that they're making.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3945.474,
    "end": 3946.896,
    "text": "It doesn't depend on the context.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3947.196,
    "end": 3955.963,
    "text": "So it just means that they'll always unambiguously infer whether they're playing the right machine or they're in the start state or whatnot.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3956.904,
    "end": 3961.007,
    "text": "So this is just an example of going through those slices and really seeing how that looks.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3961.547,
    "end": 3963.809,
    "text": "So now we can code this up in Colab.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3964.85,
    "end": 3966.591,
    "text": "And again, we won't be doing it by hand.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3966.611,
    "end": 3967.132,
    "text": "We'll just be",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3969.722,
    "end": 3997.29,
    "text": " um we'll just be running some predefined code so one useful thing to do often with control factors and observation modalities is get some semantic labels like create a list of strings for instance so the context names will have these two states left better right better choice names will have these four possible states and then we can automatically create these lists of dimensions that are needed to create your a and b matrices just by looking at things like the length",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 3997.95,
    "end": 4001.191,
    "text": " of this list of strings or the length of this list of choice names.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4001.871,
    "end": 4013.055,
    "text": "So if you run this, then we'll have our numStates variable, which will be two possible contexts and four possible choice states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4013.095,
    "end": 4020.098,
    "text": "And then you'll have numObs, which will be three possible hints, three possible rewards, and four",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4021.016,
    "end": 4024.259,
    "text": " appropriate receptive location or choice state observations.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4024.6,
    "end": 4027.582,
    "text": "And then we can use this function to initialize our empty A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4028.483,
    "end": 4034.509,
    "text": "And then the next few chunks of code basically just fill out these A matrices like we saw in the slides.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4036.591,
    "end": 4039.614,
    "text": "So one thing we'll do is we will have two parameters.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4039.634,
    "end": 4040.915,
    "text": "And this is, again, arbitrary.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4040.935,
    "end": 4042.537,
    "text": "You can choose to do this however you want.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4042.99,
    "end": 4061.697,
    "text": " will parameterize the A matrix with a probability of hint or a hint accuracy, which will effectively just fill out that slice of the hint modality A array that corresponds to how accurately the hint signal indicates the context or lends evidence to the context.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4062.037,
    "end": 4069.86,
    "text": "So if the hint is 100 is 1.0, p hint is 1.0, it means whenever they visit the hint state, they immediately know, OK, the left arm is better.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4071.122,
    "end": 4073.343,
    "text": " But this doesn't have to be 100%, right?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4073.383,
    "end": 4076.564,
    "text": "The hint itself could have some noise or uncertainty associated with it.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4076.944,
    "end": 4078.904,
    "text": "So we'll parameterize that just with this probability.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4081.025,
    "end": 4087.067,
    "text": "So this is the probability of the two hint types for the two game states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4087.107,
    "end": 4089.147,
    "text": "And you see the null has zero probability.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4089.207,
    "end": 4095.429,
    "text": "And then hint left has more probability when the context is left, indicated by the column.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4095.789,
    "end": 4098.31,
    "text": "And then hint right has more probability when the context is right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4099.684,
    "end": 4103.026,
    "text": " And then we'll just go through and fill out this choice stuff.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4103.687,
    "end": 4107.369,
    "text": "Oh, the reward modality will have a similar thing, a P reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4107.409,
    "end": 4111.753,
    "text": "So this will determine the payoff structure of both banded arms.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4112.233,
    "end": 4122.04,
    "text": "So if P reward is high, it means if the context is left is better and you're playing the left slot machine, you'll have an 80% chance of getting the reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4122.901,
    "end": 4127.664,
    "text": "And this thing itself can be changed to determine basically how",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4128.424,
    "end": 4129.845,
    "text": " how rewarding the bandits are.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4133.569,
    "end": 4134.91,
    "text": "So this is the payoff structure.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4135.671,
    "end": 4138.954,
    "text": "If you're playing the left arm, the payoff structure for the two contexts.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4139.014,
    "end": 4140.996,
    "text": "And there's an inverseness that I didn't discuss.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4141.016,
    "end": 4153.327,
    "text": "So if I'm playing the left arm but the right arm is better, then I'm also more likely symmetrically to get punishment or negative reward with the same probability that I would get positive reward if I was playing the right arm.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4153.683,
    "end": 4158.744,
    "text": " So that's also a choice, but just to make this a single parameter, that's how we did it here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4159.704,
    "end": 4165.686,
    "text": "And then finally, the choice observation modality is just filling out that high fidelity GPS sensor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4167.806,
    "end": 4181.99,
    "text": "And that's pretty, if you slice it along any context hidden state factor, since it doesn't depend on context, this could be a 0 or a 1, then we'll get an identity mapping, which just allows them to infer their choice state.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4182.878,
    "end": 4184.659,
    "text": " And then we wrap this all into one function.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4184.699,
    "end": 4187.221,
    "text": "So we just have two parameters, P hint, P reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4187.742,
    "end": 4193.046,
    "text": "And then we can see once we start doing simulations how manipulating those things messes with their behavior.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4195.348,
    "end": 4196.789,
    "text": "So now we'll move on to the B arrays.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4198.37,
    "end": 4199.011,
    "text": "Oh, yeah.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4199.031,
    "end": 4201.793,
    "text": "So let me go here and talk through some slides.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4201.813,
    "end": 4202.473,
    "text": "This will be quick.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4202.513,
    "end": 4203.574,
    "text": "The B arrays are pretty simple.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4204.635,
    "end": 4209.019,
    "text": "So we're going to mess with this later, but we're going to start by saying that",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4209.915,
    "end": 4213.197,
    "text": " the context hidden state factor is stationary over time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4213.237,
    "end": 4216.819,
    "text": "So they can't change that hidden state factor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4217.36,
    "end": 4224.304,
    "text": "And even in the absence of their ability to intervene, it stays in the same state over time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4224.544,
    "end": 4232.849,
    "text": "So we parameterize this with a p change probability that just fills out the diagonal of this kind of trivial transition matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4233.342,
    "end": 4234.942,
    "text": " with 100% probability.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4234.982,
    "end": 4242.084,
    "text": "But later on, we can mess with that parameter and decrease it so they believe that the context can actually change with some stochasticity over time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4244.225,
    "end": 4247.126,
    "text": "But for now, we just assume they don't believe the context changes.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4249.106,
    "end": 4255.608,
    "text": "And then this is their ability to... So unlike GridWorld, where you have local actions, they can only move up, down, left, right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4256.331,
    "end": 4259.213,
    "text": " Here, they can move from any other state to any other state.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4259.313,
    "end": 4261.594,
    "text": "So this is like a signature thing.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4261.794,
    "end": 4275.121,
    "text": "If you want a controllable hidden state space so the agent can go anywhere from any other place, that will manifest as these dark bands in your B matrix or bands of 100% probability.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4275.642,
    "end": 4281.165,
    "text": "So this is another way of saying that the transition graph is fully connected, that you can get anywhere from anywhere.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4282.912,
    "end": 4284.414,
    "text": " But that's also not sure.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4284.434,
    "end": 4288.397,
    "text": "We could have made it such that once they leave the start state, they can't return there.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4288.957,
    "end": 4293.701,
    "text": "So that would correspond to having the absence of one of these.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4295.763,
    "end": 4303.869,
    "text": "Basically, the start state is a source, but it can't also be a sink, or there's no in arrows going to it.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4304.369,
    "end": 4305.951,
    "text": "So that would affect the structure of this.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4307.692,
    "end": 4309.874,
    "text": "OK, and then we can quickly code that up.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4313.912,
    "end": 4331.455,
    "text": " um so b0 is the context hidden state which as we said is just going to be stationarity and then the choice hidden state is this fully controllable and then we will parameterize this all as a create b function which will for now have this p change thing so we can make the",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4332.356,
    "end": 4338.584,
    "text": " agent's belief about the stationary of the context different, like if the context is likely to change.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4338.624,
    "end": 4346.293,
    "text": "But for now, by setting it to zero, it just means that they believe the context is fixed for a given trial or set of time points.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4347.472,
    "end": 4373.307,
    "text": " then finally very basic stuff this is just how we establish the semantics of the reward modality so the reward modality is as we said the null the loss and the reward and we can encode the c vector which is kind of like the reward function um the prior preferences or prior over observations directly in terms of log relative log probabilities so we can encode punishment by having",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4373.715,
    "end": 4386.539,
    "text": " the prior expectation about loss be much lower in relative log, in natural log units, much lower than the reward observation within that modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4386.599,
    "end": 4390.121,
    "text": "And then the other ones are just going to be uniform distribution, so you can leave them empty.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4392.321,
    "end": 4397.063,
    "text": "And this is just what allows them to want to see reward as opposed to loss or punishment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4398.334,
    "end": 4404.001,
    "text": " And yeah, so just as I think we discussed this last time, Daphne had a question about that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4404.041,
    "end": 4410.57,
    "text": "So why do we encode things in relative log probabilities rather than sheer probabilities?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4410.63,
    "end": 4414.215,
    "text": "It's just more analogous to the reward construct from reinforcement learning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4414.235,
    "end": 4414.996,
    "text": "That's one benefit.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4415.756,
    "end": 4416.597,
    "text": " And they're unbounded.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4417.418,
    "end": 4418.939,
    "text": "They don't have to be bounded between 0 and 1.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4419.179,
    "end": 4430.067,
    "text": "So if you just encode them that way, it becomes easier to make one thing x times more rewarding or punish or aversive than another thing.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4430.487,
    "end": 4433.769,
    "text": "And that directly relates to how reward is calculated in",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4434.85,
    "end": 4449.869,
    "text": " or expected utility of the expected free energy is because it's always kind of an expected it's kind of like an entropy or a cross entropy so it's always um it's you its units are in in natural log space okay so yeah",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4450.736,
    "end": 4455.08,
    "text": " And then the D vector, again, they can have prior beliefs about which context is better.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4455.78,
    "end": 4468.09,
    "text": "So that will also be a collection of vectors, one over the context factor and one over the initial state of where they are, which we can make it start, but it doesn't really matter because they have precise observations.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4469.311,
    "end": 4471.473,
    "text": "And then that's very easy to do in PIMEDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4472.794,
    "end": 4478.919,
    "text": "We'll just create some functions that parameterize how rewarding the reward observation is and how punishing the",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4479.377,
    "end": 4480.397,
    "text": " punishment observation is.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4480.417,
    "end": 4482.759,
    "text": "And then we can plot those.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4483.039,
    "end": 4484.119,
    "text": "And this could be 10.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4485.14,
    "end": 4501.127,
    "text": "And then the reward is much better than the punishment, or the punishment could be very bad, in which case the punishment is much, much lower than both the null and the reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4501.147,
    "end": 4505.429,
    "text": "And here I'm showing the prior directly in terms of probabilities.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4506.058,
    "end": 4510.221,
    "text": " So when you convert the log probabilities to probabilities, these things will become bounded between 0 and 1.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4512.763,
    "end": 4513.223,
    "text": "OK.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4513.424,
    "end": 4524.392,
    "text": "And then the D vector similarly will just create a quick function that parameterizes how much they believe the left is better context is true at the beginning of the simulation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4524.992,
    "end": 4531.157,
    "text": "And if you just set that to 0.5, it means they have flat, unbiased, uninformed prior beliefs about the context.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4534.304,
    "end": 4559.428,
    "text": " um yes okay all right so now i think we are good to actually do this after all the build up um so like 95 of the work is in encoding the generative model and this is something carl will tell you as well spm like most of the work is not actually running active inference maybe computation wise it is",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4560.011,
    "end": 4565.516,
    "text": " But in terms of the time and the intellectual energy spent, it all comes down to the generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4565.536,
    "end": 4566.777,
    "text": "That's where all the information is.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4567.118,
    "end": 4570.701,
    "text": "The rest is just optimization, basically.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4570.721,
    "end": 4572.583,
    "text": "So we've written down our A, B, Cs, and Ds.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4572.963,
    "end": 4577.347,
    "text": "Then we just basically plug them into this agent API from PyMDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4577.887,
    "end": 4583.593,
    "text": "And then we create an environment class, which could be something as",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4585.274,
    "end": 4613.253,
    "text": " uh ad hoc as i'm getting a list of observations from some like api that's talking to the internet or like from a robot sensors or you can actually write down an environment class that generates observations like like another agent for instance um and then you plug the observations from the environment into the infer states function you do infer policies and then you sample an action according to the expected free energy stuff that we talked about uh last time",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4614.724,
    "end": 4618.449,
    "text": " Okay, so now we're actually going to do this.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4619.31,
    "end": 4629.886,
    "text": "So we have our nice nifty functions for creating A, B, C, and D. We can just run those with desired levels of P hint and P reward, and then create our agent.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4630.868,
    "end": 4637.43,
    "text": " And this is something we discussed last time, but an important distinction is the generative model versus the generative process or the environment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4637.93,
    "end": 4647.493,
    "text": "So the things we're putting in A and B right now and C are just the agent's beliefs about, for instance, the hint accuracy or the payoff matrix of reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4647.873,
    "end": 4651.954,
    "text": "That can be arbitrarily different from the actual structure of the environment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4652.654,
    "end": 4656.396,
    "text": " And later, we'll see how you can adjust.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4656.556,
    "end": 4660.838,
    "text": "The agent can actually learn the correct reward statistics through a process of learning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4660.878,
    "end": 4669.163,
    "text": "So even if they start out with the wrong generative model, they can adapt their generative model online so that they match the generative process better.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4671.354,
    "end": 4671.674,
    "text": " Okay.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4671.954,
    "end": 4678.417,
    "text": "And then we'll define this quick class, the two arm bandit, which will be the generative process, the real world for our agent.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4678.997,
    "end": 4682.119,
    "text": "We're not going to step through the code, but the link is available.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4682.159,
    "end": 4686.3,
    "text": "So if anyone wants to look at this, this is basically just encoding the rules of the game.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4686.36,
    "end": 4694.584,
    "text": "So when the agent is in the left arm, they'll get reward or loss depending on the P reward and P hint values.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4694.664,
    "end": 4700.206,
    "text": "And as we said, these values can be different than the agent's beliefs about them, which will be in their A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4701.721,
    "end": 4704.084,
    "text": " So this is the generative process, the actual reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4704.624,
    "end": 4709.169,
    "text": "And then the generative model are the parameters you give to the A constructor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4712.574,
    "end": 4716.916,
    "text": " And then we'll just have a function here that runs the active inference loop.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4717.496,
    "end": 4725.519,
    "text": "It looks a little bit more complicated than those three lines I showed on the slide, but that's just because I'm storing things like the history of their choices, the history of their beliefs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4726.679,
    "end": 4732.801,
    "text": "I'm having optional plotting of beliefs, things like that, and plotting of actions.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4734.322,
    "end": 4740.184,
    "text": "But this function, basically, the key things are you get an observation from the",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4741.283,
    "end": 4744.705,
    "text": " You start with an observation, which will be from the generative process.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4745.386,
    "end": 4749.828,
    "text": "You do hidden state inference using that observation to get your posterior over hidden states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4750.689,
    "end": 4753.731,
    "text": "And this you can return if you want to plot it, but you don't have to.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4754.591,
    "end": 4756.952,
    "text": "And then you'll do inference about policy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4756.993,
    "end": 4765.738,
    "text": "So this is optimization of a posterior over policies, which then gets translated into a marginal posterior over control states or action that you sample from.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4767.675,
    "end": 4770.658,
    "text": " and you sample from them if this next line with the sample action.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4770.698,
    "end": 4784.068,
    "text": "So the main three lines of any active inference process are inference about states, inference about policies, and then action selection, which can be either deterministic or stochastic depending on your application.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4784.589,
    "end": 4793.896,
    "text": "And then the rest is just basically code that converts observations from the generative process into like the terms that the agent can understand and vice versa.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4795.799,
    "end": 4803.484,
    "text": " And then we have this helper function that plots the history of choices and beliefs in the true context over time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4804.986,
    "end": 4808.788,
    "text": "So yeah, I just blazed through that quickly because it's not very important.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4808.808,
    "end": 4812.471,
    "text": "But if anyone has questions, we can go back and dissect that code a little more.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4814.772,
    "end": 4820.156,
    "text": "So now all we have to do is to find the, oh, Jakub, you have your hand up.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4820.336,
    "end": 4820.957,
    "text": "You want to ask something?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4823.651,
    "end": 4828.572,
    "text": " Yeah, maybe this is better suited for the end.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 4828.612,
    "end": 4835.214,
    "text": "But in PyMDP, there's also modules that are adjacent to the agent class.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 4836.514,
    "end": 4846.077,
    "text": "So I was just wondering how we could make use of the different modules in the action perception loop.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 4847.697,
    "end": 4850.138,
    "text": "Because I haven't seen many examples",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 4852.62,
    "end": 4860.843,
    "text": " of using, for instance, the inference module or the learning module and how that would augment the run active inference?",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 4860.883,
    "end": 4862.444,
    "text": "Yeah, that's a great question.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4862.764,
    "end": 4871.808,
    "text": "So I have another demo that we can maybe do another time that's building a hierarchical model in PyMDP, so building a two-layer model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4872.508,
    "end": 4876.39,
    "text": "It's a visual forging hierarchical model based on a paper that we did back in 2018, 2019.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4879.912,
    "end": 4882.793,
    "text": " And there, you're in this inner loop over time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4882.813,
    "end": 4886.814,
    "text": "You're making use of these submodule functions.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4887.534,
    "end": 4893.255,
    "text": "So say you wanted to do some special kind of inference that's not just the standard infer states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4894.555,
    "end": 4899.496,
    "text": "You could actually say, OK, I want to do this particular weird thing that's specific to this inference process.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4900.016,
    "end": 4901.437,
    "text": "And you would just add lines here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4902.297,
    "end": 4907.078,
    "text": "Like, I want to take a function from the inference module and run",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4908.001,
    "end": 4918.889,
    "text": " like, I don't know, a different kind of message passing on it, like run MMP or something, inference dot, or there's an algos module too that has different message passing algorithms.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4919.73,
    "end": 4931.899,
    "text": "And then you could optimize your hidden state beliefs using that message passing algorithm and then set them equal to the special thing you did just with that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4933.06,
    "end": 4933.28,
    "text": "Oops.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4935.822,
    "end": 4937.804,
    "text": "So yeah, there's no examples here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4938.476,
    "end": 4943.659,
    "text": " But I haven't done that here, but it's definitely something that can be done.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4946.681,
    "end": 4960.529,
    "text": "Or yeah, there's another example I did, like simulating an active inference equivalent of an evidence accumulation drift diffusion style task, where the policy selection was done in a particular way, where you're only using certain components of the expected free energy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4962.665,
    "end": 4968.768,
    "text": " And yeah, so basically, there's other demos where you can zoom in and not use the agent class and use submodules.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4969.088,
    "end": 4974.149,
    "text": "But I haven't written those in a publicly accessible way yet.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4974.209,
    "end": 4977.391,
    "text": "But the hierarchical one, I can just easily make public.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4977.651,
    "end": 4979.471,
    "text": "I just haven't had time to put it on the docs yet.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4980.131,
    "end": 4981.932,
    "text": "But yeah, that's a good question.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4981.952,
    "end": 4983.092,
    "text": "Because yeah, you're right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4983.132,
    "end": 4987.254,
    "text": "Most of the stuff right now is just the highest level implementation with the agent.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4989.935,
    "end": 4990.055,
    "text": "OK.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 4992.284,
    "end": 5008.575,
    "text": " And now to just run the active inference process, I've made a distinction between generative process parameters, like how accurate the hint is, how the payoff structure is, and then generative model parameters, which are used when creating the A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5008.595,
    "end": 5011.718,
    "text": "So the P hint end is the true hint accuracy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5012.198,
    "end": 5013.759,
    "text": "P reward end is the true payoff.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5014.279,
    "end": 5018.382,
    "text": "And then just choose some time horizon and run the active inference loop with that time horizon.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5019.243,
    "end": 5020.804,
    "text": "And then plot the history of beliefs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5022.435,
    "end": 5023.616,
    "text": " Okay, so here's an example.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5026.519,
    "end": 5029.743,
    "text": "The top plot shows the agent's behavior.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5029.923,
    "end": 5035.049,
    "text": "So white squares indicate what it was doing at any given time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5035.089,
    "end": 5036.37,
    "text": "So time is on the x-axis.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5036.43,
    "end": 5040.775,
    "text": "So you can see it started in the start state, then it gathered information at the hint.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5042.922,
    "end": 5046.606,
    "text": " And the reason this wasn't immediate is because its beliefs about accuracy were only 0.7.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5046.646,
    "end": 5051.652,
    "text": "So it needs to actually do some evidence accumulation before it's sure what the state is.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5052.053,
    "end": 5053.034,
    "text": "Then it played right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5053.915,
    "end": 5060.263,
    "text": "But as soon as it played right, because that's what the hint was telling it, as soon as it played right, it probably had a loss.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5062.629,
    "end": 5071.937,
    "text": " a loss observation, which then messed up its inference and made it go back to the hint to accumulate evidence again before being, okay, the hint is really suggesting that I should go right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5072.017,
    "end": 5074.379,
    "text": "So then it goes back, revisits the right arm.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5074.759,
    "end": 5082.886,
    "text": "And then over time you see here, the red dot is the actual true context and the gray scale indicates the agent's beliefs about the hidden state.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5083.707,
    "end": 5089.812,
    "text": "So here the hidden state beliefs are now converging to believing that the right arm is better.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5091.438,
    "end": 5096.605,
    "text": " I know I said at the beginning that all probability would be darker means higher probability, but it's actually the opposite here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5096.645,
    "end": 5098.648,
    "text": "So sorry, that's confusing.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5098.748,
    "end": 5104.656,
    "text": "So yeah, right better is higher probability and their beliefs get more and more confident as they play.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5105.216,
    "end": 5108.541,
    "text": "So this is, you know, this is the exact same thing you'll see with the teammates, right?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5108.561,
    "end": 5109.001,
    "text": "They first",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5110.003,
    "end": 5133.693,
    "text": " forage for information that's driven by this epistemic value component of the expected free energy as their posterior over hidden states becomes more precise epistemic value goes down and then the expected utility component goes up which is bolstered by the fact that they now have confident beliefs about the context and then that drives them to forge information um",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5134.673,
    "end": 5147.017,
    "text": " And then so like that kind of exercise that I would have people do if this was like in a classroom context is start messing with the bandit probabilities and also mess with the agent's sensitivity to punishment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5147.057,
    "end": 5154.919,
    "text": "So up here, we made them have plus two relative nats in their reward function and minus four for punishment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5155.339,
    "end": 5160.101,
    "text": "But if you made this even lower, let's say it made it negative six, what would happen?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5161.661,
    "end": 5164.002,
    "text": "So now because they're more risk averse,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5165.182,
    "end": 5171.667,
    "text": " the risk of getting a loss observation if I was to play immediately becomes higher.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5171.988,
    "end": 5186.499,
    "text": "So now the agent basically requires more confidence before it's willing to actually play the left arm because the risk of getting it wrong and getting a loss is too great because their reward function is now shaped more risk aversely.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5187.5,
    "end": 5189.322,
    "text": "And then if I decrease this even more,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5191.894,
    "end": 5210.807,
    "text": " down to negative eight, you can see that they never even go for playing because even once they're very certain that the left arm is better, it's still too risky given their beliefs about the payoff structure because their beliefs about the payoff structure are such that they believe that there's still a 20% chance that they'll get loss.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5211.388,
    "end": 5215.09,
    "text": "But if we change this and said, what if their P reward was 1.0 or say 0.99,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5223.689,
    "end": 5237.433,
    "text": " then they're willing, even despite the great risk of being punished, because the expected reward, given you know the context, is high enough, they will still end up risking it.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5237.553,
    "end": 5240.394,
    "text": "And they acquire the hint for some time, and then they start risking it.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5241.972,
    "end": 5257.02,
    "text": " But the observations will, because P reward is so high, their beliefs about the payoff structure, their beliefs will kind of oscillate as the observations actually change, because the true observations are generated much more stochastically, because this is the P reward of the bandit.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5257.841,
    "end": 5259.722,
    "text": "So you can mess around with this.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5259.802,
    "end": 5262.043,
    "text": "And I would encourage if anyone",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5262.583,
    "end": 5271.967,
    "text": " listening now or afterwards wants to mess with these parameters, I would encourage you to just go crazy and mess with parameters and see what different kinds of behaviors you can get.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5273.948,
    "end": 5274.188,
    "text": "Yeah.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5276.589,
    "end": 5281.951,
    "text": "Okay, so that pretty much wraps up the main brunt of the tutorial.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5283.391,
    "end": 5289.994,
    "text": "Let's pause there for questions because I have additional material about learning parameters that we discussed last time would be good to",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5291.095,
    "end": 5295.598,
    "text": " to get into, because that's something that's really under-documented right now with PyMVP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5296.559,
    "end": 5300.501,
    "text": "So we can move into that, but I think we should first break for some questions.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5303.483,
    "end": 5303.843,
    "text": "Awesome.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5304.404,
    "end": 5304.784,
    "text": "Thank you.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5305.604,
    "end": 5310.627,
    "text": "Jakob, if you want to ask, or Karl, otherwise I'm happy to hear about learning.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5310.647,
    "end": 5312.869,
    "text": "Cool.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5318.336,
    "end": 5322.038,
    "text": " Let's do learning and then we'll have any closing questions at the end.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5323.519,
    "end": 5324.06,
    "text": "Perfect.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5326.982,
    "end": 5327.682,
    "text": "Okay.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5328.643,
    "end": 5329.743,
    "text": "I'll have some quick slides.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5329.783,
    "end": 5334.346,
    "text": "So learning under active inference is cast as",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5335.436,
    "end": 5338.617,
    "text": " updating beliefs about the generative model parameters itself.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5339.257,
    "end": 5341.478,
    "text": "So inference is one thing.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5341.558,
    "end": 5354.401,
    "text": "Inference is saying, given my generative model, so my beliefs about the way the world works, what is the best explanation in the sense of posterior over hidden states and policies that explains my actual data?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5354.501,
    "end": 5357.102,
    "text": "And you get that by minimizing variational free energy.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5357.422,
    "end": 5361.163,
    "text": "Learning becomes much more complex, but also",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5362.123,
    "end": 5383.788,
    "text": " uh more interesting in the sense that if the agent's generative model itself is wrong they can change the generative model to also optimize variational free energy so learning and inference can kind of cooperate to or sometimes interfere with each other as we'll see to um to minimize uh variational free energy so the way we have to start by doing this is now",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5384.266,
    "end": 5407.343,
    "text": " treating the parameters themselves so the parameters of the a array which are categorical likelihood parameters b array d array c array those themselves now become random variables over which we can have priors and of course variational posteriors um so we can go back to our original a or palm dp representation",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5407.952,
    "end": 5414.814,
    "text": " So now what we see is in this third column next to ABC and we have parameters that are priors over",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5415.754,
    "end": 5431.525,
    "text": " the categorical parameters of the A, B, C, and D. So a natural prior for these sorts of categorical variables is called the Dirichlet distribution, which is basically a conjugate prior for a categorical likelihood distribution.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5431.565,
    "end": 5432.386,
    "text": "That's why it's very nice.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5432.806,
    "end": 5440.291,
    "text": "And also the values of its parameters have a very nice intuitive feeling and interpretability to them.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5440.712,
    "end": 5445.475,
    "text": "So now the agents will have priors, which are updated by this P of phi at the top.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5447.445,
    "end": 5451.066,
    "text": " And phi is just a collection of all these Dirichlet hyperparameters.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5451.106,
    "end": 5453.087,
    "text": "They're also called prior parameters.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5453.507,
    "end": 5460.829,
    "text": "And these are parameters or priors over random variables that themselves are the likelihood distributions and priors of the generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5461.929,
    "end": 5465.61,
    "text": "So we're just going to do a few instances of learning today.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5465.65,
    "end": 5468.071,
    "text": "I don't know if we'll have time to do B or D learning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5468.091,
    "end": 5469.572,
    "text": "We'll start with A matrix learning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5471.837,
    "end": 5473.138,
    "text": " But the principle applies the same.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5473.238,
    "end": 5478.021,
    "text": "So here's an example of a Dirichlet prior distribution over some categorical parameters.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5478.461,
    "end": 5482.544,
    "text": "So let's say our A matrix or A array, let's just say it's a matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5483.164,
    "end": 5487.287,
    "text": "So now the random variable itself are the entries of the A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5488.148,
    "end": 5496.393,
    "text": "A prior over those entries is something called a Dirichlet distribution, which is just a vector of positive real numbers.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5496.854,
    "end": 5505.076,
    "text": " And here we've reshaped it so that it has the shape of an array so let's say this area represents like the payoff matrix in our bandit task.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5505.676,
    "end": 5513.398,
    "text": "So the two columns are two possible hidden states our context one context to and then the two observations are punishment and reward.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5514.419,
    "end": 5519.3,
    "text": "So if this is our prior, which is measured by these dear slay parameters.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5520.677,
    "end": 5524.141,
    "text": " the likelihood distribution that they parametrize.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5524.662,
    "end": 5530.488,
    "text": "Also, you can express this as the expected value of the Dirichlet distribution is a categorical with these values.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5531.468,
    "end": 5548.718,
    "text": " So what you can see is that the Dirichlet counts, like the scalar magnitude of the Dirichlet parameters, represent a prior confidence about the probability of the different contingencies encoded in the A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5549.218,
    "end": 5551.039,
    "text": "So I made these very simple.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5552.62,
    "end": 5564.889,
    "text": " here like the the deer slave priors are nine counts for seeing punishment given context and one count for seeing reward given context one but you can change those to very very high numbers so for instance",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5565.675,
    "end": 5571.9,
    "text": " if that 9 on the left was changed to a 10,000, then on the right, the probabilities would become like 0.9999 to 0.00001.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5575.664,
    "end": 5592.598,
    "text": "So the scale of the Dirichlet, also known as pseudo count parameters, encodes something like a belief about how many times that particular coincidence of observation and hidden state has been observed, which you can also think of as like a prior confidence about that contingency.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5594.067,
    "end": 5608.31,
    "text": " And the expectation to create your A matrix via this going from a deer slate to an A array is very simple because you just take each deer slate count and divide it by the column wise sum, which is this A naught variable on the lower right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5608.73,
    "end": 5615.191,
    "text": "So it's just that particular value of the A array and divided by the sum of the counts.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5616.591,
    "end": 5622.312,
    "text": "So that's how you go from a deer slate prior over a categorical likelihood distribution through the expectation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5624.782,
    "end": 5625.583,
    "text": " and then inference.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5625.863,
    "end": 5629.447,
    "text": "And I'm not going to go into the variational posterior, but it's very simple.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5630.048,
    "end": 5644.763,
    "text": "So when you're doing learning and you're trying to actually update these Dirichlet parameters as a function of observations, what essentially you have is a new posterior that's now not over hidden states of the world, but you have a variational posterior over the parameters, the categorical",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5645.532,
    "end": 5653.395,
    "text": " or rather a variational posterior over the Dirichlet distribution, the Dirichlet distribution that parametrizes your A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5653.936,
    "end": 5655.616,
    "text": "So that's what's represented in the lower right.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5656.037,
    "end": 5662.92,
    "text": "So let's assume that our beliefs about the Dirichlet parameters were as it is now, so your beliefs about the A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5664.24,
    "end": 5665.621,
    "text": "And then we get an observation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5666.901,
    "end": 5669.623,
    "text": "And let's say that we saw the observation of punishment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5670.623,
    "end": 5672.724,
    "text": "And that can be represented by this one-hot vector.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5674.073,
    "end": 5678.837,
    "text": " Now we want to update our beliefs about the A matrix given the observation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5679.497,
    "end": 5683.521,
    "text": "But to do that, what you also need is a hidden state or a belief about hidden states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5684.141,
    "end": 5688.945,
    "text": "And let's say that the agent was very confident that the hidden state was context 1.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5690.326,
    "end": 5693.548,
    "text": "What ends up happening to the resulting posterior over the A matrix",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5694.508,
    "end": 5708.759,
    "text": " is a very simple associative, quasi-associative learning rule where the update to the Dirichlet represented by this bold A sub Q becomes the prior over the Dirichlet parameters plus",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5709.64,
    "end": 5714.464,
    "text": " the outer product between the observation vector and the hidden state belief vector.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5715.084,
    "end": 5726.713,
    "text": "So this is kind of like a form of coincidence detection where you just see what parts of the hidden states line up with what parts of the observations and you increment your beliefs about the A matrix accordingly.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5727.113,
    "end": 5738.862,
    "text": "So in this case, if I really believe the context was one and I saw a punishment, then my belief about that particular contingency seeing punishment under context one would just be incremented by a plus one.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5740.677,
    "end": 5743.658,
    "text": " And that's what this outer product at the lower right calculates.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5743.718,
    "end": 5748.859,
    "text": "It computes a matrix that is the increment to your beliefs about the A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5749.319,
    "end": 5754.021,
    "text": "So in this case, the matrix would have one in the upper left and then zeros in the other three entries.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5754.561,
    "end": 5758.182,
    "text": "And you use that to kind of increment your A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5759.262,
    "end": 5767.884,
    "text": "Technically, you're incrementing a Dirichlet kind of conjugate prior over your A matrix, but it's really a variational Dirichlet posterior.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5770.629,
    "end": 5785.72,
    "text": " But you can imagine if your hidden states are also contaminated with uncertainty so say you had 50% your 5050 whether it's context one or context to then similarly with this a matrix update the update would then be spread over the two.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5787.401,
    "end": 5793.485,
    "text": "Possible contingencies, so if you saw an observation, but you weren't sure what the hidden state was in both.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5794.286,
    "end": 5802.949,
    "text": " that just the overall probability of seeing punishment under your generative model would go up because you would increment that entire row of the A matrix within this case 0.5.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5804.07,
    "end": 5811.773,
    "text": "So that's just an important thing to note is that uncertainty in your own hidden state beliefs will bleed into the updates to the Dirichlet parameters.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5813.614,
    "end": 5815.695,
    "text": "And oftentimes alongside",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5817.082,
    "end": 5828.529,
    "text": " I mean, optimally, alongside a matrix learning or parameter learning, you're also going to be augmenting your expected free energy because your generative model is now different.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5828.549,
    "end": 5834.213,
    "text": "So you have these new priors and posteriors with a so-called parameter information gain term or a novelty term.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5834.893,
    "end": 5849.805,
    "text": " So while you're pursuing learning, it also makes sense to choose your policies such that you'll maximize the information you get based on the consequences of your policies about the parameters of the generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5850.405,
    "end": 5859.632,
    "text": "So this expected KL divergence exactly quantifies how much a given policy will lead to a good Bayesian update of your parameter beliefs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5860.433,
    "end": 5863.455,
    "text": "So intuitively, this quantity might be",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5865.076,
    "end": 5870.521,
    "text": " described as, how much do I expect the consequences of my actions will update my beliefs about parameters?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5870.822,
    "end": 5880.931,
    "text": "So consequences of actions is represented by that Q of O given pi, the thing that the KL divergence is taken under expectation of.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5881.752,
    "end": 5886.696,
    "text": "And then the actual KL divergence is saying, how much surprise will I get given these observations",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5888.306,
    "end": 5900.215,
    "text": " relative to my current beliefs about the parameters of regenerative model so this is what's called in the literature the novelty term and it's very easy to experimentally turn off or on this novelty term",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5901.189,
    "end": 5904.172,
    "text": " using simple flags in the agent class.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5904.392,
    "end": 5908.115,
    "text": "And this goes for the other components of the variation or the expected free energy as well.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5908.135,
    "end": 5913.339,
    "text": "You can kind of turn on flags that say, do I want to use this novelty or parameter information gain?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5913.82,
    "end": 5919.565,
    "text": "Do I want to use the state info gain, which is the same as the epistemic value or the Bayesian surprise?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5920.185,
    "end": 5921.647,
    "text": "And then do I want to use the utility?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5921.687,
    "end": 5927.852,
    "text": "So for the learning simulations, it makes sense if you're doing learning to make sure that this parameter is turned on.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5929.967,
    "end": 5953.619,
    "text": " um yeah okay so that's that's the kind of um slides on on learning and now we can actually get into implementing this in pine vp um so we first will create an a matrix and we'll let the agent have very slight positive beliefs about the reward contingencies",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5954.625,
    "end": 5956.566,
    "text": " And I'll explain later why this helps.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5956.786,
    "end": 5962.849,
    "text": "It helps with learning if they don't have total ignorance about the reward probabilities, but they have some bias in some direction.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5962.889,
    "end": 5964.329,
    "text": "It doesn't actually have to be 0.51.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5964.51,
    "end": 5965.27,
    "text": "It could be the other way.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5966.751,
    "end": 5974.614,
    "text": "And then there's utility functions that allow you to create Dirichlet variables that have the same shape as some base A array.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5975.575,
    "end": 5977.696,
    "text": "So here, this PA",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5980.357,
    "end": 5988.58,
    "text": " variable is basically the prior, that bold A sub P variable that represents the agent's Dirichlet prior over the A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5989.0,
    "end": 5995.222,
    "text": "So this is now a new variable that we're going to pass in to the agent constructor.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 5995.262,
    "end": 6006.125,
    "text": "So if our A matrix is like, let's look at the reward contingency.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6008.22,
    "end": 6036.111,
    "text": " reward modality so that's a1 so this is the agent's current beliefs about the the payoff structure right so under choose left and choose right those are the two contingencies given the two hidden states pa will have the same structure except that it'll have those contingencies encoded in terms of deersley pseudo counts so if i made them made the pseudo count scale 10",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6037.844,
    "end": 6044.169,
    "text": " then they're relatively confident that the payoff probabilities look like this.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6045.37,
    "end": 6046.991,
    "text": "But again, these are not probabilities.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6047.031,
    "end": 6052.175,
    "text": "They're Dirichlet parameters that parameterize a categorical likelihood.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6052.195,
    "end": 6060.001,
    "text": "So you can use the normalized distribution function to actually then visualize the Dirichlet distribution in terms of actual categorical parameters.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6061.622,
    "end": 6063.264,
    "text": "So taking the expectation, i.e.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6063.624,
    "end": 6067.507,
    "text": "the normalization of the Dirichlet prior, will give you exactly this.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6070.211,
    "end": 6073.355,
    "text": " So if I say, are these two things the same, they should be the same.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6074.597,
    "end": 6077.381,
    "text": "OK, maybe down to numerical differences, they're not.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6077.441,
    "end": 6082.167,
    "text": "But yeah.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6082.508,
    "end": 6084.491,
    "text": "OK, so yeah, that's how you parameterize that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6084.511,
    "end": 6085.011,
    "text": "So we'll create it.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6086.984,
    "end": 6089.427,
    "text": " This is an important point that's also used in SPM.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6090.248,
    "end": 6093.992,
    "text": "Often we want certain contingencies to be unavailable to learning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6094.312,
    "end": 6099.178,
    "text": "So we assume these are contingencies that are baked into the agent's beliefs about the world and thus not adaptable.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6099.718,
    "end": 6102.862,
    "text": "So one way, and this is just borrowed from the SPM way of doing it,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6103.442,
    "end": 6114.626,
    "text": " to encode that is to bake in a kind of really precise confidence or very high confidence that certain contingencies are the case.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6115.046,
    "end": 6118.687,
    "text": "And you can just do that by adjusting the scale parameter for particular indices.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6119.247,
    "end": 6129.391,
    "text": "So for instance, by doing this, I'm just telling the agent that it essentially doesn't learn the contingencies related to the null modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6131.512,
    "end": 6132.212,
    "text": "So for instance, if",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6133.78,
    "end": 6140.187,
    "text": " If you're in the start state, it believes with really high confidence that you'll always get the null observation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6140.828,
    "end": 6149.859,
    "text": "And we just operationalize that by creating very, very high pseudo count or Dirichlet priors over that particular slice of the A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6151.821,
    "end": 6153.443,
    "text": "So that's an important point to do.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6154.85,
    "end": 6164.452,
    "text": " And then we'll just write all this stuff, so this prior count about the null observations and then the scale that determines their general confidence outside of this null thing.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6164.753,
    "end": 6168.393,
    "text": "We'll write that all into a function so that we can then parameterize our PA.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6169.734,
    "end": 6182.477,
    "text": "And then we now write a new active inference with learning loop, where instead of just storing the history of choices and beliefs, we also store the history of their beliefs about the Dirichlet parameters.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6184.391,
    "end": 6192.275,
    "text": " And an important thing that you can also do in PMBP, which is nice, is you can say, I only want to learn particular modalities.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6192.595,
    "end": 6196.277,
    "text": "So when you're creating the agent class, there's a bunch of arguments you can pass in.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6196.297,
    "end": 6200.919,
    "text": "But one of them is, I only want to be learning the reward payoff modality right now.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6202.059,
    "end": 6203.64,
    "text": "And this can change, you could have them learn the",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6204.241,
    "end": 6205.801,
    "text": " the hint accuracy as well.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6206.321,
    "end": 6225.165,
    "text": "But by passing in a list of which of the modality indices that you want them to learn, you turn off learning on all the other modalities, which normally in SPM or what we used to have to do in PyMDP is you just have to turn up those Dirichlet pseudo counts super high on all the modalities that you don't want to learn.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6226.186,
    "end": 6227.806,
    "text": "But if there are other modalities",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6228.325,
    "end": 6234.868,
    "text": " that you don't want to learn now, you can just pass in this list of modalities that you want to learn, and it'll only focus learning onto that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6235.648,
    "end": 6248.713,
    "text": "So now I'm setting up an agent that has these particular beliefs about the world via A and now has a prior that it's going to update through doing variational inference or learning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6249.634,
    "end": 6257.457,
    "text": "And then so we'll create the generative model here, including this new prior over A, and then we'll run the active inference loop with learning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6258.646,
    "end": 6263.328,
    "text": " which involves creating an agent that can only do learning on the payoff structure modality.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6263.368,
    "end": 6273.351,
    "text": "So we want the agent to now learn which arm is best, basically, because it doesn't know the payoffs and then also to use parameter information gain to motivate its decision.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6274.151,
    "end": 6281.314,
    "text": "And there's another thing I forgot to mention, which is the learning rate, which is how much they increment their beliefs about",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6282.205,
    "end": 6287.729,
    "text": " the posterior or about the A matrix using this update rule.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6287.749,
    "end": 6289.23,
    "text": "So there's something I didn't mention.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6289.25,
    "end": 6293.793,
    "text": "There's often a learning rate that's added here that basically scales how big this update is.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6295.714,
    "end": 6297.675,
    "text": "So that can be, you know, you can experiment.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6297.695,
    "end": 6301.538,
    "text": "It depends on the application, what the scale of that is going to be.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6301.558,
    "end": 6302.618,
    "text": "But the default is one.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6302.638,
    "end": 6305.68,
    "text": "Okay.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6307.021,
    "end": 6310.944,
    "text": "So in this example, the agent gets the hint for one time step.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6313.753,
    "end": 6337.39,
    "text": " it's got the standard like negative four punishment and then it goes straight to the right because it believes the um the hint is accurate so it gets a reward is right then it goes and starts playing the right arm and you see its posterior beliefs instantly go to right and now so since what we've also spit out of this active inference loop is the beliefs about the",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6338.657,
    "end": 6352.064,
    "text": " A matrix in this QA posterior over A history, we can plot its beliefs about the A matrix probability over the contingency of seeing reward, given that I was in the right arm.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6354.205,
    "end": 6367.312,
    "text": "And what you see is that even though they start with basically 50-50 beliefs, as they gather observations, their beliefs about that posterior probability over that particular entry of the A matrix get bigger and bigger.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6368.294,
    "end": 6376.52,
    "text": " An interesting consequence of this is their beliefs about the left arm contingencies don't change because they don't ever experience that state of the world.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6378.001,
    "end": 6390.169,
    "text": "So that's like an interesting what you might call in machine learning like a, it's not really a bad bootstrap, but it's the idea of like selective sampling.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6390.209,
    "end": 6392.111,
    "text": "So you only learn those contingencies.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6393.083,
    "end": 6395.725,
    "text": " that are selective to the part of the world that you're sampling.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6396.126,
    "end": 6406.315,
    "text": "So the agent doesn't know what that other slice of the A matrix looks like because it's never experienced what it's like to be in the left is better context and playing the left arm.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6406.375,
    "end": 6410.619,
    "text": "So its posterior beliefs about that part of the A matrix remain the same.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6411.38,
    "end": 6417.906,
    "text": "But you can see that over time, its beliefs start to converge to 0.8, which is what we set in the generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6419.141,
    "end": 6421.042,
    "text": " This is just basic statistical learning, right?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6421.102,
    "end": 6432.686,
    "text": "It's just getting reward observations over time, and as it gets a sequence of reward and punishment through this very associative basic mechanism, it's just incrementing its Dirichlet beliefs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6433.086,
    "end": 6436.928,
    "text": "And what I'm showing is the normalized, i.e., the expectation of those beliefs over time.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6436.968,
    "end": 6438.608,
    "text": "So you get something that's 0.8.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6439.089,
    "end": 6447.332,
    "text": "But the actual Dirichlet parameters themselves will be growing linearly in time, effectively, depending on the observations they get.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6448.687,
    "end": 6468.964,
    "text": " um yeah so that is just the basic learning and then there's another thing you can do which is take advantage of this change probability so now we allow the context to change and this is one way to get them to actually be able to explore and learn more about both reward probabilities in the landscape is allow them to have",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6470.194,
    "end": 6478.918,
    "text": " not only to make the environment change, but they also entertain beliefs in their B matrix that the environment can change.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6478.998,
    "end": 6483.02,
    "text": "So you could use this to do B matrix learning as well by defining a PB variable.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6483.4,
    "end": 6486.641,
    "text": "But here we're just going to have A matrix learning as we were doing before.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6487.122,
    "end": 6493.364,
    "text": "I've changed a little bit the parameters to make things like a little more stable because sometimes you get weird behavior.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6493.404,
    "end": 6495.185,
    "text": "I mean, that's something we can play around with too.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6495.645,
    "end": 6496.606,
    "text": "So now they allow the",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6497.096,
    "end": 6498.657,
    "text": " the environment itself can change.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6498.697,
    "end": 6501.8,
    "text": "And they also in their B matrix, they think the environment can change.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6502.66,
    "end": 6507.884,
    "text": "And then I'll plot the history of beliefs and choices.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6508.545,
    "end": 6513.989,
    "text": "So now they instantly go for playing the arms.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6514.029,
    "end": 6514.85,
    "text": "They kind of risk it.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6514.89,
    "end": 6520.274,
    "text": "They don't, the parameter information gain actually outweighs the epistemic or state information gain.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6520.614,
    "end": 6522.636,
    "text": "They start playing, they gather observations.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6523.146,
    "end": 6541.944,
    "text": " they're not very confident about what the state of the world is because they only are getting information about the hidden state from the actual sequence of rewards and losses and then eventually they go to the hint because probably the utility becomes low because they don't know what their reward probabilities are and they're building their own beliefs",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6542.54,
    "end": 6543.261,
    "text": " Then they get the hint.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6543.821,
    "end": 6545.222,
    "text": "Then the hint is accurate.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6545.242,
    "end": 6548.144,
    "text": "So they have very precise beliefs about the hidden state of the world.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6548.965,
    "end": 6550.566,
    "text": "And then the world actually switches.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6550.626,
    "end": 6553.668,
    "text": "So you see the red dot is the actual switching statistics of the bandit.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6554.289,
    "end": 6559.613,
    "text": "And now they've kind of explored both bandit arms while also updating their beliefs about the",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6560.871,
    "end": 6582.937,
    "text": " bandits and you see that their beliefs about the left arm are kind of bad because they they it seems like they've probably mostly gotten negative data while they're in the left arm and they didn't explore it very much um and and yeah or no i guess at the end they're exploring it quite a bit but their their beliefs about it go down because they have i guess a bad experience with it",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6585.372,
    "end": 6586.192,
    "text": " Yeah, that's the left arm.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6586.212,
    "end": 6586.832,
    "text": "That's the right arm.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6587.572,
    "end": 6594.775,
    "text": "But you can keep trying this and mess around with different parameters, and you'll get different sorts of beliefs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6599.476,
    "end": 6602.758,
    "text": "So here in this example, there's some switching going on.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6603.038,
    "end": 6610.0,
    "text": "The posteriors aren't tracking very well until they actually visit the hint, and then their posteriors start getting much more precise.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6612.458,
    "end": 6615.18,
    "text": " And then at that point, they can start making more precise beliefs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6615.941,
    "end": 6624.727,
    "text": "In this case, they ended up kind of doing poorly on learning on both of them because the true reward probabilities are PA.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6625.228,
    "end": 6625.448,
    "text": "Yeah.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6628.036,
    "end": 6636.663,
    "text": " So everything I've talked about so far is an example where learning can often lead to suboptimal outcomes because it's done in an online fashion.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6637.544,
    "end": 6642.848,
    "text": "So this is an interesting point of departure between SPM and PyMDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6643.088,
    "end": 6646.211,
    "text": "But I mean, you can do all the same things in SPM that you can do in PyMDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6646.731,
    "end": 6650.735,
    "text": "So here what I'm doing is I'm updating the A matrix every time I get an observation.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6651.415,
    "end": 6654.458,
    "text": "So they do hidden state inference, they select policies.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6656.237,
    "end": 6666.142,
    "text": " They select actions and then given the last observation and the last hidden state belief, they do one step of parameter inference and they use the next A matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6666.883,
    "end": 6670.485,
    "text": "That's what's handled in this updateA function of the agent class.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6671.185,
    "end": 6675.308,
    "text": "They update their beliefs about the A matrix and they use that for inference at the next time step.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6676.388,
    "end": 6679.51,
    "text": "Another way you could do this is you could do an entire trial.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6680.509,
    "end": 6690.255,
    "text": " and then update your A matrix at the very end of all the time steps of action selection and observation sampling, and then use that A matrix for another trial.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6690.755,
    "end": 6704.544,
    "text": "So this is kind of the difference between like a more EM, like a separation of time scales EM or expectation maximization approach, where given a set of observations, then I update my model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6704.924,
    "end": 6706.926,
    "text": "And then I go back and I do more trials",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6707.566,
    "end": 6710.008,
    "text": " without updating my model, but using the same fixed one.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6710.609,
    "end": 6712.411,
    "text": "And then you can kind of do that in epochs.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6712.451,
    "end": 6720.378,
    "text": "And that's typically how it's done in SPM because you only do parameter learning, basically this part outside this time loop.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6720.718,
    "end": 6721.799,
    "text": "So you do it like down here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6722.38,
    "end": 6725.103,
    "text": "But then what you do is you run multiple trials",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6726.161,
    "end": 6735.55,
    "text": " And the nice thing about that is it kind of makes the A matrix updates less likely to, in the moment, bias your action selection.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6735.63,
    "end": 6737.632,
    "text": "So for a given set of time steps,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6738.442,
    "end": 6745.269,
    "text": " you're locked into what your a matrix police are and you don't do the update until a set of time steps has elapsed.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6746.23,
    "end": 6756.68,
    "text": "And yeah so for the purposes of this tutorial I just did this online learning thing, but, as you can see that can lead to actually weirdly sub optimal behavior where they don't learn the true reward statistics very well.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6758.479,
    "end": 6781.244,
    "text": " it depends on a bunch of things too like the learning rate and you know there's a i haven't explored this demo as much as i would like but there's a lot of interesting kind of side effects like here they're actually learning very weird statistics about the bandit landscape like they start kind of learning it well but then as their observations keep going they don't they don't actually learn very well here they just avoid",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6781.824,
    "end": 6784.045,
    "text": " playing because they have a bad early experience.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6784.265,
    "end": 6786.146,
    "text": "So this is an example of like a bad bootstrap.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6786.566,
    "end": 6795.37,
    "text": "And then they go and just play the hint because they're too scared of anything else, even though their hidden state inference is perfect because the hint perfectly tracks the hidden state.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6796.35,
    "end": 6802.212,
    "text": "So yeah, this is just kind of meant to be an example of what you can do with learning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6803.893,
    "end": 6810.656,
    "text": "But there's going to be examples where learning actually causes suboptimal behavior, but in an interesting way.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6812.028,
    "end": 6815.871,
    "text": " So here's an example where they actually kind of are learning the correct reward statistics.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6816.271,
    "end": 6819.114,
    "text": "Things are starting to converge to 0.8 for both bandit arms.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6820.835,
    "end": 6823.117,
    "text": "But it's very stochastic, as you can see.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6823.157,
    "end": 6825.599,
    "text": "And I also chose action selection to be stochastic.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6826.599,
    "end": 6831.003,
    "text": "With deterministic, I wonder what you would get.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6831.483,
    "end": 6835.446,
    "text": "Yeah, here they're just arg maxing the expected free energy or arg minning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6835.486,
    "end": 6841.291,
    "text": "So hint is always the most safest option, given their history of observations.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6847.099,
    "end": 6852.307,
    "text": " If I can make one remark on that kind of diversity behaviors that we're seeing.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 6854.927,
    "end": 6872.097,
    "text": " YMDP and active inference are providing us a space and a approach to composable generative model construction that we can then sift through and co-evolve with to find different strategies and behaviors.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 6872.537,
    "end": 6881.983,
    "text": "So active inference or even any specified generative model, it's not an answer or a solution, for example, to the explore-exploit dilemma.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 6882.523,
    "end": 6908.236,
    "text": " we see this like empirically right now active inference is not in general resolving explore exploit any gm in general is not resolving explore exploit any parameterization is not resolving explore exploit even for one environment it just is equivalent to saying like well we have a linear model of healthcare data so we've resolved the healthcare issue and um",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 6909.326,
    "end": 6924.086,
    "text": " this really viscerally shows the space that we build in and what remains to be built is so open yeah absolutely yeah i mean because optimality",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 6924.87,
    "end": 6930.655,
    "text": " is not really a function of what the generative model is or what the algorithm is.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6931.315,
    "end": 6937.28,
    "text": "It's more guaranteed to be optimal based on how analogous the generative model and the generative process are.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6937.6,
    "end": 6946.927,
    "text": "So if the generative model is a perfect model of the generative process, then doing Bayesian inference with respect to that generative model, that is optimal for everything.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6949.951,
    "end": 6951.553,
    "text": " how you learn the generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6951.613,
    "end": 6952.593,
    "text": "That's what we're seeing here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6952.633,
    "end": 6957.857,
    "text": "If you learn the generative model in an online fashion, it's not guaranteed to learn the right generative model.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6957.897,
    "end": 6959.279,
    "text": "In many cases, it learns the wrong one.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6960.139,
    "end": 6963.262,
    "text": "And this is something that a lot of people in active inference world have explored.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6963.282,
    "end": 6974.25,
    "text": "For instance, Nora Sajid, who's also a student of Carl's, has explored a lot the limitations and the boundaries of parameter learning and things like preference learning.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6974.31,
    "end": 6976.312,
    "text": "Like what if you were learning the C vector itself?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6976.372,
    "end": 6979.294,
    "text": "How can that be learned online in an adaptive way?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6980.998,
    "end": 6985.501,
    "text": " Yeah, and also Alec Chance has that paper action oriented models where they're learning the B matrix.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6986.122,
    "end": 6994.708,
    "text": "And in that thing, they're showing how the agent learns kind of suboptimal strategies, depending on its exploration of parameter space.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 6995.008,
    "end": 6998.631,
    "text": "But that also actually is kind of a one of the",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7000.268,
    "end": 7027.169,
    "text": " benefits of active inference that paper shows because it shows if you have an agent that does have epistemic value the model it learns of the world is like better than agents that don't have epistemic value but again that the models are always action oriented they're always based on what parts of the full state space is the agent driven to sample awesome jacob any closing comments and then all the closing comment and then connor with the last word",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7029.625,
    "end": 7039.666,
    "text": " yeah well thank you very much for the great um overview what particularly uh was",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 7041.027,
    "end": 7062.895,
    "text": " I found particularly interesting was both how you touched on how it could be modified with the action perception loop could be modified with the other other modules even though as you mentioned there would be more opportunities to go deeper in that but also on the on learning the",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 7065.282,
    "end": 7076.677,
    "text": " the Dirichlet parameters, and I would be interested to see how that also influences planning.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 7079.654,
    "end": 7105.835,
    "text": " if you would up if you would do like um kind of pseudo update of your dirichlet parameters when you're calculating your expected free energy as in what would i uh i'm calculating my expected free energy whilst also taking into account that my b would change on each in on each step and uh how that how that changes like the optimality of",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 7106.969,
    "end": 7109.87,
    "text": " the temporal depth that we do planning with.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 7110.551,
    "end": 7118.834,
    "text": "I think it's super, super interesting and really looking forward to hopefully another model stream.",
    "speaker": "SPEAKER_05"
  },
  {
    "start": 7123.276,
    "end": 7127.657,
    "text": "Yeah, so is it OK if I quickly respond to that?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7127.678,
    "end": 7129.798,
    "text": "Yeah, please, please.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7129.838,
    "end": 7133.4,
    "text": "Yeah, that's a very interesting point that you just made about",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7134.729,
    "end": 7137.09,
    "text": " this fictive or imagined update.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7137.251,
    "end": 7137.771,
    "text": "Where is that?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7138.171,
    "end": 7139.572,
    "text": "I had a, yeah, this slide.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7139.612,
    "end": 7153.159,
    "text": "So that term, that novelty term, in theory, that does capture exactly what you're saying, Jakob, is that this thing says, how would my tier site parameters update if I was to take this policy pot?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7153.639,
    "end": 7157.021,
    "text": "And then I use that term to actually choose where to explore next.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7157.441,
    "end": 7162.084,
    "text": "So if I turn on the parameter information gain term in the agent class,",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7162.52,
    "end": 7169.006,
    "text": " they'll much more quickly skip the hint and go directly to sampling the bandits because they're driven by novelty.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7169.026,
    "end": 7172.489,
    "text": "Ooh, I want to know what the reward probabilities are, so I'm going to go explore.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7172.97,
    "end": 7186.383,
    "text": "However, what it doesn't do, and what I think you're intimating with your comment, is that if I did multi-step planning, two time steps in the future, will I be able to do my planning given how I...",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7187.079,
    "end": 7190.08,
    "text": " think I updated my parameters at the first time step.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7190.52,
    "end": 7202.324,
    "text": "So that's what the equivalent of sophisticated inference, sophisticated inference is saying, how would I plan at time step three, given how I think my beliefs would update up to time step two.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7203.165,
    "end": 7205.125,
    "text": "And that's done right now for hidden states.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7205.785,
    "end": 7207.926,
    "text": "But I haven't seen that done for parameters.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7207.966,
    "end": 7213.108,
    "text": "And I think there's someone like a student of Ryan Smith's is working on that now.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7214.514,
    "end": 7220.616,
    "text": " is like this propagation of counterfactual beliefs about how my parameter beliefs would change in the future.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7221.517,
    "end": 7225.318,
    "text": "And that's like, that's like a really cutting edge, I think, active inference.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7225.378,
    "end": 7237.622,
    "text": "It's like not only novelty, but how would my like perspective sophistication about how your own parameter beliefs will have evolved by time point T, and then using that to do planning for time point T plus one.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7238.596,
    "end": 7239.996,
    "text": " That's like really sophisticated stuff.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7240.497,
    "end": 7249.659,
    "text": "I think getting just even bare bones sophisticated inference with hidden state counterfactual stuff in PIME-VP, that would be a huge accomplishment too.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7249.719,
    "end": 7257.121,
    "text": "And then of course, incorporating it to be more with the parameter sophistication as well.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7257.521,
    "end": 7264.003,
    "text": "And then another quick thing is I can quickly show you an example of one of those other",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7268.904,
    "end": 7272.167,
    "text": " Let's see.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7272.187,
    "end": 7278.652,
    "text": "While you're finding it, that last discussion on sophisticated planning,",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7279.713,
    "end": 7283.236,
    "text": " It's something that at the semantic level we engage with every day.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7283.877,
    "end": 7299.751,
    "text": "What courses should I take this quarter so that I can learn what I don't know today so that next quarter I'll be able to make a better plan for which classes to take so that in three years when I graduate, dot, dot, dot, dot, dot.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7300.151,
    "end": 7301.432,
    "text": "But it's already phrased",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7302.233,
    "end": 7330.467,
    "text": " at the semantic granularity that these models are rapidly converging towards and they're not converging towards it by scaling is all you need they're converging towards it with a factorized actually semantic approach which is very exciting yeah that's a great analogy it's like if you were a naive active inference agent without sophistication you would never plan with like a 10",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7331.212,
    "end": 7347.78,
    "text": " time step planning horizon, you never plan to take, or let's say a three semester planning horizon, you never plan to take multivariate calculus in your third semester, because you would not have anticipated by the second semester, I now have enough linear algebra to take.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7348.241,
    "end": 7351.903,
    "text": "I know that by the time I finish the second semester, I will now know linear algebra.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7351.923,
    "end": 7354.824,
    "text": "So I'll be well suited to take multivariable calculus.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7355.204,
    "end": 7358.686,
    "text": "Whereas what we as humans do is we do have that parameter sophistication.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7359.215,
    "end": 7369.826,
    "text": " I can plan as a freshman, as a first year, to take in my third or fourth semester some high advanced physics, because I know by that time I will have the requisite multivariable calculus or whatever.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7370.307,
    "end": 7375.733,
    "text": "So that's a really nice analogy that I never, I think that's a good example.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7377.014,
    "end": 7378.015,
    "text": "Welcome to Act-InfU.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7378.035,
    "end": 7379.597,
    "text": "Yeah, exactly.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7382.222,
    "end": 7390.085,
    "text": " Um, so here, uh, I just wanted to show you, um, here's an example of a hierarch hierarchical active inference demo.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7390.125,
    "end": 7391.026,
    "text": "I can share this too.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7391.486,
    "end": 7397.448,
    "text": "It's another collab notebook where we're exactly doing, um, we're composing to PalmDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7397.488,
    "end": 7398.929,
    "text": "So there's like a high level PalmDP.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7400.22,
    "end": 7422.462,
    "text": " then there's a low level palm dp and for example when you're doing a step of updating the empirical priors at the high level before you pass them down to be empirical priors at the low level we use the control module for example to do get expected states we use the high level beliefs the high level b matrix and then the high level chosen action",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7423.163,
    "end": 7447.032,
    "text": " to propagate forward the next posterior beliefs at the high level and then those things themselves parameterize a low level empirical prior for this faster palm dp that's going on at the low level so this is an example where you're composing like agent class calls like this but you're composing them with functions that are built from sub modules and adjacent modules of pine dp",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7448.864,
    "end": 7451.065,
    "text": " So that's an example of the thing you were talking about.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7451.366,
    "end": 7453.046,
    "text": "But yeah, that's very brief.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7453.067,
    "end": 7457.529,
    "text": "We can get into that later on.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7457.549,
    "end": 7459.09,
    "text": "A different stream or something like that.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7460.651,
    "end": 7461.011,
    "text": "Awesome.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7461.391,
    "end": 7461.671,
    "text": "Yes.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7462.752,
    "end": 7465.053,
    "text": "Dot three, whenever the time is right.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7465.973,
    "end": 7468.695,
    "text": "I'll just give two closing areas.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7469.755,
    "end": 7470.216,
    "text": "Again, really...",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7471.454,
    "end": 7496.872,
    "text": " appreciate coming back on and sharing this development in progress already it feels more powerful and documented than when we were in the dot one just a few weeks or months ago i think two areas that are going to be really exciting to discuss and see how they're implemented and also the plurality of ways that they're implemented",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7497.984,
    "end": 7503.792,
    "text": " The first area is structure learning on cognitive models from the outside.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7504.153,
    "end": 7510.682,
    "text": "So as a ethologist, as a behavioral researcher, how do we do structure learning on cognitive models",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7511.817,
    "end": 7521.767,
    "text": " for systems that we actually know about their cognitive architecture or not, but also the view from the inside in terms of structure learning and metacognition.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7522.267,
    "end": 7526.111,
    "text": "Like, how should I change the dimensionality of my B matrix?",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7526.191,
    "end": 7528.033,
    "text": "Or should I turn on that flag",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7528.453,
    "end": 7530.795,
    "text": " to engage in this kind of sophisticated inference.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7530.935,
    "end": 7536.978,
    "text": "So structure learning on cognitive models, view from the outside, view from the inside is one exciting area.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7537.659,
    "end": 7551.747,
    "text": "And the second more experimental area is statistical power analysis, pre and post hoc statistical power analysis along the lines of the design matrix in SPM.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7552.737,
    "end": 7563.419,
    "text": " so that you put 15 time steps and 0.8, 0.2, and punishment is four, and then you could sweep across parameters and learn about how well it did.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7564.14,
    "end": 7572.582,
    "text": "But if there was certain interfaces, analytical or numerical approaches to be like, yes, with 25 time steps,",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7574.582,
    "end": 7595.75,
    "text": " we have this much of an expectation of convergence or this differential in rewards should be resolvable by an adaptive agent over this long and just understand how long should these experiments be because there are such interesting results with one-shot learning",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7596.83,
    "end": 7623.974,
    "text": " and with being able to generate someone's voice from just 10 seconds of them talking or make a video of somebody as a deep fake with just a still image and so it seems like it's possible to learn a lot from a little and if we can learn a lot from a little and have a semantic cognitive model that would be quite great absolutely yeah like",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7625.749,
    "end": 7630.39,
    "text": " It's almost like hyper parameter optimization on the landscape of active inference models.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7630.89,
    "end": 7634.831,
    "text": "How do I choose the parameters of an active inference model in a smart way?",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7634.851,
    "end": 7640.932,
    "text": "Yeah, there's several methods for doing that that we could definitely explore.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7642.092,
    "end": 7649.034,
    "text": "Yeah, and data efficiency is the main thing, like you said, making it so you don't have to train it on a trillion images, like with a deep neural network.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7652.15,
    "end": 7656.173,
    "text": " perfectend.007.2.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7657.053,
    "end": 7667.179,
    "text": "And whenever you want to join, you and any colleagues are always welcome to share the next spiral in PyMDP development.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7668.78,
    "end": 7669.061,
    "text": "Awesome.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7669.081,
    "end": 7672.423,
    "text": "Thank you so much again for letting me come on and listening.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7673.363,
    "end": 7674.204,
    "text": "I hope it was helpful.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7674.844,
    "end": 7676.385,
    "text": "Yeah, and I'm glad that it's recorded.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7676.425,
    "end": 7679.847,
    "text": "It's really an amazing resource that you guys are developing here.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7679.867,
    "end": 7680.708,
    "text": "So thanks again.",
    "speaker": "SPEAKER_03"
  },
  {
    "start": 7682.281,
    "end": 7682.603,
    "text": " Thank you.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7682.904,
    "end": 7683.427,
    "text": "Till next time.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 7683.769,
    "end": 7683.909,
    "text": "Bye.",
    "speaker": "SPEAKER_00"
  }
]