1
00:00:00,080 --> 00:00:02,639
a signal processing group

2
00:00:02,639 --> 00:00:04,400
and so i designed

3
00:00:04,400 --> 00:00:05,680
my training

4
00:00:05,680 --> 00:00:08,080
sorry actually i i just one thing

5
00:00:08,080 --> 00:00:10,559
changed could you just restart that but

6
00:00:10,559 --> 00:00:11,920
go for it

7
00:00:11,920 --> 00:00:12,960
okay

8
00:00:12,960 --> 00:00:15,679
uh thanks for the introduction then my

9
00:00:15,679 --> 00:00:18,320
name is bertie fries i'm a professor in

10
00:00:18,320 --> 00:00:20,400
eindhoven at eindhoven

11
00:00:20,400 --> 00:00:21,920
university of technology in the

12
00:00:21,920 --> 00:00:23,840
netherlands

13
00:00:23,840 --> 00:00:25,920
i'll be a part of

14
00:00:25,920 --> 00:00:28,000
an electrical engineering department in

15
00:00:28,000 --> 00:00:30,480
a signal processing group so we designed

16
00:00:30,480 --> 00:00:33,600
signal processing algorithms and about

17
00:00:33,600 --> 00:00:36,320
six seven years ago i read

18
00:00:36,320 --> 00:00:38,399
for the first time a paper by carl

19
00:00:38,399 --> 00:00:40,559
fiston it was called a rough guide to

20
00:00:40,559 --> 00:00:41,760
the brain

21
00:00:41,760 --> 00:00:44,160
and struck me that this could be

22
00:00:44,160 --> 00:00:46,399
fantastic for signal processing so since

23
00:00:46,399 --> 00:00:49,039
then i'm really trying to work with

24
00:00:49,039 --> 00:00:50,640
people in my lab

25
00:00:50,640 --> 00:00:53,360
on realizing realizing agents that will

26
00:00:53,360 --> 00:00:56,559
design will automate the design process

27
00:00:56,559 --> 00:00:59,199
of signal processing algorithms and as

28
00:00:59,199 --> 00:01:01,120
you know we're doing this by message

29
00:01:01,120 --> 00:01:02,960
passing and we want to talk about that

30
00:01:02,960 --> 00:01:05,199
today

31
00:01:05,199 --> 00:01:06,799
uh thais

32
00:01:06,799 --> 00:01:10,400
yeah um my name is tyson i'm a poster

33
00:01:10,400 --> 00:01:13,760
with bird's lab i did my phd also an

34
00:01:13,760 --> 00:01:15,280
active inference on how to automate

35
00:01:15,280 --> 00:01:17,840
those processes and uh also together

36
00:01:17,840 --> 00:01:20,080
with michael cox and all the colleagues

37
00:01:20,080 --> 00:01:22,000
from the lab we built the toolbox called

38
00:01:22,000 --> 00:01:24,400
fornilab and i'll be talking and walking

39
00:01:24,400 --> 00:01:27,600
you through um how we apply that in an

40
00:01:27,600 --> 00:01:30,400
active infra con inference context um

41
00:01:30,400 --> 00:01:32,560
and do some cool things with that

42
00:01:32,560 --> 00:01:35,920
and so that's for later

43
00:01:37,439 --> 00:01:39,759
yeah hello everyone so my name is nitri

44
00:01:39,759 --> 00:01:42,640
bhagav i'm a phd candidate in bias lab

45
00:01:42,640 --> 00:01:46,000
also in hue in university and yeah my

46
00:01:46,000 --> 00:01:48,000
work is mostly about reactive message

47
00:01:48,000 --> 00:01:50,960
pricing based bayesian inference

48
00:01:50,960 --> 00:01:52,960
that we hope will help with active

49
00:01:52,960 --> 00:01:55,119
inference as well but that's also for

50
00:01:55,119 --> 00:01:56,960
later i will talk about it

51
00:01:56,960 --> 00:01:57,920
on my

52
00:01:57,920 --> 00:02:01,439
uh time yeah my slot

53
00:02:01,759 --> 00:02:04,640
cool thank you

54
00:02:05,119 --> 00:02:07,520
okay um

55
00:02:07,520 --> 00:02:10,160
shall i uh go then and do a little

56
00:02:10,160 --> 00:02:12,560
introduction a few slides

57
00:02:12,560 --> 00:02:14,000
let's see that

58
00:02:14,000 --> 00:02:16,400
yeah okay um

59
00:02:16,400 --> 00:02:18,640
let's see if i can share my

60
00:02:18,640 --> 00:02:20,000
slide

61
00:02:20,000 --> 00:02:21,360
yep looks good

62
00:02:21,360 --> 00:02:23,040
yeah okay

63
00:02:23,040 --> 00:02:25,040
so

64
00:02:25,040 --> 00:02:25,840
the

65
00:02:25,840 --> 00:02:29,040
first slide is uh eindhoven

66
00:02:29,040 --> 00:02:31,120
um because you may wonder where is i

67
00:02:31,120 --> 00:02:33,680
know in relation to amsterdam well it's

68
00:02:33,680 --> 00:02:34,560
about

69
00:02:34,560 --> 00:02:37,280
100 kilometers south of amsterdam close

70
00:02:37,280 --> 00:02:39,680
to the belgian border and not so far

71
00:02:39,680 --> 00:02:41,840
away from germany either

72
00:02:41,840 --> 00:02:42,640
um

73
00:02:42,640 --> 00:02:44,959
so it's a it's sort of a high-tech city

74
00:02:44,959 --> 00:02:46,080
phillips

75
00:02:46,080 --> 00:02:48,400
originated and opened on the right

76
00:02:48,400 --> 00:02:50,560
bottom you see a picture of the center

77
00:02:50,560 --> 00:02:53,599
and the right top is a view of the

78
00:02:53,599 --> 00:02:55,680
campus of our

79
00:02:55,680 --> 00:02:57,519
university of technology

80
00:02:57,519 --> 00:03:00,319
here's an aerial view of groups

81
00:03:00,319 --> 00:03:02,840
going through five here's an aerial view

82
00:03:02,840 --> 00:03:05,360
of our campus

83
00:03:05,360 --> 00:03:07,760
and uh so

84
00:03:07,760 --> 00:03:11,120
here let's see if i can share a pointer

85
00:03:11,120 --> 00:03:13,440
yeah so uh this is the building for

86
00:03:13,440 --> 00:03:14,959
electrical engineering so this is where

87
00:03:14,959 --> 00:03:16,239
we are

88
00:03:16,239 --> 00:03:18,560
ios lab is short for bayesian

89
00:03:18,560 --> 00:03:20,480
intelligent autonomous systems that's

90
00:03:20,480 --> 00:03:22,959
what we try to build

91
00:03:22,959 --> 00:03:25,519
we have about three

92
00:03:25,519 --> 00:03:28,000
let's say staff members faculty members

93
00:03:28,000 --> 00:03:31,200
and currently six phd students dmitry is

94
00:03:31,200 --> 00:03:33,120
one of those pc students

95
00:03:33,120 --> 00:03:35,519
and we have open positions if there are

96
00:03:35,519 --> 00:03:37,760
people watching that are interested in

97
00:03:37,760 --> 00:03:40,640
probabilistic programming or how to make

98
00:03:40,640 --> 00:03:43,200
active inference work

99
00:03:43,200 --> 00:03:45,680
then what are we trying to do this is a

100
00:03:45,680 --> 00:03:47,360
picture that's probably familiar to

101
00:03:47,360 --> 00:03:50,239
everybody in this uh forum right this is

102
00:03:50,239 --> 00:03:52,560
uh this wants to show that well the only

103
00:03:52,560 --> 00:03:53,840
thing that's really going on in the

104
00:03:53,840 --> 00:03:55,200
brain is

105
00:03:55,200 --> 00:03:57,680
for energy minimization or expected free

106
00:03:57,680 --> 00:03:59,120
energy minimization

107
00:03:59,120 --> 00:04:00,560
to do everything

108
00:04:00,560 --> 00:04:03,360
and that's a huge inspiration to us to

109
00:04:03,360 --> 00:04:05,599
us engineers so what we try to do is

110
00:04:05,599 --> 00:04:08,159
basically this we want to put this in an

111
00:04:08,159 --> 00:04:10,879
iphone or on a raspberry pi

112
00:04:10,879 --> 00:04:12,560
and let a robot

113
00:04:12,560 --> 00:04:14,560
learn how to ride a bike

114
00:04:14,560 --> 00:04:16,798
but the beauty of this framework for

115
00:04:16,798 --> 00:04:19,839
engineering purposes is that it's almost

116
00:04:19,839 --> 00:04:22,479
one solution approach to to to any

117
00:04:22,479 --> 00:04:24,080
problem so

118
00:04:24,080 --> 00:04:26,240
if we can do it you could teach a robot

119
00:04:26,240 --> 00:04:27,440
how to write a

120
00:04:27,440 --> 00:04:30,400
energy minimization probably we can also

121
00:04:30,400 --> 00:04:33,360
apply this in virtual reality and design

122
00:04:33,360 --> 00:04:35,120
algorithms for hearing aids or even

123
00:04:35,120 --> 00:04:38,160
self-driving cars

124
00:04:38,240 --> 00:04:40,240
the the big

125
00:04:40,240 --> 00:04:41,280
let's say

126
00:04:41,280 --> 00:04:43,360
promise or the attractiveness for

127
00:04:43,360 --> 00:04:45,840
engineering is that it it's just one

128
00:04:45,840 --> 00:04:48,240
always the same thing you just have to

129
00:04:48,240 --> 00:04:50,240
propose a model and minimize the free

130
00:04:50,240 --> 00:04:51,440
energy

131
00:04:51,440 --> 00:04:53,520
no matter what the application is but

132
00:04:53,520 --> 00:04:54,840
it's very uh

133
00:04:54,840 --> 00:04:56,400
appealing

134
00:04:56,400 --> 00:04:59,919
the problem for engineering is that this

135
00:04:59,919 --> 00:05:02,000
energy functional

136
00:05:02,000 --> 00:05:04,560
is a function of observations and

137
00:05:04,560 --> 00:05:07,600
observations are streaming data coming

138
00:05:07,600 --> 00:05:08,800
usually

139
00:05:08,800 --> 00:05:10,560
well could be at

140
00:05:10,560 --> 00:05:13,199
every millisecond so it's a highly time

141
00:05:13,199 --> 00:05:14,880
varying function

142
00:05:14,880 --> 00:05:17,360
and the number of latent variables let's

143
00:05:17,360 --> 00:05:19,919
say the space of latent variables is

144
00:05:19,919 --> 00:05:23,039
usually very high so we have a very high

145
00:05:23,039 --> 00:05:24,639
dimensional function that is time

146
00:05:24,639 --> 00:05:25,759
varying

147
00:05:25,759 --> 00:05:27,120
and

148
00:05:27,120 --> 00:05:29,280
we want to minimize that now the brain

149
00:05:29,280 --> 00:05:31,360
is very good at it right the brain has

150
00:05:31,360 --> 00:05:34,880
uh what is a 10 to the power of 14

151
00:05:34,880 --> 00:05:38,720
synapses 100 billion euros

152
00:05:38,720 --> 00:05:41,039
but a normal

153
00:05:41,039 --> 00:05:43,120
optimization library and model up or

154
00:05:43,120 --> 00:05:45,360
python will not cut it you cannot

155
00:05:45,360 --> 00:05:47,840
minimize a time varying function of

156
00:05:47,840 --> 00:05:49,919
thousand variables in

157
00:05:49,919 --> 00:05:51,759
matlab it's not going to work

158
00:05:51,759 --> 00:05:55,520
so we need something quite radical here

159
00:05:55,520 --> 00:05:57,840
and the idea we go with is not that

160
00:05:57,840 --> 00:06:00,800
radical again we just take inspiration

161
00:06:00,800 --> 00:06:03,520
from the brain right the brain is a

162
00:06:03,520 --> 00:06:07,039
network of message passing and turns out

163
00:06:07,039 --> 00:06:09,360
in my own field

164
00:06:09,360 --> 00:06:12,240
in signal processing

165
00:06:12,240 --> 00:06:15,440
or information theory to be exact

166
00:06:15,440 --> 00:06:17,840
this has been formalized there's a paper

167
00:06:17,840 --> 00:06:18,880
here by

168
00:06:18,880 --> 00:06:22,000
dave forney in 2001

169
00:06:22,000 --> 00:06:24,560
codes on graphs normal realizations he

170
00:06:24,560 --> 00:06:27,039
called it normal factor graphs but in

171
00:06:27,039 --> 00:06:29,840
honor of david forney there today

172
00:06:29,840 --> 00:06:31,360
they're called forney style factory

173
00:06:31,360 --> 00:06:32,319
graphs

174
00:06:32,319 --> 00:06:33,440
and

175
00:06:33,440 --> 00:06:35,600
so this is the origin of the factor

176
00:06:35,600 --> 00:06:37,280
graphs that we are talking about and a

177
00:06:37,280 --> 00:06:39,120
few years later

178
00:06:39,120 --> 00:06:41,600
hans andreia luliger at the university

179
00:06:41,600 --> 00:06:43,039
in series

180
00:06:43,039 --> 00:06:45,280
uh i have made this

181
00:06:45,280 --> 00:06:47,840
popular in the signal processing

182
00:06:47,840 --> 00:06:51,360
community and already around 2007 you

183
00:06:51,360 --> 00:06:54,479
see in in his papers these uh

184
00:06:54,479 --> 00:06:56,720
yeah these typical structures like this

185
00:06:56,720 --> 00:06:58,560
that we will show also later these are

186
00:06:58,560 --> 00:07:00,080
kalman filters

187
00:07:00,080 --> 00:07:01,919
this is really also what tristan talks

188
00:07:01,919 --> 00:07:04,880
about these kinds of structures so

189
00:07:04,880 --> 00:07:06,960
um this is uh

190
00:07:06,960 --> 00:07:08,639
what we want to do in our language is to

191
00:07:08,639 --> 00:07:10,800
combine what

192
00:07:10,800 --> 00:07:13,039
active inference from the inspire

193
00:07:13,039 --> 00:07:14,319
inspiration from the neuroscience

194
00:07:14,319 --> 00:07:16,639
community and combine it with what we

195
00:07:16,639 --> 00:07:18,240
know in signal processing and

196
00:07:18,240 --> 00:07:20,560
information theory about factor graphs

197
00:07:20,560 --> 00:07:24,639
and use these tools to to implement this

198
00:07:24,639 --> 00:07:26,560
uh so today

199
00:07:26,560 --> 00:07:29,199
we have two presentations one by text

200
00:07:29,199 --> 00:07:30,479
from the line

201
00:07:30,479 --> 00:07:33,120
uh on how to do message passing by

202
00:07:33,120 --> 00:07:35,360
forney lab forney lab is the toolbox

203
00:07:35,360 --> 00:07:36,800
that we wrote

204
00:07:36,800 --> 00:07:38,160
uh you know

205
00:07:38,160 --> 00:07:40,960
the name of course refers to the forney

206
00:07:40,960 --> 00:07:42,720
uh and thais will show how to do active

207
00:07:42,720 --> 00:07:45,120
influence with this toolbox

208
00:07:45,120 --> 00:07:47,280
then we're also working on a new version

209
00:07:47,280 --> 00:07:49,680
it's called reactive message passing and

210
00:07:49,680 --> 00:07:51,520
dmitry is the main person there and

211
00:07:51,520 --> 00:07:53,280
dimitri also

212
00:07:53,280 --> 00:07:55,280
i'll talk about that a bit

213
00:07:55,280 --> 00:07:57,360
and that's all for me

214
00:07:57,360 --> 00:07:59,680
um i'll give it back to you dan or maybe

215
00:07:59,680 --> 00:08:00,800
uh

216
00:08:00,800 --> 00:08:02,960
can continue what is your preference

217
00:08:02,960 --> 00:08:03,840
i'll

218
00:08:03,840 --> 00:08:06,720
stop sharing my screen

219
00:08:06,720 --> 00:08:08,400
see

220
00:08:08,400 --> 00:08:10,720
super interesting thanks a lot for the

221
00:08:10,720 --> 00:08:12,479
context and

222
00:08:12,479 --> 00:08:14,400
it will be awesome to hear from the

223
00:08:14,400 --> 00:08:16,560
authors with maybe any reflections on

224
00:08:16,560 --> 00:08:18,879
those general points you raised and how

225
00:08:18,879 --> 00:08:20,960
it gets applied in a really specific way

226
00:08:20,960 --> 00:08:22,319
because you brought up a ton of topics

227
00:08:22,319 --> 00:08:24,960
that we talk about all the time like the

228
00:08:24,960 --> 00:08:27,440
simplicity of one unified approach and

229
00:08:27,440 --> 00:08:29,759
the challenges of ongoing optimization

230
00:08:29,759 --> 00:08:31,520
problems and drawing inspiration from

231
00:08:31,520 --> 00:08:33,599
nature so great things i think we can

232
00:08:33,599 --> 00:08:35,440
just jump to whichever

233
00:08:35,440 --> 00:08:36,880
of the presentation

234
00:08:36,880 --> 00:08:38,719
you all prefer

235
00:08:38,719 --> 00:08:40,640
all right then i'll go ahead and try to

236
00:08:40,640 --> 00:08:42,000
share my screen

237
00:08:42,000 --> 00:08:44,880
see if that works

238
00:08:46,130 --> 00:08:49,189
[Music]

239
00:08:53,279 --> 00:08:56,160
select windows screen entire screen okay

240
00:08:56,160 --> 00:08:58,800
a lot more

241
00:09:00,720 --> 00:09:02,080
practical streams i think you can see my

242
00:09:02,080 --> 00:09:03,839
screen now yep

243
00:09:03,839 --> 00:09:05,600
you can make it look just large on your

244
00:09:05,600 --> 00:09:07,200
side and i'll resize it there we go

245
00:09:07,200 --> 00:09:09,440
looks great

246
00:09:09,440 --> 00:09:11,920
there we go all right

247
00:09:11,920 --> 00:09:14,160
well thanks again for having us can you

248
00:09:14,160 --> 00:09:15,440
click away i will be giving a little

249
00:09:15,440 --> 00:09:17,040
introduction sorry where it says you're

250
00:09:17,040 --> 00:09:19,040
sharing your um screen you could hide

251
00:09:19,040 --> 00:09:21,600
that little jitsi thing

252
00:09:21,600 --> 00:09:23,600
um and it's gone

253
00:09:23,600 --> 00:09:25,040
thank you

254
00:09:25,040 --> 00:09:26,880
so um yeah i'll be giving a little

255
00:09:26,880 --> 00:09:28,560
introduction on how to

256
00:09:28,560 --> 00:09:30,320
do message passing with phony lab in the

257
00:09:30,320 --> 00:09:32,800
context of active inference

258
00:09:32,800 --> 00:09:34,480
and to give a little bit of motivation

259
00:09:34,480 --> 00:09:37,040
for this talk um this is kind of the

260
00:09:37,040 --> 00:09:39,360
situation where we're interested in so

261
00:09:39,360 --> 00:09:42,000
we have some kind of an environment

262
00:09:42,000 --> 00:09:43,600
and we have an environmental process

263
00:09:43,600 --> 00:09:45,360
that's running in that environment and

264
00:09:45,360 --> 00:09:47,680
we want to develop an agent that has

265
00:09:47,680 --> 00:09:49,760
some purpose or does some purposeful

266
00:09:49,760 --> 00:09:53,120
task within that environment

267
00:09:53,120 --> 00:09:54,959
and the agent is allowed to

268
00:09:54,959 --> 00:09:56,640
send actions to the environment and

269
00:09:56,640 --> 00:09:58,880
manipulate that environment and it will

270
00:09:58,880 --> 00:10:02,160
receive observations

271
00:10:02,160 --> 00:10:04,320
and in the environment process there is

272
00:10:04,320 --> 00:10:05,519
some

273
00:10:05,519 --> 00:10:08,320
function rt that is running there and it

274
00:10:08,320 --> 00:10:10,000
might be simulation that we run that we

275
00:10:10,000 --> 00:10:11,760
interact with that or it might be even a

276
00:10:11,760 --> 00:10:14,079
real world process of which of course we

277
00:10:14,079 --> 00:10:16,640
don't really know what rt is running in

278
00:10:16,640 --> 00:10:19,120
the real world and somehow we want to

279
00:10:19,120 --> 00:10:21,680
build an agent that does something

280
00:10:21,680 --> 00:10:23,279
in that world

281
00:10:23,279 --> 00:10:26,640
so where do you start with that

282
00:10:26,800 --> 00:10:29,360
there's this paper from conant and ashby

283
00:10:29,360 --> 00:10:31,040
in the 1970s

284
00:10:31,040 --> 00:10:32,480
and they have an interesting theorem

285
00:10:32,480 --> 00:10:33,600
that says that

286
00:10:33,600 --> 00:10:36,000
every good regulator of a system must be

287
00:10:36,000 --> 00:10:39,040
a model of that system

288
00:10:39,040 --> 00:10:39,920
so

289
00:10:39,920 --> 00:10:41,519
that actually means that if you want to

290
00:10:41,519 --> 00:10:43,120
build an agent

291
00:10:43,120 --> 00:10:44,839
that regulates or

292
00:10:44,839 --> 00:10:47,839
manipulates our system the environment

293
00:10:47,839 --> 00:10:51,920
then we have to model that system

294
00:10:51,920 --> 00:10:53,600
so as an

295
00:10:53,600 --> 00:10:55,920
engineer we are in the business

296
00:10:55,920 --> 00:10:57,839
of building models

297
00:10:57,839 --> 00:11:00,880
generative models to be precise

298
00:11:00,880 --> 00:11:03,120
and this model represents our belief

299
00:11:03,120 --> 00:11:04,160
about

300
00:11:04,160 --> 00:11:05,920
how observations

301
00:11:05,920 --> 00:11:09,839
follow from our manipulations

302
00:11:09,839 --> 00:11:12,160
we represented by a function f that is a

303
00:11:12,160 --> 00:11:15,839
function of y the observations

304
00:11:15,839 --> 00:11:17,839
the controls u

305
00:11:17,839 --> 00:11:20,560
and also some latent state hidden

306
00:11:20,560 --> 00:11:23,440
variables x

307
00:11:23,440 --> 00:11:25,440
that act as intermediate between

308
00:11:25,440 --> 00:11:29,160
observations and controls

309
00:11:30,160 --> 00:11:31,760
now

310
00:11:31,760 --> 00:11:34,000
reasoning forward is one thing but in

311
00:11:34,000 --> 00:11:36,160
the end what we want to do is observe

312
00:11:36,160 --> 00:11:38,640
things and then propose controls that

313
00:11:38,640 --> 00:11:41,600
lead us to favorable states

314
00:11:41,600 --> 00:11:42,959
and that is where

315
00:11:42,959 --> 00:11:44,880
the idea of the free energy principle

316
00:11:44,880 --> 00:11:47,519
and active inference comes in

317
00:11:47,519 --> 00:11:49,440
so if we want

318
00:11:49,440 --> 00:11:51,360
to see this is the hypothesis so that if

319
00:11:51,360 --> 00:11:53,600
we want to build an agent that does

320
00:11:53,600 --> 00:11:55,440
something purposeful then we can do that

321
00:11:55,440 --> 00:11:58,240
by minimizing a free energy bound on

322
00:11:58,240 --> 00:12:00,240
surprise

323
00:12:00,240 --> 00:12:02,320
so we want to build an agent that avoids

324
00:12:02,320 --> 00:12:05,040
surprises and by that we can do bayesian

325
00:12:05,040 --> 00:12:07,600
inferences about that environment

326
00:12:07,600 --> 00:12:09,600
so we have to build some kind of free

327
00:12:09,600 --> 00:12:11,200
energy functional

328
00:12:11,200 --> 00:12:13,680
for the agent to optimize

329
00:12:13,680 --> 00:12:16,720
and by that duration inferences for

330
00:12:16,720 --> 00:12:19,540
actions and controls

331
00:12:19,540 --> 00:12:20,959
[Music]

332
00:12:20,959 --> 00:12:23,760
and we defined as for energy functional

333
00:12:23,760 --> 00:12:26,240
as a kl divergence between the

334
00:12:26,240 --> 00:12:28,160
generative model that we have

335
00:12:28,160 --> 00:12:29,600
and some kind of an approximate

336
00:12:29,600 --> 00:12:32,959
posterior that we postulate that we here

337
00:12:32,959 --> 00:12:35,839
define q t

338
00:12:36,000 --> 00:12:38,240
and minimizing this energy functional

339
00:12:38,240 --> 00:12:40,160
will then allow us to reason backwards

340
00:12:40,160 --> 00:12:44,560
from observations towards controls

341
00:12:45,360 --> 00:12:48,720
that's kind of the general idea

342
00:12:48,720 --> 00:12:50,320
and

343
00:12:50,320 --> 00:12:52,480
having postulated this i have choices to

344
00:12:52,480 --> 00:12:53,360
make

345
00:12:53,360 --> 00:12:55,680
so for example one big choice that i

346
00:12:55,680 --> 00:12:57,760
want to make is how do i choose my model

347
00:12:57,760 --> 00:12:59,600
how do i choose my f

348
00:12:59,600 --> 00:13:01,760
in such a way that

349
00:13:01,760 --> 00:13:03,839
is useful to me

350
00:13:03,839 --> 00:13:06,399
and also how do i choose my qut

351
00:13:06,399 --> 00:13:08,320
how do i choose the factorization of

352
00:13:08,320 --> 00:13:09,440
that

353
00:13:09,440 --> 00:13:13,040
such that i can make my inferences

354
00:13:13,120 --> 00:13:14,160
and

355
00:13:14,160 --> 00:13:17,360
that process is kind of a thing of trial

356
00:13:17,360 --> 00:13:19,120
and error

357
00:13:19,120 --> 00:13:20,800
and um

358
00:13:20,800 --> 00:13:22,480
as an engineer i want of course to build

359
00:13:22,480 --> 00:13:24,959
the best model that i possibly can

360
00:13:24,959 --> 00:13:26,959
but how how do i go as quickly as

361
00:13:26,959 --> 00:13:28,720
possible through a process of trial and

362
00:13:28,720 --> 00:13:30,959
error that gives me the best mark the

363
00:13:30,959 --> 00:13:34,199
best model

364
00:13:34,560 --> 00:13:36,800
and this is where the idea of a model

365
00:13:36,800 --> 00:13:39,199
design cycle comes in

366
00:13:39,199 --> 00:13:41,839
and this was again made popular by david

367
00:13:41,839 --> 00:13:43,120
bly

368
00:13:43,120 --> 00:13:45,440
in his paper in 2014 built compute

369
00:13:45,440 --> 00:13:47,600
critique repeat

370
00:13:47,600 --> 00:13:49,760
and he proposes a cycle where an

371
00:13:49,760 --> 00:13:52,240
engineer proposes a model

372
00:13:52,240 --> 00:13:54,320
and then with that model you want to

373
00:13:54,320 --> 00:13:56,480
infer your quantities of interest given

374
00:13:56,480 --> 00:13:58,079
data

375
00:13:58,079 --> 00:13:59,600
and if you have infer the model like

376
00:13:59,600 --> 00:14:01,279
that you want to criticize it

377
00:14:01,279 --> 00:14:02,720
and based upon

378
00:14:02,720 --> 00:14:04,560
well the performance that you have

379
00:14:04,560 --> 00:14:07,680
evaluated you want to reiterate rebuild

380
00:14:07,680 --> 00:14:08,800
your model

381
00:14:08,800 --> 00:14:09,839
infer

382
00:14:09,839 --> 00:14:10,720
again

383
00:14:10,720 --> 00:14:12,959
and see how well it then performs

384
00:14:12,959 --> 00:14:14,639
until you're satisfied and you can apply

385
00:14:14,639 --> 00:14:16,959
it in your agent in in practice maybe in

386
00:14:16,959 --> 00:14:19,680
a real world setting

387
00:14:19,680 --> 00:14:21,440
and then the challenge becomes then how

388
00:14:21,440 --> 00:14:24,079
do i go through this design cycle as

389
00:14:24,079 --> 00:14:27,040
quickly as possible

390
00:14:27,120 --> 00:14:29,279
so we want to be flexible we want to

391
00:14:29,279 --> 00:14:31,760
automate things

392
00:14:31,760 --> 00:14:34,000
and making model proposals itself is

393
00:14:34,000 --> 00:14:35,040
something

394
00:14:35,040 --> 00:14:37,440
that well you have to do as an as an

395
00:14:37,440 --> 00:14:38,800
engineer you have to come up with a

396
00:14:38,800 --> 00:14:40,320
proposal of

397
00:14:40,320 --> 00:14:44,079
how you believe the world functions

398
00:14:44,079 --> 00:14:45,920
but once you have that

399
00:14:45,920 --> 00:14:48,959
everything else can be automated

400
00:14:48,959 --> 00:14:50,800
you can infer these quantities by

401
00:14:50,800 --> 00:14:52,480
probabilistic programming you can

402
00:14:52,480 --> 00:14:55,920
evaluate the free energy as a measure of

403
00:14:55,920 --> 00:14:57,360
model performance

404
00:14:57,360 --> 00:14:59,040
[Music]

405
00:14:59,040 --> 00:15:00,399
and

406
00:15:00,399 --> 00:15:03,120
automating this cycle will be the key to

407
00:15:03,120 --> 00:15:05,360
making model proposals for an agent that

408
00:15:05,360 --> 00:15:07,519
will be useful in practice so you want

409
00:15:07,519 --> 00:15:08,639
to go through this as quickly as

410
00:15:08,639 --> 00:15:10,160
possible

411
00:15:10,160 --> 00:15:11,760
so that's why we choose a specific

412
00:15:11,760 --> 00:15:14,079
method we choose vector graphs

413
00:15:14,079 --> 00:15:16,240
to represent our factorized models

414
00:15:16,240 --> 00:15:17,680
because

415
00:15:17,680 --> 00:15:20,000
in a graph you can do manipulations you

416
00:15:20,000 --> 00:15:22,560
can add nodes delete nodes you can

417
00:15:22,560 --> 00:15:24,839
rewire things very

418
00:15:24,839 --> 00:15:26,959
quickly and once you have a graphical

419
00:15:26,959 --> 00:15:29,040
representation of your model you can do

420
00:15:29,040 --> 00:15:31,440
message passing on that graph in order

421
00:15:31,440 --> 00:15:34,399
to automate the inference

422
00:15:34,399 --> 00:15:36,720
and you can even evaluate free energy by

423
00:15:36,720 --> 00:15:38,839
local contributions in that

424
00:15:38,839 --> 00:15:41,920
graph so that is why we choose a

425
00:15:41,920 --> 00:15:43,519
graphical representation and that is why

426
00:15:43,519 --> 00:15:45,440
we want to do message passing because we

427
00:15:45,440 --> 00:15:47,440
want to design models quickly

428
00:15:47,440 --> 00:15:51,680
so that we can design effective agents

429
00:15:52,639 --> 00:15:54,880
now how do these graphs

430
00:15:54,880 --> 00:15:57,279
kind of work right how do you build an

431
00:15:57,279 --> 00:15:58,639
effective graph or what does that look

432
00:15:58,639 --> 00:16:00,560
like

433
00:16:00,560 --> 00:16:03,040
so we choose a specific representation

434
00:16:03,040 --> 00:16:04,560
of our model

435
00:16:04,560 --> 00:16:06,880
and this is an example where we have a

436
00:16:06,880 --> 00:16:09,120
generative model of five variables x1

437
00:16:09,120 --> 00:16:10,959
through x5

438
00:16:10,959 --> 00:16:15,759
and we have three factors f a b and c

439
00:16:15,759 --> 00:16:18,079
and here on the picture on the right is

440
00:16:18,079 --> 00:16:20,240
the graphical representation of that

441
00:16:20,240 --> 00:16:21,279
model

442
00:16:21,279 --> 00:16:23,440
and as you can see the edges correspond

443
00:16:23,440 --> 00:16:25,680
to the variables and the nodes

444
00:16:25,680 --> 00:16:28,560
correspond to the vectors

445
00:16:28,560 --> 00:16:31,360
and the edges are connected to the nodes

446
00:16:31,360 --> 00:16:32,399
of which

447
00:16:32,399 --> 00:16:34,560
the vectors are in arguments so here you

448
00:16:34,560 --> 00:16:37,040
see node fa which connects edges x1 and

449
00:16:37,040 --> 00:16:39,759
x2 well that is because x1 and x2 are

450
00:16:39,759 --> 00:16:42,160
arguments of fa

451
00:16:42,160 --> 00:16:45,519
same for fb and fc

452
00:16:46,800 --> 00:16:48,079
now

453
00:16:48,079 --> 00:16:50,639
how do we do inference in this graph

454
00:16:50,639 --> 00:16:53,680
so suppose that we observe x5

455
00:16:53,680 --> 00:16:56,480
which is indicated by this little solid

456
00:16:56,480 --> 00:16:58,399
square

457
00:16:58,399 --> 00:17:00,560
and we want to compute our belief over

458
00:17:00,560 --> 00:17:02,800
x2 given x5

459
00:17:02,800 --> 00:17:05,359
well what do you do well you marginalize

460
00:17:05,359 --> 00:17:07,199
everything and

461
00:17:07,199 --> 00:17:09,119
by marginalization i mean you integrate

462
00:17:09,119 --> 00:17:10,959
out every variable

463
00:17:10,959 --> 00:17:12,559
except the one that you're interested in

464
00:17:12,559 --> 00:17:14,319
so accept x2

465
00:17:14,319 --> 00:17:16,559
you integrate everything out and you you

466
00:17:16,559 --> 00:17:20,640
add this constraint that you observe x5

467
00:17:20,640 --> 00:17:23,199
now if you have a big model

468
00:17:23,199 --> 00:17:25,599
then this integration becomes very

469
00:17:25,599 --> 00:17:28,319
cumbersome because this here is

470
00:17:28,319 --> 00:17:30,480
you have here four variables of which to

471
00:17:30,480 --> 00:17:32,559
integrate

472
00:17:32,559 --> 00:17:33,520
so

473
00:17:33,520 --> 00:17:35,679
this room this this integration space

474
00:17:35,679 --> 00:17:37,840
that really explodes if you want to do

475
00:17:37,840 --> 00:17:40,320
this naively

476
00:17:40,320 --> 00:17:43,039
but you can be smart about this

477
00:17:43,039 --> 00:17:45,120
you can

478
00:17:45,120 --> 00:17:47,640
you can

479
00:17:47,640 --> 00:17:49,919
re-shuffle these integrals according to

480
00:17:49,919 --> 00:17:52,080
their respective terms

481
00:17:52,080 --> 00:17:54,480
so for example

482
00:17:54,480 --> 00:17:57,600
this integration over x5

483
00:17:57,600 --> 00:18:00,000
well there is only one factor where x5

484
00:18:00,000 --> 00:18:01,440
is an argument of

485
00:18:01,440 --> 00:18:03,520
so i can use the distributive rule to

486
00:18:03,520 --> 00:18:06,960
bring this integral inside

487
00:18:07,280 --> 00:18:09,840
so that i divide these integrals up into

488
00:18:09,840 --> 00:18:14,120
smaller parts which are manageable

489
00:18:14,320 --> 00:18:16,400
and this is where message passing comes

490
00:18:16,400 --> 00:18:17,200
from

491
00:18:17,200 --> 00:18:19,919
message passing is essentially solving

492
00:18:19,919 --> 00:18:22,559
these integrations one by one

493
00:18:22,559 --> 00:18:25,520
so i can first integra integrate out x

494
00:18:25,520 --> 00:18:27,520
x one here for example

495
00:18:27,520 --> 00:18:28,559
which

496
00:18:28,559 --> 00:18:31,280
as we say summarizes all the information

497
00:18:31,280 --> 00:18:33,840
inside this orange box and it gives us a

498
00:18:33,840 --> 00:18:35,919
message first message here that exits

499
00:18:35,919 --> 00:18:38,480
this orange box

500
00:18:38,480 --> 00:18:40,320
then it can continue for the bottom so

501
00:18:40,320 --> 00:18:43,120
integra integrate out x5

502
00:18:43,120 --> 00:18:45,840
and i get a second message

503
00:18:45,840 --> 00:18:48,160
and i can use this second message

504
00:18:48,160 --> 00:18:50,559
in the computation of the third message

505
00:18:50,559 --> 00:18:52,880
so this way you get

506
00:18:52,880 --> 00:18:56,080
a nested solution approach

507
00:18:56,080 --> 00:18:58,240
where i use the the the solution that i

508
00:18:58,240 --> 00:18:59,600
have for the message two in the

509
00:18:59,600 --> 00:19:01,760
computation of message three

510
00:19:01,760 --> 00:19:03,679
and you see that in the end

511
00:19:03,679 --> 00:19:05,600
the multiplication of these two

512
00:19:05,600 --> 00:19:08,320
colliding messages on the edge for x2

513
00:19:08,320 --> 00:19:10,000
will give me

514
00:19:10,000 --> 00:19:12,480
my proportional belief my proportional

515
00:19:12,480 --> 00:19:14,960
posterior

516
00:19:14,960 --> 00:19:19,280
over x2 given what i have observed

517
00:19:21,120 --> 00:19:24,400
so to give a little example of

518
00:19:24,400 --> 00:19:27,679
a specific node how that works

519
00:19:27,679 --> 00:19:30,320
here's an equality constraint node

520
00:19:30,320 --> 00:19:32,080
which we use

521
00:19:32,080 --> 00:19:33,120
as

522
00:19:33,120 --> 00:19:34,640
as a constraint

523
00:19:34,640 --> 00:19:36,320
to

524
00:19:36,320 --> 00:19:38,400
to constrain the beliefs upon the the

525
00:19:38,400 --> 00:19:41,280
adjacent edges to be equal

526
00:19:41,280 --> 00:19:43,840
um and what that does is that they will

527
00:19:43,840 --> 00:19:45,440
follow if we if we go through the math

528
00:19:45,440 --> 00:19:46,559
here

529
00:19:46,559 --> 00:19:47,520
um

530
00:19:47,520 --> 00:19:48,880
this is what the node function looks

531
00:19:48,880 --> 00:19:51,200
like so i say okay it's a function of

532
00:19:51,200 --> 00:19:53,200
three variables x y and z

533
00:19:53,200 --> 00:19:55,679
and i constrain z

534
00:19:55,679 --> 00:19:58,960
to be x and i constrain z also to be y

535
00:19:58,960 --> 00:20:00,000
so

536
00:20:00,000 --> 00:20:01,760
then x will also be y if i constrain

537
00:20:01,760 --> 00:20:03,840
those two to be the same

538
00:20:03,840 --> 00:20:05,679
so let's see if we can derive messages

539
00:20:05,679 --> 00:20:08,640
based on this

540
00:20:08,880 --> 00:20:09,760
so

541
00:20:09,760 --> 00:20:11,520
if i want to summarize the information

542
00:20:11,520 --> 00:20:13,360
into this orange box

543
00:20:13,360 --> 00:20:14,960
i can use the sub-product rule for that

544
00:20:14,960 --> 00:20:16,799
i have the two messages coming in here

545
00:20:16,799 --> 00:20:18,320
from the left and from the bottom

546
00:20:18,320 --> 00:20:20,880
message one and message 2.

547
00:20:20,880 --> 00:20:23,280
i multiplied that by the node function

548
00:20:23,280 --> 00:20:24,799
of the equality node and i want to

549
00:20:24,799 --> 00:20:27,760
perform this integration

550
00:20:27,760 --> 00:20:29,360
now i substitute

551
00:20:29,360 --> 00:20:31,280
this

552
00:20:31,280 --> 00:20:32,880
this node function here with dividing

553
00:20:32,880 --> 00:20:34,720
integration and then i can use the

554
00:20:34,720 --> 00:20:36,240
shifting property

555
00:20:36,240 --> 00:20:37,200
to

556
00:20:37,200 --> 00:20:39,600
kind of replace the arguments here of x

557
00:20:39,600 --> 00:20:41,440
and y with

558
00:20:41,440 --> 00:20:43,840
the arguments of z

559
00:20:43,840 --> 00:20:47,120
so what i have essentially done here is

560
00:20:47,120 --> 00:20:49,360
saying i can compute this message

561
00:20:49,360 --> 00:20:51,919
three by multiplying the two messages

562
00:20:51,919 --> 00:20:53,440
that are incoming from the left and from

563
00:20:53,440 --> 00:20:55,280
the bottom

564
00:20:55,280 --> 00:20:56,799
now if you squint your eyes a bit and

565
00:20:56,799 --> 00:20:58,799
you look uh you look through your eyes

566
00:20:58,799 --> 00:21:00,799
you can kind of recognize

567
00:21:00,799 --> 00:21:03,919
a proportional base rule in here

568
00:21:03,919 --> 00:21:06,320
so essentially you can say well if

569
00:21:06,320 --> 00:21:08,000
message three here represents my

570
00:21:08,000 --> 00:21:09,360
posterior

571
00:21:09,360 --> 00:21:11,919
then message one can represent my prior

572
00:21:11,919 --> 00:21:15,440
a message to my likelihood

573
00:21:15,440 --> 00:21:17,280
and then i have a proportional posterior

574
00:21:17,280 --> 00:21:19,520
message three and then i can pass on to

575
00:21:19,520 --> 00:21:21,520
the rest of my model

576
00:21:21,520 --> 00:21:23,200
and this node is also often used to kind

577
00:21:23,200 --> 00:21:24,880
of combine information that's coming

578
00:21:24,880 --> 00:21:28,000
from the left and from the bottom

579
00:21:29,120 --> 00:21:31,840
um

580
00:21:34,320 --> 00:21:36,480
so this is a very quick introduction to

581
00:21:36,480 --> 00:21:38,320
do message passing

582
00:21:38,320 --> 00:21:42,240
um we have derived lots of rules also

583
00:21:42,240 --> 00:21:43,760
from the literature also implemented a

584
00:21:43,760 --> 00:21:46,400
lot of rules that are already derived

585
00:21:46,400 --> 00:21:49,200
into uh into phony lab which is

586
00:21:49,200 --> 00:21:50,880
basically

587
00:21:50,880 --> 00:21:53,679
well a software problem programming

588
00:21:53,679 --> 00:21:55,360
suite that

589
00:21:55,360 --> 00:21:57,520
does the scheduling and

590
00:21:57,520 --> 00:22:00,240
this message computation for you

591
00:22:00,240 --> 00:22:01,760
so you don't have to think about that

592
00:22:01,760 --> 00:22:03,280
too much how to redistribute these

593
00:22:03,280 --> 00:22:06,240
integrals and how to derive

594
00:22:06,240 --> 00:22:10,400
well a lot of updates for specific nodes

595
00:22:10,960 --> 00:22:13,280
um so that's kind of

596
00:22:13,280 --> 00:22:15,520
the things that that we can we can

597
00:22:15,520 --> 00:22:17,280
automate

598
00:22:17,280 --> 00:22:19,919
uh on that side of the uh of the design

599
00:22:19,919 --> 00:22:22,320
cycle

600
00:22:23,200 --> 00:22:24,840
now

601
00:22:24,840 --> 00:22:27,120
other any questions about this because

602
00:22:27,120 --> 00:22:28,880
i'm going through this very quickly and

603
00:22:28,880 --> 00:22:30,240
what i'm going to do next is kind of

604
00:22:30,240 --> 00:22:32,320
want to walk through an example

605
00:22:32,320 --> 00:22:34,240
so maybe this is kind of a natural point

606
00:22:34,240 --> 00:22:36,880
where people have questions that they

607
00:22:36,880 --> 00:22:38,880
can kind of stop me and think hey you're

608
00:22:38,880 --> 00:22:41,440
going to fast here

609
00:22:41,440 --> 00:22:43,600
i think it'll be good to see the example

610
00:22:43,600 --> 00:22:45,280
and then we have some questions in the

611
00:22:45,280 --> 00:22:47,039
live chat and also anyone's welcome to

612
00:22:47,039 --> 00:22:49,120
add more

613
00:22:49,120 --> 00:22:52,158
all right sure sure

614
00:22:52,400 --> 00:22:54,480
so how do you do this in practice

615
00:22:54,480 --> 00:22:56,640
in an active inference context so this

616
00:22:56,640 --> 00:22:58,080
is a little example it's called the

617
00:22:58,080 --> 00:23:00,559
bayesian thermostat

618
00:23:00,559 --> 00:23:02,960
where we have an environment environment

619
00:23:02,960 --> 00:23:03,760
so

620
00:23:03,760 --> 00:23:05,840
where we have a heat source here on the

621
00:23:05,840 --> 00:23:08,000
left and we have a little car that can

622
00:23:08,000 --> 00:23:09,600
move around it can move away from the

623
00:23:09,600 --> 00:23:11,520
heat source or it can move towards the

624
00:23:11,520 --> 00:23:13,679
heat source

625
00:23:13,679 --> 00:23:16,400
now the position relative to heat source

626
00:23:16,400 --> 00:23:19,120
is what we call x

627
00:23:19,120 --> 00:23:20,799
and at every position there is a

628
00:23:20,799 --> 00:23:22,799
specific temperature

629
00:23:22,799 --> 00:23:23,679
um

630
00:23:23,679 --> 00:23:25,120
and temperature that we measure at a

631
00:23:25,120 --> 00:23:29,600
specific position is what we call y

632
00:23:29,679 --> 00:23:31,600
and we have a preference of being at a

633
00:23:31,600 --> 00:23:33,440
temperature of four

634
00:23:33,440 --> 00:23:35,440
y four i don't know it's something we

635
00:23:35,440 --> 00:23:37,600
choose

636
00:23:37,600 --> 00:23:39,360
now we control control this car by

637
00:23:39,360 --> 00:23:41,279
moving it left or right and our control

638
00:23:41,279 --> 00:23:43,440
this is the velocity that we move left

639
00:23:43,440 --> 00:23:45,360
or right with and it's called

640
00:23:45,360 --> 00:23:47,520
u

641
00:23:47,840 --> 00:23:50,880
so this is our environment

642
00:23:50,880 --> 00:23:54,320
and we want to build a model for that

643
00:23:54,320 --> 00:23:56,240
so

644
00:23:56,240 --> 00:23:57,919
in active interference what we want to

645
00:23:57,919 --> 00:23:59,760
do is

646
00:23:59,760 --> 00:24:01,840
we want to reason

647
00:24:01,840 --> 00:24:05,039
from states where we would like to be

648
00:24:05,039 --> 00:24:07,600
towards controls that we have to apply

649
00:24:07,600 --> 00:24:09,679
at this current at this current time in

650
00:24:09,679 --> 00:24:12,080
order to get there in the future

651
00:24:12,080 --> 00:24:13,679
so what we want to do is we want to

652
00:24:13,679 --> 00:24:16,000
reason forward from the current time

653
00:24:16,000 --> 00:24:17,360
time t

654
00:24:17,360 --> 00:24:18,400
up into

655
00:24:18,400 --> 00:24:21,120
some time horizon big t

656
00:24:21,120 --> 00:24:22,880
and

657
00:24:22,880 --> 00:24:25,200
in the future we want to consider

658
00:24:25,200 --> 00:24:27,200
how the agent will move

659
00:24:27,200 --> 00:24:29,120
and where we want that agent to be at

660
00:24:29,120 --> 00:24:32,960
that time and in the end we will want to

661
00:24:32,960 --> 00:24:35,760
be at a temperature of four

662
00:24:35,760 --> 00:24:37,200
and that's a state space model that

663
00:24:37,200 --> 00:24:41,520
represents our belief for how this agent

664
00:24:41,520 --> 00:24:42,880
will

665
00:24:42,880 --> 00:24:44,320
will

666
00:24:44,320 --> 00:24:46,480
move itself through the world

667
00:24:46,480 --> 00:24:48,720
so at time t we have an observation

668
00:24:48,720 --> 00:24:51,200
coming in of a specific temperature

669
00:24:51,200 --> 00:24:55,360
and maybe we have already made an action

670
00:24:55,360 --> 00:24:56,960
um and

671
00:24:56,960 --> 00:24:59,600
we say that

672
00:24:59,600 --> 00:25:02,159
the current state xt relates to the

673
00:25:02,159 --> 00:25:03,840
previous state and action that we have

674
00:25:03,840 --> 00:25:06,559
by by adding so basically ut here is a

675
00:25:06,559 --> 00:25:08,320
velocity that we add to our current

676
00:25:08,320 --> 00:25:09,600
position

677
00:25:09,600 --> 00:25:12,880
um in in one time step and then we get

678
00:25:12,880 --> 00:25:14,640
kind of our next position

679
00:25:14,640 --> 00:25:17,039
by just adding that and also applying

680
00:25:17,039 --> 00:25:19,520
some gaussian noise

681
00:25:19,520 --> 00:25:21,279
and so we have a state transition that

682
00:25:21,279 --> 00:25:23,520
is this additive with uh

683
00:25:23,520 --> 00:25:25,600
with duty saying i want to move forward

684
00:25:25,600 --> 00:25:28,880
to the left or four to the right um and

685
00:25:28,880 --> 00:25:30,559
then we add some gaussian noise saying

686
00:25:30,559 --> 00:25:33,039
okay we're kind of uncertain about

687
00:25:33,039 --> 00:25:34,799
um how this agent might move in the

688
00:25:34,799 --> 00:25:35,919
environment

689
00:25:35,919 --> 00:25:38,159
we have an idea about that but let's add

690
00:25:38,159 --> 00:25:40,080
some variants in order to

691
00:25:40,080 --> 00:25:43,760
account for some uncertainties

692
00:25:43,760 --> 00:25:45,520
and then we say here with this vertical

693
00:25:45,520 --> 00:25:47,520
line that if we have

694
00:25:47,520 --> 00:25:49,600
um an observation

695
00:25:49,600 --> 00:25:52,159
or if we have a position then it relates

696
00:25:52,159 --> 00:25:55,840
to an observation of the temperature

697
00:25:55,840 --> 00:25:56,960
well

698
00:25:56,960 --> 00:25:59,279
-1 it's kind of a rough guess it's just

699
00:25:59,279 --> 00:26:01,440
saying well

700
00:26:01,440 --> 00:26:03,200
if i move to the right if i move away

701
00:26:03,200 --> 00:26:05,200
from my heat source then my temperature

702
00:26:05,200 --> 00:26:06,720
will decline

703
00:26:06,720 --> 00:26:09,120
with a slope of minus one

704
00:26:09,120 --> 00:26:11,200
and it's kind of a really rough guess in

705
00:26:11,200 --> 00:26:12,880
the real world there will be a very nice

706
00:26:12,880 --> 00:26:14,640
temperature gradient that maybe will

707
00:26:14,640 --> 00:26:16,799
move like

708
00:26:16,799 --> 00:26:19,360
will move very slowly downwards

709
00:26:19,360 --> 00:26:21,840
um but we're just saying hey we don't

710
00:26:21,840 --> 00:26:24,400
really know what that is let's make a

711
00:26:24,400 --> 00:26:26,159
rough guess we have a belief this is our

712
00:26:26,159 --> 00:26:27,760
generative model our belief about the

713
00:26:27,760 --> 00:26:29,520
world let's just say that temperature

714
00:26:29,520 --> 00:26:32,400
decreases with position

715
00:26:32,400 --> 00:26:33,919
and again we're not very certain about

716
00:26:33,919 --> 00:26:36,559
that so let's again add

717
00:26:36,559 --> 00:26:39,600
some gaussian noise

718
00:26:39,600 --> 00:26:41,679
and now i extend this

719
00:26:41,679 --> 00:26:43,919
into the future so i say actually well i

720
00:26:43,919 --> 00:26:45,760
believe that in the future my

721
00:26:45,760 --> 00:26:48,240
environment will also evolve

722
00:26:48,240 --> 00:26:50,480
according to this

723
00:26:50,480 --> 00:26:51,360
but

724
00:26:51,360 --> 00:26:53,520
i also have some ideas about where i

725
00:26:53,520 --> 00:26:55,360
want to be

726
00:26:55,360 --> 00:26:58,720
and this is where gold priors come in

727
00:26:58,720 --> 00:27:00,960
that constrain my future observations of

728
00:27:00,960 --> 00:27:03,200
the temperature to be around this

729
00:27:03,200 --> 00:27:06,240
desired temperature of four

730
00:27:06,240 --> 00:27:08,080
and i'm saying then here with some added

731
00:27:08,080 --> 00:27:11,200
noise well um

732
00:27:11,200 --> 00:27:13,360
i want to be around four right it

733
00:27:13,360 --> 00:27:15,360
doesn't have to be exactly but i want to

734
00:27:15,360 --> 00:27:18,240
be pretty certain that um i will be

735
00:27:18,240 --> 00:27:21,360
around four at time t plus 1 and i will

736
00:27:21,360 --> 00:27:22,480
continue

737
00:27:22,480 --> 00:27:24,080
to remain there

738
00:27:24,080 --> 00:27:25,039
until

739
00:27:25,039 --> 00:27:28,080
sometime in the future

740
00:27:30,320 --> 00:27:33,200
now we have regenerative model

741
00:27:33,200 --> 00:27:35,200
and

742
00:27:35,200 --> 00:27:37,279
we can define our energy functional and

743
00:27:37,279 --> 00:27:39,360
we can solve this for energy functional

744
00:27:39,360 --> 00:27:41,919
by message passing on this graph

745
00:27:41,919 --> 00:27:44,960
and we pass these messages towards

746
00:27:44,960 --> 00:27:46,480
our next control

747
00:27:46,480 --> 00:27:49,360
because we're interested in inferring

748
00:27:49,360 --> 00:27:52,480
what we have to do next like from from

749
00:27:52,480 --> 00:27:55,279
from the next time

750
00:27:55,600 --> 00:27:57,679
um and this is where we can do message

751
00:27:57,679 --> 00:27:59,600
passing we can summarize all the

752
00:27:59,600 --> 00:28:02,720
information that we have from

753
00:28:02,720 --> 00:28:04,159
from the past so this will be an

754
00:28:04,159 --> 00:28:06,240
estimate of the current state of the

755
00:28:06,240 --> 00:28:07,679
agent

756
00:28:07,679 --> 00:28:09,600
and it will be biased by our beliefs

757
00:28:09,600 --> 00:28:11,279
about the future saying where we want to

758
00:28:11,279 --> 00:28:12,240
be

759
00:28:12,240 --> 00:28:14,799
and that will influence or determine

760
00:28:14,799 --> 00:28:17,039
which control that we will take

761
00:28:17,039 --> 00:28:18,640
at the present time

762
00:28:18,640 --> 00:28:21,520
or at the next time

763
00:28:21,600 --> 00:28:24,640
all the details of that this are

764
00:28:24,640 --> 00:28:26,559
are described in

765
00:28:26,559 --> 00:28:28,880
this paper from 2019

766
00:28:28,880 --> 00:28:31,039
by

767
00:28:34,080 --> 00:28:35,600
you can also see kind of how we apply

768
00:28:35,600 --> 00:28:37,440
that

769
00:28:37,440 --> 00:28:40,000
within the action perception loop

770
00:28:40,000 --> 00:28:42,240
and things like that

771
00:28:42,240 --> 00:28:43,520
because you will have to do this at

772
00:28:43,520 --> 00:28:44,960
every time t

773
00:28:44,960 --> 00:28:46,799
because your state estimate will change

774
00:28:46,799 --> 00:28:48,159
the word will change according to your

775
00:28:48,159 --> 00:28:49,760
actions so you will for every time you

776
00:28:49,760 --> 00:28:51,600
will have to recompute a new action for

777
00:28:51,600 --> 00:28:54,719
what you're going to do next

778
00:28:55,120 --> 00:28:57,600
um and this is kind of the

779
00:28:57,600 --> 00:28:59,360
the main idea now of course we don't

780
00:28:59,360 --> 00:29:01,120
want to do everything

781
00:29:01,120 --> 00:29:03,679
of this by hand so what we want to do is

782
00:29:03,679 --> 00:29:07,200
well we want to use a tool for that

783
00:29:07,679 --> 00:29:09,039
so now

784
00:29:09,039 --> 00:29:10,960
i'm going to show a little demo of how

785
00:29:10,960 --> 00:29:12,880
you would implement this

786
00:29:12,880 --> 00:29:15,360
um using the the formula probabilistic

787
00:29:15,360 --> 00:29:17,520
programming tool

788
00:29:17,520 --> 00:29:19,840
so let's see if i can

789
00:29:19,840 --> 00:29:22,480
open our little demo so this is uh

790
00:29:22,480 --> 00:29:24,320
this is readable actually or should i

791
00:29:24,320 --> 00:29:25,520
zoom in more

792
00:29:25,520 --> 00:29:27,279
um

793
00:29:27,279 --> 00:29:30,640
you can zoom in a little bit more

794
00:29:32,720 --> 00:29:35,440
maybe like this

795
00:29:35,440 --> 00:29:37,840
uh yeah i can resize it

796
00:29:37,840 --> 00:29:39,360
um

797
00:29:39,360 --> 00:29:41,520
that that's pretty good

798
00:29:41,520 --> 00:29:42,880
oh that's perfect

799
00:29:42,880 --> 00:29:46,159
that's pretty good yep thank you

800
00:29:48,640 --> 00:29:52,000
so this is um so so it's kind of set

801
00:29:52,000 --> 00:29:55,279
what what we want to do

802
00:29:55,440 --> 00:29:58,080
but so this is kind of our definition of

803
00:29:58,080 --> 00:29:59,919
the environment itself so this is the

804
00:29:59,919 --> 00:30:01,279
the real world

805
00:30:01,279 --> 00:30:03,039
well we have this this temperature

806
00:30:03,039 --> 00:30:05,120
gradient which is a very nice function

807
00:30:05,120 --> 00:30:07,840
so very smooth function

808
00:30:07,840 --> 00:30:09,039
where at the heat source we have a

809
00:30:09,039 --> 00:30:10,640
temperature of 100

810
00:30:10,640 --> 00:30:12,960
and it

811
00:30:12,960 --> 00:30:14,880
it goes down with

812
00:30:14,880 --> 00:30:18,410
with with position from the heat source

813
00:30:18,410 --> 00:30:20,240
[Music]

814
00:30:20,240 --> 00:30:21,679
so this is a real world we don't really

815
00:30:21,679 --> 00:30:23,360
know this so this is the one that we're

816
00:30:23,360 --> 00:30:25,279
going to approximate with this

817
00:30:25,279 --> 00:30:28,640
very rough minus one and then

818
00:30:28,640 --> 00:30:31,279
we'll see whether that will work on it

819
00:30:31,279 --> 00:30:33,360
now this is my wonderful ascii art that

820
00:30:33,360 --> 00:30:35,600
has now been resized of basically the

821
00:30:35,600 --> 00:30:38,880
model that i've just shown in the slides

822
00:30:38,880 --> 00:30:40,559
um

823
00:30:40,559 --> 00:30:42,960
and this here is our model definition so

824
00:30:42,960 --> 00:30:44,480
actually i have to zoom out a bit to

825
00:30:44,480 --> 00:30:45,919
make it more readable

826
00:30:45,919 --> 00:30:48,399
yeah so we want to build a graph for

827
00:30:48,399 --> 00:30:50,799
this right so um here we have our

828
00:30:50,799 --> 00:30:53,679
observation states controls

829
00:30:53,679 --> 00:30:56,720
and we define a prior belief

830
00:30:56,720 --> 00:30:59,200
about t minus one so where have we been

831
00:30:59,200 --> 00:31:01,120
which we're going to say is a gaussian

832
00:31:01,120 --> 00:31:05,039
and with some mean and some variance

833
00:31:05,039 --> 00:31:07,440
and then for every time into the future

834
00:31:07,440 --> 00:31:11,039
from uh from one until the horizon

835
00:31:11,039 --> 00:31:12,320
we will have a prior belief about

836
00:31:12,320 --> 00:31:15,840
controls which basically says well

837
00:31:15,840 --> 00:31:18,240
what am i allowed to do when i say okay

838
00:31:18,240 --> 00:31:19,039
well

839
00:31:19,039 --> 00:31:20,159
um

840
00:31:20,159 --> 00:31:22,640
i have a i'll have a gaucho prior about

841
00:31:22,640 --> 00:31:24,480
controls with

842
00:31:24,480 --> 00:31:26,159
a mean of zero

843
00:31:26,159 --> 00:31:28,480
i'll substitute that there and then

844
00:31:28,480 --> 00:31:31,279
maybe some variance

845
00:31:31,279 --> 00:31:32,880
and um

846
00:31:32,880 --> 00:31:34,960
here i say well i have my position of

847
00:31:34,960 --> 00:31:37,600
the agent it relates to my controls by

848
00:31:37,600 --> 00:31:38,399
just

849
00:31:38,399 --> 00:31:39,919
this addition

850
00:31:39,919 --> 00:31:41,120
um

851
00:31:41,120 --> 00:31:42,880
with some added precision gamma so this

852
00:31:42,880 --> 00:31:44,640
is our transition model

853
00:31:44,640 --> 00:31:46,880
this is horizontal

854
00:31:46,880 --> 00:31:48,480
line

855
00:31:48,480 --> 00:31:50,480
and this is our observation model which

856
00:31:50,480 --> 00:31:52,640
is very

857
00:31:52,640 --> 00:31:54,399
rough estimate minus one of the

858
00:31:54,399 --> 00:31:56,000
temperature gradient

859
00:31:56,000 --> 00:31:58,880
times current state and also some

860
00:31:58,880 --> 00:32:00,640
some some precision

861
00:32:00,640 --> 00:32:03,200
conservation precision

862
00:32:03,200 --> 00:32:06,320
and this represents my goal prior

863
00:32:06,320 --> 00:32:09,120
so note that i haven't really put in any

864
00:32:09,120 --> 00:32:12,320
specific values here yet i've just have

865
00:32:12,320 --> 00:32:14,399
placeholders for actual statistics and

866
00:32:14,399 --> 00:32:16,880
values that i'm going to put in

867
00:32:16,880 --> 00:32:18,480
because the actual derivation of my

868
00:32:18,480 --> 00:32:20,480
algorithm doesn't really depend upon the

869
00:32:20,480 --> 00:32:23,120
statistics it's just something that

870
00:32:23,120 --> 00:32:27,799
we can we can put in later

871
00:32:28,240 --> 00:32:29,760
so this is what i want to do build a

872
00:32:29,760 --> 00:32:31,919
free energy functional and the phony lab

873
00:32:31,919 --> 00:32:33,679
is actually just

874
00:32:33,679 --> 00:32:36,720
basically four lines of code

875
00:32:36,720 --> 00:32:39,279
um so this stereo factorization that

876
00:32:39,279 --> 00:32:42,559
defines my factorization for q

877
00:32:42,559 --> 00:32:44,240
saying that um

878
00:32:44,240 --> 00:32:46,960
i'm just going to have

879
00:32:46,960 --> 00:32:50,640
a joint variational distribution

880
00:32:50,640 --> 00:32:52,880
um over the entire graph

881
00:32:52,880 --> 00:32:54,559
i don't really subdivide it into a

882
00:32:54,559 --> 00:32:55,840
structure into a structured

883
00:32:55,840 --> 00:32:57,760
factorization some people are familiar

884
00:32:57,760 --> 00:32:59,279
with that

885
00:32:59,279 --> 00:33:01,440
um but just saying okay i just have this

886
00:33:01,440 --> 00:33:03,039
stereo factorization of the variational

887
00:33:03,039 --> 00:33:05,919
distribution to be my entire graph

888
00:33:05,919 --> 00:33:08,640
and never just one command

889
00:33:08,640 --> 00:33:11,120
i can derive a message passing algorithm

890
00:33:11,120 --> 00:33:14,080
that propagates all the messages towards

891
00:33:14,080 --> 00:33:16,320
control u2 which which which is the

892
00:33:16,320 --> 00:33:18,159
control for the next

893
00:33:18,159 --> 00:33:21,039
time step t plus one

894
00:33:21,039 --> 00:33:23,039
and i want to evaluate my free energy so

895
00:33:23,039 --> 00:33:24,799
also give me at the same time an

896
00:33:24,799 --> 00:33:27,840
algorithm that i can i can execute in

897
00:33:27,840 --> 00:33:31,439
order to evaluate my free energy

898
00:33:31,919 --> 00:33:35,279
and this line will convert this

899
00:33:35,279 --> 00:33:36,320
to

900
00:33:36,320 --> 00:33:38,320
two source code that i can then load in

901
00:33:38,320 --> 00:33:41,120
my environment

902
00:33:41,200 --> 00:33:43,519
and what this does is it builds a

903
00:33:43,519 --> 00:33:46,480
message passing algorithm for us

904
00:33:46,480 --> 00:33:48,559
so this is this this is the code that

905
00:33:48,559 --> 00:33:50,159
executes the message passing on our

906
00:33:50,159 --> 00:33:51,200
graph

907
00:33:51,200 --> 00:33:53,120
and here you can see that it computes

908
00:33:53,120 --> 00:33:54,640
all these messages

909
00:33:54,640 --> 00:33:57,039
by some product rules and other rules

910
00:33:57,039 --> 00:33:58,559
there we have pre-derived and we have

911
00:33:58,559 --> 00:34:01,279
implemented in fornilab

912
00:34:01,279 --> 00:34:03,039
and you can see that these messages they

913
00:34:03,039 --> 00:34:05,360
depend upon the statistics so this is

914
00:34:05,360 --> 00:34:07,679
for example the mean of

915
00:34:07,679 --> 00:34:09,520
of our prior

916
00:34:09,520 --> 00:34:11,280
over states and variance of a prior

917
00:34:11,280 --> 00:34:13,839
overstates

918
00:34:14,079 --> 00:34:15,599
and we have other messages that depend

919
00:34:15,599 --> 00:34:18,000
upon previous messages

920
00:34:18,000 --> 00:34:19,359
in the way that i explained message

921
00:34:19,359 --> 00:34:21,199
passing

922
00:34:21,199 --> 00:34:23,839
and this builds an entire list of in

923
00:34:23,839 --> 00:34:27,599
this case 26 messages

924
00:34:27,599 --> 00:34:29,918
and in the end we're interested in the

925
00:34:29,918 --> 00:34:32,079
marginal beliefs so the posterior

926
00:34:32,079 --> 00:34:35,040
marginal beliefs about about for example

927
00:34:35,040 --> 00:34:36,480
or controls

928
00:34:36,480 --> 00:34:38,399
and you get these beliefs by multiplying

929
00:34:38,399 --> 00:34:40,879
messages together so for example to get

930
00:34:40,879 --> 00:34:43,199
a new belief over the following control

931
00:34:43,199 --> 00:34:44,560
you multiply

932
00:34:44,560 --> 00:34:48,639
messages 9 and 25

933
00:34:48,639 --> 00:34:50,719
and you also recognize this from a

934
00:34:50,719 --> 00:34:52,560
little introduction past introduction

935
00:34:52,560 --> 00:34:54,239
where you have colliding messages on the

936
00:34:54,239 --> 00:34:56,239
edge that you multiply in order to get

937
00:34:56,239 --> 00:34:58,400
your posterior beliefs

938
00:34:58,400 --> 00:34:59,920
and that's what we return in the end

939
00:34:59,920 --> 00:35:03,720
that's what we're interested in

940
00:35:06,160 --> 00:35:07,760
so this is the execution of that

941
00:35:07,760 --> 00:35:08,960
algorithm

942
00:35:08,960 --> 00:35:10,640
and notice that we've made an entire

943
00:35:10,640 --> 00:35:12,160
schedule here and

944
00:35:12,160 --> 00:35:14,800
they can be very cumbersome

945
00:35:14,800 --> 00:35:17,119
can be very long very long schedule and

946
00:35:17,119 --> 00:35:19,599
so that makes it expensive maybe to load

947
00:35:19,599 --> 00:35:21,359
and to execute

948
00:35:21,359 --> 00:35:22,800
and dimitri has the solution for that

949
00:35:22,800 --> 00:35:25,359
and he'll explain that in a minute

950
00:35:25,359 --> 00:35:27,520
um so i'm very happy about building

951
00:35:27,520 --> 00:35:29,119
schedules

952
00:35:29,119 --> 00:35:32,400
and um dimitri not so much uh

953
00:35:32,400 --> 00:35:34,560
and he tries to find uh find a solution

954
00:35:34,560 --> 00:35:36,160
for them get rid of them

955
00:35:36,160 --> 00:35:37,680
um because in the end that will be the

956
00:35:37,680 --> 00:35:38,800
fastest

957
00:35:38,800 --> 00:35:40,400
to really don't

958
00:35:40,400 --> 00:35:41,839
have a schedule that not really had

959
00:35:41,839 --> 00:35:44,880
recipe but just cook by whatever is

960
00:35:44,880 --> 00:35:47,440
given to you

961
00:35:49,920 --> 00:35:51,599
so now we execute this algorithm in

962
00:35:51,599 --> 00:35:52,800
practice so this is our action

963
00:35:52,800 --> 00:35:55,520
perception loop for every time step

964
00:35:55,520 --> 00:35:57,599
we want to

965
00:35:57,599 --> 00:35:59,119
we want to act we want to evoke an

966
00:35:59,119 --> 00:36:01,359
action from the agent we want to execute

967
00:36:01,359 --> 00:36:04,240
that that that action in

968
00:36:04,240 --> 00:36:06,720
the uh in the environment so this is

969
00:36:06,720 --> 00:36:09,040
sending the action towards actual real

970
00:36:09,040 --> 00:36:11,200
world or kind of simulated world in this

971
00:36:11,200 --> 00:36:13,680
case and what we get from that is an

972
00:36:13,680 --> 00:36:15,680
observation

973
00:36:15,680 --> 00:36:18,079
and from our action observation we want

974
00:36:18,079 --> 00:36:20,640
to infer

975
00:36:20,960 --> 00:36:22,640
infer our new action

976
00:36:22,640 --> 00:36:24,320
and also return

977
00:36:24,320 --> 00:36:26,560
the variation of free energy

978
00:36:26,560 --> 00:36:28,240
um

979
00:36:28,240 --> 00:36:30,160
and then prepare for the next step so in

980
00:36:30,160 --> 00:36:31,920
every step we propose an action to the

981
00:36:31,920 --> 00:36:34,160
environment it actually gets executed we

982
00:36:34,160 --> 00:36:35,839
observe a new outcome

983
00:36:35,839 --> 00:36:37,920
we we infer new action

984
00:36:37,920 --> 00:36:41,680
um and we evaluate how well we did with

985
00:36:41,680 --> 00:36:44,319
that action

986
00:36:46,480 --> 00:36:48,480
and then you get well nice plots like

987
00:36:48,480 --> 00:36:50,160
this so

988
00:36:50,160 --> 00:36:52,480
this is the velocity of our agent

989
00:36:52,480 --> 00:36:54,240
we start at zero and you can see that it

990
00:36:54,240 --> 00:36:56,960
moves very quickly to the right

991
00:36:56,960 --> 00:36:57,920
um

992
00:36:57,920 --> 00:36:59,920
and then

993
00:36:59,920 --> 00:37:02,240
it also moves back a little bit um until

994
00:37:02,240 --> 00:37:05,200
the end comes to a stationary point more

995
00:37:05,200 --> 00:37:06,839
or

996
00:37:06,839 --> 00:37:09,680
less um and you can see actually here

997
00:37:09,680 --> 00:37:11,119
what it does so it starts out at a

998
00:37:11,119 --> 00:37:13,359
temperature of 20

999
00:37:13,359 --> 00:37:15,920
then it moves very quickly to the right

1000
00:37:15,920 --> 00:37:17,760
away from the heat source

1001
00:37:17,760 --> 00:37:20,560
it overshoots its mark

1002
00:37:20,560 --> 00:37:22,560
and then it actually goes back and then

1003
00:37:22,560 --> 00:37:23,920
it settles around this desired

1004
00:37:23,920 --> 00:37:26,320
temperature of four that we have uh

1005
00:37:26,320 --> 00:37:30,480
encoded by by our goal priors

1006
00:37:31,839 --> 00:37:34,400
um so why does overshoot well our model

1007
00:37:34,400 --> 00:37:36,480
of the environment wasn't perfect right

1008
00:37:36,480 --> 00:37:39,119
we had this very rough estimate of minus

1009
00:37:39,119 --> 00:37:40,560
minus one

1010
00:37:40,560 --> 00:37:43,040
um and in the real world was this very

1011
00:37:43,040 --> 00:37:46,240
nice smooth kind of complicated function

1012
00:37:46,240 --> 00:37:47,280
um

1013
00:37:47,280 --> 00:37:51,680
that has this kind of bell shape

1014
00:37:51,680 --> 00:37:54,000
so even though

1015
00:37:54,000 --> 00:37:55,599
our generative model of the environment

1016
00:37:55,599 --> 00:37:57,200
wasn't perfect

1017
00:37:57,200 --> 00:37:59,520
um in the end we paid by that pay for

1018
00:37:59,520 --> 00:38:01,599
that by overshooting a little bit but

1019
00:38:01,599 --> 00:38:04,880
still we were able to get to our desired

1020
00:38:04,880 --> 00:38:06,560
state at the temperature of four so in

1021
00:38:06,560 --> 00:38:07,440
the end

1022
00:38:07,440 --> 00:38:10,720
it kind of worked pretty well

1023
00:38:10,800 --> 00:38:12,240
and you can also see that the free

1024
00:38:12,240 --> 00:38:14,880
energy of the agent also decreases with

1025
00:38:14,880 --> 00:38:16,880
time so we start off at around a

1026
00:38:16,880 --> 00:38:19,680
thousand so the scale's logarithmic here

1027
00:38:19,680 --> 00:38:22,640
and it decreases very quickly um to our

1028
00:38:22,640 --> 00:38:24,720
sum value it's

1029
00:38:24,720 --> 00:38:27,040
rather rather low right and then we have

1030
00:38:27,040 --> 00:38:29,359
some noise that that induces some

1031
00:38:29,359 --> 00:38:32,320
unexpected changes or some unexpected

1032
00:38:32,320 --> 00:38:34,079
surprises

1033
00:38:34,079 --> 00:38:36,079
um so that's why you have these little

1034
00:38:36,079 --> 00:38:38,240
ripples these little ripples here but in

1035
00:38:38,240 --> 00:38:39,760
the end we're minimizing free energy and

1036
00:38:39,760 --> 00:38:41,920
it's going it's decreasing drastically

1037
00:38:41,920 --> 00:38:43,440
so we actually have this free energy

1038
00:38:43,440 --> 00:38:47,079
minimizing agent

1039
00:38:47,200 --> 00:38:48,079
um

1040
00:38:48,079 --> 00:38:50,880
and yeah that's uh that's basically

1041
00:38:50,880 --> 00:38:53,200
all i have the story and

1042
00:38:53,200 --> 00:38:55,759
and the demo

1043
00:38:56,880 --> 00:39:00,320
that was awesome thank you very much we

1044
00:39:00,320 --> 00:39:03,520
can uh with screen share on or not ask a

1045
00:39:03,520 --> 00:39:05,040
few of the questions from the live chat

1046
00:39:05,040 --> 00:39:07,040
and also give people a few seconds to

1047
00:39:07,040 --> 00:39:08,720
type more so

1048
00:39:08,720 --> 00:39:10,160
i'm just going to jump into the

1049
00:39:10,160 --> 00:39:12,320
questions

1050
00:39:12,320 --> 00:39:14,480
first let me stop my screenshot

1051
00:39:14,480 --> 00:39:16,640
great so we're still sharing the screen

1052
00:39:16,640 --> 00:39:19,280
story um we see just the jitsies so go

1053
00:39:19,280 --> 00:39:21,119
just click the screen share button again

1054
00:39:21,119 --> 00:39:23,599
in jitsi

1055
00:39:25,440 --> 00:39:27,599
so awesome thank you so the first

1056
00:39:27,599 --> 00:39:29,359
question

1057
00:39:29,359 --> 00:39:31,920
is from john and john writes how does

1058
00:39:31,920 --> 00:39:34,320
the factor graph approach work if the

1059
00:39:34,320 --> 00:39:36,960
graph structure is not known beforehand

1060
00:39:36,960 --> 00:39:41,079
is structure learning possible

1061
00:39:43,040 --> 00:39:44,720
uh yeah so so that's a good that's a

1062
00:39:44,720 --> 00:39:46,800
good question so is structural learning

1063
00:39:46,800 --> 00:39:49,520
possible in graphs like these

1064
00:39:49,520 --> 00:39:51,839
um

1065
00:39:52,079 --> 00:39:54,240
so that is actually something that is

1066
00:39:54,240 --> 00:39:55,520
still an active

1067
00:39:55,520 --> 00:39:57,520
field of research that would be awesome

1068
00:39:57,520 --> 00:39:59,599
if you can automate also the structure

1069
00:39:59,599 --> 00:40:01,599
learning of the graph itself

1070
00:40:01,599 --> 00:40:02,880
but there are a lot of challenges there

1071
00:40:02,880 --> 00:40:04,400
so how do you parameterize this graph

1072
00:40:04,400 --> 00:40:07,520
structure um or and and how do you do

1073
00:40:07,520 --> 00:40:08,960
how do you do that actually right what

1074
00:40:08,960 --> 00:40:12,560
is your search space in terms of graphs

1075
00:40:12,560 --> 00:40:14,240
how do you how do you learn node

1076
00:40:14,240 --> 00:40:15,920
functions if you don't have a node

1077
00:40:15,920 --> 00:40:18,160
function given for your graph right so

1078
00:40:18,160 --> 00:40:19,760
these are all very difficult questions

1079
00:40:19,760 --> 00:40:21,200
and you don't have a straightforward

1080
00:40:21,200 --> 00:40:23,040
answer

1081
00:40:23,040 --> 00:40:24,800
so so that's why

1082
00:40:24,800 --> 00:40:27,040
this actual model design step in the

1083
00:40:27,040 --> 00:40:27,920
design

1084
00:40:27,920 --> 00:40:29,359
cycle itself

1085
00:40:29,359 --> 00:40:31,440
is still kind of a creative process

1086
00:40:31,440 --> 00:40:33,359
there is an engineer that has to come up

1087
00:40:33,359 --> 00:40:34,880
with a model

1088
00:40:34,880 --> 00:40:36,560
and as an engineer you also have to

1089
00:40:36,560 --> 00:40:38,400
think about how to adjust that model if

1090
00:40:38,400 --> 00:40:40,240
you're not satisfied with it

1091
00:40:40,240 --> 00:40:42,160
so if free energy is still high after

1092
00:40:42,160 --> 00:40:44,400
you run your agent well something is

1093
00:40:44,400 --> 00:40:45,760
going on something is wrong with your

1094
00:40:45,760 --> 00:40:46,720
model it's not an accurate

1095
00:40:46,720 --> 00:40:48,960
representation of what is

1096
00:40:48,960 --> 00:40:50,720
the environment and then you might

1097
00:40:50,720 --> 00:40:53,599
adjust that how do you adjust that well

1098
00:40:53,599 --> 00:40:55,040
currently it's still just trial and

1099
00:40:55,040 --> 00:40:57,280
error so maybe you can say okay i think

1100
00:40:57,280 --> 00:40:58,640
here is still something that i can

1101
00:40:58,640 --> 00:41:00,640
improve maybe remove a node maybe the

1102
00:41:00,640 --> 00:41:03,598
model is too complex

1103
00:41:04,130 --> 00:41:05,440
[Music]

1104
00:41:05,440 --> 00:41:08,880
but structure running in itself is um

1105
00:41:08,880 --> 00:41:10,800
it is something that is

1106
00:41:10,800 --> 00:41:12,560
also it can be addressed so there are

1107
00:41:12,560 --> 00:41:15,599
there are methods like um like nested

1108
00:41:15,599 --> 00:41:17,359
model comparison and things like that

1109
00:41:17,359 --> 00:41:19,280
that you can do in fact graph so you can

1110
00:41:19,280 --> 00:41:20,800
for example if you have a nested model

1111
00:41:20,800 --> 00:41:22,880
compute savage dickey ratio and then

1112
00:41:22,880 --> 00:41:25,440
kind of prune your model based upon that

1113
00:41:25,440 --> 00:41:27,440
and so those are things that you can do

1114
00:41:27,440 --> 00:41:29,040
to find a complex model and see what you

1115
00:41:29,040 --> 00:41:31,759
can cut away

1116
00:41:32,480 --> 00:41:34,000
but adding to that model is still

1117
00:41:34,000 --> 00:41:35,440
difficult so once you've cut it away

1118
00:41:35,440 --> 00:41:37,680
well how do you add yeah i i don't i

1119
00:41:37,680 --> 00:41:39,040
don't really know so that's that's a

1120
00:41:39,040 --> 00:41:41,200
good question and uh i don't have a very

1121
00:41:41,200 --> 00:41:43,040
straightforward and switch you can

1122
00:41:43,040 --> 00:41:46,319
from my rattling so yeah

1123
00:41:46,800 --> 00:41:49,839
perhaps i can say something about it um

1124
00:41:49,839 --> 00:41:52,960
i mean i i totally agree with uh with

1125
00:41:52,960 --> 00:41:55,200
taste i mean generally

1126
00:41:55,200 --> 00:41:57,520
when you design a

1127
00:41:57,520 --> 00:41:59,520
system or signal processing system you

1128
00:41:59,520 --> 00:42:00,839
have to design the

1129
00:42:00,839 --> 00:42:03,119
structure uh you have to estimate the

1130
00:42:03,119 --> 00:42:05,520
parameters and then you have to infer

1131
00:42:05,520 --> 00:42:08,480
states right the states change very fast

1132
00:42:08,480 --> 00:42:11,359
uh it leads to a common filter and and

1133
00:42:11,359 --> 00:42:13,040
that's very

1134
00:42:13,040 --> 00:42:15,599
well known in factor graphs

1135
00:42:15,599 --> 00:42:17,920
then the next stage would be can we also

1136
00:42:17,920 --> 00:42:20,800
over the long term learn parameters

1137
00:42:20,800 --> 00:42:23,200
and our effectographs can do that pretty

1138
00:42:23,200 --> 00:42:24,240
well

1139
00:42:24,240 --> 00:42:27,040
now the the next stage in biology i mean

1140
00:42:27,040 --> 00:42:29,280
we know the structure is also alert over

1141
00:42:29,280 --> 00:42:31,440
even longer times right

1142
00:42:31,440 --> 00:42:33,920
and so that's not working at the moment

1143
00:42:33,920 --> 00:42:37,040
in formula you can compare like tests i

1144
00:42:37,040 --> 00:42:39,119
says if you have two examples you can

1145
00:42:39,119 --> 00:42:41,359
compare the free energy and just pick

1146
00:42:41,359 --> 00:42:43,119
the best one

1147
00:42:43,119 --> 00:42:45,359
but we are working on that and this is i

1148
00:42:45,359 --> 00:42:47,280
mean we're taking again the lead by uh

1149
00:42:47,280 --> 00:42:49,599
from carl's idea on bayesian model

1150
00:42:49,599 --> 00:42:51,920
reduction but how to implement that in a

1151
00:42:51,920 --> 00:42:54,400
factor graph is a research project so

1152
00:42:54,400 --> 00:42:55,839
we're we're we're

1153
00:42:55,839 --> 00:42:58,160
working on that and i'm not sure where

1154
00:42:58,160 --> 00:43:00,560
that will end but that's our goal did

1155
00:43:00,560 --> 00:43:02,640
you have phd position available bert so

1156
00:43:02,640 --> 00:43:04,799
uh

1157
00:43:05,920 --> 00:43:07,920
also to bring it back to the example of

1158
00:43:07,920 --> 00:43:08,640
the

1159
00:43:08,640 --> 00:43:10,640
motor car getting to an optimal

1160
00:43:10,640 --> 00:43:13,040
temperature it's like if every hour you

1161
00:43:13,040 --> 00:43:14,720
notice that there was a bump in the free

1162
00:43:14,720 --> 00:43:16,960
energy then you go back to the drawing

1163
00:43:16,960 --> 00:43:18,640
board and you you go to the people who

1164
00:43:18,640 --> 00:43:20,800
are on that car in that area and ask

1165
00:43:20,800 --> 00:43:23,200
well what happens every hour or maybe we

1166
00:43:23,200 --> 00:43:24,960
do need to include this other source of

1167
00:43:24,960 --> 00:43:28,000
information but the model that you had

1168
00:43:28,000 --> 00:43:30,480
does its job so you could include the

1169
00:43:30,480 --> 00:43:32,400
wallpaper and other features the room

1170
00:43:32,400 --> 00:43:35,040
but that's kind of this art and science

1171
00:43:35,040 --> 00:43:36,720
of engineering and that's why it's

1172
00:43:36,720 --> 00:43:39,599
always interesting to work because

1173
00:43:39,599 --> 00:43:41,280
often in research it's like let's finish

1174
00:43:41,280 --> 00:43:42,640
the analysis

1175
00:43:42,640 --> 00:43:45,200
but really there's this cycle that the

1176
00:43:45,200 --> 00:43:46,240
entire

1177
00:43:46,240 --> 00:43:48,160
model is embedded within

1178
00:43:48,160 --> 00:43:50,400
that helps us always keep an eye out for

1179
00:43:50,400 --> 00:43:52,160
those patterns that are

1180
00:43:52,160 --> 00:43:54,160
precluding being captured by our current

1181
00:43:54,160 --> 00:43:56,319
models

1182
00:43:56,319 --> 00:43:57,839
here's just

1183
00:43:57,839 --> 00:44:00,960
here's a second question from the chat

1184
00:44:00,960 --> 00:44:03,119
how does the factor graph approach work

1185
00:44:03,119 --> 00:44:05,680
if the goal temperature in this example

1186
00:44:05,680 --> 00:44:08,079
is not defined beforehand can the goal

1187
00:44:08,079 --> 00:44:09,920
be abstract so kind of a similar

1188
00:44:09,920 --> 00:44:11,440
question but rather than structure

1189
00:44:11,440 --> 00:44:13,599
learning how does preference and goal

1190
00:44:13,599 --> 00:44:16,319
orientation arise

1191
00:44:16,319 --> 00:44:19,440
again excellent question

1192
00:44:19,920 --> 00:44:20,960
so

1193
00:44:20,960 --> 00:44:22,560
that kind of

1194
00:44:22,560 --> 00:44:24,240
relates to the question well who sets

1195
00:44:24,240 --> 00:44:25,359
the goals

1196
00:44:25,359 --> 00:44:28,560
or how do you set goals

1197
00:44:29,680 --> 00:44:30,640
so

1198
00:44:30,640 --> 00:44:32,560
yeah

1199
00:44:32,560 --> 00:44:34,560
the plain answer to that is well it's an

1200
00:44:34,560 --> 00:44:36,880
engineer that defines that

1201
00:44:36,880 --> 00:44:39,359
um but it can also be a higher level

1202
00:44:39,359 --> 00:44:40,319
agent

1203
00:44:40,319 --> 00:44:42,640
that does inference and sets to his

1204
00:44:42,640 --> 00:44:44,960
goals

1205
00:44:45,040 --> 00:44:47,599
so then you get to kind of

1206
00:44:47,599 --> 00:44:49,280
turtles all the way down

1207
00:44:49,280 --> 00:44:51,520
argument in the sense well you can put

1208
00:44:51,520 --> 00:44:53,760
layer upon layer upon layer upon layer

1209
00:44:53,760 --> 00:44:55,760
and layers set goals and other layers as

1210
00:44:55,760 --> 00:44:58,560
the goals for that layer etc etc

1211
00:44:58,560 --> 00:44:59,760
um

1212
00:44:59,760 --> 00:45:03,280
so how that will work in practice um

1213
00:45:03,280 --> 00:45:06,160
yeah that's still again um

1214
00:45:06,160 --> 00:45:08,240
active research area

1215
00:45:08,240 --> 00:45:10,240
um

1216
00:45:10,240 --> 00:45:11,920
but in the end it should come down to

1217
00:45:11,920 --> 00:45:14,400
minimizing free energy

1218
00:45:14,400 --> 00:45:16,720
so so that's kind of the central theme

1219
00:45:16,720 --> 00:45:18,720
of this we want to we want to minimize

1220
00:45:18,720 --> 00:45:19,920
free energy

1221
00:45:19,920 --> 00:45:21,760
we do it by perception we do it by model

1222
00:45:21,760 --> 00:45:22,880
learning

1223
00:45:22,880 --> 00:45:26,480
um but also learning of the goals

1224
00:45:26,480 --> 00:45:28,480
should be driven by minimizing free

1225
00:45:28,480 --> 00:45:30,240
energy so you should choose the goals

1226
00:45:30,240 --> 00:45:32,240
that minimize for energy well how do you

1227
00:45:32,240 --> 00:45:33,680
do that

1228
00:45:33,680 --> 00:45:34,800
i don't know

1229
00:45:34,800 --> 00:45:36,640
you tell me right

1230
00:45:36,640 --> 00:45:38,879
yeah

1231
00:45:41,280 --> 00:45:44,640
one more question that was asked was how

1232
00:45:44,640 --> 00:45:47,119
or does this integrate with graph

1233
00:45:47,119 --> 00:45:48,560
databases

1234
00:45:48,560 --> 00:45:50,960
or with large data sets is this

1235
00:45:50,960 --> 00:45:52,640
something that scales or is already

1236
00:45:52,640 --> 00:45:54,319
integrated to work with that kind of

1237
00:45:54,319 --> 00:45:56,160
empirical data or

1238
00:45:56,160 --> 00:45:58,319
what

1239
00:45:58,319 --> 00:45:59,760
um i think it depends on what you mean

1240
00:45:59,760 --> 00:46:03,119
by large data sets

1241
00:46:03,119 --> 00:46:04,000
um

1242
00:46:04,000 --> 00:46:04,800
so

1243
00:46:04,800 --> 00:46:06,640
when i hear large data sets i usually

1244
00:46:06,640 --> 00:46:09,200
think about big data things like that

1245
00:46:09,200 --> 00:46:11,200
um

1246
00:46:11,200 --> 00:46:13,359
so um

1247
00:46:13,359 --> 00:46:16,800
this toolbox is specifically built for

1248
00:46:16,800 --> 00:46:18,240
dynamic modeling

1249
00:46:18,240 --> 00:46:19,359
right so

1250
00:46:19,359 --> 00:46:20,880
now in the sense that you have a lot of

1251
00:46:20,880 --> 00:46:23,440
features in your data but it's signal

1252
00:46:23,440 --> 00:46:25,359
processing so data might come in very

1253
00:46:25,359 --> 00:46:27,280
quickly

1254
00:46:27,280 --> 00:46:28,720
and you have a model of how these data

1255
00:46:28,720 --> 00:46:30,319
change over time

1256
00:46:30,319 --> 00:46:31,119
so

1257
00:46:31,119 --> 00:46:33,200
in that sense you want to do processing

1258
00:46:33,200 --> 00:46:35,119
quickly so you want a lot you want

1259
00:46:35,119 --> 00:46:37,599
velocity it's it's based on

1260
00:46:37,599 --> 00:46:39,599
processing with velocity

1261
00:46:39,599 --> 00:46:41,760
not processing with with volume as for

1262
00:46:41,760 --> 00:46:43,839
example other problems programming

1263
00:46:43,839 --> 00:46:47,119
toolboxes are excellent at like um

1264
00:46:47,119 --> 00:46:49,359
by torch and things like that right

1265
00:46:49,359 --> 00:46:51,599
sampling base toolboxes

1266
00:46:51,599 --> 00:46:53,359
adword

1267
00:46:53,359 --> 00:46:56,640
all great toolboxes if you have a volume

1268
00:46:56,640 --> 00:46:58,400
in terms of data and you have for

1269
00:46:58,400 --> 00:47:00,880
example an iid model that you want to uh

1270
00:47:00,880 --> 00:47:03,040
that you want to fit

1271
00:47:03,040 --> 00:47:04,960
um in our sense if we talk about large

1272
00:47:04,960 --> 00:47:06,720
data we talk about volume so data that

1273
00:47:06,720 --> 00:47:08,720
come in very quickly and we try to be

1274
00:47:08,720 --> 00:47:11,599
good at that um phony lab

1275
00:47:11,599 --> 00:47:14,640
is not yet that good at it to be

1276
00:47:14,640 --> 00:47:17,760
honest um but reactive message passing

1277
00:47:17,760 --> 00:47:19,040
is going to be

1278
00:47:19,040 --> 00:47:21,520
the bomb

1279
00:47:22,240 --> 00:47:26,319
at those kind of of data sets

1280
00:47:26,640 --> 00:47:31,520
there's there's also a bit of that

1281
00:47:31,520 --> 00:47:34,079
what we we really try to build these

1282
00:47:34,079 --> 00:47:36,480
toolbox to build active influence agents

1283
00:47:36,480 --> 00:47:38,640
and the idea that you just put these

1284
00:47:38,640 --> 00:47:40,800
agents in an environment they make

1285
00:47:40,800 --> 00:47:44,000
actions they select their own data

1286
00:47:44,000 --> 00:47:47,119
so we don't really

1287
00:47:47,119 --> 00:47:49,040
try to build a toolbox that is really

1288
00:47:49,040 --> 00:47:51,359
good at just doing machine learning for

1289
00:47:51,359 --> 00:47:54,160
a fixed set database

1290
00:47:54,160 --> 00:47:56,720
but rather we try to build

1291
00:47:56,720 --> 00:47:58,319
models that

1292
00:47:58,319 --> 00:48:01,119
let's say dynamic models that can adapt

1293
00:48:01,119 --> 00:48:03,119
and that can make actions and that can

1294
00:48:03,119 --> 00:48:06,559
in real time process streaming data and

1295
00:48:06,559 --> 00:48:09,359
and in that sense over time if you wait

1296
00:48:09,359 --> 00:48:11,599
long enough yeah there's a lot of data

1297
00:48:11,599 --> 00:48:13,760
streaming through it

1298
00:48:13,760 --> 00:48:16,880
but it was sort of generated by you or

1299
00:48:16,880 --> 00:48:19,119
at least affected by the agent itself

1300
00:48:19,119 --> 00:48:21,200
right

1301
00:48:21,200 --> 00:48:23,839
we don't try to optimize for

1302
00:48:23,839 --> 00:48:29,200
for big fixed databases rather for just

1303
00:48:29,200 --> 00:48:32,559
streaming data in an environment

1304
00:48:32,559 --> 00:48:34,480
it's a really fascinating point because

1305
00:48:34,480 --> 00:48:36,640
there's a lot of time dependent tasks

1306
00:48:36,640 --> 00:48:39,040
like autonomous driving where it's like

1307
00:48:39,040 --> 00:48:42,160
okay here's the 500 terabytes of video

1308
00:48:42,160 --> 00:48:43,839
or here's this now give me the best

1309
00:48:43,839 --> 00:48:45,280
possible score

1310
00:48:45,280 --> 00:48:48,800
in a time snapshot and it's it's

1311
00:48:48,800 --> 00:48:50,400
every single time with an active

1312
00:48:50,400 --> 00:48:52,319
inference agent we're always including

1313
00:48:52,319 --> 00:48:54,880
action and policy selection in the loop

1314
00:48:54,880 --> 00:48:56,480
and so

1315
00:48:56,480 --> 00:48:58,400
how how are we going to deal with that

1316
00:48:58,400 --> 00:49:00,319
but that's why the inspiration from

1317
00:49:00,319 --> 00:49:02,640
biological systems becomes so important

1318
00:49:02,640 --> 00:49:04,559
it's kind of like when people go oh well

1319
00:49:04,559 --> 00:49:06,960
the brain must have this processing

1320
00:49:06,960 --> 00:49:09,040
power and then if it were a light bulb

1321
00:49:09,040 --> 00:49:10,559
or if it was this kind of a silicone

1322
00:49:10,559 --> 00:49:11,839
computer it would take up this much

1323
00:49:11,839 --> 00:49:14,160
energy ergo's efficiency is such and

1324
00:49:14,160 --> 00:49:16,640
such but it's predicated upon

1325
00:49:16,640 --> 00:49:18,720
the kind of computers that we're used to

1326
00:49:18,720 --> 00:49:20,800
seeing instead of kind of starting with

1327
00:49:20,800 --> 00:49:22,800
what already exists and then looking for

1328
00:49:22,800 --> 00:49:24,160
an answer that

1329
00:49:24,160 --> 00:49:26,480
rests in that rather than how do we make

1330
00:49:26,480 --> 00:49:28,800
lower power transistors so that we can

1331
00:49:28,800 --> 00:49:31,040
fit them into the brain

1332
00:49:31,040 --> 00:49:31,920
so

1333
00:49:31,920 --> 00:49:34,559
awesome topics i think we're ready for

1334
00:49:34,559 --> 00:49:37,680
the next presentation

1335
00:49:39,440 --> 00:49:41,599
yeah hello everyone let me also share my

1336
00:49:41,599 --> 00:49:45,839
screen uh for a second

1337
00:49:47,920 --> 00:49:52,400
i hope it should work now looks good

1338
00:49:52,400 --> 00:49:56,800
so can you see my slides now yes

1339
00:49:56,800 --> 00:49:59,119
so okay so yeah hello again my name is

1340
00:49:59,119 --> 00:50:02,000
mitri bhagav and i want to introduce you

1341
00:50:02,000 --> 00:50:04,319
like this new reactive message passing

1342
00:50:04,319 --> 00:50:06,400
based framework for bayesian imprints in

1343
00:50:06,400 --> 00:50:08,880
july that we called reactive mp it's

1344
00:50:08,880 --> 00:50:11,200
more like our future vision on solutions

1345
00:50:11,200 --> 00:50:14,079
for active inference fornilab.jl is like

1346
00:50:14,079 --> 00:50:15,680
more like mature

1347
00:50:15,680 --> 00:50:18,800
framework it works and reactive mp is

1348
00:50:18,800 --> 00:50:22,720
our research project for now

1349
00:50:22,720 --> 00:50:24,400
and we are going to start with a

1350
00:50:24,400 --> 00:50:25,520
question

1351
00:50:25,520 --> 00:50:27,359
what is actually reactive message

1352
00:50:27,359 --> 00:50:28,400
busting

1353
00:50:28,400 --> 00:50:29,839
and in a

1354
00:50:29,839 --> 00:50:31,920
in most senses it's the same message

1355
00:50:31,920 --> 00:50:34,960
passing as a formula but re-implemented

1356
00:50:34,960 --> 00:50:37,680
in reactive paradigm so basically the

1357
00:50:37,680 --> 00:50:39,760
major issue with traditional approaches

1358
00:50:39,760 --> 00:50:40,960
in porn lab

1359
00:50:40,960 --> 00:50:43,760
is that enable in order to run inference

1360
00:50:43,760 --> 00:50:45,839
for our model we need to create this

1361
00:50:45,839 --> 00:50:48,480
shadow of messages in advance

1362
00:50:48,480 --> 00:50:50,720
so we need to pre-analyze our graph we

1363
00:50:50,720 --> 00:50:53,119
need to analyze everything basically and

1364
00:50:53,119 --> 00:50:55,200
we do we need to do it every time we

1365
00:50:55,200 --> 00:50:57,200
change our graph structure

1366
00:50:57,200 --> 00:51:00,480
and if graph is big this graph analysis

1367
00:51:00,480 --> 00:51:02,319
time and shadow creation may take a lot

1368
00:51:02,319 --> 00:51:04,240
of extra time

1369
00:51:04,240 --> 00:51:07,280
and it might be not a big issue but as

1370
00:51:07,280 --> 00:51:09,200
an engineer you may want to test a lot

1371
00:51:09,200 --> 00:51:11,359
of models until you're satisfied with

1372
00:51:11,359 --> 00:51:14,079
the performance and this extra delays

1373
00:51:14,079 --> 00:51:16,079
and shuttle creation times that they may

1374
00:51:16,079 --> 00:51:19,680
be just a bit of annoying and reactive

1375
00:51:19,680 --> 00:51:21,520
message passing last allows us to

1376
00:51:21,520 --> 00:51:24,400
eliminate this predefined shadow and

1377
00:51:24,400 --> 00:51:26,240
also it gives us a lot of other benefits

1378
00:51:26,240 --> 00:51:30,400
and possible future research directions

1379
00:51:30,400 --> 00:51:32,880
so instead of having instead of having a

1380
00:51:32,880 --> 00:51:35,839
fixed shadow we cast our graph to like

1381
00:51:35,839 --> 00:51:37,760
an event-based system

1382
00:51:37,760 --> 00:51:39,520
where everything can react on its

1383
00:51:39,520 --> 00:51:41,119
neighbor environment

1384
00:51:41,119 --> 00:51:43,440
and in terms of message passing

1385
00:51:43,440 --> 00:51:45,920
nodes react on incoming messages

1386
00:51:45,920 --> 00:51:48,319
and also it reacts on updated posterior

1387
00:51:48,319 --> 00:51:50,800
marginals over our parameters

1388
00:51:50,800 --> 00:51:53,760
and the whole model becomes reactive we

1389
00:51:53,760 --> 00:51:56,319
can also react on changes in this system

1390
00:51:56,319 --> 00:51:58,960
and basically do whatever we want so we

1391
00:51:58,960 --> 00:52:00,800
may perform some action

1392
00:52:00,800 --> 00:52:04,800
based on new updated posterior marginals

1393
00:52:04,800 --> 00:52:07,680
it also in message passing a natural

1394
00:52:07,680 --> 00:52:11,280
starting point uh is uh our data or

1395
00:52:11,280 --> 00:52:14,400
observations and the model itself reacts

1396
00:52:14,400 --> 00:52:18,559
on changes in our data or in our priors

1397
00:52:18,559 --> 00:52:20,319
and it also changes posteriors

1398
00:52:20,319 --> 00:52:23,040
accordingly

1399
00:52:23,040 --> 00:52:26,480
so here i outlined some extra benefits

1400
00:52:26,480 --> 00:52:27,760
from the active message passive

1401
00:52:27,760 --> 00:52:29,839
implementation so first of all we may

1402
00:52:29,839 --> 00:52:32,400
outline biological plausibility

1403
00:52:32,400 --> 00:52:34,480
because in nature we probably don't have

1404
00:52:34,480 --> 00:52:36,800
any predefined scheduler for our

1405
00:52:36,800 --> 00:52:39,440
information flowing on neurons in our

1406
00:52:39,440 --> 00:52:41,520
brain for example

1407
00:52:41,520 --> 00:52:43,920
uh they they are driven like by some

1408
00:52:43,920 --> 00:52:46,960
chemistry like physics and in sense it's

1409
00:52:46,960 --> 00:52:49,200
like also reactive system it constantly

1410
00:52:49,200 --> 00:52:52,240
adapts the changes in an environment

1411
00:52:52,240 --> 00:52:55,599
and also it reacts only if needed

1412
00:52:55,599 --> 00:52:57,359
and in terms of message passing based

1413
00:52:57,359 --> 00:52:59,520
inference it may be unnecessary to even

1414
00:52:59,520 --> 00:53:02,400
react in some events like some messages

1415
00:53:02,400 --> 00:53:05,760
if they aren't really important

1416
00:53:05,760 --> 00:53:08,240
uh a fixed predefined shadow you're

1417
00:53:08,240 --> 00:53:10,480
forced to do all computations even if

1418
00:53:10,480 --> 00:53:13,280
you don't really need them

1419
00:53:13,280 --> 00:53:15,040
uh another great benefit of craft

1420
00:53:15,040 --> 00:53:17,040
message busting is that it scales very

1421
00:53:17,040 --> 00:53:19,599
nicely for very big graph so it's more

1422
00:53:19,599 --> 00:53:22,319
like an answer for previous question

1423
00:53:22,319 --> 00:53:24,559
uh so it supports like hundreds of

1424
00:53:24,559 --> 00:53:26,800
thousands of factor notes even millions

1425
00:53:26,800 --> 00:53:29,040
are possible uh i will show you an

1426
00:53:29,040 --> 00:53:30,559
example in a couple of minutes but just

1427
00:53:30,559 --> 00:53:32,800
to give you a bit of context so in this

1428
00:53:32,800 --> 00:53:35,359
plot we met we modeled just some moving

1429
00:53:35,359 --> 00:53:38,559
objects with known line linear dynamics

1430
00:53:38,559 --> 00:53:40,559
and the idea was to estimate the sedan

1431
00:53:40,559 --> 00:53:43,520
states given noisy observations

1432
00:53:43,520 --> 00:53:45,520
in this example i used kalman smoother

1433
00:53:45,520 --> 00:53:47,280
with 50 000

1434
00:53:47,280 --> 00:53:49,680
observations and this model contains

1435
00:53:49,680 --> 00:53:53,280
roughly about 150 000 factor nodes

1436
00:53:53,280 --> 00:53:55,040
so bayesian inference on this kind of a

1437
00:53:55,040 --> 00:53:57,839
model is impossible on sampling based

1438
00:53:57,839 --> 00:53:59,520
inference

1439
00:53:59,520 --> 00:54:01,200
but with reactive message passing it

1440
00:54:01,200 --> 00:54:03,119
takes only about like

1441
00:54:03,119 --> 00:54:06,480
eight seconds on just a home macbook

1442
00:54:06,480 --> 00:54:09,480
laptop

1443
00:54:10,559 --> 00:54:12,720
so we can go further a bit and make

1444
00:54:12,720 --> 00:54:14,880
reactive system robust and tolerant to

1445
00:54:14,880 --> 00:54:17,760
some let's say failing nodes or missing

1446
00:54:17,760 --> 00:54:18,960
data

1447
00:54:18,960 --> 00:54:21,760
from let's say failed sensor

1448
00:54:21,760 --> 00:54:23,920
we fix predefined shadow if something

1449
00:54:23,920 --> 00:54:25,440
like this happens we need to do

1450
00:54:25,440 --> 00:54:27,200
everything from scratch

1451
00:54:27,200 --> 00:54:29,280
we need to recreate our model we need to

1452
00:54:29,280 --> 00:54:31,839
again make a shadow

1453
00:54:31,839 --> 00:54:34,240
and it will just take some time

1454
00:54:34,240 --> 00:54:36,960
with reactive message busting we may

1455
00:54:36,960 --> 00:54:39,599
just stop reacting on some missing data

1456
00:54:39,599 --> 00:54:42,160
or maybe failing sensor

1457
00:54:42,160 --> 00:54:44,160
and we can just wait for them to be

1458
00:54:44,160 --> 00:54:46,160
available again

1459
00:54:46,160 --> 00:54:48,319
it makes it very robust in that sense it

1460
00:54:48,319 --> 00:54:50,799
also gives us an opportunity to change

1461
00:54:50,799 --> 00:54:53,440
our graph structure in runtime

1462
00:54:53,440 --> 00:54:55,440
and still perform inference without

1463
00:54:55,440 --> 00:54:57,920
stopping

1464
00:54:58,880 --> 00:55:01,599
so there's a slide about how we actually

1465
00:55:01,599 --> 00:55:02,720
do that

1466
00:55:02,720 --> 00:55:04,799
we use julia's main programming language

1467
00:55:04,799 --> 00:55:07,920
in our lab roughly about a year and a

1468
00:55:07,920 --> 00:55:09,839
half i believe ago

1469
00:55:09,839 --> 00:55:11,440
we wrote the library for reactive

1470
00:55:11,440 --> 00:55:13,599
programming in julia so it's completely

1471
00:55:13,599 --> 00:55:15,359
unrelated to message passing in just a

1472
00:55:15,359 --> 00:55:17,200
general framework for event based

1473
00:55:17,200 --> 00:55:18,240
systems

1474
00:55:18,240 --> 00:55:20,640
but that allowed us at the later point

1475
00:55:20,640 --> 00:55:24,160
to build reactive mp.jl package

1476
00:55:24,160 --> 00:55:25,680
and it implements free energy

1477
00:55:25,680 --> 00:55:29,359
minimization by message passing

1478
00:55:29,359 --> 00:55:31,599
we also introduced graphpl.gel package

1479
00:55:31,599 --> 00:55:33,520
that is a high level and user friendly

1480
00:55:33,520 --> 00:55:35,119
probabilistic model specification

1481
00:55:35,119 --> 00:55:38,640
language that we use in our demos

1482
00:55:38,640 --> 00:55:41,040
um yeah here i'm i

1483
00:55:41,040 --> 00:55:43,119
want to show you an example

1484
00:55:43,119 --> 00:55:45,119
just in a second

1485
00:55:45,119 --> 00:55:47,599
so you can you can see my screen right

1486
00:55:47,599 --> 00:55:49,119
yep maybe

1487
00:55:49,119 --> 00:55:53,040
one little size larger or two

1488
00:55:53,440 --> 00:55:56,799
i hope it will not break

1489
00:55:56,799 --> 00:55:58,240
yeah make it a little larger and then if

1490
00:55:58,240 --> 00:56:02,759
it looks unexpected you can pull back

1491
00:56:02,799 --> 00:56:04,960
okay here we go

1492
00:56:04,960 --> 00:56:07,599
better yep thank you

1493
00:56:07,599 --> 00:56:10,720
so here is our example so assume we have

1494
00:56:10,720 --> 00:56:11,520
some

1495
00:56:11,520 --> 00:56:14,240
moving object uh

1496
00:56:14,240 --> 00:56:16,079
it has some hidden states and just

1497
00:56:16,079 --> 00:56:18,400
assume that we know it's linear dynamics

1498
00:56:18,400 --> 00:56:21,200
for simplicity and we don't we don't

1499
00:56:21,200 --> 00:56:23,359
have a direct access to its location but

1500
00:56:23,359 --> 00:56:25,200
we have a noisy observation of this

1501
00:56:25,200 --> 00:56:26,480
moving object

1502
00:56:26,480 --> 00:56:28,799
and we wish to estimate the true

1503
00:56:28,799 --> 00:56:31,599
location of this moving object by only

1504
00:56:31,599 --> 00:56:35,040
observing its noisy measurements

1505
00:56:35,040 --> 00:56:38,160
and we may use a linear multivariate

1506
00:56:38,160 --> 00:56:41,119
gaussian state space model

1507
00:56:41,119 --> 00:56:44,000
like equations looks like this these are

1508
00:56:44,000 --> 00:56:46,480
equivalent notations they're the same

1509
00:56:46,480 --> 00:56:48,960
and basically here we say that uh okay

1510
00:56:48,960 --> 00:56:52,400
we have a state x at time step k

1511
00:56:52,400 --> 00:56:54,400
and it depends only on the previous time

1512
00:56:54,400 --> 00:56:55,920
step

1513
00:56:55,920 --> 00:56:58,400
through some linear operator a and we

1514
00:56:58,400 --> 00:57:00,880
also have a transition noise which is a

1515
00:57:00,880 --> 00:57:03,599
gaussian with covariance matrix b and

1516
00:57:03,599 --> 00:57:06,000
our observations are

1517
00:57:06,000 --> 00:57:07,200
uh

1518
00:57:07,200 --> 00:57:10,319
basically modeled also as a gaussian

1519
00:57:10,319 --> 00:57:11,040
with

1520
00:57:11,040 --> 00:57:12,960
covariance matrix q

1521
00:57:12,960 --> 00:57:15,520
so basically this is our model

1522
00:57:15,520 --> 00:57:17,599
and we can simply create a factor graph

1523
00:57:17,599 --> 00:57:19,440
out of it

1524
00:57:19,440 --> 00:57:21,040
and as you can see

1525
00:57:21,040 --> 00:57:22,240
that

1526
00:57:22,240 --> 00:57:25,359
our model specification resembles very

1527
00:57:25,359 --> 00:57:27,760
closely to the equations defined above

1528
00:57:27,760 --> 00:57:29,359
so here we have

1529
00:57:29,359 --> 00:57:32,240
our state xk and it's modeled as like a

1530
00:57:32,240 --> 00:57:35,040
gaussian over previous state with some

1531
00:57:35,040 --> 00:57:38,240
let's say known covariance matrices

1532
00:57:38,240 --> 00:57:40,400
and this is how we build our model

1533
00:57:40,400 --> 00:57:42,400
and under the hood this

1534
00:57:42,400 --> 00:57:45,359
code it generates factor graph

1535
00:57:45,359 --> 00:57:48,319
uh and we can we can all later on use

1536
00:57:48,319 --> 00:57:49,359
reactive

1537
00:57:49,359 --> 00:57:51,839
mp.jail api to estimate hidden states of

1538
00:57:51,839 --> 00:57:54,000
our system but here's our example it

1539
00:57:54,000 --> 00:57:55,760
looks a bit off

1540
00:57:55,760 --> 00:57:59,119
probably because i zoomed in a bit

1541
00:57:59,119 --> 00:58:01,599
but it's fine i believe

1542
00:58:01,599 --> 00:58:04,400
and in this example i perform a kalman

1543
00:58:04,400 --> 00:58:07,119
smoother for 500 points and i just

1544
00:58:07,119 --> 00:58:08,720
decomposed the

1545
00:58:08,720 --> 00:58:10,480
trajectory of this moving object into

1546
00:58:10,480 --> 00:58:13,359
two axis x-axis and y-axis

1547
00:58:13,359 --> 00:58:14,880
and we can see that

1548
00:58:14,880 --> 00:58:17,440
common smoother predicted

1549
00:58:17,440 --> 00:58:19,359
like the real hidden states of our

1550
00:58:19,359 --> 00:58:21,599
system correctly

1551
00:58:21,599 --> 00:58:23,200
even though we have a lot of noise in

1552
00:58:23,200 --> 00:58:25,440
our system so these blue dots it's like

1553
00:58:25,440 --> 00:58:28,480
our noisy observations

1554
00:58:28,480 --> 00:58:31,440
and we go we can go further with this so

1555
00:58:31,440 --> 00:58:34,240
because our system is reactive we can we

1556
00:58:34,240 --> 00:58:37,760
can estimate uh our our states in real

1557
00:58:37,760 --> 00:58:38,799
time

1558
00:58:38,799 --> 00:58:41,839
so here's our example let me try to run

1559
00:58:41,839 --> 00:58:43,839
it

1560
00:58:43,839 --> 00:58:46,319
uh i hope it looks smoothly on my

1561
00:58:46,319 --> 00:58:48,559
computer it's actually very smooth like

1562
00:58:48,559 --> 00:58:51,200
but i i know that maybe

1563
00:58:51,200 --> 00:58:53,520
recording is not that smooth like screen

1564
00:58:53,520 --> 00:58:56,480
sharing but here in this example what we

1565
00:58:56,480 --> 00:58:58,559
see is that okay we have an infinite

1566
00:58:58,559 --> 00:59:01,040
data stream of a moving object the blue

1567
00:59:01,040 --> 00:59:02,559
is a real one and the red is an

1568
00:59:02,559 --> 00:59:05,440
estimated one and we can see that uh

1569
00:59:05,440 --> 00:59:07,760
yeah let me reload it because it's kind

1570
00:59:07,760 --> 00:59:10,559
of off

1571
00:59:10,720 --> 00:59:13,680
and we can see that

1572
00:59:13,920 --> 00:59:16,160
reactive mp is able to perform and

1573
00:59:16,160 --> 00:59:18,640
bayesian inference in real time

1574
00:59:18,640 --> 00:59:21,359
and it actually adapts to changes in the

1575
00:59:21,359 --> 00:59:23,760
environment and also changes the

1576
00:59:23,760 --> 00:59:27,200
posterior over the current estimated

1577
00:59:27,200 --> 00:59:28,559
state

1578
00:59:28,559 --> 00:59:30,480
and we can go even further you probably

1579
00:59:30,480 --> 00:59:32,880
notice this orange line here just

1580
00:59:32,880 --> 00:59:35,520
inactive for now but we can also

1581
00:59:35,520 --> 00:59:38,640
incorporate a prediction

1582
00:59:38,640 --> 00:59:41,440
for this model so we can just we can

1583
00:59:41,440 --> 00:59:44,160
just extend a little bit our graph

1584
00:59:44,160 --> 00:59:47,280
and we can also predict future state of

1585
00:59:47,280 --> 00:59:49,119
our system

1586
00:59:49,119 --> 00:59:50,240
like this

1587
00:59:50,240 --> 00:59:52,799
so now in this example i

1588
00:59:52,799 --> 00:59:55,119
do bayesian inference in real time and i

1589
00:59:55,119 --> 00:59:57,760
also predict the future state of my

1590
00:59:57,760 --> 01:00:00,160
system like in orange

1591
01:00:00,160 --> 01:00:02,319
and you can see that prediction also

1592
01:00:02,319 --> 01:00:04,960
adapts to the new observations

1593
01:00:04,960 --> 01:00:08,240
and yeah it changes basically its future

1594
01:00:08,240 --> 01:00:09,520
beliefs

1595
01:00:09,520 --> 01:00:12,720
over future states

1596
01:00:12,720 --> 01:00:14,559
uh yeah

1597
01:00:14,559 --> 01:00:16,720
let me stop it and continue with the

1598
01:00:16,720 --> 01:00:19,439
presentation

1599
01:00:21,040 --> 01:00:23,119
so um

1600
01:00:23,119 --> 01:00:25,040
yeah i'm going to talk about

1601
01:00:25,040 --> 01:00:27,200
like when reactive message passing is

1602
01:00:27,200 --> 01:00:30,000
available actually it's already working

1603
01:00:30,000 --> 01:00:32,480
uh we have a fully working stable

1604
01:00:32,480 --> 01:00:34,480
backhand and api for exact and

1605
01:00:34,480 --> 01:00:36,799
variational bayesian inference we also

1606
01:00:36,799 --> 01:00:39,280
support expectation propagation but that

1607
01:00:39,280 --> 01:00:44,079
api is not yet stable so it may change

1608
01:00:44,079 --> 01:00:46,799
we support for now only conjugate models

1609
01:00:46,799 --> 01:00:48,960
from exponential family

1610
01:00:48,960 --> 01:00:50,799
we support extra constraints for

1611
01:00:50,799 --> 01:00:53,680
variation optimization procedure

1612
01:00:53,680 --> 01:00:55,599
such that form or factorization

1613
01:00:55,599 --> 01:00:56,880
constraint

1614
01:00:56,880 --> 01:00:59,440
so rocket.jl library it naturally

1615
01:00:59,440 --> 01:01:01,280
supports infinite data streams for

1616
01:01:01,280 --> 01:01:03,599
example from an internet or from some

1617
01:01:03,599 --> 01:01:05,280
sensor

1618
01:01:05,280 --> 01:01:07,680
and framework itself is able to handle

1619
01:01:07,680 --> 01:01:09,280
missing data

1620
01:01:09,280 --> 01:01:10,480
but that

1621
01:01:10,480 --> 01:01:14,960
api is also not yet stable

1622
01:01:16,079 --> 01:01:17,040
here

1623
01:01:17,040 --> 01:01:19,520
some of our future plans for this

1624
01:01:19,520 --> 01:01:22,400
platform so we want to extend it to

1625
01:01:22,400 --> 01:01:24,720
support non-conjugate models as well

1626
01:01:24,720 --> 01:01:26,960
basically foreign lab already supports

1627
01:01:26,960 --> 01:01:28,079
it

1628
01:01:28,079 --> 01:01:30,319
we just need to carefully port all of

1629
01:01:30,319 --> 01:01:32,160
the available existing functionality

1630
01:01:32,160 --> 01:01:35,599
from foreign lab to reactive mp

1631
01:01:35,599 --> 01:01:37,680
and we also want to integrate with other

1632
01:01:37,680 --> 01:01:39,440
probabilistic programming libraries that

1633
01:01:39,440 --> 01:01:42,960
exists in july community

1634
01:01:43,520 --> 01:01:45,359
reactive message passing gives us an

1635
01:01:45,359 --> 01:01:47,280
opportunity to

1636
01:01:47,280 --> 01:01:50,480
try to integrate parallel inference

1637
01:01:50,480 --> 01:01:52,079
and react in different parts of the

1638
01:01:52,079 --> 01:01:53,920
graph simultaneously using like

1639
01:01:53,920 --> 01:01:57,280
multi-core capabilities of our cpus

1640
01:01:57,280 --> 01:01:58,079
uh

1641
01:01:58,079 --> 01:01:59,839
we want to extend

1642
01:01:59,839 --> 01:02:02,640
graph ppl to support modular model

1643
01:02:02,640 --> 01:02:04,880
specification for now it's unfortunately

1644
01:02:04,880 --> 01:02:07,839
not possible

1645
01:02:08,960 --> 01:02:11,200
also reactive message passing naturally

1646
01:02:11,200 --> 01:02:13,039
gives us an opportunity

1647
01:02:13,039 --> 01:02:15,280
to run inference where different data

1648
01:02:15,280 --> 01:02:19,280
streams have different update rates

1649
01:02:19,280 --> 01:02:21,359
um what

1650
01:02:21,359 --> 01:02:22,960
that what i was talking about in the

1651
01:02:22,960 --> 01:02:25,520
very beginning about robustness but it's

1652
01:02:25,520 --> 01:02:27,920
also interesting how far can we push it

1653
01:02:27,920 --> 01:02:30,319
and maybe in it's possible to

1654
01:02:30,319 --> 01:02:32,480
automatically adapt model's graph

1655
01:02:32,480 --> 01:02:35,039
structure in runtime based on free

1656
01:02:35,039 --> 01:02:37,520
energy

1657
01:02:38,000 --> 01:02:39,839
but it's like a research project we

1658
01:02:39,839 --> 01:02:41,520
don't really know if it's possible or

1659
01:02:41,520 --> 01:02:43,599
not for now

1660
01:02:43,599 --> 01:02:45,440
uh we we have some ideas about

1661
01:02:45,440 --> 01:02:47,280
interactive visualization for message

1662
01:02:47,280 --> 01:02:49,359
passing based algorithms

1663
01:02:49,359 --> 01:02:50,960
and free energy minimization

1664
01:02:50,960 --> 01:02:53,520
visualization

1665
01:02:53,520 --> 01:02:56,400
and eventually we we are planning to

1666
01:02:56,400 --> 01:02:58,799
release this new platform as a stable

1667
01:02:58,799 --> 01:03:01,280
version of formula possibly

1668
01:03:01,280 --> 01:03:03,200
in 2.0

1669
01:03:03,200 --> 01:03:05,280
and that basically is everything i

1670
01:03:05,280 --> 01:03:07,039
wanted to show you in my slides and

1671
01:03:07,039 --> 01:03:08,319
thank you for your attention i would

1672
01:03:08,319 --> 01:03:12,079
have be happy to answer your questions

1673
01:03:13,760 --> 01:03:16,640
awesome first question was is there a

1674
01:03:16,640 --> 01:03:18,680
paper on this

1675
01:03:18,680 --> 01:03:22,720
reactivemp.jl or how does that work

1676
01:03:22,720 --> 01:03:25,760
there is but it's in progress so

1677
01:03:25,760 --> 01:03:27,920
it's not publicly available but

1678
01:03:27,920 --> 01:03:30,240
we are working on that so there will be

1679
01:03:30,240 --> 01:03:31,920
eventually paper about all of this

1680
01:03:31,920 --> 01:03:33,599
approach i will describe everything how

1681
01:03:33,599 --> 01:03:36,960
it works and how we use it so yeah i

1682
01:03:36,960 --> 01:03:39,039
mean of course if anybody writes us an

1683
01:03:39,039 --> 01:03:41,599
email who wants an early copy of the

1684
01:03:41,599 --> 01:03:44,240
paper i'll be happy to share it if it

1685
01:03:44,240 --> 01:03:45,599
stays

1686
01:03:45,599 --> 01:03:49,359
confidential i'd be happy to share it

1687
01:03:49,520 --> 01:03:50,799
it's very

1688
01:03:50,799 --> 01:03:51,920
interesting

1689
01:03:51,920 --> 01:03:54,559
development maybe to the other authors

1690
01:03:54,559 --> 01:03:55,760
like

1691
01:03:55,760 --> 01:03:56,799
what

1692
01:03:56,799 --> 01:03:58,480
other um

1693
01:03:58,480 --> 01:04:01,839
epochs of forney lab were there

1694
01:04:01,839 --> 01:04:02,799
um

1695
01:04:02,799 --> 01:04:05,440
how did we get with to this reactive

1696
01:04:05,440 --> 01:04:07,200
programming paradigm and also it seems

1697
01:04:07,200 --> 01:04:09,039
like you did a lot of the foundational

1698
01:04:09,039 --> 01:04:10,480
work in the lab

1699
01:04:10,480 --> 01:04:13,039
on the reactive programming

1700
01:04:13,039 --> 01:04:14,400
was that just in the julia

1701
01:04:14,400 --> 01:04:17,119
implementation or in the more conceptual

1702
01:04:17,119 --> 01:04:19,599
grounding

1703
01:04:19,599 --> 01:04:20,559
um

1704
01:04:20,559 --> 01:04:22,559
yeah we did actually really a lot of

1705
01:04:22,559 --> 01:04:24,720
work to support reactive programming in

1706
01:04:24,720 --> 01:04:28,559
julia basically julia is is like a young

1707
01:04:28,559 --> 01:04:30,960
language and it has no

1708
01:04:30,960 --> 01:04:33,839
like good capabilities to run reactive

1709
01:04:33,839 --> 01:04:36,960
based like systems so basically we build

1710
01:04:36,960 --> 01:04:39,599
it from scratch

1711
01:04:39,599 --> 01:04:42,640
yeah but we we used a lot of uh like

1712
01:04:42,640 --> 01:04:43,760
let's say

1713
01:04:43,760 --> 01:04:46,240
ideas from other programming languages

1714
01:04:46,240 --> 01:04:50,240
that we had experience with

1715
01:04:53,200 --> 01:04:55,119
i mean i know that the active influence

1716
01:04:55,119 --> 01:04:57,200
community uh

1717
01:04:57,200 --> 01:05:00,559
matlab and matlab is fantastic

1718
01:05:00,559 --> 01:05:02,160
but for

1719
01:05:02,160 --> 01:05:05,280
for really for if you want real time

1720
01:05:05,280 --> 01:05:09,119
processing of streaming data then julia

1721
01:05:09,119 --> 01:05:10,720
is a very good

1722
01:05:10,720 --> 01:05:13,839
is a better option because julia is

1723
01:05:13,839 --> 01:05:16,480
almost has the syntax of matlab from a

1724
01:05:16,480 --> 01:05:17,680
user's

1725
01:05:17,680 --> 01:05:19,039
viewpoint

1726
01:05:19,039 --> 01:05:21,520
but out of the box it's almost as fast

1727
01:05:21,520 --> 01:05:23,119
as c

1728
01:05:23,119 --> 01:05:25,920
and so it was a better combination for

1729
01:05:25,920 --> 01:05:27,680
if you are in engineering and you

1730
01:05:27,680 --> 01:05:29,280
actually want to build

1731
01:05:29,280 --> 01:05:31,599
systems that run in real time you want

1732
01:05:31,599 --> 01:05:34,640
to make demos and julia is a better

1733
01:05:34,640 --> 01:05:37,920
language also uh dimitri also makes use

1734
01:05:37,920 --> 01:05:41,760
of some really advanced stuff in julia

1735
01:05:41,760 --> 01:05:43,280
it's called multiple dispatch but it

1736
01:05:43,280 --> 01:05:44,720
doesn't matter

1737
01:05:44,720 --> 01:05:46,960
what it is but it's it's quite advanced

1738
01:05:46,960 --> 01:05:48,160
and it's not

1739
01:05:48,160 --> 01:05:51,359
uh available in in matlab but it's

1740
01:05:51,359 --> 01:05:53,760
extremely useful for what we do

1741
01:05:53,760 --> 01:05:55,520
for do with the

1742
01:05:55,520 --> 01:05:59,039
toolbox it's it seems to be

1743
01:05:59,039 --> 01:06:01,599
if you look at a graph and message

1744
01:06:01,599 --> 01:06:04,240
passing it see it seems to be like oh

1745
01:06:04,240 --> 01:06:05,680
this is actually not so hard to

1746
01:06:05,680 --> 01:06:07,839
implement

1747
01:06:07,839 --> 01:06:09,359
but there's a reason why there are

1748
01:06:09,359 --> 01:06:11,680
extremely few toolboxes for factor

1749
01:06:11,680 --> 01:06:14,880
graphs okay microsoft has built one

1750
01:06:14,880 --> 01:06:18,640
infer.net and it's it's great but it's

1751
01:06:18,640 --> 01:06:21,200
not really a real-time toolbox

1752
01:06:21,200 --> 01:06:24,799
um and so as far as we know we are

1753
01:06:24,799 --> 01:06:26,400
there's not much competition at the

1754
01:06:26,400 --> 01:06:28,079
moment for us

1755
01:06:28,079 --> 01:06:30,240
not that our toolbox is very advanced

1756
01:06:30,240 --> 01:06:31,359
yet but

1757
01:06:31,359 --> 01:06:33,680
um i don't see a lot of people working

1758
01:06:33,680 --> 01:06:36,720
on this i see a lot of people working on

1759
01:06:36,720 --> 01:06:38,799
multicarter sampling but multi-car

1760
01:06:38,799 --> 01:06:41,359
sampling will not work for the

1761
01:06:41,359 --> 01:06:43,920
sizes of systems and for the real-time

1762
01:06:43,920 --> 01:06:45,680
data streams that we want to do with

1763
01:06:45,680 --> 01:06:48,480
active inference right we are

1764
01:06:48,480 --> 01:06:50,079
working with systems where we want to

1765
01:06:50,079 --> 01:06:53,119
make actions and influence our data

1766
01:06:53,119 --> 01:06:55,359
so this is a real time system

1767
01:06:55,359 --> 01:06:56,240
um

1768
01:06:56,240 --> 01:06:59,119
and so we have to go to

1769
01:06:59,119 --> 01:07:01,520
want to actually scale up we have to go

1770
01:07:01,520 --> 01:07:02,640
to

1771
01:07:02,640 --> 01:07:05,039
build a really high quality professional

1772
01:07:05,039 --> 01:07:06,640
toolbox

1773
01:07:06,640 --> 01:07:09,599
that automates message passing i hope

1774
01:07:09,599 --> 01:07:12,160
this will be uh one of those toolboxes

1775
01:07:12,160 --> 01:07:13,839
and hopefully will also be other

1776
01:07:13,839 --> 01:07:15,280
toolboxes but

1777
01:07:15,280 --> 01:07:18,400
yeah that's why we're doing this

1778
01:07:18,400 --> 01:07:21,760
very interesting answer

1779
01:07:21,760 --> 01:07:23,440
how has the

1780
01:07:23,440 --> 01:07:25,119
dialogue between

1781
01:07:25,119 --> 01:07:27,200
the math and programming and computer

1782
01:07:27,200 --> 01:07:28,880
science side and then the active

1783
01:07:28,880 --> 01:07:32,559
inference side been like what has

1784
01:07:32,559 --> 01:07:34,240
each side kind of contributed because it

1785
01:07:34,240 --> 01:07:36,240
sounds like some of those real time

1786
01:07:36,240 --> 01:07:38,480
insights of active inference are kind of

1787
01:07:38,480 --> 01:07:40,319
propagating back to the design of

1788
01:07:40,319 --> 01:07:42,559
algorithms and then

1789
01:07:42,559 --> 01:07:44,319
we we see both directions so how has

1790
01:07:44,319 --> 01:07:46,480
that played out maybe for any of each or

1791
01:07:46,480 --> 01:07:48,880
each of you

1792
01:07:49,359 --> 01:07:52,720
i can also answer maybe this question

1793
01:07:52,720 --> 01:07:54,960
from my point of view i mostly like

1794
01:07:54,960 --> 01:07:57,200
doing programming uh

1795
01:07:57,200 --> 01:07:59,039
but i still learn something new every

1796
01:07:59,039 --> 01:08:02,000
time because we like in this constant uh

1797
01:08:02,000 --> 01:08:03,359
dialogue with

1798
01:08:03,359 --> 01:08:05,920
math guys in our lab let's say and i

1799
01:08:05,920 --> 01:08:07,440
learn something new every day and of

1800
01:08:07,440 --> 01:08:10,400
course it reflects like our design

1801
01:08:10,400 --> 01:08:13,200
choices for our software as well

1802
01:08:13,200 --> 01:08:16,158
so it's kind of but sometimes it's it's

1803
01:08:16,158 --> 01:08:18,640
very hard to fit this high level

1804
01:08:18,640 --> 01:08:21,040
mathematical ideas to the actual

1805
01:08:21,040 --> 01:08:22,560
implementation

1806
01:08:22,560 --> 01:08:25,120
and also it's very hard to make it

1807
01:08:25,120 --> 01:08:26,799
efficient

1808
01:08:26,799 --> 01:08:28,960
so

1809
01:08:31,359 --> 01:08:34,319
yeah we are not uh we're not done with

1810
01:08:34,319 --> 01:08:37,040
this um i mean the toolbox is available

1811
01:08:37,040 --> 01:08:39,040
for anybody and and

1812
01:08:39,040 --> 01:08:41,198
all the nice territory examples the

1813
01:08:41,198 --> 01:08:44,080
basic thermostat the tic tac toe and it

1814
01:08:44,080 --> 01:08:46,080
all works very smooth

1815
01:08:46,080 --> 01:08:48,318
um

1816
01:08:49,198 --> 01:08:51,519
our

1817
01:08:51,759 --> 01:08:54,158
hope is that with reactive message

1818
01:08:54,158 --> 01:08:55,679
passing we can actually

1819
01:08:55,679 --> 01:08:56,880
you know get a

1820
01:08:56,880 --> 01:08:59,359
path to scaling this up to to serious

1821
01:08:59,359 --> 01:09:00,719
applications

1822
01:09:00,719 --> 01:09:02,560
and that i mean that's real i mean we're

1823
01:09:02,560 --> 01:09:04,158
an engineering group we want to build

1824
01:09:04,158 --> 01:09:06,799
systems that really do something

1825
01:09:06,799 --> 01:09:09,198
useful i also work for a hearing aid

1826
01:09:09,198 --> 01:09:12,640
company so i want to build real time

1827
01:09:12,640 --> 01:09:16,479
audio processing algorithms

1828
01:09:16,479 --> 01:09:17,359
and

1829
01:09:17,359 --> 01:09:18,960
and others may want to use this for

1830
01:09:18,960 --> 01:09:21,439
robotics so

1831
01:09:21,439 --> 01:09:24,399
yeah but and that's not going to work in

1832
01:09:24,399 --> 01:09:26,479
in real time model up it's not going to

1833
01:09:26,479 --> 01:09:28,399
work

1834
01:09:28,399 --> 01:09:31,679
um yeah a bit with all the multi-card or

1835
01:09:31,679 --> 01:09:33,600
something so

1836
01:09:33,600 --> 01:09:36,080
this is our effort

1837
01:09:36,080 --> 01:09:38,560
and it's quite

1838
01:09:38,560 --> 01:09:40,560
it's takes a long time because it's very

1839
01:09:40,560 --> 01:09:42,880
multidisciplinary efforts right we have

1840
01:09:42,880 --> 01:09:46,000
in in my group we have a mathematicians

1841
01:09:46,000 --> 01:09:47,279
and

1842
01:09:47,279 --> 01:09:49,120
neuroscientists and

1843
01:09:49,120 --> 01:09:51,359
computer scientists because it's it's

1844
01:09:51,359 --> 01:09:53,439
it's it's difficult

1845
01:09:53,439 --> 01:09:55,520
there's a lot of different

1846
01:09:55,520 --> 01:09:57,199
expertises

1847
01:09:57,199 --> 01:09:59,360
that that you need to build a good

1848
01:09:59,360 --> 01:10:02,880
toolbox for active inference

1849
01:10:02,880 --> 01:10:04,640
i think because it's so difficult there

1850
01:10:04,640 --> 01:10:06,159
is a lot of like

1851
01:10:06,159 --> 01:10:08,080
um like cross

1852
01:10:08,080 --> 01:10:09,679
fertilization between the active

1853
01:10:09,679 --> 01:10:11,840
inference community and the engineering

1854
01:10:11,840 --> 01:10:13,840
that we do

1855
01:10:13,840 --> 01:10:15,840
the community is mostly interested in

1856
01:10:15,840 --> 01:10:18,560
explaining biological systems right the

1857
01:10:18,560 --> 01:10:20,239
the energy principle and active

1858
01:10:20,239 --> 01:10:21,840
inference as

1859
01:10:21,840 --> 01:10:24,000
a model for biology

1860
01:10:24,000 --> 01:10:25,440
and i think that's very interesting

1861
01:10:25,440 --> 01:10:26,960
because while nature has a certain way

1862
01:10:26,960 --> 01:10:28,840
of doing things

1863
01:10:28,840 --> 01:10:30,800
efficiently um

1864
01:10:30,800 --> 01:10:32,719
and if this is a model for that

1865
01:10:32,719 --> 01:10:34,320
then it's also a good idea to take that

1866
01:10:34,320 --> 01:10:36,000
to engineering

1867
01:10:36,000 --> 01:10:37,920
and that's kind of our recommend so we

1868
01:10:37,920 --> 01:10:40,000
kind of take the ideas that are

1869
01:10:40,000 --> 01:10:41,199
available in the active inference

1870
01:10:41,199 --> 01:10:43,360
community and where they explain brains

1871
01:10:43,360 --> 01:10:45,120
and think about brains

1872
01:10:45,120 --> 01:10:47,120
and think hey how can we take these

1873
01:10:47,120 --> 01:10:48,320
ideas

1874
01:10:48,320 --> 01:10:49,120
and

1875
01:10:49,120 --> 01:10:53,440
use them to build an engineering system

1876
01:10:53,440 --> 01:10:56,320
and i think that's kind of the main

1877
01:10:56,320 --> 01:10:57,920
yeah the main interaction between it and

1878
01:10:57,920 --> 01:11:00,800
hopefully then we build tools that

1879
01:11:00,800 --> 01:11:02,719
the community can also use then in their

1880
01:11:02,719 --> 01:11:06,080
research eventually

1881
01:11:07,199 --> 01:11:09,520
what that made me think about was

1882
01:11:09,520 --> 01:11:11,840
it's really a reframing of some of the

1883
01:11:11,840 --> 01:11:14,080
main challenges like seeing signal

1884
01:11:14,080 --> 01:11:16,000
processing as a real-time event or

1885
01:11:16,000 --> 01:11:16,800
seeing

1886
01:11:16,800 --> 01:11:18,960
the causal relationships between action

1887
01:11:18,960 --> 01:11:21,440
and future data all these kinds of

1888
01:11:21,440 --> 01:11:24,080
reframings of the problem it's not like

1889
01:11:24,080 --> 01:11:26,239
the active inference

1890
01:11:26,239 --> 01:11:27,600
algorithms

1891
01:11:27,600 --> 01:11:31,199
take massive matrix uh calculations to

1892
01:11:31,199 --> 01:11:34,080
do per se they can be very simple or not

1893
01:11:34,080 --> 01:11:35,760
but it's actually that reframing in the

1894
01:11:35,760 --> 01:11:38,480
the embedding of action within every

1895
01:11:38,480 --> 01:11:39,440
step

1896
01:11:39,440 --> 01:11:42,080
that then ends up solving the scaling

1897
01:11:42,080 --> 01:11:44,000
some of the scaling challenges some of

1898
01:11:44,000 --> 01:11:45,440
the resilience challenges because like

1899
01:11:45,440 --> 01:11:47,040
resilience of a

1900
01:11:47,040 --> 01:11:49,040
transportation network in a city they

1901
01:11:49,040 --> 01:11:50,000
would do

1902
01:11:50,000 --> 01:11:51,600
sampling or they would take something

1903
01:11:51,600 --> 01:11:53,440
that's an unfolding dynamic process and

1904
01:11:53,440 --> 01:11:55,520
then try to roll out a million

1905
01:11:55,520 --> 01:11:58,080
iterations of it statically

1906
01:11:58,080 --> 01:12:00,080
so it's again it's not that the

1907
01:12:00,080 --> 01:12:01,360
calculations

1908
01:12:01,360 --> 01:12:02,880
inside of the loop have to be

1909
01:12:02,880 --> 01:12:05,520
challenging it's just a reframing of

1910
01:12:05,520 --> 01:12:07,520
prioritizing action

1911
01:12:07,520 --> 01:12:08,960
ended up

1912
01:12:08,960 --> 01:12:11,280
going down these roads of scaling and

1913
01:12:11,280 --> 01:12:14,400
real-time capacity

1914
01:12:14,400 --> 01:12:16,640
yeah i i like that

1915
01:12:16,640 --> 01:12:18,800
the thought um perhaps i can say

1916
01:12:18,800 --> 01:12:20,560
something about it in the

1917
01:12:20,560 --> 01:12:22,800
context of what i work on because i work

1918
01:12:22,800 --> 01:12:24,880
on designing basically i'm a hearing aid

1919
01:12:24,880 --> 01:12:25,860
engineer i work on

1920
01:12:25,860 --> 01:12:27,120
[Music]

1921
01:12:27,120 --> 01:12:29,120
and if you ask a hearing aid engineer

1922
01:12:29,120 --> 01:12:31,040
signal processing engineer so what is

1923
01:12:31,040 --> 01:12:32,480
your task

1924
01:12:32,480 --> 01:12:34,320
well our task is to build the best

1925
01:12:34,320 --> 01:12:36,400
hearing aid algorithm

1926
01:12:36,400 --> 01:12:37,600
and

1927
01:12:37,600 --> 01:12:39,600
so

1928
01:12:39,600 --> 01:12:41,920
then what happens is that

1929
01:12:41,920 --> 01:12:44,159
a hearing aid client goes to the store

1930
01:12:44,159 --> 01:12:46,719
and buys a hearing aid usually

1931
01:12:46,719 --> 01:12:48,640
it's very happy and goes out and then

1932
01:12:48,640 --> 01:12:50,880
two weeks later sits in the restaurant i

1933
01:12:50,880 --> 01:12:52,400
cannot understand

1934
01:12:52,400 --> 01:12:54,960
her conversation partner because

1935
01:12:54,960 --> 01:12:57,520
there's noise and this wasn't expected

1936
01:12:57,520 --> 01:13:00,480
and there's nothing she can do

1937
01:13:00,480 --> 01:13:02,960
because you can't ask a client a hearing

1938
01:13:02,960 --> 01:13:05,199
aid client to

1939
01:13:05,199 --> 01:13:06,560
to

1940
01:13:06,560 --> 01:13:08,480
fiddle with hearing aid parameters so if

1941
01:13:08,480 --> 01:13:09,760
this happens

1942
01:13:09,760 --> 01:13:11,679
a few times

1943
01:13:11,679 --> 01:13:13,760
um then she throws or she puts her

1944
01:13:13,760 --> 01:13:16,400
hearing aid in the drawer and this uh

1945
01:13:16,400 --> 01:13:19,199
indeed about 10 20 percent of hearing

1946
01:13:19,199 --> 01:13:20,880
aids end up in the drawer they're very

1947
01:13:20,880 --> 01:13:21,910
expensive and

1948
01:13:21,910 --> 01:13:23,520
[Music]

1949
01:13:23,520 --> 01:13:24,400
20

1950
01:13:24,400 --> 01:13:27,040
ends up not being used a really

1951
01:13:27,040 --> 01:13:28,960
sad statistic

1952
01:13:28,960 --> 01:13:31,040
so rather

1953
01:13:31,040 --> 01:13:32,960
you can you can turn it around and say

1954
01:13:32,960 --> 01:13:35,040
okay what is the real hearing aid design

1955
01:13:35,040 --> 01:13:36,560
problem the real hearing aid design

1956
01:13:36,560 --> 01:13:39,280
problem is send somebody out with any

1957
01:13:39,280 --> 01:13:41,440
hearing aid but what do you do when

1958
01:13:41,440 --> 01:13:43,679
she's unhappy in the field

1959
01:13:43,679 --> 01:13:46,320
at in the restaurant

1960
01:13:46,320 --> 01:13:48,320
and what we want to build is an agent

1961
01:13:48,320 --> 01:13:49,360
that will

1962
01:13:49,360 --> 01:13:52,080
then so she just slaps her wrist raceway

1963
01:13:52,080 --> 01:13:54,080
i'm happy and now this agent needs to

1964
01:13:54,080 --> 01:13:55,679
make an action and give her new

1965
01:13:55,679 --> 01:13:58,239
parameter settings that are

1966
01:13:58,239 --> 01:14:00,719
the most interesting for her and and and

1967
01:14:00,719 --> 01:14:02,239
and the in the best

1968
01:14:02,239 --> 01:14:04,480
compromise between information seeking

1969
01:14:04,480 --> 01:14:07,040
and goal-driven gold riven being making

1970
01:14:07,040 --> 01:14:08,719
her happy

1971
01:14:08,719 --> 01:14:10,320
so

1972
01:14:10,320 --> 01:14:12,960
hearing a design from my viewpoint now

1973
01:14:12,960 --> 01:14:16,159
is just build an agent that will

1974
01:14:16,159 --> 01:14:18,800
make actions make hearing aid proposals

1975
01:14:18,800 --> 01:14:20,800
when she's unhappy

1976
01:14:20,800 --> 01:14:22,320
and if she

1977
01:14:22,320 --> 01:14:24,159
right she's unhappy and then hearing a

1978
01:14:24,159 --> 01:14:25,920
mixed proposal says no that's not good

1979
01:14:25,920 --> 01:14:28,000
well the agent gives another proposal

1980
01:14:28,000 --> 01:14:30,159
and that is okay that's better and then

1981
01:14:30,159 --> 01:14:32,159
we move on and maybe a week later the

1982
01:14:32,159 --> 01:14:35,600
same event and this goes on continually

1983
01:14:35,600 --> 01:14:38,719
but there is at least

1984
01:14:38,719 --> 01:14:41,120
a procedure to keep moving on to keep

1985
01:14:41,120 --> 01:14:44,000
improving over time right

1986
01:14:44,000 --> 01:14:45,360
so that's

1987
01:14:45,360 --> 01:14:48,159
the the real thing of design is the is

1988
01:14:48,159 --> 01:14:52,239
then the the action in the field in c2

1989
01:14:52,239 --> 01:14:53,600
which is very different from what's

1990
01:14:53,600 --> 01:14:56,000
currently happening which is hearing aid

1991
01:14:56,000 --> 01:14:58,159
engineers sitting at the desk

1992
01:14:58,159 --> 01:15:01,920
with model up not in the environment

1993
01:15:01,920 --> 01:15:04,400
so that's a it's it's a paradigm shift

1994
01:15:04,400 --> 01:15:07,760
and active inference agents

1995
01:15:07,760 --> 01:15:09,679
can maybe make that happen and could

1996
01:15:09,679 --> 01:15:10,960
really

1997
01:15:10,960 --> 01:15:12,640
i think uh

1998
01:15:12,640 --> 01:15:14,560
create a pivoting point for something

1999
01:15:14,560 --> 01:15:16,719
like signal processing design

2000
01:15:16,719 --> 01:15:18,400
which is uh

2001
01:15:18,400 --> 01:15:19,920
you know it's not something that you

2002
01:15:19,920 --> 01:15:21,679
think about when you're a neuroscientist

2003
01:15:21,679 --> 01:15:23,520
but this could really mean something big

2004
01:15:23,520 --> 01:15:25,440
for engineering

2005
01:15:25,440 --> 01:15:27,040
and not just for signal processing but

2006
01:15:27,040 --> 01:15:29,120
also in different engineering

2007
01:15:29,120 --> 01:15:31,120
disciplines and

2008
01:15:31,120 --> 01:15:32,960
so that's why i think over time you'll

2009
01:15:32,960 --> 01:15:35,280
see more and more people coming from

2010
01:15:35,280 --> 01:15:37,360
different fields

2011
01:15:37,360 --> 01:15:41,040
getting an interest in this uh

2012
01:15:41,040 --> 01:15:42,480
active inference and the free energy

2013
01:15:42,480 --> 01:15:43,920
principle

2014
01:15:43,920 --> 01:15:47,360
uh even even uh non

2015
01:15:47,360 --> 01:15:49,199
the not neuroscientists right but

2016
01:15:49,199 --> 01:15:50,840
engineers yeah

2017
01:15:50,840 --> 01:15:54,159
yeah cool we hope so and and that really

2018
01:15:54,159 --> 01:15:56,560
reminds me of the pragmatic turn

2019
01:15:56,560 --> 01:15:58,159
which is it's a little bit like a

2020
01:15:58,159 --> 01:15:59,920
horseshoe theory with the engineers and

2021
01:15:59,920 --> 01:16:01,600
the philosophers

2022
01:16:01,600 --> 01:16:04,239
often talking about pragmatism

2023
01:16:04,239 --> 01:16:06,080
in different ways different communities

2024
01:16:06,080 --> 01:16:07,600
different tools

2025
01:16:07,600 --> 01:16:09,520
and now there's a way to kind of close

2026
01:16:09,520 --> 01:16:12,719
that gap or at least map across it

2027
01:16:12,719 --> 01:16:14,560
where we can embed some of those

2028
01:16:14,560 --> 01:16:16,640
insights about

2029
01:16:16,640 --> 01:16:18,880
really an activism the role of design

2030
01:16:18,880 --> 01:16:22,400
science anticipatory design science with

2031
01:16:22,400 --> 01:16:24,080
take it or leave it philosophy or

2032
01:16:24,080 --> 01:16:26,400
there's the toolkit to develop

2033
01:16:26,400 --> 01:16:28,480
maybe it's interesting five years after

2034
01:16:28,480 --> 01:16:30,000
working with a toolkit or maybe five

2035
01:16:30,000 --> 01:16:31,280
years of philosophy and then you're

2036
01:16:31,280 --> 01:16:33,360
curious about the toolkit

2037
01:16:33,360 --> 01:16:34,640
so one

2038
01:16:34,640 --> 01:16:36,320
question was

2039
01:16:36,320 --> 01:16:38,480
how do these graphs account for

2040
01:16:38,480 --> 01:16:41,280
temporally deep models how are those

2041
01:16:41,280 --> 01:16:42,800
specified

2042
01:16:42,800 --> 01:16:43,920
or what

2043
01:16:43,920 --> 01:16:46,080
make what is different about the graph

2044
01:16:46,080 --> 01:16:48,400
because it's just calculating the next

2045
01:16:48,400 --> 01:16:50,000
action to take in the examples that you

2046
01:16:50,000 --> 01:16:52,400
provided

2047
01:16:53,120 --> 01:16:55,920
maybe guys you can show your graph again

2048
01:16:55,920 --> 01:16:58,640
how how the future is represented

2049
01:16:58,640 --> 01:17:00,560
um and how do you add temporal thickness

2050
01:17:00,560 --> 01:17:02,560
to that for example that's kind of so if

2051
01:17:02,560 --> 01:17:05,760
you have if you have a graph

2052
01:17:06,320 --> 01:17:07,280
like

2053
01:17:07,280 --> 01:17:10,400
chair screen yes

2054
01:17:12,800 --> 01:17:14,239
if you have a graph like this then how

2055
01:17:14,239 --> 01:17:15,600
do you add temporal thickness for

2056
01:17:15,600 --> 01:17:17,840
example

2057
01:17:17,920 --> 01:17:20,080
um that's that's just about adding

2058
01:17:20,080 --> 01:17:21,120
layers

2059
01:17:21,120 --> 01:17:22,400
so

2060
01:17:22,400 --> 01:17:25,920
what is shown here is one layer

2061
01:17:25,920 --> 01:17:27,280
and this layer

2062
01:17:27,280 --> 01:17:28,320
it acts

2063
01:17:28,320 --> 01:17:30,960
at a certain clock time you know

2064
01:17:30,960 --> 01:17:33,840
observations come in discretely

2065
01:17:33,840 --> 01:17:34,960
um

2066
01:17:34,960 --> 01:17:36,960
but you might have a layer above this

2067
01:17:36,960 --> 01:17:38,960
that is somehow connected to this layer

2068
01:17:38,960 --> 01:17:40,239
below

2069
01:17:40,239 --> 01:17:42,080
that acts at a higher temporal time

2070
01:17:42,080 --> 01:17:43,360
scale

2071
01:17:43,360 --> 01:17:46,239
so it evolves slower

2072
01:17:46,239 --> 01:17:48,239
but it regulates or influences the

2073
01:17:48,239 --> 01:17:49,440
parameters

2074
01:17:49,440 --> 01:17:52,000
of for example a transition model here

2075
01:17:52,000 --> 01:17:54,480
or an observation model here

2076
01:17:54,480 --> 01:17:56,480
so you get a time varying

2077
01:17:56,480 --> 01:17:58,800
observation model that is influenced

2078
01:17:58,800 --> 01:17:59,679
by

2079
01:17:59,679 --> 01:18:02,400
a slower evolving layer

2080
01:18:02,400 --> 01:18:04,000
on top of that you can get an even

2081
01:18:04,000 --> 01:18:05,679
slower evolving layer right and that's

2082
01:18:05,679 --> 01:18:06,960
that's the way

2083
01:18:06,960 --> 01:18:09,440
you can build hierarchies

2084
01:18:09,440 --> 01:18:10,640
um

2085
01:18:10,640 --> 01:18:13,120
and actually there's um also a pg

2086
01:18:13,120 --> 01:18:15,760
student in our group ismael senos who

2087
01:18:15,760 --> 01:18:17,280
has done some very interesting work on

2088
01:18:17,280 --> 01:18:19,280
that and he has investigated how you

2089
01:18:19,280 --> 01:18:21,199
make hierarchical

2090
01:18:21,199 --> 01:18:24,480
gaussian filters um so hierarchical

2091
01:18:24,480 --> 01:18:27,199
gaussian systems where you have one top

2092
01:18:27,199 --> 01:18:29,679
layer influencing the variance

2093
01:18:29,679 --> 01:18:31,280
of the transition model of the layer

2094
01:18:31,280 --> 01:18:33,280
below

2095
01:18:33,280 --> 01:18:34,960
and

2096
01:18:34,960 --> 01:18:37,360
you can see that you can get

2097
01:18:37,360 --> 01:18:40,960
can model very natural signals with that

2098
01:18:40,960 --> 01:18:42,960
so so in nature you have you have

2099
01:18:42,960 --> 01:18:44,640
signals that are time varying the

2100
01:18:44,640 --> 01:18:46,400
statistics there their time varying and

2101
01:18:46,400 --> 01:18:48,880
the statistics of those models

2102
01:18:48,880 --> 01:18:50,800
are time varying

2103
01:18:50,800 --> 01:18:52,880
so a hierarchical model in that sense

2104
01:18:52,880 --> 01:18:54,560
can be very useful for that and of

2105
01:18:54,560 --> 01:18:56,719
course that's that's yeah of course

2106
01:18:56,719 --> 01:18:58,960
also how our brains are structured so

2107
01:18:58,960 --> 01:19:00,800
again there you have this inspiration

2108
01:19:00,800 --> 01:19:02,000
from nature

2109
01:19:02,000 --> 01:19:04,080
um on how to structure

2110
01:19:04,080 --> 01:19:07,360
the models that we try to build

2111
01:19:07,360 --> 01:19:08,480
um

2112
01:19:08,480 --> 01:19:10,560
with vector graphs

2113
01:19:10,560 --> 01:19:12,239
at least in theory they should be pretty

2114
01:19:12,239 --> 01:19:13,280
easy

2115
01:19:13,280 --> 01:19:14,800
because you can just connect them you

2116
01:19:14,800 --> 01:19:17,120
can connect layer on top of that and and

2117
01:19:17,120 --> 01:19:20,000
see how it behaves

2118
01:19:20,000 --> 01:19:21,760
and eventually the complexity of your

2119
01:19:21,760 --> 01:19:23,760
model will become very high and you will

2120
01:19:23,760 --> 01:19:26,159
get penalized for that automatically so

2121
01:19:26,159 --> 01:19:28,320
there will be a cutoff point

2122
01:19:28,320 --> 01:19:31,120
um given your data and that will be the

2123
01:19:31,120 --> 01:19:32,960
optimal amount of layers that you need

2124
01:19:32,960 --> 01:19:34,400
in order to explain away all the

2125
01:19:34,400 --> 01:19:35,679
variants

2126
01:19:35,679 --> 01:19:38,480
that you observe

2127
01:19:39,520 --> 01:19:42,560
so so that's kind of how we think about

2128
01:19:42,560 --> 01:19:44,800
temporal thickness

2129
01:19:44,800 --> 01:19:46,000
and and

2130
01:19:46,000 --> 01:19:48,239
time dependence and dynamical models

2131
01:19:48,239 --> 01:19:50,719
like these

2132
01:19:50,719 --> 01:19:54,159
then can i share my screen also yep

2133
01:19:54,159 --> 01:19:56,719
sure okay yeah let's see

2134
01:19:56,719 --> 01:19:59,760
because this um awesome

2135
01:19:59,760 --> 01:20:02,080
yeah

2136
01:20:02,400 --> 01:20:05,280
this is a graph from a paper

2137
01:20:05,280 --> 01:20:08,639
a few years back uh in frontiers

2138
01:20:08,639 --> 01:20:11,520
um it's called i think uh

2139
01:20:11,520 --> 01:20:13,440
deep temporal models inspect factor

2140
01:20:13,440 --> 01:20:14,880
graphs or something

2141
01:20:14,880 --> 01:20:17,360
and here you see a three layer system i

2142
01:20:17,360 --> 01:20:19,679
mean don't bother about the details now

2143
01:20:19,679 --> 01:20:21,840
but here you see at the top layer just

2144
01:20:21,840 --> 01:20:24,800
just basically has one one section one

2145
01:20:24,800 --> 01:20:26,400
time step

2146
01:20:26,400 --> 01:20:28,639
and in that time step at the top layer

2147
01:20:28,639 --> 01:20:29,600
you have

2148
01:20:29,600 --> 01:20:30,639
two

2149
01:20:30,639 --> 01:20:33,520
observations or two steps at the

2150
01:20:33,520 --> 01:20:34,800
middleware

2151
01:20:34,800 --> 01:20:37,440
i need uh yeah

2152
01:20:37,440 --> 01:20:40,159
i'm not sure if you can see my uh

2153
01:20:40,159 --> 01:20:43,040
okay and then again for the let's say

2154
01:20:43,040 --> 01:20:44,880
the third layer whenever the middle

2155
01:20:44,880 --> 01:20:47,679
layer tips takes one step we have two

2156
01:20:47,679 --> 01:20:50,400
steps here so so there is sort of a

2157
01:20:50,400 --> 01:20:52,560
finer granularity

2158
01:20:52,560 --> 01:20:55,440
at each layer right and so we can build

2159
01:20:55,440 --> 01:20:57,600
hierarchical

2160
01:20:57,600 --> 01:21:01,280
uh models really and uh so we're doing

2161
01:21:01,280 --> 01:21:04,480
that also in uh i mean also yeah if you

2162
01:21:04,480 --> 01:21:05,520
you

2163
01:21:05,520 --> 01:21:07,679
you look at some of the papers on our

2164
01:21:07,679 --> 01:21:10,080
website you'll find a lot of babies on

2165
01:21:10,080 --> 01:21:12,400
the hierarchical gaussian filter from

2166
01:21:12,400 --> 01:21:15,120
chris matisse we've implemented that

2167
01:21:15,120 --> 01:21:16,239
in in

2168
01:21:16,239 --> 01:21:19,040
but also um

2169
01:21:19,040 --> 01:21:20,719
i mean you can also do it for active

2170
01:21:20,719 --> 01:21:23,280
influence things like uh and it will

2171
01:21:23,280 --> 01:21:24,159
look

2172
01:21:24,159 --> 01:21:26,960
like this uh

2173
01:21:26,960 --> 01:21:30,000
thomas pyre has also graphs like this in

2174
01:21:30,000 --> 01:21:32,960
some of his papers

2175
01:21:33,760 --> 01:21:35,840
very interesting and we see a lot of the

2176
01:21:35,840 --> 01:21:38,239
same variables like g

2177
01:21:38,239 --> 01:21:39,440
d b

2178
01:21:39,440 --> 01:21:41,040
like we can it's kind of a different

2179
01:21:41,040 --> 01:21:43,520
representation of active inference so

2180
01:21:43,520 --> 01:21:44,960
yeah

2181
01:21:44,960 --> 01:21:46,800
this is kind of also going back i think

2182
01:21:46,800 --> 01:21:49,520
to the earlier frontiers paper what are

2183
01:21:49,520 --> 01:21:52,000
some of the big equivalencies

2184
01:21:52,000 --> 01:21:55,679
or kind of like airtight mappings

2185
01:21:55,679 --> 01:21:57,440
from into

2186
01:21:57,440 --> 01:21:59,120
forney factor graphs

2187
01:21:59,120 --> 01:22:01,040
because there's probably some broad

2188
01:22:01,040 --> 01:22:03,120
areas of application

2189
01:22:03,120 --> 01:22:05,520
that could almost be hot swapped for

2190
01:22:05,520 --> 01:22:07,760
this underlying it perhaps

2191
01:22:07,760 --> 01:22:09,679
so what like are the equivalencies with

2192
01:22:09,679 --> 01:22:12,480
just bayesian graphs in general versus

2193
01:22:12,480 --> 01:22:14,480
factor graphs versus other

2194
01:22:14,480 --> 01:22:17,599
topics at that level

2195
01:22:21,120 --> 01:22:23,520
i think a foreign style vector graph or

2196
01:22:23,520 --> 01:22:26,320
a bipartite graph or a beijing network

2197
01:22:26,320 --> 01:22:27,920
they aren't really different

2198
01:22:27,920 --> 01:22:29,760
they can be used as

2199
01:22:29,760 --> 01:22:31,840
they're just a representation

2200
01:22:31,840 --> 01:22:34,159
of a factorized model

2201
01:22:34,159 --> 01:22:37,120
and the way you represent that

2202
01:22:37,120 --> 01:22:39,520
can have an impact about how you think

2203
01:22:39,520 --> 01:22:41,440
about those models

2204
01:22:41,440 --> 01:22:43,280
so for example if you choose a 4-install

2205
01:22:43,280 --> 01:22:45,199
effective graph representation it's very

2206
01:22:45,199 --> 01:22:47,120
suited for signal processing because you

2207
01:22:47,120 --> 01:22:49,120
kind of can see these messages as

2208
01:22:49,120 --> 01:22:51,520
signals that flow over your graph

2209
01:22:51,520 --> 01:22:53,840
so for us as engineers

2210
01:22:53,840 --> 01:22:57,679
this is a very intuitive representation

2211
01:22:57,679 --> 01:23:00,880
in bayesian networks it's a bit more

2212
01:23:00,880 --> 01:23:02,880
the model representation itself is more

2213
01:23:02,880 --> 01:23:05,199
compact in that sense that you only have

2214
01:23:05,199 --> 01:23:06,719
variable notes and you see how they

2215
01:23:06,719 --> 01:23:08,320
relate so it gives you a good idea of

2216
01:23:08,320 --> 01:23:10,239
model structure

2217
01:23:10,239 --> 01:23:13,120
so it can be very nice to

2218
01:23:13,120 --> 01:23:16,000
have a quick overview of model like that

2219
01:23:16,000 --> 01:23:17,120
and then you have for example a

2220
01:23:17,120 --> 01:23:19,120
bipartite graph which also shows a

2221
01:23:19,120 --> 01:23:21,120
relation between variables as an

2222
01:23:21,120 --> 01:23:22,960
additional kind of

2223
01:23:22,960 --> 01:23:25,520
vector node in between

2224
01:23:25,520 --> 01:23:27,440
um and it goes it gives you a bit more

2225
01:23:27,440 --> 01:23:29,280
granularity on how these are connected

2226
01:23:29,280 --> 01:23:31,120
and gives you room to talk about well

2227
01:23:31,120 --> 01:23:32,719
what is the relationship between these

2228
01:23:32,719 --> 01:23:35,280
variables

2229
01:23:35,280 --> 01:23:39,440
and so in the end they're equivalent

2230
01:23:39,520 --> 01:23:41,760
you can take one model and represent it

2231
01:23:41,760 --> 01:23:45,760
in three different ways maybe even more

2232
01:23:46,159 --> 01:23:48,560
but i think it does impact the way how

2233
01:23:48,560 --> 01:23:49,920
you think

2234
01:23:49,920 --> 01:23:52,320
or how you think about these models so

2235
01:23:52,320 --> 01:23:54,559
um

2236
01:23:55,840 --> 01:23:56,960
that

2237
01:23:56,960 --> 01:23:58,560
that usually comes up when writing a

2238
01:23:58,560 --> 01:24:00,239
paper

2239
01:24:00,239 --> 01:24:01,679
and then you have to think okay what is

2240
01:24:01,679 --> 01:24:03,520
actually the best representation for my

2241
01:24:03,520 --> 01:24:04,639
idea

2242
01:24:04,639 --> 01:24:06,239
sometimes it's about budget graph

2243
01:24:06,239 --> 01:24:07,520
sometimes it's a visual network

2244
01:24:07,520 --> 01:24:10,159
sometimes it's for install photograph

2245
01:24:10,159 --> 01:24:11,120
um

2246
01:24:11,120 --> 01:24:14,800
it just depends by your story yeah

2247
01:24:14,800 --> 01:24:16,320
hopefully

2248
01:24:16,320 --> 01:24:18,480
i do find though i mean in my experience

2249
01:24:18,480 --> 01:24:21,120
when we think about systems and a whole

2250
01:24:21,120 --> 01:24:23,040
set of equations if you read that in a

2251
01:24:23,040 --> 01:24:24,159
paper

2252
01:24:24,159 --> 01:24:26,880
or if you write it down um it gives more

2253
01:24:26,880 --> 01:24:28,880
insight if you draw to me it gives more

2254
01:24:28,880 --> 01:24:31,280
insight if i draw the graph

2255
01:24:31,280 --> 01:24:32,480
and

2256
01:24:32,480 --> 01:24:33,760
there is an x

2257
01:24:33,760 --> 01:24:36,000
there must be an exact correspondence

2258
01:24:36,000 --> 01:24:37,920
between the

2259
01:24:37,920 --> 01:24:40,480
the graph and the equations and very

2260
01:24:40,480 --> 01:24:42,960
often if you draw the graph and then you

2261
01:24:42,960 --> 01:24:45,040
write down the equations there's not an

2262
01:24:45,040 --> 01:24:47,360
x-axis corresponding so you learn from

2263
01:24:47,360 --> 01:24:50,000
it you you you basically you know there

2264
01:24:50,000 --> 01:24:52,000
must be an exact correspondence and

2265
01:24:52,000 --> 01:24:53,600
basically you you often find out you

2266
01:24:53,600 --> 01:24:56,239
have an error in your equations or in

2267
01:24:56,239 --> 01:24:57,920
your graph

2268
01:24:57,920 --> 01:25:00,000
but i think uh

2269
01:25:00,000 --> 01:25:03,600
like the the end goal the end goal uh

2270
01:25:03,600 --> 01:25:07,120
is of to make the toolbox a toolbox for

2271
01:25:07,120 --> 01:25:09,199
let's say for the community to design

2272
01:25:09,199 --> 01:25:12,639
their own active influence agents and

2273
01:25:12,639 --> 01:25:13,679
what i

2274
01:25:13,679 --> 01:25:15,520
envisioned there is something like

2275
01:25:15,520 --> 01:25:18,000
simulink i'm not sure or labview i'm not

2276
01:25:18,000 --> 01:25:20,080
sure if people are familiar with that

2277
01:25:20,080 --> 01:25:21,280
but um

2278
01:25:21,280 --> 01:25:23,120
these are graphical models you want to

2279
01:25:23,120 --> 01:25:26,080
actually also define them graphically

2280
01:25:26,080 --> 01:25:27,920
and you want to have a palette with

2281
01:25:27,920 --> 01:25:29,679
notes and just

2282
01:25:29,679 --> 01:25:32,320
draw your graph and say this is my model

2283
01:25:32,320 --> 01:25:34,639
and now go run

2284
01:25:34,639 --> 01:25:36,159
you don't want to worry about the

2285
01:25:36,159 --> 01:25:37,840
inference the inference is under the

2286
01:25:37,840 --> 01:25:39,600
root dependence passing should be done

2287
01:25:39,600 --> 01:25:40,880
by

2288
01:25:40,880 --> 01:25:43,199
the designers of the toolbox but you

2289
01:25:43,199 --> 01:25:46,080
should just be thinking about your

2290
01:25:46,080 --> 01:25:49,360
graphical structure that's the uh

2291
01:25:49,360 --> 01:25:52,880
and this one and connect it

2292
01:25:52,880 --> 01:25:54,880
with your mouse to your microphone of

2293
01:25:54,880 --> 01:25:57,440
your computer or to your camera

2294
01:25:57,440 --> 01:25:59,920
and maybe to uh

2295
01:25:59,920 --> 01:26:01,760
you know there's also connectors in the

2296
01:26:01,760 --> 01:26:05,280
toolbox for robots and then

2297
01:26:05,280 --> 01:26:07,600
it should just go right

2298
01:26:07,600 --> 01:26:09,199
that's going to be the bob ross of

2299
01:26:09,199 --> 01:26:11,519
graphs

2300
01:26:11,920 --> 01:26:13,520
that's how you want to design i think

2301
01:26:13,520 --> 01:26:15,280
right you just want to draw the brain

2302
01:26:15,280 --> 01:26:17,840
and at least the generative model of the

2303
01:26:17,840 --> 01:26:19,679
brain and just let it go

2304
01:26:19,679 --> 01:26:21,600
and don't worry about how inference

2305
01:26:21,600 --> 01:26:24,239
takes place

2306
01:26:24,480 --> 01:26:26,719
what what you just said there about

2307
01:26:26,719 --> 01:26:29,199
viewing the equation and then maybe

2308
01:26:29,199 --> 01:26:31,520
going from the pen and paper to the

2309
01:26:31,520 --> 01:26:33,280
programming language to the graphical

2310
01:26:33,280 --> 01:26:35,440
representation and then kind of

2311
01:26:35,440 --> 01:26:37,120
cross-checking it's like when you

2312
01:26:37,120 --> 01:26:38,800
reverse translate languages and you're

2313
01:26:38,800 --> 01:26:41,120
when you lock in where two words map

2314
01:26:41,120 --> 01:26:42,800
back to each other you know you've

2315
01:26:42,800 --> 01:26:44,239
you've made a map but if you're on this

2316
01:26:44,239 --> 01:26:46,719
infinite loop you're you're lost in the

2317
01:26:46,719 --> 01:26:49,760
word space so when you move across

2318
01:26:49,760 --> 01:26:52,639
sectors like that or across modalities

2319
01:26:52,639 --> 01:26:53,520
with the

2320
01:26:53,520 --> 01:26:55,440
analytical the simulations on the

2321
01:26:55,440 --> 01:26:57,840
computer and then the graphical it kind

2322
01:26:57,840 --> 01:26:59,679
of embeds action

2323
01:26:59,679 --> 01:27:02,159
in what otherwise might be seen as a

2324
01:27:02,159 --> 01:27:03,440
knowledge

2325
01:27:03,440 --> 01:27:05,840
product a product of inference and then

2326
01:27:05,840 --> 01:27:07,520
a final action

2327
01:27:07,520 --> 01:27:10,239
and that's a similar fallacy to

2328
01:27:10,239 --> 01:27:12,719
train the dynamic process in a snapshot

2329
01:27:12,719 --> 01:27:13,920
and then expect that it's going to work

2330
01:27:13,920 --> 01:27:15,840
in real time so it's like embedding this

2331
01:27:15,840 --> 01:27:17,760
real time flow

2332
01:27:17,760 --> 01:27:20,159
in that the production of knowledge yeah

2333
01:27:20,159 --> 01:27:24,000
yes yes we are important yeah yeah

2334
01:27:24,000 --> 01:27:25,679
um yeah we're implementing active

2335
01:27:25,679 --> 01:27:28,080
insurance while we are trying to design

2336
01:27:28,080 --> 01:27:30,800
this stuff that's true yeah

2337
01:27:30,800 --> 01:27:34,400
yeah one one general question was just

2338
01:27:34,400 --> 01:27:36,239
about factorization

2339
01:27:36,239 --> 01:27:37,679
so

2340
01:27:37,679 --> 01:27:40,000
the factorization the

2341
01:27:40,000 --> 01:27:41,920
way we go about it is starting with our

2342
01:27:41,920 --> 01:27:44,880
intuition and looking for residuals or

2343
01:27:44,880 --> 01:27:47,520
how of all the ways to factorize a model

2344
01:27:47,520 --> 01:27:51,600
do we find one that works

2345
01:27:53,440 --> 01:27:55,440
yeah there's two kinds of factorizations

2346
01:27:55,440 --> 01:27:57,440
there's a factorization in let's say in

2347
01:27:57,440 --> 01:27:59,440
the generative model

2348
01:27:59,440 --> 01:28:02,560
right that's the graph that we draw

2349
01:28:02,560 --> 01:28:06,639
and so i mean let's say most people

2350
01:28:06,639 --> 01:28:10,719
uh or the most common models are these

2351
01:28:10,719 --> 01:28:13,440
these

2352
01:28:13,440 --> 01:28:16,239
these markov models right where you you

2353
01:28:16,239 --> 01:28:18,880
kind of retain a current state that

2354
01:28:18,880 --> 01:28:20,639
summarizes everything that happens in

2355
01:28:20,639 --> 01:28:22,239
the past

2356
01:28:22,239 --> 01:28:25,120
uh and you use that current state to

2357
01:28:25,120 --> 01:28:27,440
basically to yeah to summarize the past

2358
01:28:27,440 --> 01:28:29,760
and then that's all the information have

2359
01:28:29,760 --> 01:28:30,960
about the past so you don't need to

2360
01:28:30,960 --> 01:28:33,440
remember the past you just remember your

2361
01:28:33,440 --> 01:28:34,560
state

2362
01:28:34,560 --> 01:28:36,159
and with that and you did make a new

2363
01:28:36,159 --> 01:28:39,040
observation you combine the information

2364
01:28:39,040 --> 01:28:40,560
make a new state

2365
01:28:40,560 --> 01:28:42,639
and so forth there so hidden markov

2366
01:28:42,639 --> 01:28:44,760
models

2367
01:28:44,760 --> 01:28:47,600
palmdps all these models have that same

2368
01:28:47,600 --> 01:28:49,199
structure these these this

2369
01:28:49,199 --> 01:28:51,360
microstructure so that's for the

2370
01:28:51,360 --> 01:28:53,440
generative model of these dynamic

2371
01:28:53,440 --> 01:28:54,560
systems

2372
01:28:54,560 --> 01:28:56,400
then there is a second question if we

2373
01:28:56,400 --> 01:28:58,719
now do inference

2374
01:28:58,719 --> 01:29:02,400
um and um yeah then there's often what

2375
01:29:02,400 --> 01:29:04,880
we call the mean field assumption for

2376
01:29:04,880 --> 01:29:07,040
the variational posterior but there are

2377
01:29:07,040 --> 01:29:08,639
also

2378
01:29:08,639 --> 01:29:11,920
variants on that structured green field

2379
01:29:11,920 --> 01:29:14,239
so you can you can

2380
01:29:14,239 --> 01:29:17,520
still decide if you want your posterior

2381
01:29:17,520 --> 01:29:19,920
to be even more structured or let's say

2382
01:29:19,920 --> 01:29:22,880
even more factorized than the

2383
01:29:22,880 --> 01:29:24,480
generative model

2384
01:29:24,480 --> 01:29:27,040
but in the end yeah it's a

2385
01:29:27,040 --> 01:29:29,120
it's a proposal

2386
01:29:29,120 --> 01:29:30,159
uh

2387
01:29:30,159 --> 01:29:33,120
you just run it and if you have another

2388
01:29:33,120 --> 01:29:35,040
proposal you just run it and the one

2389
01:29:35,040 --> 01:29:38,000
that has the lowest free energy wins

2390
01:29:38,000 --> 01:29:40,800
that's uh that's it right the challenge

2391
01:29:40,800 --> 01:29:44,000
is to automate that process

2392
01:29:44,000 --> 01:29:45,840
go from the

2393
01:29:45,840 --> 01:29:47,600
let's say the poorer structure to the

2394
01:29:47,600 --> 01:29:49,920
better structures

2395
01:29:49,920 --> 01:29:52,159
just by failing to minimization just by

2396
01:29:52,159 --> 01:29:55,840
message passing in real time without

2397
01:29:55,840 --> 01:29:57,600
stopping the whole process doing an

2398
01:29:57,600 --> 01:29:59,040
analysis

2399
01:29:59,040 --> 01:30:01,520
right it should just keep moving right

2400
01:30:01,520 --> 01:30:04,080
it should just just structure adaptation

2401
01:30:04,080 --> 01:30:06,239
should be like state estimation it just

2402
01:30:06,239 --> 01:30:08,560
keeps moving over time there's no

2403
01:30:08,560 --> 01:30:10,719
resetting

2404
01:30:10,719 --> 01:30:12,719
maybe there's a bit of a

2405
01:30:12,719 --> 01:30:15,120
thing like

2406
01:30:15,360 --> 01:30:19,120
a dreaming stage right but

2407
01:30:19,120 --> 01:30:22,480
the principle time moves on

2408
01:30:22,480 --> 01:30:24,239
and that's the challenge and we don't

2409
01:30:24,239 --> 01:30:26,560
know that in our factory class but yeah

2410
01:30:26,560 --> 01:30:27,840
we

2411
01:30:27,840 --> 01:30:28,719
i mean

2412
01:30:28,719 --> 01:30:31,280
we have one hd student who is currently

2413
01:30:31,280 --> 01:30:32,840
looking into that

2414
01:30:32,840 --> 01:30:36,560
yeah like as an engineer i think um the

2415
01:30:36,560 --> 01:30:38,320
question is well what what do you start

2416
01:30:38,320 --> 01:30:40,400
out with what will be your initial model

2417
01:30:40,400 --> 01:30:42,560
proposal uh so if you talk about

2418
01:30:42,560 --> 01:30:44,880
factorizations of your generative model

2419
01:30:44,880 --> 01:30:47,040
you think uh every factor then it kind

2420
01:30:47,040 --> 01:30:49,440
of represents a prior distribution or

2421
01:30:49,440 --> 01:30:50,960
conditional distribution and that's how

2422
01:30:50,960 --> 01:30:53,440
you kind of build up your model

2423
01:30:53,440 --> 01:30:55,040
where do you start

2424
01:30:55,040 --> 01:30:57,520
and it starts with how you believe

2425
01:30:57,520 --> 01:31:01,600
the world generates observations

2426
01:31:01,600 --> 01:31:03,520
in that sense you think about

2427
01:31:03,520 --> 01:31:05,760
what is the causal structure

2428
01:31:05,760 --> 01:31:07,760
of the environment and you might have

2429
01:31:07,760 --> 01:31:10,159
some idea about how physics works

2430
01:31:10,159 --> 01:31:13,040
um or how

2431
01:31:13,040 --> 01:31:15,760
states transition in in your environment

2432
01:31:15,760 --> 01:31:17,280
or at least how you believe this

2433
01:31:17,280 --> 01:31:19,040
transition and that's kind of where you

2434
01:31:19,040 --> 01:31:20,080
start

2435
01:31:20,080 --> 01:31:22,159
and you think okay well

2436
01:31:22,159 --> 01:31:24,960
maybe let's try a very coarse note this

2437
01:31:24,960 --> 01:31:27,120
minus one for example in my talk let's

2438
01:31:27,120 --> 01:31:28,719
try that here because i don't really

2439
01:31:28,719 --> 01:31:30,400
know what i want to put there but i have

2440
01:31:30,400 --> 01:31:33,440
to put something let's try something

2441
01:31:33,440 --> 01:31:35,840
and see how that works it kind of models

2442
01:31:35,840 --> 01:31:39,199
how i believe the world works

2443
01:31:39,520 --> 01:31:42,639
and that's that's how you start out

2444
01:31:42,639 --> 01:31:44,639
and then you start thinking well i

2445
01:31:44,639 --> 01:31:46,639
actually know a bit more about it i'm

2446
01:31:46,639 --> 01:31:48,960
not satisfied with how this model

2447
01:31:48,960 --> 01:31:51,760
proposed how this model works um and i

2448
01:31:51,760 --> 01:31:55,120
can change this minus one for example

2449
01:31:55,120 --> 01:31:57,280
with uh with something that's a bit more

2450
01:31:57,280 --> 01:31:59,280
complex because i know the physics i

2451
01:31:59,280 --> 01:32:00,320
know how

2452
01:32:00,320 --> 01:32:01,679
these uh

2453
01:32:01,679 --> 01:32:03,920
how temperature integrates with distance

2454
01:32:03,920 --> 01:32:06,960
for example and i can build that in

2455
01:32:06,960 --> 01:32:08,560
um so that's how you go to a second

2456
01:32:08,560 --> 01:32:09,920
proposal

2457
01:32:09,920 --> 01:32:12,560
and it's always inspired by

2458
01:32:12,560 --> 01:32:14,320
uh how you believe

2459
01:32:14,320 --> 01:32:17,600
the causal structure of the world is um

2460
01:32:17,600 --> 01:32:19,440
is uh yeah is

2461
01:32:19,440 --> 01:32:21,040
how that works so in that sense it's

2462
01:32:21,040 --> 01:32:22,560
kind of theory building you're building

2463
01:32:22,560 --> 01:32:25,280
a theory or an explanation of your

2464
01:32:25,280 --> 01:32:27,040
environment

2465
01:32:27,040 --> 01:32:28,239
and

2466
01:32:28,239 --> 01:32:30,480
well maybe if you're really really good

2467
01:32:30,480 --> 01:32:32,320
if you have an excellent model then you

2468
01:32:32,320 --> 01:32:34,480
can find something that

2469
01:32:34,480 --> 01:32:35,920
kind of improves upon the state of the

2470
01:32:35,920 --> 01:32:39,600
art because you can always improve

2471
01:32:39,600 --> 01:32:41,120
just find something that gives you a

2472
01:32:41,120 --> 01:32:42,880
lower free energy or better model

2473
01:32:42,880 --> 01:32:44,960
performance in that sense

2474
01:32:44,960 --> 01:32:46,400
um and you can keep tweaking and

2475
01:32:46,400 --> 01:32:47,679
tweaking

2476
01:32:47,679 --> 01:32:48,800
um

2477
01:32:48,800 --> 01:32:50,800
these models and these factorizations

2478
01:32:50,800 --> 01:32:51,760
and

2479
01:32:51,760 --> 01:32:54,960
things like that

2480
01:32:56,880 --> 01:32:58,000
yeah

2481
01:32:58,000 --> 01:32:59,360
free energy

2482
01:32:59,360 --> 01:33:00,639
minimization

2483
01:33:00,639 --> 01:33:03,440
has been described or just as a way to

2484
01:33:03,440 --> 01:33:05,280
rank the different models and as an

2485
01:33:05,280 --> 01:33:06,880
imperative on these multiple different

2486
01:33:06,880 --> 01:33:09,840
fronts how do we know that

2487
01:33:09,840 --> 01:33:11,920
free energy minimization is making the

2488
01:33:11,920 --> 01:33:13,199
policy

2489
01:33:13,199 --> 01:33:14,480
that

2490
01:33:14,480 --> 01:33:16,880
is going to be like resilient is there a

2491
01:33:16,880 --> 01:33:18,800
way where similar to a local

2492
01:33:18,800 --> 01:33:20,639
optimization getting trapped somewhere

2493
01:33:20,639 --> 01:33:22,560
in a bigger optimization space

2494
01:33:22,560 --> 01:33:24,400
there might be some avenue of free

2495
01:33:24,400 --> 01:33:26,639
energy minimization that

2496
01:33:26,639 --> 01:33:28,560
makes the system just like break down

2497
01:33:28,560 --> 01:33:29,920
like we'll get there faster let's just

2498
01:33:29,920 --> 01:33:31,760
accelerate and then

2499
01:33:31,760 --> 01:33:32,880
there's some

2500
01:33:32,880 --> 01:33:35,120
kind of one-time failure of the system

2501
01:33:35,120 --> 01:33:38,000
i'm just wondering how can one

2502
01:33:38,000 --> 01:33:40,639
metric that's a number you know and can

2503
01:33:40,639 --> 01:33:43,120
be sorted how can it evaluate such

2504
01:33:43,120 --> 01:33:44,639
radically different

2505
01:33:44,639 --> 01:33:48,639
chess strategies or driving

2506
01:33:48,840 --> 01:33:50,639
approaches at the end it's just

2507
01:33:50,639 --> 01:33:52,719
probability theory and probability is

2508
01:33:52,719 --> 01:33:55,360
also just a number right

2509
01:33:55,360 --> 01:33:57,760
and the energy kind of

2510
01:33:57,760 --> 01:33:59,760
it approximates your evidence which is

2511
01:33:59,760 --> 01:34:01,760
the probability according to your model

2512
01:34:01,760 --> 01:34:04,800
of observing the data so if you make a

2513
01:34:04,800 --> 01:34:07,920
model that gives you the best evidence

2514
01:34:07,920 --> 01:34:10,239
then it's a good explanation for for

2515
01:34:10,239 --> 01:34:12,480
your for your data

2516
01:34:12,480 --> 01:34:15,040
so in the end it's just

2517
01:34:15,040 --> 01:34:16,639
you try to do

2518
01:34:16,639 --> 01:34:19,600
approximate probability theory

2519
01:34:19,600 --> 01:34:20,639
um

2520
01:34:20,639 --> 01:34:22,080
and free energy

2521
01:34:22,080 --> 01:34:25,360
is then bound upon your evidence and it

2522
01:34:25,360 --> 01:34:27,120
also takes into account

2523
01:34:27,120 --> 01:34:28,960
this posterior divergence term which

2524
01:34:28,960 --> 01:34:29,920
kind of

2525
01:34:29,920 --> 01:34:32,320
says the price that you pay for

2526
01:34:32,320 --> 01:34:35,120
approximating bayesian inference

2527
01:34:35,120 --> 01:34:37,600
so it has two parts to it it has

2528
01:34:37,600 --> 01:34:40,320
um the model evidence part

2529
01:34:40,320 --> 01:34:43,119
and it has the posterior divergence part

2530
01:34:43,119 --> 01:34:47,119
and both play a role one says okay um

2531
01:34:47,119 --> 01:34:48,400
this is

2532
01:34:48,400 --> 01:34:51,040
the quality of my solution it's it's how

2533
01:34:51,040 --> 01:34:52,320
well

2534
01:34:52,320 --> 01:34:53,040
uh

2535
01:34:53,040 --> 01:34:54,960
your model explains the data that you

2536
01:34:54,960 --> 01:34:57,040
observe you can get you can get a number

2537
01:34:57,040 --> 01:34:59,840
for that the surprise or the negative

2538
01:34:59,840 --> 01:35:02,239
log modal evidence

2539
01:35:02,239 --> 01:35:03,600
and you have the other part of stereo

2540
01:35:03,600 --> 01:35:05,040
divergence that says

2541
01:35:05,040 --> 01:35:07,040
well this is the price and information

2542
01:35:07,040 --> 01:35:08,800
that you pay for making this

2543
01:35:08,800 --> 01:35:11,119
approximation you can also put a number

2544
01:35:11,119 --> 01:35:12,239
on that

2545
01:35:12,239 --> 01:35:13,840
it's just a chaotic versions that you

2546
01:35:13,840 --> 01:35:15,600
evaluate

2547
01:35:15,600 --> 01:35:17,920
um and then you add those two and you

2548
01:35:17,920 --> 01:35:20,239
get a number

2549
01:35:20,239 --> 01:35:22,559
um

2550
01:35:22,880 --> 01:35:24,880
so yeah so the question is how can one

2551
01:35:24,880 --> 01:35:26,639
number kind of

2552
01:35:26,639 --> 01:35:29,199
represent

2553
01:35:29,199 --> 01:35:31,840
everything in terms of quality

2554
01:35:31,840 --> 01:35:33,520
well you might care about different

2555
01:35:33,520 --> 01:35:36,080
things than how well your model predicts

2556
01:35:36,080 --> 01:35:39,600
or evaluates the observations right

2557
01:35:39,600 --> 01:35:42,480
and then if you care about other things

2558
01:35:42,480 --> 01:35:43,440
um

2559
01:35:43,440 --> 01:35:45,440
then then

2560
01:35:45,440 --> 01:35:47,280
yep then then you might use different

2561
01:35:47,280 --> 01:35:48,400
number but

2562
01:35:48,400 --> 01:35:52,800
um in our in our sense in our in our uh

2563
01:35:52,800 --> 01:35:54,000
in our work

2564
01:35:54,000 --> 01:35:56,400
yeah we're kind of

2565
01:35:56,400 --> 01:35:57,440
uh

2566
01:35:57,440 --> 01:35:59,199
we want to have this bayesian measure of

2567
01:35:59,199 --> 01:36:00,400
quality

2568
01:36:00,400 --> 01:36:01,199
yeah

2569
01:36:01,199 --> 01:36:02,400
i don't know if that really answers your

2570
01:36:02,400 --> 01:36:04,480
question but it's it's it's still a good

2571
01:36:04,480 --> 01:36:06,159
question it's um

2572
01:36:06,159 --> 01:36:08,239
it's kind of is is free energy or that

2573
01:36:08,239 --> 01:36:10,400
number that you get is that enough

2574
01:36:10,400 --> 01:36:11,360
right

2575
01:36:11,360 --> 01:36:13,920
that's that's kind of what's behind this

2576
01:36:13,920 --> 01:36:16,159
and probability theory says yes but if

2577
01:36:16,159 --> 01:36:17,600
you apply it in practice then you care

2578
01:36:17,600 --> 01:36:19,520
about maybe other things you care about

2579
01:36:19,520 --> 01:36:21,840
how many people survive before how many

2580
01:36:21,840 --> 01:36:23,520
you know

2581
01:36:23,520 --> 01:36:27,199
how many how many mistakes you uh you

2582
01:36:27,199 --> 01:36:29,840
you cash from from something and if you

2583
01:36:29,840 --> 01:36:31,600
care about that well then you should use

2584
01:36:31,600 --> 01:36:33,520
that as a performance metric

2585
01:36:33,520 --> 01:36:36,880
i i think right i mean it's uh

2586
01:36:36,880 --> 01:36:39,360
the energy of course has has has many

2587
01:36:39,360 --> 01:36:42,639
decompositions right in in in

2588
01:36:42,639 --> 01:36:45,920
complexity minus accuracy and

2589
01:36:45,920 --> 01:36:48,880
and and surprise minus uh

2590
01:36:48,880 --> 01:36:51,520
minus the kl divergence

2591
01:36:51,520 --> 01:36:54,239
um but

2592
01:36:54,239 --> 01:36:54,960
to

2593
01:36:54,960 --> 01:36:56,560
i'm not sure if i interpret the question

2594
01:36:56,560 --> 01:36:58,320
correctly but if you say like how do you

2595
01:36:58,320 --> 01:37:00,560
know that it does well

2596
01:37:00,560 --> 01:37:02,880
in in practice in the field

2597
01:37:02,880 --> 01:37:05,679
well you don't right um

2598
01:37:05,679 --> 01:37:07,040
the

2599
01:37:07,040 --> 01:37:10,320
and look the only uh

2600
01:37:10,320 --> 01:37:12,800
thing you can say is that i mean what

2601
01:37:12,800 --> 01:37:15,119
the system does it will look for

2602
01:37:15,119 --> 01:37:17,280
a configuration that minimizes free

2603
01:37:17,280 --> 01:37:19,280
energy but you don't know what you don't

2604
01:37:19,280 --> 01:37:21,040
know you don't know if there is another

2605
01:37:21,040 --> 01:37:23,119
model that would do better if we haven't

2606
01:37:23,119 --> 01:37:26,000
simulated that model then we don't know

2607
01:37:26,000 --> 01:37:27,600
and um

2608
01:37:27,600 --> 01:37:29,679
the only learning opportunities there

2609
01:37:29,679 --> 01:37:30,639
are

2610
01:37:30,639 --> 01:37:34,480
is to generate errors so um

2611
01:37:34,480 --> 01:37:37,119
the only way to really improve the model

2612
01:37:37,119 --> 01:37:38,480
is to actually

2613
01:37:38,480 --> 01:37:42,000
hit indeed um let's say situations where

2614
01:37:42,000 --> 01:37:43,520
it's not working

2615
01:37:43,520 --> 01:37:45,280
and then you need to adapt your

2616
01:37:45,280 --> 01:37:47,280
parameters and and

2617
01:37:47,280 --> 01:37:49,520
and even more over time you have to

2618
01:37:49,520 --> 01:37:50,800
structure so

2619
01:37:50,800 --> 01:37:52,239
yeah it's uh

2620
01:37:52,239 --> 01:37:53,920
i mean building a good system is a

2621
01:37:53,920 --> 01:37:55,520
process

2622
01:37:55,520 --> 01:37:57,679
right it's not a

2623
01:37:57,679 --> 01:38:00,000
matter of uh just

2624
01:38:00,000 --> 01:38:01,600
you have to be extremely lucky if you

2625
01:38:01,600 --> 01:38:02,400
just

2626
01:38:02,400 --> 01:38:04,400
build a system that and it completely

2627
01:38:04,400 --> 01:38:06,159
works right

2628
01:38:06,159 --> 01:38:07,280
uh

2629
01:38:07,280 --> 01:38:09,040
it's what this

2630
01:38:09,040 --> 01:38:11,119
this between this orbitals active

2631
01:38:11,119 --> 01:38:13,600
influence describes is a process towards

2632
01:38:13,600 --> 01:38:15,520
a better

2633
01:38:15,520 --> 01:38:18,000
systems but not

2634
01:38:18,000 --> 01:38:19,440
it doesn't describe a system that

2635
01:38:19,440 --> 01:38:21,600
doesn't make mistakes in fact it needs

2636
01:38:21,600 --> 01:38:23,840
the mistakes to learn

2637
01:38:23,840 --> 01:38:27,040
and it describes the process

2638
01:38:27,040 --> 01:38:30,000
awesome points it's that operational

2639
01:38:30,000 --> 01:38:32,080
insight that if you're getting 100 on

2640
01:38:32,080 --> 01:38:35,119
the test like something is

2641
01:38:35,119 --> 01:38:38,159
at the very best less than informative

2642
01:38:38,159 --> 01:38:40,400
at the very worst you're you're way down

2643
01:38:40,400 --> 01:38:43,280
the wrong path and um and then it

2644
01:38:43,280 --> 01:38:45,360
reminded me of like a grocery store is

2645
01:38:45,360 --> 01:38:46,960
it that we're ranking the different

2646
01:38:46,960 --> 01:38:49,520
objects according to one measure

2647
01:38:49,520 --> 01:38:51,600
no not really it's like balancing

2648
01:38:51,600 --> 01:38:53,280
strategies

2649
01:38:53,280 --> 01:38:54,080
for

2650
01:38:54,080 --> 01:38:55,760
finding preference and that's where all

2651
01:38:55,760 --> 01:38:56,639
of these assumptions like the

2652
01:38:56,639 --> 01:38:58,320
factorization and the mean field and

2653
01:38:58,320 --> 01:39:00,000
it's not guaranteed to give you the best

2654
01:39:00,000 --> 01:39:02,400
object every time and there's still the

2655
01:39:02,400 --> 01:39:04,560
stochasticity of the real world and the

2656
01:39:04,560 --> 01:39:06,080
ability of the grocery store to change

2657
01:39:06,080 --> 01:39:08,639
like it's not the end of the story

2658
01:39:08,639 --> 01:39:10,000
it's actually just

2659
01:39:10,000 --> 01:39:12,880
a practice in a process that

2660
01:39:12,880 --> 01:39:14,560
has some of those features of reactive

2661
01:39:14,560 --> 01:39:17,360
graphs and biological systems

2662
01:39:17,360 --> 01:39:20,080
that's right yeah

2663
01:39:20,080 --> 01:39:22,960
well um if any of you have any final

2664
01:39:22,960 --> 01:39:24,840
comments this was just really one of the

2665
01:39:24,840 --> 01:39:27,520
coolest times to learn about this

2666
01:39:27,520 --> 01:39:28,800
but

2667
01:39:28,800 --> 01:39:31,040
you're always welcome back to join any

2668
01:39:31,040 --> 01:39:33,199
time as a participant or to present and

2669
01:39:33,199 --> 01:39:35,360
if you have any final comments you can

2670
01:39:35,360 --> 01:39:36,639
note them

2671
01:39:36,639 --> 01:39:38,080
well it was a

2672
01:39:38,080 --> 01:39:41,199
real pleasure to be here and uh

2673
01:39:41,199 --> 01:39:43,600
if we have new stuff we would love to

2674
01:39:43,600 --> 01:39:45,760
come back i think it's a fantastic

2675
01:39:45,760 --> 01:39:49,520
fantastic show here or show it's a

2676
01:39:49,520 --> 01:39:52,239
forum or whatever it's properly called

2677
01:39:52,239 --> 01:39:54,000
but i really enjoy it and we really

2678
01:39:54,000 --> 01:39:56,000
enjoyed being part of it

2679
01:39:56,000 --> 01:39:58,320
and uh thanks a lot for the discussion

2680
01:39:58,320 --> 01:40:00,320
some some food for thought there as well

2681
01:40:00,320 --> 01:40:01,520
it's really cool

2682
01:40:01,520 --> 01:40:03,679
good question for every opportunity to

2683
01:40:03,679 --> 01:40:05,840
present yes

2684
01:40:05,840 --> 01:40:06,639
great

2685
01:40:06,639 --> 01:40:11,320
okay until next time bye

