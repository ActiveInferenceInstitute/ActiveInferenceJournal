1
00:00:00,400 --> 00:00:02,969
A signal processing hook.

2
00:00:02,969 --> 00:00:05,038
So I designed my train.

3
00:00:05,672 --> 00:00:08,375
Sorry. Actually, I just one thing change.

4
00:00:08,408 --> 00:00:12,479
Could you just restart that
but go for it. OK.

5
00:00:13,313 --> 00:00:15,382
Thanks for the introduction, Dan.

6
00:00:15,582 --> 00:00:17,183
My name is Fritz.

7
00:00:17,183 --> 00:00:19,953
I'm a professor in Beethoven
and Beethoven.

8
00:00:20,520 --> 00:00:22,655
University of Technology
in the Netherlands.

9
00:00:24,090 --> 00:00:25,558
I'd be a part of

10
00:00:26,059 --> 00:00:29,529
an electrical engineering department
in the signal processing group.

11
00:00:29,529 --> 00:00:32,198
So we design
signal processing algorithms.

12
00:00:32,632 --> 00:00:37,203
And about six, seven years ago,
I read the first time

13
00:00:37,203 --> 00:00:41,207
a paperback health system
was called A Rough Guide to the Brain.

14
00:00:41,875 --> 00:00:45,912
And it struck me that
this could be fantastic for processing.

15
00:00:45,945 --> 00:00:50,016
So since then, I'm really trying
to work with people in my lab,

16
00:00:51,251 --> 00:00:54,854
realizing, realizing agents
that are still designed to automate

17
00:00:55,188 --> 00:00:58,525
the design process of a signal processing
algorithms

18
00:00:58,925 --> 00:01:01,628
are simply doing it by mass passing.

19
00:01:01,628 --> 00:01:03,363
And we want to talk about it today.

20
00:01:05,565 --> 00:01:06,433
Thanks.

21
00:01:06,933 --> 00:01:07,567
Yeah.

22
00:01:07,967 --> 00:01:11,671
My name is Jason Love,
and those stick with Birth Lab.

23
00:01:12,439 --> 00:01:13,506
I did my best deal.

24
00:01:13,506 --> 00:01:16,543
So an active inference
and how to automate those processes.

25
00:01:16,543 --> 00:01:20,713
And also together with my books
and all the colleagues from the lab,

26
00:01:20,713 --> 00:01:25,218
we built a tool box lab
and I'll be talking and we'll can you to

27
00:01:26,319 --> 00:01:29,656
how we apply that
in an active interest of infants contacts

28
00:01:30,557 --> 00:01:32,659
and do some cool things with it.

29
00:01:32,659 --> 00:01:35,128
And so that's for later oh

30
00:01:37,497 --> 00:01:38,865
yeah. Hello, everyone.

31
00:01:38,865 --> 00:01:40,467
So my name is Nick Tebogo.

32
00:01:40,467 --> 00:01:44,737
I'm a teacher, candidate and bias lab
also in t in the university.

33
00:01:45,205 --> 00:01:47,774
And my work is mostly about reactive,

34
00:01:47,774 --> 00:01:50,143
moisturizing based Bayesian inference

35
00:01:51,010 --> 00:01:53,913
that we hope will help
effective imprints as well.

36
00:01:54,280 --> 00:01:55,615
But that's also for later.

37
00:01:55,615 --> 00:01:59,252
I will talk about that on my time. Unless

38
00:02:01,821 --> 00:02:02,288
cool.

39
00:02:02,288 --> 00:02:03,323
Thank you.

40
00:02:05,191 --> 00:02:07,627
OK, sure.

41
00:02:07,627 --> 00:02:11,898
Shall I go down and do a little
introduction, a few slides?

42
00:02:12,532 --> 00:02:13,533
Privacy.

43
00:02:14,033 --> 00:02:16,002
Yeah. OK,

44
00:02:16,636 --> 00:02:19,305
let's see if I can share my slides.

45
00:02:20,073 --> 00:02:21,341
Yep. Looks good.

46
00:02:21,341 --> 00:02:23,042
Yeah. OK.

47
00:02:23,042 --> 00:02:27,380
So the first slide is

48
00:02:27,647 --> 00:02:33,286
I don't because you may wonder where
I am in relation to Amsterdam.

49
00:02:33,286 --> 00:02:36,756
Well, it's about a hundred kilometers
south of Amsterdam,

50
00:02:37,123 --> 00:02:41,027
close to the Belgium border
and also so far away from Germany there.

51
00:02:42,695 --> 00:02:45,031
So it's, it's sort of a high tech city.

52
00:02:45,031 --> 00:02:46,432
Philips

53
00:02:46,833 --> 00:02:50,670
is getting to the right,
but you see a picture of the center

54
00:02:50,670 --> 00:02:54,340
and the right top is a view of the campus

55
00:02:54,340 --> 00:02:57,076
of the University of Technology.

56
00:02:57,710 --> 00:03:00,480
Here's an aerial view approach.

57
00:03:00,480 --> 00:03:01,247
So it's inside.

58
00:03:01,247 --> 00:03:04,117
Here's an aerial view of

59
00:03:04,117 --> 00:03:05,451
our campus.

60
00:03:05,451 --> 00:03:10,456
And so here let's see
if I can share pointer.

61
00:03:11,224 --> 00:03:11,524
Yeah.

62
00:03:11,524 --> 00:03:14,494
So this is the building
for electrical engineering.

63
00:03:14,494 --> 00:03:19,299
So this is where we are I is lab is short
for Bayesian intelligence.

64
00:03:19,299 --> 00:03:20,433
It's all in the systems.

65
00:03:20,433 --> 00:03:24,504
That's what we try to
build and we have about three

66
00:03:26,072 --> 00:03:27,240
staff members,

67
00:03:27,240 --> 00:03:30,243
faculty members
and currently 60 students.

68
00:03:30,610 --> 00:03:35,181
Dimitry is one of those busy students
and we have open positions.

69
00:03:35,181 --> 00:03:38,585
If there are people watching
that are interested in probabilistic

70
00:03:38,585 --> 00:03:41,721
programing
or how to make activations work,

71
00:03:43,323 --> 00:03:45,158
fine, but we're trying to do it.

72
00:03:45,158 --> 00:03:48,528
This is a picture that's
probably familiar to everybody in this

73
00:03:49,095 --> 00:03:49,862
room, right?

74
00:03:49,862 --> 00:03:51,965
This is our chance to show that.

75
00:03:51,965 --> 00:03:55,802
Well, the only thing that's
really going on in the brain is strategy

76
00:03:55,802 --> 00:04:00,073
minimization or expected
fairness minimization to do everything

77
00:04:00,607 --> 00:04:04,177
and that's a huge inspiration to us
as engineers.

78
00:04:04,177 --> 00:04:08,848
So what we trying to do is basically this
we want to put this in an iPhone

79
00:04:08,848 --> 00:04:14,020
or an IRS prepaid and let the robot learn
how to ride a bike.

80
00:04:14,787 --> 00:04:18,091
But the beauty of this framework
for engineering purposes

81
00:04:18,091 --> 00:04:23,029
is that it's almost one
solution approach to any problem.

82
00:04:23,029 --> 00:04:27,233
So if we can do it, if you teach a robot
how to ride a bike

83
00:04:27,233 --> 00:04:31,404
by free energy minimization,
probably we can also apply this

84
00:04:31,404 --> 00:04:33,973
in virtual reality to design algorithms.

85
00:04:33,973 --> 00:04:36,342
So having kids or even self-driving cars,

86
00:04:37,610 --> 00:04:39,279
the the

87
00:04:39,279 --> 00:04:43,283
big let's
say promise or the attractiveness

88
00:04:43,283 --> 00:04:47,186
for engineering is that it is just one
always the same thing.

89
00:04:47,186 --> 00:04:50,790
You just have to approach a model
and minimization is you,

90
00:04:51,591 --> 00:04:53,626
no matter what the application is.

91
00:04:53,626 --> 00:04:56,529
That's very appealing.

92
00:04:56,529 --> 00:04:58,564
The problem for engineering is

93
00:04:58,564 --> 00:05:01,234
that this energy functional

94
00:05:02,101 --> 00:05:05,638
is a function of observations
and observations.

95
00:05:06,139 --> 00:05:08,374
Streaming data coming usually.

96
00:05:08,908 --> 00:05:11,744
Well, could be at every millisecond.

97
00:05:12,045 --> 00:05:14,314
So it's a highly time varying function.

98
00:05:14,947 --> 00:05:17,684
And the number of latent variables
that say

99
00:05:17,684 --> 00:05:21,154
that the space of late
the variables is usually very high.

100
00:05:21,521 --> 00:05:26,259
So we have a very high dimensional
function that is time value and

101
00:05:27,293 --> 00:05:28,828
we want to minimize that.

102
00:05:28,828 --> 00:05:30,763
Now, the brain is very good at it, right?

103
00:05:30,763 --> 00:05:36,969
The brain has just ten to 14
sign ups and a billion neurons

104
00:05:38,805 --> 00:05:41,074
but in normal

105
00:05:41,074 --> 00:05:44,777
optimization library
and MATLAB will not cut that.

106
00:05:44,777 --> 00:05:47,780
You cannot minimize
a time varying function

107
00:05:47,780 --> 00:05:51,317
of how it has variables
in that stuff can work.

108
00:05:51,851 --> 00:05:55,021
So we need something quite radical here.

109
00:05:55,621 --> 00:05:58,591
And the idea we go
with is not that radical.

110
00:05:58,725 --> 00:06:02,095
Again, we just take inspiration
from the brain, right?

111
00:06:02,562 --> 00:06:05,531
The brain is a network of message passing

112
00:06:06,065 --> 00:06:08,801
and it turns out in my own field

113
00:06:09,402 --> 00:06:12,271
in signal processing

114
00:06:12,372 --> 00:06:16,976
or information theory to be exact,
this has been formalized

115
00:06:17,510 --> 00:06:20,179
paper here by day for me in

116
00:06:20,580 --> 00:06:24,450
2001 coaching graphs and realizations.

117
00:06:24,450 --> 00:06:28,588
He call it normal
sector graphs in honor of the fit

118
00:06:28,588 --> 00:06:31,891
for me today
difficult for me still active maps

119
00:06:32,392 --> 00:06:36,028
and so this is the origin of the factor
graphs

120
00:06:36,028 --> 00:06:38,631
that we are talking about
and a few years later

121
00:06:39,232 --> 00:06:42,368
concentrating a little year
at a university in the series

122
00:06:43,636 --> 00:06:45,304
I have made this

123
00:06:45,304 --> 00:06:48,641
popular in the signal
processing community

124
00:06:49,008 --> 00:06:53,813
and already around 2007
you see in in his papers these

125
00:06:54,881 --> 00:06:58,351
these typical structures like this
that we will show also later

126
00:06:58,351 --> 00:07:00,052
these are common filters

127
00:07:00,052 --> 00:07:03,689
and this is really also a twist that
talks about these kinds of structures.

128
00:07:04,023 --> 00:07:07,860
So this is what we want to do

129
00:07:07,860 --> 00:07:10,930
in our lab is just to combine what

130
00:07:10,930 --> 00:07:13,733
active inference
from the inspire inspiration

131
00:07:13,733 --> 00:07:15,535
from the neuroscience community

132
00:07:15,535 --> 00:07:18,871
and combine it with what we know
is signal processing and information

133
00:07:18,871 --> 00:07:24,177
theory about spectrographs
and use these tools to to implement this

134
00:07:25,077 --> 00:07:29,882
so today we have two presentations
one test on the layer

135
00:07:30,917 --> 00:07:33,119
on how to do mass passing back

136
00:07:33,152 --> 00:07:36,289
44 new lab is the tool box that we wrote

137
00:07:37,290 --> 00:07:40,560
on the main
of course your first two did finally

138
00:07:41,461 --> 00:07:44,230
and thanks for sure
how to do executions with this tool box.

139
00:07:45,298 --> 00:07:45,631
Now we're

140
00:07:45,631 --> 00:07:49,535
also working on a new version is called
reactive mouse dispatching through

141
00:07:49,802 --> 00:07:54,607
Dimitri is the main person there
Dimitri also I'll talk about that a bit

142
00:07:55,441 --> 00:07:57,877
and that's all for me

143
00:07:58,010 --> 00:08:01,581
I'll get it back to you then
or maybe you can continue.

144
00:08:01,581 --> 00:08:02,982
What is your preference?

145
00:08:02,982 --> 00:08:05,351
So stop sharing my screen.

146
00:08:06,819 --> 00:08:09,422
See it's super interesting.

147
00:08:09,422 --> 00:08:11,958
Thanks a lot for the context and

148
00:08:12,625 --> 00:08:15,061
it will be awesome
to hear from the authors

149
00:08:15,061 --> 00:08:18,331
with maybe any reflections
on those general points you raised

150
00:08:18,698 --> 00:08:21,133
and how it gets applied
in a really specific way

151
00:08:21,167 --> 00:08:24,437
because you brought up a ton of topics
that we talk about all the time, like

152
00:08:24,971 --> 00:08:28,174
the simplicity of one unified approach
and the challenges

153
00:08:28,174 --> 00:08:32,044
of ongoing optimization problems
and drawing inspiration from nature.

154
00:08:32,211 --> 00:08:33,246
So great things.

155
00:08:33,246 --> 00:08:37,850
I think we can just jump to whichever
of the presentation you all prefer.

156
00:08:38,851 --> 00:08:41,621
All right, then
I'll go ahead and try to show my screen,

157
00:08:42,121 --> 00:08:44,056
see if that works.

158
00:08:53,332 --> 00:08:56,102
So back to our screen and the screen. OK.

159
00:09:00,806 --> 00:09:01,507
Fractal screen.

160
00:09:01,507 --> 00:09:03,309
So you can see my screen now. Yep.

161
00:09:03,309 --> 00:09:07,013
And you can make it look just large
on your side and I'll resize it there.

162
00:09:07,013 --> 00:09:08,514
We go. Looks great.

163
00:09:09,482 --> 00:09:10,149
Now. Yeah.

164
00:09:10,149 --> 00:09:10,950
All right.

165
00:09:12,151 --> 00:09:13,819
Well, thanks again for having us.

166
00:09:13,819 --> 00:09:14,754
Can you take away.

167
00:09:14,754 --> 00:09:16,622
The beginning little introduction? Sorry.

168
00:09:16,622 --> 00:09:18,558
Where it says you're sharing your screen.

169
00:09:18,558 --> 00:09:20,660
You can tie that little gypsy thing.

170
00:09:22,395 --> 00:09:23,763
And it's gone.

171
00:09:23,763 --> 00:09:24,530
Thank you.

172
00:09:25,131 --> 00:09:27,500
So, yeah, I'll be giving
a little introduction

173
00:09:27,500 --> 00:09:31,938
on how to do a message fussing
with in the context of active inference.

174
00:09:33,005 --> 00:09:35,341
And to give a little bit of motivation
for this talk.

175
00:09:36,142 --> 00:09:38,578
And this is kind of a situation
where we're interested in.

176
00:09:38,778 --> 00:09:43,249
So we have some kind of an environment
and we have an assignment.

177
00:09:43,249 --> 00:09:45,451
The process is running
in the environment,

178
00:09:45,451 --> 00:09:48,654
and we want to develop an agent
that has some purpose

179
00:09:48,654 --> 00:09:51,657
or does some purposeful
task within that environment.

180
00:09:53,259 --> 00:09:54,961
And the agent is allowed to

181
00:09:54,961 --> 00:09:58,197
send actions to the environment
and manipulate that environment.

182
00:09:58,664 --> 00:10:02,268
And it will receive observations

183
00:10:02,268 --> 00:10:03,536
and in the environment

184
00:10:03,536 --> 00:10:07,607
process, there is some function already
that is running there,

185
00:10:07,607 --> 00:10:10,843
and it might be simulation
that we run, that we interact with that

186
00:10:10,843 --> 00:10:14,013
or it might be used in a real world
process, of which of course

187
00:10:14,013 --> 00:10:17,350
we don't really know
what it is running into real world.

188
00:10:18,384 --> 00:10:22,488
And somehow we want to build an agent
that does something in that world.

189
00:10:23,456 --> 00:10:26,092
So where do you start with that

190
00:10:26,993 --> 00:10:27,860
there's this paper

191
00:10:27,860 --> 00:10:30,596
from going into SD in the 1970s

192
00:10:31,197 --> 00:10:33,199
and they have an interesting theorem
that says that

193
00:10:33,699 --> 00:10:37,703
every good regulator of a system
must be a model of the system.

194
00:10:39,138 --> 00:10:42,675
So that actually means that
if you want to build an agent

195
00:10:43,209 --> 00:10:46,545
that regulates or manipulates our system,

196
00:10:46,545 --> 00:10:50,383
the environment,
then we have to model that system.

197
00:10:51,984 --> 00:10:54,520
So as an engineer we

198
00:10:54,520 --> 00:10:57,323
are in the business of building models,

199
00:10:57,990 --> 00:11:00,993
generative models, to be precise.

200
00:11:00,993 --> 00:11:05,665
And this model represents our beliefs
about how observations

201
00:11:05,965 --> 00:11:08,567
follow from our manipulations.

202
00:11:10,069 --> 00:11:13,639
We were presented by a function
F that is a function of Y.

203
00:11:13,639 --> 00:11:15,608
The observations

204
00:11:16,008 --> 00:11:17,910
the controls you

205
00:11:17,910 --> 00:11:21,681
and also some latent state
hidden variables X

206
00:11:22,715 --> 00:11:26,152
and that act as an intermediate
between observations

207
00:11:26,152 --> 00:11:27,653
that controls

208
00:11:30,222 --> 00:11:33,459
now reasoning forward is one thing,

209
00:11:33,859 --> 00:11:36,862
but in the end
what we want to do is observe things

210
00:11:36,862 --> 00:11:40,332
and then propose controls
that lead us to favorable states.

211
00:11:41,734 --> 00:11:44,403
And that is where the idea
of the free energy

212
00:11:44,403 --> 00:11:47,640
principle and active inference comes in.

213
00:11:47,640 --> 00:11:51,310
So if we want to say
this is the hypothesis for that,

214
00:11:51,310 --> 00:11:54,647
if you want to build an agent
that does something purposeful,

215
00:11:54,847 --> 00:11:59,018
then we can do that by minimizing
if we are bound on surprise.

216
00:12:00,419 --> 00:12:03,122
So we want
to build an agent to avoid surprises,

217
00:12:03,589 --> 00:12:06,959
and by that we can do Bayesian inferences
about that environment.

218
00:12:07,660 --> 00:12:10,696
So we have to build
some kind of energy functional

219
00:12:11,263 --> 00:12:13,833
for the agent to optimize.

220
00:12:13,833 --> 00:12:16,168
And by that we do Bayesian inferences

221
00:12:16,168 --> 00:12:19,505
for actions and controls

222
00:12:21,006 --> 00:12:22,274
and we defined

223
00:12:22,274 --> 00:12:25,111
is for energy functional
as a scale divergence

224
00:12:25,311 --> 00:12:27,780
between the generative model that we have

225
00:12:28,280 --> 00:12:31,117
and some kind of an approximate posterior
that we postulate.

226
00:12:31,417 --> 00:12:34,120
And we here define beauty

227
00:12:36,088 --> 00:12:38,624
and minimizing
this energy functional will

228
00:12:38,624 --> 00:12:41,460
then allow us to reason backwards
from observations

229
00:12:41,727 --> 00:12:43,829
towards controls

230
00:12:45,331 --> 00:12:48,467
and this kind of the general idea.

231
00:12:48,801 --> 00:12:52,938
And having postulated
this, I have two choices to make.

232
00:12:53,439 --> 00:12:56,408
So for example, one big choice
that I want to make is

233
00:12:56,408 --> 00:12:57,910
how do I choose my model?

234
00:12:57,910 --> 00:13:02,848
How do I choose my F in
such a way that is useful to me?

235
00:13:04,016 --> 00:13:07,052
And also how do I choose my Q to do it?

236
00:13:07,052 --> 00:13:10,022
Choose the fact resolution of this
and such that

237
00:13:10,022 --> 00:13:12,491
I can make my inferences

238
00:13:13,159 --> 00:13:15,227
and that process

239
00:13:15,561 --> 00:13:17,997
is kind of a thing of trial and error.

240
00:13:19,165 --> 00:13:21,901
And as an engineer, I want,

241
00:13:21,901 --> 00:13:24,203
of course to build the best model
that I possibly can.

242
00:13:25,104 --> 00:13:28,707
But how go how do I go as quickly
as possible through a process of trial

243
00:13:28,707 --> 00:13:31,710
and error that gives me the best,
most the best model

244
00:13:34,413 --> 00:13:35,781
and this is where the idea

245
00:13:35,781 --> 00:13:38,150
of the model design cycle comes in.

246
00:13:39,218 --> 00:13:42,354
And this was again
made popular by David Blight

247
00:13:43,222 --> 00:13:46,358
in his paper in 2000 to 14 builds
compute quickly repeat

248
00:13:47,760 --> 00:13:49,562
and he proposes this cycle

249
00:13:49,562 --> 00:13:53,732
where an engineer proposes a model
and then with that model

250
00:13:53,933 --> 00:13:57,002
you want to infer your quantities
of interest given data

251
00:13:58,204 --> 00:14:00,806
and if you have some sort of model
that you want to criticize it

252
00:14:01,240 --> 00:14:03,876
and and based upon, well the performance

253
00:14:04,176 --> 00:14:08,414
that you have evaluated,
you want to reiterate rebuild your model,

254
00:14:08,848 --> 00:14:14,086
infer again and see how well it
then performs until you're satisfied

255
00:14:14,086 --> 00:14:17,923
and you can apply it in your agent and
in practice maybe in a real world setting

256
00:14:19,892 --> 00:14:23,162
and then the challenge becomes
then how do I go through this

257
00:14:23,162 --> 00:14:25,231
design cycle as quickly as possible?

258
00:14:27,199 --> 00:14:30,302
So we want to be flexible,
we want to automate things.

259
00:14:31,904 --> 00:14:33,906
And making model proposals itself

260
00:14:33,906 --> 00:14:37,977
is something that you have to do
as an as an engineer.

261
00:14:37,977 --> 00:14:42,815
You have to come up with a proposal
of how you believe the world functions.

262
00:14:44,283 --> 00:14:47,686
But once you have that,
everything else can be automated

263
00:14:49,154 --> 00:14:52,124
you can infer as
quantities by probabilistic programing.

264
00:14:52,124 --> 00:14:55,194
You can evaluate free energy as a measure

265
00:14:55,194 --> 00:14:58,898
of model performance

266
00:14:59,131 --> 00:15:02,701
and automating this cycle will be the key

267
00:15:02,701 --> 00:15:07,172
to making model proposals for an agent
that will be useful in practice.

268
00:15:07,273 --> 00:15:10,309
So you want to go through this
as quickly as possible.

269
00:15:10,309 --> 00:15:12,211
So that's why
we choose a specific message.

270
00:15:12,211 --> 00:15:16,348
We choose effective routes
to represent our federalized models

271
00:15:16,348 --> 00:15:19,952
because in a graph
you can do manipulations,

272
00:15:19,952 --> 00:15:24,757
you can add nodes, delete nodes,
you can rewire things very quickly.

273
00:15:25,925 --> 00:15:28,394
And once you have a graph
going up an addition of your model,

274
00:15:28,794 --> 00:15:32,865
you can do a message passing on that
graph in order to automate inference.

275
00:15:34,500 --> 00:15:38,904
And you can even evaluate free energy
by local contributions in that graph.

276
00:15:40,306 --> 00:15:43,175
So that's why
we choose a graphical representation, and

277
00:15:43,175 --> 00:15:47,046
that is why we want to do message plus
because we want to design models quickly

278
00:15:47,613 --> 00:15:49,815
so that we can design effective agents

279
00:15:52,751 --> 00:15:56,021
now how do these graphs
kind of work, right?

280
00:15:56,055 --> 00:15:59,091
How do you build an effective graph
and what does that look like?

281
00:16:00,759 --> 00:16:04,096
So it uses specific
representation of our model.

282
00:16:04,563 --> 00:16:08,767
And this is an example where we have
generative model of five variables

283
00:16:08,767 --> 00:16:12,705
x one, two x five
and we have three factors

284
00:16:12,938 --> 00:16:15,240
A, B and C,

285
00:16:15,841 --> 00:16:19,845
and here in the picture on the right
is the graphical representation

286
00:16:19,845 --> 00:16:24,516
of that model and as you can see,
the edges corresponds to the variables

287
00:16:24,917 --> 00:16:27,186
and the nodes correspond to the factors

288
00:16:28,620 --> 00:16:30,322
and the edges are connected

289
00:16:30,322 --> 00:16:33,759
to the nodes
of which the factors are an argument.

290
00:16:33,792 --> 00:16:36,228
So here you see node as a with connect.

291
00:16:36,261 --> 00:16:39,264
So just sort of next to
that is because excellent

292
00:16:39,264 --> 00:16:43,702
next to our arguments as a say as B and C

293
00:16:46,905 --> 00:16:49,908
so how do we do inference in this graph?

294
00:16:50,843 --> 00:16:53,245
So suppose that we observe X fight

295
00:16:53,846 --> 00:16:56,982
which is indicated
by this little solid square

296
00:16:58,417 --> 00:17:01,954
and we want to compute our belief over x
still given x five.

297
00:17:02,955 --> 00:17:03,889
Well, what do you do?

298
00:17:03,889 --> 00:17:06,058
Well, you marginal everything.

299
00:17:06,158 --> 00:17:10,462
And by marginalization
I mean you integrate out every variable

300
00:17:11,063 --> 00:17:12,631
except the one that you're interested in.

301
00:17:12,631 --> 00:17:15,801
So except x two,
you integrate everything out

302
00:17:15,801 --> 00:17:17,569
and you add this constraint.

303
00:17:17,569 --> 00:17:19,972
If you observe X fights

304
00:17:20,739 --> 00:17:23,208
now if you had a big model

305
00:17:23,208 --> 00:17:27,846
done, this integration becomes
very cumbersome because this here is

306
00:17:28,380 --> 00:17:31,083
you have to have four variables
of which to integrate.

307
00:17:32,584 --> 00:17:35,687
So this room, this,
this integration space,

308
00:17:35,687 --> 00:17:38,824
if that really explodes,
if you want to do it, is now easily

309
00:17:40,592 --> 00:17:43,228
which you can be smart about this.

310
00:17:43,228 --> 00:17:44,229
You can

311
00:17:45,230 --> 00:17:46,298
you can

312
00:17:47,132 --> 00:17:48,801
re shuffle

313
00:17:48,801 --> 00:17:51,303
these integrals
according to their respective terms.

314
00:17:52,137 --> 00:17:54,640
So for example,

315
00:17:54,640 --> 00:17:56,909
this integration over x five.

316
00:17:57,743 --> 00:18:01,113
Well there is only one factor
where x five is an argument us.

317
00:18:01,480 --> 00:18:05,117
So I can use distributive rules
to bring this integral inside

318
00:18:07,352 --> 00:18:09,521
so that I divide these integrals

319
00:18:09,521 --> 00:18:11,824
up into smaller parts
which are manageable

320
00:18:14,393 --> 00:18:16,795
and this is where message
palsson comes from.

321
00:18:17,362 --> 00:18:21,733
Message passing is essentially solving
these integrations one by one

322
00:18:22,734 --> 00:18:27,139
so we can first integrate, integrate out
x x one here, for example,

323
00:18:27,606 --> 00:18:32,377
which as we say, summarizes
all the information inside this orange

324
00:18:32,377 --> 00:18:35,547
box that gives us message,
first message here

325
00:18:35,547 --> 00:18:38,350
that exits this orange box

326
00:18:38,617 --> 00:18:40,052
and then it can continue for the bottom.

327
00:18:40,052 --> 00:18:44,456
So integrate, integrate out
X phase and I get a second message

328
00:18:45,991 --> 00:18:46,758
and I can use

329
00:18:46,758 --> 00:18:50,095
this second message
in the computation of the third message.

330
00:18:50,696 --> 00:18:54,933
So this way
you get a nested solution approach

331
00:18:56,201 --> 00:18:58,170
where I use the solution

332
00:18:58,170 --> 00:19:01,073
that you have for message
two in the computation for message three

333
00:19:01,974 --> 00:19:05,611
and you see that in the end,
the multiplication of these

334
00:19:05,611 --> 00:19:09,348
two colliding messages on the edge for X
two will give me

335
00:19:10,048 --> 00:19:13,318
my proportional belief
my proportional posterior

336
00:19:14,987 --> 00:19:17,389
over X two, given what I have observed

337
00:19:21,193 --> 00:19:23,128
so to give a little example

338
00:19:23,128 --> 00:19:26,865
of the specific note how that works,

339
00:19:27,933 --> 00:19:31,403
here's inequality
constraint note which we use

340
00:19:32,104 --> 00:19:35,374
as as a constraint to

341
00:19:36,475 --> 00:19:39,011
the constraint beliefs upon the adjacent

342
00:19:39,011 --> 00:19:41,113
edges to be equal

343
00:19:42,014 --> 00:19:43,482
and what that does is

344
00:19:43,482 --> 00:19:45,817
it will follow
if we if we go through the math here

345
00:19:46,618 --> 00:19:49,321
that I'm this is what the note function
looks like.

346
00:19:49,488 --> 00:19:52,891
So I say, OK, is function
three variables X, Y and Z,

347
00:19:53,358 --> 00:19:58,997
and I constrain Z to be X and I constrain
Z also to be Y.

348
00:19:58,997 --> 00:20:02,834
So then X will also be Y
if a constraint should be the same.

349
00:20:03,969 --> 00:20:05,237
So let's see if we can derive

350
00:20:05,237 --> 00:20:08,340
messages based upon this

351
00:20:08,974 --> 00:20:10,909
so if I want to summarize

352
00:20:10,909 --> 00:20:14,713
the information into this orange box,
I can use the same product rule.

353
00:20:14,713 --> 00:20:15,047
For that.

354
00:20:15,047 --> 00:20:18,217
I have to do messages coming in here
from the left and from the bottom.

355
00:20:18,483 --> 00:20:21,053
Message one and message two.

356
00:20:21,053 --> 00:20:24,423
I multiply that
by the note function of the equality node

357
00:20:24,423 --> 00:20:27,626
and I want to perform this integration

358
00:20:27,993 --> 00:20:29,461
now a substitute.

359
00:20:29,461 --> 00:20:33,632
This is this node function here
with integration.

360
00:20:34,032 --> 00:20:38,036
Then I can use the system property
to kind of replace

361
00:20:38,036 --> 00:20:42,140
the arguments here of X
and Y with the argument.

362
00:20:42,140 --> 00:20:43,141
So Z.

363
00:20:43,942 --> 00:20:46,311
So what I have essentially done here

364
00:20:46,311 --> 00:20:50,983
is saying I can compute this message
three by multiplying

365
00:20:51,383 --> 00:20:53,919
the two messages that are incoming from
the left and from the bottom

366
00:20:55,420 --> 00:20:55,754
Now, if you

367
00:20:55,754 --> 00:20:58,890
squint your eyes a bit and you look,
you look through your eyes,

368
00:20:58,890 --> 00:21:03,028
you can kind of recognize
the proportional Bayes rule in here.

369
00:21:04,029 --> 00:21:07,466
So essentially you can say, well,
if message three here

370
00:21:07,466 --> 00:21:11,403
represents my posterior,
the message one can represent

371
00:21:11,403 --> 00:21:14,039
my prior message to my likelihood

372
00:21:15,540 --> 00:21:18,110
and then I have a proportional
to Syria message three

373
00:21:18,410 --> 00:21:20,579
and that I can pass on
to the rest of my model.

374
00:21:21,747 --> 00:21:24,583
And this note is also often
used to kind of combine information

375
00:21:24,583 --> 00:21:27,653
that's coming from the lesson
from the bottom

376
00:21:29,187 --> 00:21:35,961
and so this is very quick introduction

377
00:21:35,961 --> 00:21:38,997
to do message passing.

378
00:21:38,997 --> 00:21:41,833
We have derived lots of rules

379
00:21:41,833 --> 00:21:45,437
also from the literature also implemented
a lot of rules that already derives

380
00:21:46,471 --> 00:21:50,242
into into 48, which is basically

381
00:21:50,976 --> 00:21:54,513
well software
for all this programing suites that

382
00:21:55,547 --> 00:21:55,881
does the

383
00:21:55,881 --> 00:21:59,451
scheduling
and does message computation for you.

384
00:22:00,385 --> 00:22:02,387
So you don't have to think about that
too much.

385
00:22:02,387 --> 00:22:04,823
How to redistribute these integrals
and how to derive

386
00:22:06,725 --> 00:22:10,395
a lot of updates for specific notes

387
00:22:11,663 --> 00:22:13,398
so that's kind of

388
00:22:13,398 --> 00:22:16,101
the things that that we can,
we can automate

389
00:22:17,703 --> 00:22:20,405
on that side of the of the design cycle

390
00:22:23,275 --> 00:22:28,780
now are there any questions about this
because I'm going to this very quickly

391
00:22:28,780 --> 00:22:31,650
and what I'm going to do next is kind of
want to walk through an example

392
00:22:32,517 --> 00:22:35,754
so maybe this is kind of a natural point
where people have questions

393
00:22:35,754 --> 00:22:39,925
that they can kind of stop me and say,
OK, how are you going to first here.

394
00:22:41,593 --> 00:22:43,762
I think it'll be good to see the example.

395
00:22:43,762 --> 00:22:45,931
And then we have some questions
in the live chat

396
00:22:45,931 --> 00:22:47,599
and also anyone's welcome to have more.

397
00:22:49,267 --> 00:22:51,269
All right. So

398
00:22:52,504 --> 00:22:56,108
so how do you do this in practice
in an active inference context?

399
00:22:56,108 --> 00:22:57,743
So this is a little example.

400
00:22:57,743 --> 00:23:00,612
It's called Basement Thermostat.

401
00:23:00,712 --> 00:23:02,814
Where we have
an environment of environment.

402
00:23:03,048 --> 00:23:07,352
So where we have a heat source
here on the left and we have a little car

403
00:23:07,786 --> 00:23:10,389
that can move around,
it can move away from the heat source

404
00:23:10,589 --> 00:23:13,792
or it can move towards the heat source.

405
00:23:13,792 --> 00:23:15,360
Now, to position

406
00:23:15,360 --> 00:23:17,629
relative to the heat
source is what we call X.

407
00:23:19,231 --> 00:23:21,767
And at every position
there is a specific temperature

408
00:23:23,735 --> 00:23:25,103
and temperature that we measure

409
00:23:25,103 --> 00:23:27,873
in a specific position
is what we call white

410
00:23:29,875 --> 00:23:32,711
and we have a preference
of being at a temperature of four

411
00:23:33,545 --> 00:23:35,881
Y for, I don't know, something we choose

412
00:23:37,849 --> 00:23:40,552
so we can control this car
by moving in left or right.

413
00:23:40,552 --> 00:23:45,690
And our control is the velocity that we
move left or right with and schools, you

414
00:23:47,926 --> 00:23:50,896
so this is our environments

415
00:23:50,896 --> 00:23:53,198
and we want to build a model for that.

416
00:23:54,399 --> 00:23:58,703
So it actually prints
what we want to do is

417
00:23:59,938 --> 00:24:01,940
we want to reason

418
00:24:01,940 --> 00:24:05,177
from space where we would like to be

419
00:24:05,177 --> 00:24:08,480
towards controls
that we have to apply at this current

420
00:24:08,747 --> 00:24:11,116
of this current time
in order to get there in the future.

421
00:24:12,217 --> 00:24:16,054
So what we want to do is we want to
reason forward from the current time.

422
00:24:16,054 --> 00:24:20,158
20 up until some time horizon victim.

423
00:24:21,193 --> 00:24:23,795
And in the future

424
00:24:23,795 --> 00:24:26,531
we want to consider
how the agent will move

425
00:24:27,332 --> 00:24:29,768
and where we want
that agent to be at that time.

426
00:24:29,768 --> 00:24:32,304
And in the end

427
00:24:32,370 --> 00:24:35,907
we will want to be
at a temperature of four

428
00:24:35,907 --> 00:24:40,111
and at the space based model that
represents our belief for how this agent

429
00:24:41,480 --> 00:24:44,349
will will

430
00:24:44,349 --> 00:24:46,651
move itself through the world

431
00:24:46,651 --> 00:24:50,622
so at time t we have an observation
coming in of a specific temperature

432
00:24:51,223 --> 00:24:53,592
and maybe we have already made an action

433
00:24:56,094 --> 00:24:59,698
and we see that

434
00:24:59,764 --> 00:25:01,533
the current state actually relates

435
00:25:01,533 --> 00:25:05,237
to the previous state and action
that we have by by adding

436
00:25:05,237 --> 00:25:09,040
so basically you see here is velocity
that we add to a current position

437
00:25:10,342 --> 00:25:11,977
in one time step.

438
00:25:11,977 --> 00:25:15,780
And then we get kind of our next position
by just adding that

439
00:25:16,181 --> 00:25:18,683
and also applying some caution noise.

440
00:25:19,784 --> 00:25:22,420
So we have a state transition
that is the of this

441
00:25:22,487 --> 00:25:27,025
with a duty saying
I want to move forward to the left or 42.

442
00:25:27,058 --> 00:25:27,959
Right,

443
00:25:28,860 --> 00:25:30,662
and then we add some noise saying,

444
00:25:30,662 --> 00:25:33,698
OK, we're kind of uncertain about

445
00:25:33,698 --> 00:25:36,067
how this agent might move
in the environments.

446
00:25:36,067 --> 00:25:39,404
We have an idea about that,
but let's add some variance in order

447
00:25:39,404 --> 00:25:41,706
to account for some uncertainties

448
00:25:43,909 --> 00:25:44,309
and then

449
00:25:44,309 --> 00:25:46,912
we say here what this vertical line is,
if we have

450
00:25:48,146 --> 00:25:53,351
an observation or if we have a position
and it relates to an observation

451
00:25:53,351 --> 00:25:58,990
of the temperature by well -1,
it's kind of a rough guess.

452
00:25:58,990 --> 00:26:01,459
It's just saying, well,

453
00:26:01,526 --> 00:26:04,262
if I move to the right,
if I move away from my heat source,

454
00:26:04,262 --> 00:26:08,199
then my temperature will decline
with a slope of -1.

455
00:26:09,167 --> 00:26:11,970
And it's kind of a really rough
guess in the real world.

456
00:26:11,970 --> 00:26:15,807
There will be a very nice temperature
gradient that maybe will move but

457
00:26:16,942 --> 00:26:18,977
will move very slowly downwards.

458
00:26:19,878 --> 00:26:23,748
But we're just saying, hey,
we don't really know what that is.

459
00:26:24,015 --> 00:26:25,083
Let's make a rough guess.

460
00:26:25,083 --> 00:26:28,253
We have a belief this is our generative
model, our beliefs about the world.

461
00:26:28,553 --> 00:26:31,289
Let's just say
that temperature decreases with position

462
00:26:32,557 --> 00:26:34,292
and again,
we're not very certain about that.

463
00:26:34,292 --> 00:26:37,696
So let's again
ADD and some Gaussian noise

464
00:26:39,764 --> 00:26:42,601
and now extend this into the future.

465
00:26:42,601 --> 00:26:45,303
So I say actually
I believe that in the future

466
00:26:45,604 --> 00:26:49,274
my will also evolve according to this

467
00:26:50,575 --> 00:26:52,344
but I also have

468
00:26:52,344 --> 00:26:55,447
some ideas about where I want to be.

469
00:26:55,447 --> 00:26:57,916
And this is where a goal prior is coming

470
00:26:58,850 --> 00:27:01,820
that constrain my future
observations of the temperature

471
00:27:02,187 --> 00:27:05,056
to be around
this desired temperature of four.

472
00:27:06,391 --> 00:27:09,027
And I'm saying
then here with some added noise well,

473
00:27:11,329 --> 00:27:13,264
I want to be around for my

474
00:27:13,264 --> 00:27:16,868
it doesn't have to be exactly,
but I want to be pretty certain that

475
00:27:17,469 --> 00:27:22,140
I will be around four at times
plus one and I will continue

476
00:27:22,507 --> 00:27:26,244
to remain there
until sometime in the future.

477
00:27:28,680 --> 00:27:31,750
You now over generative model

478
00:27:33,752 --> 00:27:39,090
and we can define of energy functional
and we can solve this for energy

479
00:27:39,090 --> 00:27:42,627
functional by message
passing on this graph and we pass

480
00:27:42,627 --> 00:27:46,164
these messages towards our next control

481
00:27:46,598 --> 00:27:49,434
because we're interested in inferring

482
00:27:49,434 --> 00:27:52,404
what we have to do next like front from

483
00:27:52,570 --> 00:27:54,305
so next time

484
00:27:56,541 --> 00:27:58,143
and this is where we can do
message passing,

485
00:27:58,143 --> 00:28:03,481
we can summarize all the information
that we have from, from the past.

486
00:28:03,481 --> 00:28:06,751
So this will be an estimate
of the current state of the agent

487
00:28:07,819 --> 00:28:10,789
and it will be biased by our beliefs
about the future and seeing

488
00:28:10,789 --> 00:28:12,390
where we want to be.

489
00:28:12,390 --> 00:28:16,528
And that will influence or determine
which control that we will take

490
00:28:17,128 --> 00:28:19,664
at the present time or the next slide

491
00:28:21,733 --> 00:28:23,835
or the details of this are

492
00:28:24,903 --> 00:28:25,970
described

493
00:28:25,970 --> 00:28:28,273
in this paper from two dozen in 19

494
00:28:29,040 --> 00:28:30,675
by Berton me

495
00:28:32,811 --> 00:28:33,812
and there

496
00:28:34,145 --> 00:28:37,449
you can also see again how we applied it

497
00:28:37,449 --> 00:28:40,185
within the actually perceptual look

498
00:28:40,185 --> 00:28:41,853
the things like that

499
00:28:42,387 --> 00:28:45,123
because you will have to do this
at every time

500
00:28:45,123 --> 00:28:47,025
because your state estimate will change

501
00:28:47,025 --> 00:28:48,660
or words
will change according to your actions.

502
00:28:48,660 --> 00:28:51,896
So you will for every time you will have
to recapture a new action for what

503
00:28:51,896 --> 00:28:53,732
you're going to do next

504
00:28:56,000 --> 00:28:58,737
and this is kind of the the main idea.

505
00:28:58,770 --> 00:29:02,474
Now, of course, we don't want to do
everything of this by hand.

506
00:29:02,474 --> 00:29:05,276
So what we want to do is, well,
we want to use a tool for that

507
00:29:07,746 --> 00:29:12,250
so now I'm going to show a little demo
of how you would implement this

508
00:29:13,485 --> 00:29:14,853
using the different

509
00:29:14,853 --> 00:29:17,455
probabilistic program tool

510
00:29:17,722 --> 00:29:19,824
so let's see if I can

511
00:29:19,924 --> 00:29:21,025
open a little demo.

512
00:29:21,025 --> 00:29:22,227
So this is

513
00:29:22,627 --> 00:29:25,063
this is readable, actually,
or should I assume in more.

514
00:29:27,398 --> 00:29:30,168
You can zoom in a little bit more.

515
00:29:32,937 --> 00:29:34,239
Maybe like this.

516
00:29:35,940 --> 00:29:37,509
Yeah, I can resize it.

517
00:29:37,509 --> 00:29:37,976
Yeah.

518
00:29:39,444 --> 00:29:41,679
That that's pretty good.

519
00:29:41,679 --> 00:29:42,981
Oh, that's perfect.

520
00:29:42,981 --> 00:29:43,982
That's pretty good. Yep.

521
00:29:43,982 --> 00:29:44,716
Thank you.

522
00:29:44,883 --> 00:29:45,216
Let's

523
00:29:48,753 --> 00:29:51,623
so this is so so it's kind of

524
00:29:51,823 --> 00:29:55,160
an what what we want to do

525
00:29:55,593 --> 00:29:59,197
but so this is kind of our definition
of the environment itself.

526
00:29:59,197 --> 00:30:03,535
So this is the real world where we have
this, this temperature gradient,

527
00:30:03,535 --> 00:30:06,571
which is a very nice function
so a very smooth function.

528
00:30:08,006 --> 00:30:09,641
What a heat source we have temperature

529
00:30:09,641 --> 00:30:11,676
of 100 and it,

530
00:30:12,811 --> 00:30:17,048
it goes down with that
with which position from that heat source

531
00:30:20,418 --> 00:30:21,219
so this is a real world.

532
00:30:21,219 --> 00:30:22,487
We don't really know this.

533
00:30:22,487 --> 00:30:24,756
So this is the one that we're going
to approximate with this

534
00:30:25,356 --> 00:30:29,894
very rough -1
and then we'll see whether it will work.

535
00:30:29,928 --> 00:30:33,298
Right now this is my wonderful ASCII art.

536
00:30:33,298 --> 00:30:36,501
It has now been resized
of basically the model that I've just

537
00:30:36,501 --> 00:30:38,536
shown in slides

538
00:30:40,738 --> 00:30:42,440
and this here is a model definition.

539
00:30:42,440 --> 00:30:45,510
So actually I have to zoom out a bit
to make it more readable.

540
00:30:46,044 --> 00:30:46,644
Yeah.

541
00:30:46,644 --> 00:30:49,180
So we want to build a graph
for this, right?

542
00:30:49,180 --> 00:30:52,483
So here we have our observation
states controls

543
00:30:53,818 --> 00:30:56,888
and we define a prior belief

544
00:30:56,888 --> 00:30:57,889
about T -1.

545
00:30:57,889 --> 00:30:59,324
So where have we been?

546
00:30:59,324 --> 00:31:01,292
Which we going to say is Goshen.

547
00:31:01,292 --> 00:31:04,996
And with some mean and some variance

548
00:31:05,129 --> 00:31:09,667
and then for every time into the future
from, from one into the horizon

549
00:31:10,835 --> 00:31:11,302
and we

550
00:31:11,302 --> 00:31:14,906
will have probably four border controls
which basically says, well,

551
00:31:16,007 --> 00:31:17,609
what am I allowed to do?

552
00:31:17,609 --> 00:31:19,811
And I say, OK, well,

553
00:31:20,345 --> 00:31:22,480
I have I have got prior

554
00:31:22,480 --> 00:31:25,750
bad controls with what I mean, zero,

555
00:31:26,317 --> 00:31:29,587
I'll substitute that here
and then maybe some variance

556
00:31:31,356 --> 00:31:35,593
and here I say, well,
I have my position of the agent

557
00:31:35,593 --> 00:31:39,264
which relates to my controls
by just this addition

558
00:31:41,266 --> 00:31:42,800
with some decision domain.

559
00:31:42,800 --> 00:31:45,870
So this is a transition model
is this horizontal

560
00:31:47,005 --> 00:31:47,705
line,

561
00:31:48,673 --> 00:31:51,109
and this is an observation model
which is very

562
00:31:52,777 --> 00:31:56,514
rough estimate -1 temperature
gradient times

563
00:31:56,547 --> 00:32:00,184
current state
and also some some some precision

564
00:32:00,852 --> 00:32:02,787
conservation precision.

565
00:32:03,421 --> 00:32:06,424
And this represents my goal prior.

566
00:32:06,424 --> 00:32:08,126
So note that I haven't really

567
00:32:08,126 --> 00:32:11,195
put in any specific values here yet.

568
00:32:11,362 --> 00:32:15,066
I just have placeholders
for actual statistics and values that I'm

569
00:32:15,066 --> 00:32:15,767
going to put in

570
00:32:17,068 --> 00:32:17,402
because the

571
00:32:17,402 --> 00:32:21,272
actual derivation of my algorithm,
it doesn't really depend upon statistics.

572
00:32:21,272 --> 00:32:25,276
It's just something that we can
we can put in later

573
00:32:28,379 --> 00:32:30,915
so this is what I want to do better
for energy functional.

574
00:32:31,382 --> 00:32:34,352
And it's funny,
like there's actually just basically

575
00:32:34,352 --> 00:32:36,321
four lines of code

576
00:32:37,588 --> 00:32:39,257
so posterior factorization

577
00:32:39,257 --> 00:32:43,261
that defines my factorization
for Q saying that

578
00:32:44,362 --> 00:32:49,367
I'm just going to
has a joints for internal distribution.

579
00:32:49,901 --> 00:32:52,303
So over the entire graph,

580
00:32:53,037 --> 00:32:56,774
I don't really subdivided into structure
and into a structured factorization.

581
00:32:56,774 --> 00:32:59,711
Some people are familiar with that,

582
00:32:59,844 --> 00:33:01,980
but I just say,
OK, I'll just have this posterior

583
00:33:01,980 --> 00:33:04,782
sexualization situation distribution
to be distributions graphs

584
00:33:05,984 --> 00:33:08,619
and then never just one command.

585
00:33:08,820 --> 00:33:12,991
I can derive message passing algorithm
that propagates all the messages

586
00:33:12,991 --> 00:33:18,563
towards control as you do with which
which is the control for the next time.

587
00:33:18,563 --> 00:33:19,330
Step two plus one

588
00:33:21,099 --> 00:33:22,967
and I want to evaluate my fan.

589
00:33:22,967 --> 00:33:26,871
So also gives me at the same time
an algorithm that I can,

590
00:33:27,005 --> 00:33:29,540
I can execute
in order to accelerate my free energy

591
00:33:32,076 --> 00:33:33,144
and this line

592
00:33:33,144 --> 00:33:37,348
will convert this to the source code.

593
00:33:37,348 --> 00:33:41,119
And then I can
then load in my environment

594
00:33:41,352 --> 00:33:42,520
and what this does is

595
00:33:42,520 --> 00:33:45,523
it builds the message
passing algorithm for us.

596
00:33:46,624 --> 00:33:49,961
So this is this this is the code
that executes the message passing

597
00:33:49,961 --> 00:33:51,262
on our growth.

598
00:33:51,396 --> 00:33:56,300
And here you can see there is computes
all these messages by some product rules

599
00:33:56,300 --> 00:33:59,804
and other rules that we have pre derived
and we have implemented in format.

600
00:34:01,472 --> 00:34:05,143
And you can see that these messages,
they depend upon the statistics.

601
00:34:05,143 --> 00:34:08,646
So this is for example,
the means of of a prior

602
00:34:09,580 --> 00:34:12,016
overstates
and variance of a prior overstates

603
00:34:14,252 --> 00:34:14,819
and we have a lot of

604
00:34:14,819 --> 00:34:16,988
messages
that depend upon previous messages

605
00:34:17,889 --> 00:34:19,891
and the way that I explain
message passing

606
00:34:21,359 --> 00:34:23,761
and this built an entire list of

607
00:34:23,761 --> 00:34:27,632
well in this case 26 messages

608
00:34:27,765 --> 00:34:31,002
and in the end we're interested
in the marginal beliefs.

609
00:34:31,402 --> 00:34:35,807
So it is still your marginal beliefs
about about for example our controls

610
00:34:36,574 --> 00:34:39,410
and you get these beliefs
on multiplying messages together.

611
00:34:39,410 --> 00:34:43,014
So for example,
to get a new belief over control

612
00:34:43,381 --> 00:34:46,717
you multiply messages nine and 25

613
00:34:48,786 --> 00:34:50,054
and you also recognize this

614
00:34:50,054 --> 00:34:54,158
from little introduction, introduction,
the colliding messages

615
00:34:54,625 --> 00:34:57,428
that you multiply in order
to get your posterior release.

616
00:34:58,596 --> 00:35:00,965
And that's what we return to
and that's what we're interested in.

617
00:35:06,304 --> 00:35:08,506
So this is an execution
of that algorithm.

618
00:35:09,040 --> 00:35:09,640
And notice

619
00:35:09,640 --> 00:35:13,578
that we've made an entire schedule here
and that can be very cumbersome.

620
00:35:14,412 --> 00:35:16,914
It can be very long, very long schedule.

621
00:35:17,281 --> 00:35:20,418
So that makes it expensive
maybe to load and execute.

622
00:35:21,519 --> 00:35:22,120
And Demetrius, the

623
00:35:22,120 --> 00:35:24,755
solution for that
and we'll explain that in a minute.

624
00:35:25,990 --> 00:35:28,292
So I'm very happy about billing schedules

625
00:35:29,227 --> 00:35:32,363
and imagery, not so much

626
00:35:32,730 --> 00:35:35,566
he tries to find a solution
for get rid of them

627
00:35:36,667 --> 00:35:38,769
because in the end there will be two plus

628
00:35:38,769 --> 00:35:41,172
two really don't have a schedule

629
00:35:41,172 --> 00:35:43,741
that really had recipe, but just goodbye.

630
00:35:44,575 --> 00:35:46,477
Whatever is given to you

631
00:35:50,114 --> 00:35:52,083
so now we execute
this algorithm in practice.

632
00:35:52,083 --> 00:35:55,052
So this is our action perception loop
for every time step.

633
00:35:55,753 --> 00:35:57,121
We want to

634
00:35:57,788 --> 00:36:00,258
we want to actually once
we have a connection for the agents,

635
00:36:00,658 --> 00:36:02,026
we want to execute that.

636
00:36:02,026 --> 00:36:06,063
That's the action
in the, in the, in the environment.

637
00:36:06,063 --> 00:36:08,232
So this is sending the action towards

638
00:36:08,232 --> 00:36:11,669
the actual real world
or kind of simulated world in this case.

639
00:36:12,370 --> 00:36:14,472
And what we get
from that is an observation

640
00:36:15,773 --> 00:36:16,974
and from our

641
00:36:16,974 --> 00:36:20,811
action observation, we want to infer

642
00:36:21,045 --> 00:36:23,848
onset of our new action and also return

643
00:36:24,482 --> 00:36:26,717
the variation of the energy

644
00:36:28,319 --> 00:36:29,954
and then prepare for the next step.

645
00:36:29,954 --> 00:36:32,590
So in every step
we propose an action to the environment.

646
00:36:32,723 --> 00:36:37,562
Action gets executed, we observe
new outcome, we infer a new action,

647
00:36:38,396 --> 00:36:41,165
and we evaluate how well we did

648
00:36:41,532 --> 00:36:43,267
with that action.

649
00:36:46,537 --> 00:36:48,973
And then you get a nice plus like this.

650
00:36:49,106 --> 00:36:51,842
So this is the velocity of our agents.

651
00:36:52,610 --> 00:36:55,846
We start at zero and you can see that
it moves very quickly to the right

652
00:36:57,982 --> 00:36:59,116
and then

653
00:37:00,117 --> 00:37:02,019
it also moves back a little bit

654
00:37:02,019 --> 00:37:04,855
until the end comes
to a stationary point,

655
00:37:05,156 --> 00:37:06,457
more or less

656
00:37:08,392 --> 00:37:10,261
and you can see actually here
what it does.

657
00:37:10,261 --> 00:37:15,099
So it starts out with a temperature of 20
and then it moves very quickly

658
00:37:15,266 --> 00:37:19,704
to the rights away from the heat
source it overshoots its mark

659
00:37:20,671 --> 00:37:21,272
and then it

660
00:37:21,272 --> 00:37:24,675
actually goes back and then settles
around its desired temperature.

661
00:37:24,675 --> 00:37:28,112
For that we have encode is by by our goal

662
00:37:28,112 --> 00:37:31,015
priors. OK,

663
00:37:32,283 --> 00:37:33,584
so why this overshoot?

664
00:37:33,584 --> 00:37:36,654
Well, our model of the environment
wasn't perfect, right?

665
00:37:36,654 --> 00:37:39,924
We had this very rough
estimate of minus -1

666
00:37:41,325 --> 00:37:42,460
and the real world.

667
00:37:42,460 --> 00:37:45,796
This is very nice,
smooth, kind of complicated function.

668
00:37:46,330 --> 00:37:49,800
And there is this kind of bell shape

669
00:37:51,802 --> 00:37:54,205
so even though

670
00:37:54,205 --> 00:37:56,507
our generative model of the environment
wasn't perfect

671
00:37:57,375 --> 00:38:02,013
and in the end we provided before that
by shooting a little bit, but still

672
00:38:02,013 --> 00:38:06,417
we were able to get to our desired state
at a temperature of four.

673
00:38:06,417 --> 00:38:08,886
So in the end,
it kind of worked pretty well

674
00:38:10,955 --> 00:38:11,956
and you can also see that

675
00:38:11,956 --> 00:38:15,359
the free energy of the agent
also decreases with time.

676
00:38:15,359 --> 00:38:17,461
So we start off at around a thousand.

677
00:38:17,628 --> 00:38:21,632
So the skills logarithmic here
and it decreases very quickly

678
00:38:22,400 --> 00:38:26,003
to some value and it's rather rather low.

679
00:38:26,671 --> 00:38:29,206
And then we have some noise
that induces some

680
00:38:29,473 --> 00:38:33,044
unexpected changes
or some unexpected surprise.

681
00:38:34,679 --> 00:38:35,012
So that's

682
00:38:35,012 --> 00:38:37,882
why you have these little ripples,
these little ripples here.

683
00:38:38,149 --> 00:38:41,686
But in the entry minimizing for energy
and it's going to suppress.

684
00:38:41,686 --> 00:38:44,689
OK, so we actually have this free energy
minimizing agent

685
00:38:48,092 --> 00:38:49,393
and yeah, that's

686
00:38:49,393 --> 00:38:52,763
that's basically
all I have the story and,

687
00:38:53,097 --> 00:38:54,832
and the demo

688
00:38:57,234 --> 00:38:58,202
was awesome.

689
00:38:58,202 --> 00:39:00,004
Thank you very much.

690
00:39:00,104 --> 00:39:05,109
We can with screen share on or not ask
a few of the questions from the live chat

691
00:39:05,109 --> 00:39:07,678
and also give people a few seconds
to type more.

692
00:39:08,112 --> 00:39:10,681
So I'm just going to jump
into the questions.

693
00:39:12,483 --> 00:39:14,552
First quote, let me stock my screen here.

694
00:39:14,552 --> 00:39:17,054
Great. So, so sharing the screen so.

695
00:39:17,755 --> 00:39:18,956
We see just the jitsu.

696
00:39:18,956 --> 00:39:24,829
So just click the screen
share button again and should see OK.

697
00:39:25,563 --> 00:39:26,464
So awesome.

698
00:39:26,464 --> 00:39:28,132
Thank you. So the first question

699
00:39:29,400 --> 00:39:31,602
is from John and John writes,

700
00:39:31,602 --> 00:39:36,073
how does the factor graph approach work
if the graph structure is not known

701
00:39:36,073 --> 00:39:38,709
beforehand,
is structure learning possible

702
00:39:40,911 --> 00:39:43,714
how yeah.

703
00:39:43,714 --> 00:39:45,416
So so that's a good question.

704
00:39:45,416 --> 00:39:48,486
So is structure learning
possible in graphs like these

705
00:39:52,189 --> 00:39:53,491
so that is actually

706
00:39:53,491 --> 00:39:56,560
something that is still
an active field of research.

707
00:39:56,827 --> 00:39:57,661
That would be awesome.

708
00:39:57,661 --> 00:40:01,232
If you can automate also the structure
learning of the graph itself,

709
00:40:01,766 --> 00:40:03,067
but there are a lot of challenges there.

710
00:40:03,067 --> 00:40:06,203
So how do you parameterize
this graph structure

711
00:40:06,203 --> 00:40:08,773
and how do you do
how do you do that actually?

712
00:40:08,773 --> 00:40:08,939
Right.

713
00:40:08,939 --> 00:40:11,442
What is your search space
in terms of graphs?

714
00:40:12,710 --> 00:40:14,912
How do you
how do you learn node functions

715
00:40:14,912 --> 00:40:17,448
if you don't have a node function
given for your graphs?

716
00:40:17,615 --> 00:40:18,115
Right.

717
00:40:18,215 --> 00:40:19,950
So these are all very difficult questions

718
00:40:19,950 --> 00:40:21,685
and you don't have
a straightforward answer.

719
00:40:23,187 --> 00:40:24,922
So so that's why

720
00:40:24,922 --> 00:40:28,959
this actual model design
steps in the design secret cycle itself.

721
00:40:29,527 --> 00:40:31,595
Is still kind of a creative process.

722
00:40:31,595 --> 00:40:34,165
There is an engineer
that has to come up with a model.

723
00:40:35,032 --> 00:40:38,402
And as an engineer, you also have to
think about how to adjust that model.

724
00:40:38,402 --> 00:40:40,371
If you're not satisfied with it.

725
00:40:40,371 --> 00:40:43,374
So if energy is still high,
also you run your agents

726
00:40:43,741 --> 00:40:46,110
well, something is going on
or something is wrong with your model.

727
00:40:46,110 --> 00:40:49,880
It's not an accurate representation
of what is the environment.

728
00:40:50,214 --> 00:40:52,082
And then you might adjust that.

729
00:40:52,082 --> 00:40:53,551
How do you adjust it?

730
00:40:53,551 --> 00:40:55,686
But currently
it's still just trial and error.

731
00:40:55,686 --> 00:40:58,322
So maybe you can say, OK,
I think here is still something

732
00:40:58,322 --> 00:41:02,827
that I can improve, maybe remove a node,
maybe model's too complex and

733
00:41:05,262 --> 00:41:07,398
the structure wrong in itself is

734
00:41:09,033 --> 00:41:12,203
it is something that is also
it can be addressed.

735
00:41:12,203 --> 00:41:15,272
So there are methods like, like nested

736
00:41:15,673 --> 00:41:18,809
model comparison and things like that
that you can do in fact growth.

737
00:41:18,809 --> 00:41:22,279
So you can for example, if you have
this model compute service decorates

738
00:41:22,279 --> 00:41:25,015
you and then kind of prune
your model based upon that.

739
00:41:25,583 --> 00:41:28,686
And so those are things that you can do
to find a complex model

740
00:41:28,686 --> 00:41:31,021
and see what you can cut away

741
00:41:32,623 --> 00:41:34,558
but adding to
that model is still difficult.

742
00:41:34,558 --> 00:41:36,827
So once you've got an array, well,
how do you add add?

743
00:41:37,127 --> 00:41:38,429
I don't I don't really know.

744
00:41:38,429 --> 00:41:40,764
So it's a good question and I do

745
00:41:40,865 --> 00:41:44,001
that is very straightforward
and which you can do for my rattling.

746
00:41:44,001 --> 00:41:44,468
So yeah,

747
00:41:46,904 --> 00:41:49,106
perhaps I can say something about me.

748
00:41:50,007 --> 00:41:53,444
I mean, I totally agree with with ties.

749
00:41:53,444 --> 00:41:56,413
I mean, generally when you design

750
00:41:57,548 --> 00:42:01,051
a system or a signal processing system,
you have to design the structure,

751
00:42:02,253 --> 00:42:06,090
you have to estimate the parameters,
and then you have to infer states

752
00:42:06,323 --> 00:42:09,226
and states change very fast,

753
00:42:09,226 --> 00:42:10,794
at least the common filter.

754
00:42:10,794 --> 00:42:13,797
And that's very well known.

755
00:42:13,831 --> 00:42:18,769
In fact, the graphs then the next stage
would be can be also over the long

756
00:42:18,769 --> 00:42:23,641
term, learn the parameters and oh effect
the graphs can do that pretty well.

757
00:42:24,341 --> 00:42:28,445
Now, the next stage in biology,
I mean we know who the structure is

758
00:42:28,445 --> 00:42:30,915
also over even longer time. So

759
00:42:31,448 --> 00:42:36,854
and so that's not working at the moment
in life you can compare like tests.

760
00:42:36,921 --> 00:42:40,858
I says if you have two examples,
you can compare the energy

761
00:42:40,958 --> 00:42:42,092
and just pick the best one.

762
00:42:43,327 --> 00:42:46,397
But we are
working on that and we will take it again

763
00:42:46,430 --> 00:42:50,234
to lead by Tom McConnell's idea
on Bayesian model reduction.

764
00:42:50,401 --> 00:42:52,336
But how to implement that in effect?

765
00:42:52,336 --> 00:42:56,840
The graph is a research project
so we're working on that

766
00:42:56,840 --> 00:42:59,977
and I'm not sure where it will end,
but that's our goal

767
00:43:00,511 --> 00:43:02,313
that you have basically
a position available.

768
00:43:02,313 --> 00:43:09,620
So also to bring it back
to the example of the motor car

769
00:43:09,720 --> 00:43:13,524
getting to an optimal temperature,
it's like if every hour you notice

770
00:43:13,524 --> 00:43:17,394
that there was a bump in the free energy,
then you go back to the drawing board

771
00:43:17,394 --> 00:43:18,395
and you go to the

772
00:43:18,395 --> 00:43:22,333
people who are on that car in that area
and ask, Well, what happens every hour?

773
00:43:22,333 --> 00:43:25,736
Or maybe we do need to include
this other source of information.

774
00:43:25,970 --> 00:43:29,139
But the model that you had does its job,

775
00:43:29,440 --> 00:43:32,476
so you could include the wallpaper
and other features of the room.

776
00:43:32,476 --> 00:43:35,913
But that's kind of this
art and science of engineering.

777
00:43:36,246 --> 00:43:38,382
And that's
why it's always interesting to work

778
00:43:38,749 --> 00:43:42,119
because often in research
it's like, let's finish the analysis

779
00:43:42,786 --> 00:43:45,122
but really there's this cycle that

780
00:43:45,122 --> 00:43:50,361
the entire model is embedded within
that helps us always keep an eye out

781
00:43:50,361 --> 00:43:54,632
for those patterns that are precluding
being captured by our current models.

782
00:43:56,500 --> 00:43:57,101
Here's a story.

783
00:43:57,101 --> 00:43:57,401
Well.

784
00:43:58,035 --> 00:44:01,038
Here's a second question from the chat.

785
00:44:01,038 --> 00:44:05,509
How does the Factor graph approach work
if the goal temperature in this example

786
00:44:05,743 --> 00:44:09,079
is not defined beforehand,
can the goal be abstract?

787
00:44:09,213 --> 00:44:11,949
So kind of a similar question,
but rather than structure learning,

788
00:44:11,949 --> 00:44:14,852
how does preference and goal orientation
arise

789
00:44:16,420 --> 00:44:16,820
again?

790
00:44:16,820 --> 00:44:18,489
Excellent question.

791
00:44:19,957 --> 00:44:24,862
So that kind of leads to the question,
well, who sets the goals

792
00:44:25,496 --> 00:44:28,132
or how did you set goals

793
00:44:29,733 --> 00:44:32,202
so yeah,

794
00:44:32,736 --> 00:44:34,338
the plain answer to that is, well,

795
00:44:34,338 --> 00:44:36,340
it's an engineer that defines that,

796
00:44:37,608 --> 00:44:39,977
but it can also be higher level agents

797
00:44:40,377 --> 00:44:43,147
that does influence and sets those goals

798
00:44:45,149 --> 00:44:49,920
so then you get to kind of turtles
all the way down arguments

799
00:44:50,254 --> 00:44:53,490
in the sense, well, you can put layer
upon layer upon layer of layer

800
00:44:54,024 --> 00:44:57,728
layers to goals and other as goals
for that layer, et cetera, et cetera.

801
00:44:59,897 --> 00:45:01,965
So how do how that will work in practice?

802
00:45:03,367 --> 00:45:05,102
Yeah, that's still again,

803
00:45:05,102 --> 00:45:07,404
an active research area

804
00:45:10,374 --> 00:45:11,041
but in the end,

805
00:45:11,041 --> 00:45:13,577
it should come down to minimized energy.

806
00:45:14,445 --> 00:45:17,281
So so that's kind of the central
theme of this.

807
00:45:17,347 --> 00:45:19,416
We want to
we want to minimize free energy.

808
00:45:20,150 --> 00:45:22,286
We did it by perception,
we did it by model learning.

809
00:45:23,721 --> 00:45:28,892
But also the learning of the goals should
be driven by minimizing for energy.

810
00:45:28,892 --> 00:45:31,462
So you should choose the goals
of minimize for energy.

811
00:45:31,462 --> 00:45:33,797
Well, how do you do that?

812
00:45:33,797 --> 00:45:34,865
I don't know.

813
00:45:34,965 --> 00:45:36,700
You tell me, right?

814
00:45:36,700 --> 00:45:37,234
Yeah.

815
00:45:39,336 --> 00:45:42,673
So one more question

816
00:45:42,673 --> 00:45:46,443
that was asked was how
or does this integrate

817
00:45:46,443 --> 00:45:50,814
with graph databases
or with large data sets?

818
00:45:50,814 --> 00:45:52,182
Is this something that Scales

819
00:45:52,182 --> 00:45:56,520
was already integrated to work
with that kind of empirical data or. What

820
00:45:58,856 --> 00:45:59,189
I think it

821
00:45:59,189 --> 00:46:02,559
depends on what you mean
by large data sets. So

822
00:46:03,994 --> 00:46:07,164
so when I hear large data sets,
I usually think about

823
00:46:07,164 --> 00:46:09,967
big data, things like that.

824
00:46:11,268 --> 00:46:15,439
So this toolbox is specifically built

825
00:46:15,472 --> 00:46:18,542
for dynamic modeling, right?

826
00:46:18,575 --> 00:46:22,112
So in the sense that you have
a lot of features in your data,

827
00:46:22,579 --> 00:46:24,114
but it's signal processing.

828
00:46:24,114 --> 00:46:27,417
So data might come in very quickly

829
00:46:27,417 --> 00:46:29,686
and you have a model
of how these data change over time.

830
00:46:30,420 --> 00:46:33,757
So in that sense,
you want to do processing quickly.

831
00:46:33,757 --> 00:46:38,962
So you want a lot, you want velocity,
it's based on processing with velocity

832
00:46:39,563 --> 00:46:43,934
and not processing with volume as for
example, a lot of problems in programing.

833
00:46:43,934 --> 00:46:47,237
Tool boxes are excellent apps like

834
00:46:47,237 --> 00:46:49,173
bytes, auctions and things like that.

835
00:46:49,173 --> 00:46:50,774
Right. Sampling based tool boxes,

836
00:46:51,775 --> 00:46:52,776
Edwards

837
00:46:53,744 --> 00:46:54,678
or great tool boxes.

838
00:46:54,678 --> 00:46:55,879
If you have

839
00:46:56,313 --> 00:46:59,850
volume in terms of data
and you have, for example, an ID model

840
00:46:59,983 --> 00:47:03,720
that you want to that you want to fit.

841
00:47:03,720 --> 00:47:06,757
In our sense, if we talk about large
data, we talk about millions of data

842
00:47:06,757 --> 00:47:09,393
that come in very quickly
and we try to be good at that.

843
00:47:09,893 --> 00:47:12,996
And so that is not yet dead

844
00:47:12,996 --> 00:47:15,232
good at it, to be honest.

845
00:47:16,266 --> 00:47:21,038
But the we access message
passing is going to be the bomb and

846
00:47:22,372 --> 00:47:24,541
that those kind of data sets

847
00:47:27,211 --> 00:47:29,980
there's also a bit of that.

848
00:47:31,515 --> 00:47:33,183
What we do, we really try

849
00:47:33,183 --> 00:47:36,520
to build this toolbox
to build active inference agents.

850
00:47:36,520 --> 00:47:40,290
And the idea that you just put it
in their environment,

851
00:47:40,290 --> 00:47:43,260
they make actions,
they select their own data.

852
00:47:44,027 --> 00:47:47,564
So we don't really try

853
00:47:47,564 --> 00:47:50,934
to build a toolbox
that is really good, just doing machine

854
00:47:50,934 --> 00:47:53,804
learning for a fixed set database,

855
00:47:54,271 --> 00:47:58,942
but rather we try to build models
that, let's say

856
00:47:58,942 --> 00:48:02,746
dynamic models that can adapt
and that can make actions.

857
00:48:02,746 --> 00:48:05,949
And we can then in real time
process streaming data.

858
00:48:06,283 --> 00:48:09,019
And in that sense, over time,

859
00:48:09,019 --> 00:48:12,556
if you wait long enough, yeah, there's
a lot of data streaming through it.

860
00:48:13,757 --> 00:48:15,292
I thought it was

861
00:48:15,292 --> 00:48:19,596
sort of generated by or at least affected
by the agent itself, right?

862
00:48:21,331 --> 00:48:25,435
It don't try to optimize
for some big fixed

863
00:48:25,435 --> 00:48:27,838
databases, rather for just

864
00:48:29,306 --> 00:48:32,643
streaming data in an environment.

865
00:48:32,643 --> 00:48:36,146
It's a really fascinating point
because there's a lot of time dependent

866
00:48:36,146 --> 00:48:39,182
tasks like autonomous driving
where it's like,

867
00:48:39,182 --> 00:48:42,986
OK, here's the 500 terabytes of video
or here's this.

868
00:48:42,986 --> 00:48:47,057
Now give me the best possible score
in a time snapshot.

869
00:48:47,457 --> 00:48:51,161
And it's, it's every single time
with an active inference agent,

870
00:48:51,328 --> 00:48:54,197
we're always including action
of policy selection in the loop.

871
00:48:54,932 --> 00:48:58,235
And so how,
how are we going to deal with that?

872
00:48:58,435 --> 00:49:02,506
But that's why the inspiration from
biological systems becomes so important

873
00:49:02,806 --> 00:49:04,374
it's kind of like when people go,

874
00:49:04,374 --> 00:49:07,577
Oh, well, the brain
must have this processing power.

875
00:49:07,878 --> 00:49:09,746
And then if it were a light bulb
or if it was

876
00:49:09,746 --> 00:49:12,516
this kind of a silicone computer,
it would take up this much energy

877
00:49:12,849 --> 00:49:15,852
ergo, it's efficiency is such and such,
but it's predicated upon

878
00:49:16,787 --> 00:49:20,357
the kind of computers
that we're used to seeing instead of kind

879
00:49:20,357 --> 00:49:22,059
of starting with what already exists.

880
00:49:22,059 --> 00:49:26,063
And then looking for an answer
that rests in that, rather than

881
00:49:26,063 --> 00:49:29,800
how do we make lower power transistors
so that we can fit them into the brain.

882
00:49:31,168 --> 00:49:32,669
So awesome.

883
00:49:32,669 --> 00:49:33,136
Topics.

884
00:49:33,136 --> 00:49:35,839
I think
we're ready for the next presentation

885
00:49:39,509 --> 00:49:39,876
yeah.

886
00:49:39,876 --> 00:49:40,711
Hello, everyone.

887
00:49:40,711 --> 00:49:43,146
Let me also share my screen.

888
00:49:43,146 --> 00:49:45,015
For a second.

889
00:49:46,350 --> 00:49:49,820
That I hope it should work now.

890
00:49:50,120 --> 00:49:51,088
Looks at

891
00:49:52,389 --> 00:49:55,459
so can you see my slides now? Yes.

892
00:49:56,893 --> 00:49:58,328
So OK. So yeah.

893
00:49:58,328 --> 00:49:58,862
Hello again.

894
00:49:58,862 --> 00:50:01,765
My name is Richard Buckeyes
and I want to introduce

895
00:50:01,765 --> 00:50:04,801
you like this new reactive message
pricing based

896
00:50:04,801 --> 00:50:08,505
framework probation in Prince and Juliet
that we call reactive anti.

897
00:50:08,839 --> 00:50:12,376
It's more like our future vision
on solutions for active inference.

898
00:50:12,776 --> 00:50:16,480
Foreign Lab Dojo is like
more like a mature framework.

899
00:50:16,480 --> 00:50:17,914
It works and reactive.

900
00:50:17,914 --> 00:50:21,251
It is our research project for now.

901
00:50:22,786 --> 00:50:25,055
And we are going to start with a question

902
00:50:25,522 --> 00:50:27,991
what is actually reactive
message busting?

903
00:50:28,458 --> 00:50:32,095
And in a in most sense,
this is the same message.

904
00:50:32,095 --> 00:50:36,299
Busing is a formula
but re-implemented in reactive paradigm.

905
00:50:36,666 --> 00:50:40,504
So basically the major issue with
traditional approach as in foreign lab

906
00:50:41,071 --> 00:50:44,841
is that enable in order
to run inference for our model,

907
00:50:44,841 --> 00:50:47,978
we need to create
this show of messages in advance.

908
00:50:48,545 --> 00:50:52,616
So we need to analyze our graph
we need to analyze everything basically.

909
00:50:52,949 --> 00:50:56,820
And we do we need to do it
every time we change our graph structure.

910
00:50:57,287 --> 00:51:00,524
And if graph is big, this graph analysis

911
00:51:00,524 --> 00:51:03,460
time and shuttle creation
may take a lot of extra time

912
00:51:04,294 --> 00:51:08,065
and it might be not a big issue,
but as an engineer,

913
00:51:08,065 --> 00:51:11,401
you may want to test a lot of models
until you're satisfied

914
00:51:11,401 --> 00:51:15,372
with the performance and this extra
delays and schedule creation times,

915
00:51:15,739 --> 00:51:20,777
they may be just a bit of annoying
and reactive message forcing us

916
00:51:20,844 --> 00:51:24,781
allows us to eliminate
this predefined schedule and also

917
00:51:24,781 --> 00:51:28,785
it gives us a lot of other benefits
and possible future research directions

918
00:51:30,420 --> 00:51:33,757
so instead of
having instead of having a fixed shuttle,

919
00:51:34,191 --> 00:51:37,394
we cast our graph to like an event
based system

920
00:51:37,828 --> 00:51:40,630
where everything can react
on its neighbor environment.

921
00:51:41,198 --> 00:51:45,535
And in terms of message passing, nodes
react and incoming messages,

922
00:51:45,969 --> 00:51:50,040
and also it reacts on updated
posterior marginals or our parameter

923
00:51:50,841 --> 00:51:53,410
and the whole model becomes reactive.

924
00:51:53,710 --> 00:51:58,248
We can also react on changes in this
system and basically do whatever we want.

925
00:51:58,248 --> 00:52:01,585
So we may perform some action based on

926
00:52:01,585 --> 00:52:04,921
new updated posterior marginals.

927
00:52:04,921 --> 00:52:08,725
It also in message
passing a natural starting point

928
00:52:09,292 --> 00:52:13,830
is our data or observations,
and the model itself

929
00:52:13,830 --> 00:52:17,701
reacts on changes in our data
or in our priors.

930
00:52:18,668 --> 00:52:21,204
And it also changes
posteriors accordingly

931
00:52:23,106 --> 00:52:26,610
so here I outlined some extra benefits

932
00:52:26,610 --> 00:52:28,712
from the active message
bus implementation.

933
00:52:28,879 --> 00:52:32,015
So first of all, we may outline
biological plausibility

934
00:52:32,516 --> 00:52:36,019
because in nature we probably don't have
any predefined scheduler

935
00:52:36,386 --> 00:52:41,057
for our information flowing on neurons
in our brain, for example,

936
00:52:41,992 --> 00:52:44,895
they are driven by some chemistry,

937
00:52:45,128 --> 00:52:48,532
physics, and in sense
it's like also reactive system.

938
00:52:48,532 --> 00:52:51,468
It constantly adapts
the changes in an environment

939
00:52:52,302 --> 00:52:54,538
and also it reacts only if needed.

940
00:52:55,705 --> 00:52:56,072
And in

941
00:52:56,072 --> 00:53:00,043
terms of message passing based inference,
it may be unnecessary to even react.

942
00:53:00,043 --> 00:53:05,015
And some events, like some messages
if they aren't really important,

943
00:53:06,516 --> 00:53:10,120
if fixed predefined schedule,
you're forced to do all computations

944
00:53:10,120 --> 00:53:13,256
even if you don't really need them.

945
00:53:13,590 --> 00:53:15,525
Another great benefit of draft message

946
00:53:15,525 --> 00:53:18,428
passing is that it
scales very nicely for a very big graph.

947
00:53:18,828 --> 00:53:21,631
So it's more like an answer
for our previous question.

948
00:53:22,766 --> 00:53:25,302
So it supports like hundreds of thousands

949
00:53:25,302 --> 00:53:27,571
of factor nodes,
even millions that are possible.

950
00:53:28,471 --> 00:53:30,340
I will show you an example
in a couple of minutes,

951
00:53:30,340 --> 00:53:32,375
but just to give you a bit of context.

952
00:53:32,375 --> 00:53:35,445
So in this plot, when we model
just some moving

953
00:53:35,445 --> 00:53:37,981
object with known line linear dynamics

954
00:53:38,648 --> 00:53:42,619
and the idea was to estimate and see it
and states given noisy observations.

955
00:53:43,620 --> 00:53:43,920
In this

956
00:53:43,920 --> 00:53:48,158
example, I used common sulfur
with 50,000 observations

957
00:53:48,592 --> 00:53:52,796
and this model contains
roughly about 150,000 factor nodes.

958
00:53:53,396 --> 00:53:56,166
So Bayesian inference
and this kind of a model is impossible

959
00:53:56,166 --> 00:53:58,501
on sampling based inference,

960
00:53:59,703 --> 00:54:04,274
but if reactive message passing,
it takes on about 8 seconds on

961
00:54:04,274 --> 00:54:07,043
just a home MacBook laptop

962
00:54:10,714 --> 00:54:14,150
so we can go the other
and make React system robust

963
00:54:14,150 --> 00:54:18,355
and tolerant to some let's say
failing nodes or missing data

964
00:54:19,022 --> 00:54:23,460
from let's say failed
sensor of a fixed predefined shadow.

965
00:54:23,460 --> 00:54:26,730
If something like this happens,
we need to do everything from scratch.

966
00:54:27,364 --> 00:54:28,932
We need to recreate our model.

967
00:54:28,932 --> 00:54:33,603
We need to again, make a shuttle, ETA,
and it will just take some time

968
00:54:34,304 --> 00:54:36,039
with reactive message fussing.

969
00:54:36,039 --> 00:54:41,244
We may just stop reacting on some missing
data or maybe failing sensor

970
00:54:42,212 --> 00:54:42,946
and we

971
00:54:42,946 --> 00:54:45,115
can just
wait for them to be available again.

972
00:54:46,016 --> 00:54:48,251
It makes it very robust in that sense.

973
00:54:48,251 --> 00:54:53,089
It also gives us an opportunity
to change our graph structure in runtime

974
00:54:53,523 --> 00:54:56,092
and still perform inference
without stopping

975
00:54:58,962 --> 00:55:02,132
so there is a slide
about how we actually do that.

976
00:55:02,832 --> 00:55:07,771
We use Julian's main programing language
in our lap roughly about year

977
00:55:07,771 --> 00:55:12,042
and a half ago we wrote the library
for reactive programing.

978
00:55:12,042 --> 00:55:13,076
Julian.

979
00:55:13,076 --> 00:55:15,078
So it's completely
unrelated to message busing

980
00:55:15,078 --> 00:55:17,847
and just in general framework
for event based systems.

981
00:55:18,348 --> 00:55:23,486
But that allowed us at the later point
to build reactive amp don't jail package

982
00:55:24,321 --> 00:55:26,489
and it implements
free energy minimization

983
00:55:26,489 --> 00:55:29,225
by message Boston.

984
00:55:29,492 --> 00:55:31,728
We also introduced Graph Builder
Gel Package

985
00:55:31,728 --> 00:55:34,531
that is a high level and user friendly
probabilistic model

986
00:55:34,531 --> 00:55:37,767
specification language
that we use in our demos.

987
00:55:39,302 --> 00:55:40,303
Yeah, here I am.

988
00:55:40,303 --> 00:55:44,374
I want to show you an example
just in a second

989
00:55:45,241 --> 00:55:47,944
so you can
you can see my screen, right? Yep.

990
00:55:48,345 --> 00:55:51,214
Maybe one little size larger or two.

991
00:55:53,550 --> 00:55:56,953
I hope it's a little break.

992
00:55:56,986 --> 00:55:57,153
Yeah.

993
00:55:57,153 --> 00:55:59,422
Make it a little larger
than if it looks unexpected.

994
00:55:59,422 --> 00:56:03,360
You can pull back OK.

995
00:56:03,893 --> 00:56:04,961
Here we go.

996
00:56:05,528 --> 00:56:07,030
Yep. Thank you.

997
00:56:07,630 --> 00:56:09,499
So here is our example.

998
00:56:09,499 --> 00:56:12,836
So assume we have some moving object.

999
00:56:14,104 --> 00:56:17,474
It has some hidden space,
and just assume that we know it's

1000
00:56:17,474 --> 00:56:21,077
linear dynamics for simplicity
and we don't

1001
00:56:21,077 --> 00:56:22,712
we don't have a direct access to its

1002
00:56:22,712 --> 00:56:25,982
location, but we have a noisy observation
of this moving object,

1003
00:56:26,549 --> 00:56:30,553
and we wish to estimate the true location
of this moving object.

1004
00:56:30,987 --> 00:56:33,990
By only observing its noise measurements.

1005
00:56:35,125 --> 00:56:37,260
And we may use

1006
00:56:37,260 --> 00:56:39,662
a linear multivariate Gaussian state
based model

1007
00:56:41,164 --> 00:56:42,332
like equations.

1008
00:56:42,332 --> 00:56:43,767
Looks like this.

1009
00:56:43,767 --> 00:56:45,201
This are equivalent annotations.

1010
00:56:45,201 --> 00:56:46,603
They're the same.

1011
00:56:46,603 --> 00:56:49,105
And basically here we say that, OK,

1012
00:56:49,105 --> 00:56:52,108
we have a state X timestamp, OK?

1013
00:56:52,475 --> 00:56:55,512
And it depends on the
on the previous timestamp step,

1014
00:56:56,246 --> 00:56:59,716
some linear operator A
and we also have a transition.

1015
00:56:59,716 --> 00:57:02,952
Nice which is a Gaussian
with covariance matrix.

1016
00:57:03,486 --> 00:57:07,223
And our observations are

1017
00:57:07,223 --> 00:57:08,825
basically modeled

1018
00:57:08,825 --> 00:57:12,262
as a Gaussian with covariance matrix.

1019
00:57:12,262 --> 00:57:15,064
Q And basically this is our model

1020
00:57:15,632 --> 00:57:18,201
and we can simply create the factor
graph out of it.

1021
00:57:19,569 --> 00:57:24,240
And as you can see that
our model specification

1022
00:57:24,240 --> 00:57:27,844
resembles very closely to the equations
defined above.

1023
00:57:27,844 --> 00:57:32,949
So here we have our static
and it's modeled as like a Gaussian

1024
00:57:32,949 --> 00:57:37,520
of previous state with some,
let's say known covariance matrices.

1025
00:57:38,354 --> 00:57:40,490
And this is how we build our model.

1026
00:57:40,490 --> 00:57:44,294
And under this code
it generates factor graph

1027
00:57:45,862 --> 00:57:47,430
and we can we can

1028
00:57:47,430 --> 00:57:52,502
later on use a reactive and impedance API
to estimate the state of our system.

1029
00:57:52,502 --> 00:57:53,803
But here's our example.

1030
00:57:53,803 --> 00:57:57,941
It looks a bit of a problem
because I zoomed in a bit

1031
00:57:59,275 --> 00:58:01,611
but it's fine, I do it.

1032
00:58:01,711 --> 00:58:04,714
And in this example
I perform the common small

1033
00:58:04,714 --> 00:58:09,352
for four or 500 points
and I just decompose the trajectory

1034
00:58:09,352 --> 00:58:12,922
of this object
into two axis x axis and y axis.

1035
00:58:13,490 --> 00:58:16,759
And we can see that common symbol
for predicted

1036
00:58:17,527 --> 00:58:20,463
like the real hidden states
of our system correctly,

1037
00:58:21,698 --> 00:58:23,800
even though we have a lot of noise
in our system.

1038
00:58:23,800 --> 00:58:26,903
So these blue dots,
it's like our noisy observations

1039
00:58:28,605 --> 00:58:31,207
and we go, we can go further with this.

1040
00:58:31,207 --> 00:58:35,311
So because our system is reactive,
we can, we can estimate

1041
00:58:35,879 --> 00:58:38,181
our, our states in real time.

1042
00:58:38,915 --> 00:58:40,517
So here is our example.

1043
00:58:40,517 --> 00:58:42,051
If we try to run it

1044
00:58:44,254 --> 00:58:46,890
I hope it looks smoothly on my computer.

1045
00:58:46,890 --> 00:58:50,460
It's actually very smooth,
but I know that maybe

1046
00:58:51,361 --> 00:58:54,030
recording
is not that small like screen sharing.

1047
00:58:54,531 --> 00:58:57,667
But here in this example,
what we see is that, OK,

1048
00:58:57,667 --> 00:59:01,304
we have an infinite data stream
of a moving object that the blue is

1049
00:59:01,304 --> 00:59:05,141
the real one and the red is
an estimated one and we can see that.

1050
00:59:05,575 --> 00:59:08,545
Now, let me reloaded because it's kind of

1051
00:59:10,880 --> 00:59:13,182
and we can see that

1052
00:59:14,050 --> 00:59:15,485
react differently, is able

1053
00:59:15,485 --> 00:59:17,954
to perform
and Bayesian inference in real time,

1054
00:59:18,755 --> 00:59:22,292
and it actually adapts
to changes in the environment

1055
00:59:22,292 --> 00:59:27,664
and also changes the posterior
over the current estimated state.

1056
00:59:28,731 --> 00:59:30,133
And we can go even further.

1057
00:59:30,133 --> 00:59:34,103
You probably noticed this orange line
here just inactive for now,

1058
00:59:34,470 --> 00:59:37,273
but we can also incorporate prediction

1059
00:59:38,808 --> 00:59:40,143
for this model.

1060
00:59:40,143 --> 00:59:43,613
So we can just
we can just extend a little bit our graph

1061
00:59:44,280 --> 00:59:48,117
and we can also predict
future state of our system

1062
00:59:49,152 --> 00:59:50,353
like this.

1063
00:59:50,353 --> 00:59:54,924
So now in this example,
I do Bayesian inference in real time,

1064
00:59:54,924 --> 00:59:59,195
and I also predict the future
state of my system like in Orange.

1065
01:00:00,263 --> 01:00:04,400
And you can see that prediction
also adapts to the new observations

1066
01:00:05,001 --> 01:00:08,304
and it changes basically its future

1067
01:00:08,304 --> 01:00:10,840
beliefs over future states

1068
01:00:13,476 --> 01:00:13,910
yeah.

1069
01:00:14,744 --> 01:00:17,580
Let me stop it
and continue the presentation

1070
01:00:21,117 --> 01:00:23,386
so yeah,

1071
01:00:23,453 --> 01:00:27,290
I'm going to talk about
like when reactive messages pass things.

1072
01:00:27,290 --> 01:00:29,359
Well, actually it's already working

1073
01:00:30,827 --> 01:00:32,528
we have a fully working stable

1074
01:00:32,528 --> 01:00:36,032
backend and API, for example,
and variation on Bayesian inference.

1075
01:00:36,399 --> 01:00:39,035
We also support
expectation propagation, but

1076
01:00:39,035 --> 01:00:43,172
that API is not yet
stable, so it might change.

1077
01:00:44,173 --> 01:00:45,141
We support

1078
01:00:45,141 --> 01:00:48,578
for now only conjugate models
from Exponential Family

1079
01:00:49,112 --> 01:00:52,782
we support extra constraints
for operation optimization procedure

1080
01:00:53,850 --> 01:00:56,285
such that form
or factorization constraint.

1081
01:00:57,053 --> 01:01:00,123
So Rocket a Dodger library
it naturally supports

1082
01:01:00,123 --> 01:01:04,260
infinite data streams, for example,
from an internet or from some sensor

1083
01:01:05,361 --> 01:01:08,631
and framework
itself is able to handle a missing data

1084
01:01:09,399 --> 01:01:13,169
but that API is also not yet stable

1085
01:01:16,105 --> 01:01:17,073
here.

1086
01:01:17,073 --> 01:01:20,343
Some of our future plans
for this platform.

1087
01:01:20,710 --> 01:01:24,480
So we want to extend it to support
non conjugate models as well

1088
01:01:24,814 --> 01:01:27,216
basically formula already supports it.

1089
01:01:28,151 --> 01:01:31,054
We just need to carefully port
all of the available

1090
01:01:31,054 --> 01:01:33,690
existing functionality
from Foreign Lab to react different

1091
01:01:35,692 --> 01:01:38,394
and we also want to integrate
with other probabilistic

1092
01:01:38,394 --> 01:01:41,097
programing libraries
that exists in Julia Community

1093
01:01:43,599 --> 01:01:44,767
Reactive Message Bus

1094
01:01:44,767 --> 01:01:48,638
and gives us an opportunity
to try to integrate

1095
01:01:48,638 --> 01:01:52,542
parallel inference and react
in different parts of the graph.

1096
01:01:52,542 --> 01:01:56,279
Similar tenuously using like multi-core
capabilities of our CPUs

1097
01:01:58,214 --> 01:01:59,882
we want to extend

1098
01:01:59,882 --> 01:02:03,686
graph detail
to support modular model specification.

1099
01:02:03,686 --> 01:02:05,788
For now, it's unfortunately not possible

1100
01:02:09,092 --> 01:02:09,559
also,

1101
01:02:09,559 --> 01:02:13,629
reactive message busting
naturally gives us an opportunity to run

1102
01:02:13,629 --> 01:02:16,566
inference where different
data streams have different

1103
01:02:16,699 --> 01:02:18,267
data rates

1104
01:02:20,369 --> 01:02:21,771
what that

1105
01:02:21,771 --> 01:02:24,774
what I was talking about
in the very beginning about robustness.

1106
01:02:25,141 --> 01:02:28,878
But it's also interesting
how far can we push it and maybe

1107
01:02:29,512 --> 01:02:33,916
it's possible to automatically
adopt models structure in runtime

1108
01:02:34,317 --> 01:02:36,953
based on free energy

1109
01:02:38,187 --> 01:02:39,589
but it's like a research project.

1110
01:02:39,589 --> 01:02:41,858
We don't really know
if it's possible or not.

1111
01:02:42,091 --> 01:02:43,159
For now,

1112
01:02:44,060 --> 01:02:47,697
we have some ideas about interactive
visualization for message vessel

1113
01:02:47,730 --> 01:02:51,968
based algorithms and free energy
minimization visualization.

1114
01:02:53,569 --> 01:02:58,007
And eventually we we are planning
to release this new platform

1115
01:02:58,007 --> 01:03:02,278
as a stable version of formula,
possibly to point out.

1116
01:03:03,279 --> 01:03:05,314
And that basically is everything

1117
01:03:05,314 --> 01:03:08,184
I wanted to show you in my slides
and thank you for your attention.

1118
01:03:08,217 --> 01:03:10,253
I will be happy to answer your questions

1119
01:03:13,856 --> 01:03:14,524
awesome.

1120
01:03:14,524 --> 01:03:17,994
First question was,
is there a paper on this

1121
01:03:18,161 --> 01:03:21,631
reactive MP jail or how does that work?

1122
01:03:22,832 --> 01:03:24,700
There is, but it's in progress.

1123
01:03:24,700 --> 01:03:29,038
So it's not it's not publicly available,
but we are working on that.

1124
01:03:29,205 --> 01:03:32,508
So there will be eventually paper
about all of this approach.

1125
01:03:32,508 --> 01:03:35,244
I will describe everything, how it works
and how we use it.

1126
01:03:35,645 --> 01:03:37,079
So no.

1127
01:03:37,079 --> 01:03:39,549
I mean, of course
if anybody writes an email

1128
01:03:39,682 --> 01:03:43,286
who wants to get an early copy of
the paper would be happy to share it.

1129
01:03:43,820 --> 01:03:46,522
If it stays confidential,

1130
01:03:46,522 --> 01:03:48,391
I'd be happy to share.

1131
01:03:49,625 --> 01:03:52,562
It's a very interesting development

1132
01:03:52,562 --> 01:03:57,600
maybe to the other
authors, like what other

1133
01:03:58,534 --> 01:04:01,437
epochs of 40 Lab were there?

1134
01:04:02,939 --> 01:04:06,676
How did we get with to this reactive
programing paradigm?

1135
01:04:06,676 --> 01:04:10,146
And also it seems like you did
a lot of the foundational work in the lab

1136
01:04:10,580 --> 01:04:13,149
on the reactive programing.

1137
01:04:13,149 --> 01:04:15,351
Was that just in the Julia implementation

1138
01:04:15,351 --> 01:04:17,720
or in the more conceptual grounding.

1139
01:04:20,656 --> 01:04:23,025
Yeah,
we did it actually really a lot of work

1140
01:04:23,025 --> 01:04:25,328
to support reactive programing in Julia.

1141
01:04:26,262 --> 01:04:29,265
Basically
Julia is like the young language

1142
01:04:29,265 --> 01:04:32,401
and it has no good capabilities

1143
01:04:32,401 --> 01:04:35,304
to run reactive based like systems.

1144
01:04:35,571 --> 01:04:37,974
So basically we build it from scratch

1145
01:04:39,675 --> 01:04:39,976
yeah.

1146
01:04:39,976 --> 01:04:44,447
But we,
we used a lot of like let's say ideas

1147
01:04:44,447 --> 01:04:48,150
from other programing languages
that we had experience

1148
01:04:48,150 --> 01:04:48,684
with.

1149
01:04:53,322 --> 01:04:56,058
I mean,
I know that the academic community

1150
01:04:57,326 --> 01:05:00,663
not much lab is fantastic

1151
01:05:00,663 --> 01:05:02,932
but for the, for a really

1152
01:05:03,199 --> 01:05:07,303
if you want real time
processing of streaming data,

1153
01:05:08,104 --> 01:05:11,741
then Julia is a very good
is a better option

1154
01:05:12,008 --> 01:05:17,079
because Julia is as almost
has the syntax of MATLAB from a user

1155
01:05:19,181 --> 01:05:19,682
but out of

1156
01:05:19,682 --> 01:05:22,084
the box, it's almost this fast to see.

1157
01:05:23,185 --> 01:05:27,423
And so it's just a better combination for
if you are in engineering

1158
01:05:27,423 --> 01:05:31,527
and you actually want to build systems
that are running your time,

1159
01:05:31,527 --> 01:05:35,765
you want to make demos
and Julia is better, which is also

1160
01:05:36,632 --> 01:05:39,568
Dimitri also makes
use of some really advanced

1161
01:05:39,602 --> 01:05:43,239
stuff
and Julia goes for multiple dispatch.

1162
01:05:43,306 --> 01:05:47,610
It doesn't matter which one it is,
but it's it's quite events and it's not

1163
01:05:48,945 --> 01:05:52,581
available in MATLAB,
but it's extremely useful.

1164
01:05:52,581 --> 01:05:54,617
So what we do or do with

1165
01:05:56,819 --> 01:05:59,155
it seems to be

1166
01:05:59,155 --> 01:06:02,458
if you look at a graph and mass
passing it,

1167
01:06:02,458 --> 01:06:06,262
see it seems to be like, oh,
this is actually not so hard to implement

1168
01:06:08,030 --> 01:06:12,234
but there's a reason why there are
extremely few toolboxes for the graphs.

1169
01:06:12,735 --> 01:06:17,373
So Microsoft has built
one in four dot net and it's, it's great,

1170
01:06:18,474 --> 01:06:20,676
but it's not really a real time tool box.

1171
01:06:21,944 --> 01:06:24,213
And so as far as we know are

1172
01:06:24,947 --> 01:06:28,451
there's not much competition
at the moment for us not.

1173
01:06:28,451 --> 01:06:30,619
But our tool box is very advanced yet.

1174
01:06:30,619 --> 01:06:34,290
But I don't see a lot of people
working on this.

1175
01:06:34,290 --> 01:06:35,057
I see a lot of people

1176
01:06:35,057 --> 01:06:39,328
working on their most kind of sampling,
but not kind of something.

1177
01:06:39,362 --> 01:06:42,932
A lot of work for the sizes of systems

1178
01:06:42,932 --> 01:06:46,535
and the real time data streams
that we want to do with active inference.

1179
01:06:46,535 --> 01:06:46,902
Right?

1180
01:06:46,902 --> 01:06:47,803
We are

1181
01:06:48,571 --> 01:06:52,508
working in systems where we want
to make actions and influence our data.

1182
01:06:53,242 --> 01:06:55,911
So this is a real time system and

1183
01:06:56,312 --> 01:06:58,481
and so we have to go to

1184
01:06:59,615 --> 01:07:01,017
actually scale up.

1185
01:07:01,017 --> 01:07:05,755
We have to go to built a really high
quality professional tool box

1186
01:07:06,822 --> 01:07:09,191
that automates message passing.

1187
01:07:09,191 --> 01:07:12,595
I hope
this will be one of those two boxes and

1188
01:07:12,628 --> 01:07:14,597
hopefully they're also the other tool.

1189
01:07:14,597 --> 01:07:16,699
But yeah, that's why we're doing this.

1190
01:07:18,534 --> 01:07:20,536
Very interesting answer.

1191
01:07:21,904 --> 01:07:24,907
How has the dialog between

1192
01:07:25,207 --> 01:07:29,011
the math and programing
and computer science side and the active

1193
01:07:29,011 --> 01:07:34,050
inference side been like,
what has each side kind of contributed?

1194
01:07:34,050 --> 01:07:37,620
Because it sounds like some of those
real time insights of active inference

1195
01:07:37,920 --> 01:07:41,123
are kind of propagating
back to the design of algorithms,

1196
01:07:41,490 --> 01:07:43,926
and then we see both directions.

1197
01:07:43,926 --> 01:07:46,962
So how has that played out
maybe for any of each for each of you.

1198
01:07:49,498 --> 01:07:50,800
I can also answer

1199
01:07:50,800 --> 01:07:54,103
maybe this question
from my point of view.

1200
01:07:54,103 --> 01:07:57,339
I mostly like doing programing,

1201
01:07:57,339 --> 01:07:59,408
but I still learn something new
every time

1202
01:07:59,408 --> 01:08:04,113
because we like in this constant dialog
with math guys

1203
01:08:04,113 --> 01:08:07,316
and our let's say,
and I learn something new every day.

1204
01:08:07,316 --> 01:08:12,188
And of course it reflects like our design
choices for our software as well.

1205
01:08:13,322 --> 01:08:14,423
So it's kind of

1206
01:08:14,423 --> 01:08:18,761
but sometimes it's, it's very hard
to fit this high level

1207
01:08:18,761 --> 01:08:22,031
of my symmetrical ideas
to the actual implementation.

1208
01:08:22,598 --> 01:08:25,835
And also it's very hard
to make it efficient.

1209
01:08:26,836 --> 01:08:32,408
So yeah, we are not

1210
01:08:33,175 --> 01:08:35,444
we're not done with this.

1211
01:08:35,444 --> 01:08:37,813
I mean, the tool box is available anybody

1212
01:08:37,813 --> 01:08:41,750
and all the nice toy examples, the basic

1213
01:08:41,817 --> 01:08:45,488
thermostat, the Tic-Tac-Toe,
and it all looks very smooth.

1214
01:08:47,790 --> 01:08:49,692
The tower.

1215
01:08:49,692 --> 01:08:54,630
Our hope
is that with reactive masses passing,

1216
01:08:54,630 --> 01:09:00,302
we can actually get past the scaling
is up to serious applications.

1217
01:09:00,836 --> 01:09:02,471
And that that's what I mean.

1218
01:09:02,471 --> 01:09:03,672
We're an engineering group.

1219
01:09:03,672 --> 01:09:07,443
We want to build systems
that really do something useful.

1220
01:09:07,443 --> 01:09:11,714
I also work for a hearing aid company,
so I want to build the real time

1221
01:09:12,715 --> 01:09:14,850
audio processing algorithms

1222
01:09:16,886 --> 01:09:18,521
and others may want to

1223
01:09:18,521 --> 01:09:21,524
use this for robotics. So

1224
01:09:21,524 --> 01:09:24,226
yeah, but that's not going to work in

1225
01:09:24,860 --> 01:09:28,097
real time
until it's not going to work. It's

1226
01:09:29,131 --> 01:09:32,034
yeah, I mean, all the more
the kind of stuff.

1227
01:09:32,067 --> 01:09:33,002
And so

1228
01:09:33,702 --> 01:09:35,638
this is our effort

1229
01:09:36,172 --> 01:09:38,207
and it's quite

1230
01:09:38,641 --> 01:09:42,478
it's takes a long time because it's
very multidisciplinary efforts, right?

1231
01:09:42,511 --> 01:09:46,348
We have in my group,
we have a mathematicians and

1232
01:09:47,416 --> 01:09:50,352
neuroscience kids and computer scientists

1233
01:09:50,352 --> 01:09:52,454
because it's difficult.

1234
01:09:53,622 --> 01:09:56,659
There's a lot of different expertizes

1235
01:09:57,226 --> 01:10:01,263
that that you need to build your toolbox
for active inference

1236
01:10:03,132 --> 01:10:05,634
I think because it's so difficult,
there is a lot of like

1237
01:10:07,069 --> 01:10:09,438
a cross first position between

1238
01:10:09,438 --> 01:10:12,575
the active inference community
and the engineering that we do

1239
01:10:14,009 --> 01:10:17,613
the community is mostly interested
in explaining biological systems.

1240
01:10:17,613 --> 01:10:20,883
So I do the same energy
principle active inference

1241
01:10:20,950 --> 01:10:23,185
as is multiple biology.

1242
01:10:24,119 --> 01:10:27,089
And I think it's very interesting
because, well, nature has a certain way

1243
01:10:27,089 --> 01:10:29,191
of doing things efficiently.

1244
01:10:30,960 --> 01:10:32,828
And if this is a model for that

1245
01:10:32,828 --> 01:10:35,164
then it's also a good idea
to take that to engineering.

1246
01:10:36,198 --> 01:10:37,499
And that's kind of where we come in.

1247
01:10:37,499 --> 01:10:40,603
So we kind of take the ideas
that are available

1248
01:10:40,603 --> 01:10:43,505
in the X Inference community
and where they explain brains

1249
01:10:43,505 --> 01:10:47,876
and think about brains and saying, Hey,
how can we take these ideas

1250
01:10:48,310 --> 01:10:51,981
and use them
to build an engineering system

1251
01:10:53,515 --> 01:10:56,051
and I think that's kind of the main,

1252
01:10:56,051 --> 01:10:57,953
you know,
the main interaction between it.

1253
01:10:57,953 --> 01:11:00,089
And hopefully then we build tools that

1254
01:11:00,956 --> 01:11:03,425
the community
can also use that in their research.

1255
01:11:03,626 --> 01:11:04,760
Eventually

1256
01:11:07,029 --> 01:11:10,165
what that made me think about
was it's really

1257
01:11:10,165 --> 01:11:14,536
a reframing of some of the main
challenges, like seeing signal processing

1258
01:11:14,536 --> 01:11:19,074
as a real time event or seeing the causal
relationships between action

1259
01:11:19,074 --> 01:11:23,312
and future data, all these kinds
of reframing of the problem.

1260
01:11:23,679 --> 01:11:25,281
It's not like the active inference

1261
01:11:26,282 --> 01:11:28,183
algorithms take

1262
01:11:28,183 --> 01:11:32,187
massive matrix calculations to do per se.

1263
01:11:32,388 --> 01:11:35,591
They can be very simple or not,
but it's actually that reframing

1264
01:11:35,591 --> 01:11:39,028
and the embedding of action
within every step

1265
01:11:39,595 --> 01:11:42,931
that then ends up solving the scaling,
some of the scaling,

1266
01:11:42,931 --> 01:11:46,235
some challenges, some of the resilience
challenges, because like resilience

1267
01:11:46,235 --> 01:11:50,739
of a transportation network in a city,
they would do sampling

1268
01:11:50,773 --> 01:11:53,542
or they would take something
that's an unfolding dynamic process

1269
01:11:53,542 --> 01:11:57,513
and then try to roll out
a million iterations of it statically.

1270
01:11:58,113 --> 01:12:00,916
So it's again, it's
not that the calculations

1271
01:12:01,383 --> 01:12:03,452
inside of the loop
have to be challenging.

1272
01:12:03,452 --> 01:12:06,555
It's just a reframing of prioritizing.

1273
01:12:06,555 --> 01:12:10,893
Action ended up
going down these roads of scaling

1274
01:12:10,893 --> 01:12:14,229
and real time capacity.

1275
01:12:14,430 --> 01:12:16,732
Yeah, I like that.

1276
01:12:16,732 --> 01:12:18,200
The thought of perhaps

1277
01:12:18,200 --> 01:12:22,171
I can say something about this
in the context of what I work on

1278
01:12:22,171 --> 01:12:25,974
because I work on designing basically I'm
a hearing engineer, I work on

1279
01:12:27,242 --> 01:12:28,410
and if you ask a hearing

1280
01:12:28,410 --> 01:12:31,980
engineer or signal processing engineer,
so what is your task?

1281
01:12:32,614 --> 01:12:35,417
Well, our task is to build
the best hearing out of it.

1282
01:12:36,452 --> 01:12:39,722
And so

1283
01:12:39,722 --> 01:12:44,259
then what happens is that in a hearing,
a client goes to the store

1284
01:12:44,259 --> 01:12:48,397
and buys a hearing aid
and usually it's very happy and goes out.

1285
01:12:48,397 --> 01:12:52,000
And then two weeks later it sits
in a restaurant and cannot understand

1286
01:12:52,568 --> 01:12:55,938
a conversation partner
because there's noise

1287
01:12:55,938 --> 01:12:59,742
and this wasn't expected
and there's nothing she can do

1288
01:13:00,676 --> 01:13:03,912
because you can't ask a client,
a hearing aid clients

1289
01:13:03,912 --> 01:13:08,283
to tell you fiddle
with hearing it parameters.

1290
01:13:08,283 --> 01:13:10,919
So if this happens a few times,

1291
01:13:12,354 --> 01:13:15,524
then she throws and she puts her hearing
aid in the drawer

1292
01:13:15,691 --> 01:13:20,529
and this is about ten to 20% of hearing
it end up in a drawer.

1293
01:13:20,562 --> 01:13:21,997
They're very expensive and

1294
01:13:23,465 --> 01:13:25,701
and 20% ends up not being useful.

1295
01:13:25,701 --> 01:13:28,604
Really sad statistic.

1296
01:13:29,071 --> 01:13:33,308
So right here you can,
you can turn around and say, OK,

1297
01:13:33,308 --> 01:13:35,577
what is the real hearing
aid design problem?

1298
01:13:35,577 --> 01:13:39,982
The real hearing aid design problem is
send somebody out with any hearing it.

1299
01:13:40,315 --> 01:13:43,218
But what do you do
when she's unhappy in the field,

1300
01:13:43,819 --> 01:13:46,422
as in the restaurant?

1301
01:13:46,422 --> 01:13:49,958
And what we want to build is an agent
that will then.

1302
01:13:50,092 --> 01:13:52,895
So she just slaps her wrist,
which I'm happy.

1303
01:13:52,895 --> 01:13:55,030
And now this agent
needs to make an action

1304
01:13:55,030 --> 01:13:59,835
and give her a new parameter, set things
that are the most interesting for her

1305
01:13:59,835 --> 01:14:04,072
and in the best compromise
between information

1306
01:14:04,072 --> 01:14:07,776
seeking and goal driven goals,
we can be making her happy.

1307
01:14:08,777 --> 01:14:11,680
So hearing a design from

1308
01:14:11,680 --> 01:14:14,850
my viewpoint now is just build an agent

1309
01:14:14,850 --> 01:14:19,922
that will make actions, make hearing it
proposals when she's unhappy,

1310
01:14:20,923 --> 01:14:22,724
and if she

1311
01:14:22,791 --> 01:14:26,028
isn't happy and then it makes proposal
says, no, that's good.

1312
01:14:26,028 --> 01:14:29,565
Well, the agent gives another proposal
and that is OK, that's better.

1313
01:14:30,065 --> 01:14:31,033
And then we move on.

1314
01:14:31,033 --> 01:14:35,237
And maybe a week later, the same event
and this goes on continually.

1315
01:14:35,737 --> 01:14:38,574
But there is at least

1316
01:14:38,807 --> 01:14:42,478
a procedure to keep moving on,
to keep improving over time.

1317
01:14:42,711 --> 01:14:43,412
Right.

1318
01:14:44,112 --> 01:14:47,583
So that's the real thing of design

1319
01:14:47,583 --> 01:14:51,553
is the is
then the the action in the field in situ,

1320
01:14:52,421 --> 01:14:55,757
which is very different from what's
currently happening, which is a hearing

1321
01:14:55,757 --> 01:15:00,829
aid engineer sitting at the desk
with MATLAB, not in the environment.

1322
01:15:02,030 --> 01:15:04,500
So that's it's a paradigm shift

1323
01:15:04,500 --> 01:15:06,902
and at if insurance agents

1324
01:15:07,903 --> 01:15:11,740
can maybe make that happen
and it could be really I think

1325
01:15:12,841 --> 01:15:16,311
great a pivoting point for something
like signal processing design

1326
01:15:17,312 --> 01:15:21,817
is not something that you think about
when you're in there scientist

1327
01:15:21,850 --> 01:15:24,453
but this could really mean
something big for engineering

1328
01:15:25,587 --> 01:15:28,524
and not just for signal processing
but also in different

1329
01:15:28,724 --> 01:15:30,025
engineering disciplines.

1330
01:15:30,025 --> 01:15:34,796
And so that's why I think over time
you'll see more and more people

1331
01:15:34,796 --> 01:15:39,501
coming from different fields
getting an interest in this

1332
01:15:41,203 --> 01:15:44,339
active of and the fancy principle

1333
01:15:44,339 --> 01:15:47,309
even in non

1334
01:15:47,543 --> 01:15:49,111
the not neuroscientists right

1335
01:15:49,111 --> 01:15:52,414
but engineers and yeah yeah.

1336
01:15:52,414 --> 01:15:53,582
Cool we hope so.

1337
01:15:53,582 --> 01:15:56,051
And that really reminds me
of the pragmatic turn,

1338
01:15:56,585 --> 01:15:59,187
which is it's a little bit
like a horseshoe theory

1339
01:15:59,187 --> 01:16:03,425
with the engineers and the philosophers
often talking about pragmatism

1340
01:16:04,293 --> 01:16:07,029
in different ways,
different communities, different tools.

1341
01:16:07,663 --> 01:16:12,234
And now there's a way to kind of
close that gap, or at least map across it

1342
01:16:12,834 --> 01:16:15,370
where we can embed
some of those insights about

1343
01:16:16,772 --> 01:16:17,205
really an

1344
01:16:17,205 --> 01:16:21,543
activism, the role of design, science,
anticipatory design, science with

1345
01:16:22,511 --> 01:16:25,747
Take It or leave it philosophy,
or there's the toolkit to develop.

1346
01:16:26,515 --> 01:16:29,551
Maybe it's interesting
five years after working with the toolkit

1347
01:16:29,551 --> 01:16:32,654
or maybe five years of philosophy, and
then you're curious about the toolkit.

1348
01:16:33,488 --> 01:16:35,657
So one question was

1349
01:16:36,391 --> 01:16:40,462
how do these graphs account
for temporally deep models

1350
01:16:40,829 --> 01:16:45,767
how are those specified or what
make what is different about the graph?

1351
01:16:46,201 --> 01:16:49,838
Because it's just calculating
the next action to take in the examples

1352
01:16:49,838 --> 01:16:51,173
that you provided.

1353
01:16:53,175 --> 01:16:55,978
Maybe you can show your graph again,

1354
01:16:55,978 --> 01:16:58,113
how the future is presented,

1355
01:16:59,481 --> 01:17:01,049
how you attempt to effective to that.

1356
01:17:01,049 --> 01:17:04,052
For example, this kind of
so if you ask if you have a graph

1357
01:17:06,355 --> 01:17:08,724
like share screen is

1358
01:17:12,928 --> 01:17:15,597
if you have a graph like this,
then how do you add temporal sequence?

1359
01:17:15,597 --> 01:17:16,198
For example,

1360
01:17:18,734 --> 01:17:21,203
that's this just about adding layers.

1361
01:17:21,203 --> 01:17:24,473
So what is shown here is one layer

1362
01:17:26,041 --> 01:17:27,309
and is layer x.

1363
01:17:27,309 --> 01:17:30,712
It acts at a certain block time

1364
01:17:30,812 --> 01:17:32,848
and no observations come in discretely

1365
01:17:35,117 --> 01:17:37,719
but you might have layer above this
that is somehow

1366
01:17:37,719 --> 01:17:42,624
connected to this layer below
that acts at a higher temporal timescale.

1367
01:17:43,425 --> 01:17:46,361
So it evolves slower,

1368
01:17:46,361 --> 01:17:49,931
but it regulates or influences
the parameters of,

1369
01:17:49,998 --> 01:17:53,635
for example, a transition model here
or an observation model here.

1370
01:17:54,603 --> 01:17:57,439
So you get a time
varying observation model

1371
01:17:57,439 --> 01:18:01,376
that is influenced by a slower
evolving layer.

1372
01:18:02,544 --> 01:18:05,480
On top of that, you can get
an even slower resolving later, right?

1373
01:18:05,480 --> 01:18:08,383
And that's just the way
you can build hierarchies

1374
01:18:10,752 --> 01:18:12,487
when actually there's

1375
01:18:12,487 --> 01:18:15,223
also pages
students in our group, Ismael's seniors,

1376
01:18:15,691 --> 01:18:19,061
who has done some very interesting
work on that, and he has investigated

1377
01:18:19,061 --> 01:18:22,864
how you make hierarchical
all coercion filters.

1378
01:18:23,865 --> 01:18:24,566
So hierarchical

1379
01:18:24,566 --> 01:18:29,037
Goshen systems, where you have one
top player influencing the variance

1380
01:18:29,738 --> 01:18:31,740
of the transition
model of the layer below.

1381
01:18:33,208 --> 01:18:35,911
And you can see that

1382
01:18:35,911 --> 01:18:40,215
you can get lot models,
very natural signals with that.

1383
01:18:41,049 --> 01:18:44,519
So so in nature, as you have,
you have signals that are time varying

1384
01:18:44,519 --> 01:18:46,488
the statistics
there, they're time varying,

1385
01:18:46,488 --> 01:18:49,925
and the statistics of those models
are times varying.

1386
01:18:50,959 --> 01:18:54,529
So a hierarchical model in that sense
can be very useful for that.

1387
01:18:54,529 --> 01:18:58,366
And of course this is of course
also how our brains are structured.

1388
01:18:58,366 --> 01:19:01,603
So again,
you have this inspiration from nature

1389
01:19:02,637 --> 01:19:04,773
on how to structure the models

1390
01:19:04,773 --> 01:19:06,742
that we try to build

1391
01:19:08,710 --> 01:19:11,480
so it's photographs
and at least in theory,

1392
01:19:11,513 --> 01:19:14,783
this should be pretty easy
because you can just connect them,

1393
01:19:14,783 --> 01:19:18,253
you can connect layer on top of this
and, and see how it behaves

1394
01:19:19,554 --> 01:19:21,089
and then eventually

1395
01:19:21,089 --> 01:19:23,592
the complexity of your model
will become very high

1396
01:19:23,592 --> 01:19:25,694
and you'll get penalized for it
automatically.

1397
01:19:25,694 --> 01:19:28,764
So there will be a cutoff point

1398
01:19:28,764 --> 01:19:32,501
given your data and that will be
the optimal amount of layers

1399
01:19:32,501 --> 01:19:35,137
that you need in order to explain away
all variance

1400
01:19:35,871 --> 01:19:39,407
that you observe, which is

1401
01:19:39,608 --> 01:19:41,743
so so that's kind of how we think about,

1402
01:19:42,410 --> 01:19:45,180
yeah, temporal thickness

1403
01:19:45,180 --> 01:19:47,449
and time dependance

1404
01:19:47,449 --> 01:19:50,252
and dynamical models like this.

1405
01:19:50,719 --> 01:19:53,321
Then can I share my screen also?

1406
01:19:53,321 --> 01:19:54,956
Yep, sure.

1407
01:19:54,956 --> 01:19:55,557
Yeah.

1408
01:19:55,657 --> 01:19:58,593
See, because this.

1409
01:19:58,593 --> 01:20:00,662
Awesome. Yeah.

1410
01:20:00,662 --> 01:20:06,468
So this is a graph from a paper
a few years back

1411
01:20:07,502 --> 01:20:10,105
from two years, it's called I think

1412
01:20:11,640 --> 01:20:12,741
deep temporal models.

1413
01:20:12,741 --> 01:20:15,010
You should check the graphs or something.

1414
01:20:15,010 --> 01:20:17,345
And here you see a three layer system.

1415
01:20:17,345 --> 01:20:19,614
I mean, don't bother about the details.

1416
01:20:19,614 --> 01:20:23,318
Now but here you see that
the top layer just basically has one

1417
01:20:23,585 --> 01:20:25,487
bottom section, one time step.

1418
01:20:26,488 --> 01:20:28,723
And in that time step on the top layer,

1419
01:20:28,723 --> 01:20:34,496
you have two observations or two steps
at the middle layer.

1420
01:20:34,863 --> 01:20:35,730
I need

1421
01:20:37,766 --> 01:20:39,267
not sure if you can see my.

1422
01:20:39,267 --> 01:20:40,836
We see it. We said. OK.

1423
01:20:40,836 --> 01:20:44,439
And then again, for the third layer,
whenever

1424
01:20:44,439 --> 01:20:48,610
the middle of tips takes one step
we have two steps here.

1425
01:20:48,610 --> 01:20:51,313
So so there is sort of a fine grained

1426
01:20:51,646 --> 01:20:54,649
granularity of each layer, right?

1427
01:20:54,649 --> 01:20:58,086
And so we can build hierarchical

1428
01:20:58,086 --> 01:21:00,088
models really.

1429
01:21:00,088 --> 01:21:04,860
And so we're doing that
also in a view to also view you.

1430
01:21:05,727 --> 01:21:08,763
You look at some of the papers
on our website, you'll find

1431
01:21:09,364 --> 01:21:13,134
a lot of pages on the hierarchical
garrison filter from Chris Martin.

1432
01:21:13,134 --> 01:21:17,272
So if implemented, that in and also

1433
01:21:19,307 --> 01:21:22,110
I mean, you can also do attractive,
interesting things like

1434
01:21:23,111 --> 01:21:26,481
the look of like this.

1435
01:21:26,481 --> 01:21:29,150
So Thomas Power has also graphs

1436
01:21:29,184 --> 01:21:31,186
like this in some of these papers.

1437
01:21:33,755 --> 01:21:35,090
Very interesting.

1438
01:21:35,090 --> 01:21:40,061
And we see a lot of the same variables
like GDP, like we can.

1439
01:21:40,161 --> 01:21:43,932
It's kind of a different representation
of active inference so yeah,

1440
01:21:45,100 --> 01:21:48,870
this is kind of also going back
I think to the earlier Frontiers paper.

1441
01:21:49,271 --> 01:21:51,673
What are some of the big equivalencies

1442
01:21:52,073 --> 01:21:55,210
or kind of like airtight mappings

1443
01:21:55,744 --> 01:21:58,280
from an to form factor

1444
01:21:58,280 --> 01:22:02,651
graphs because there's probably
some broad areas of application

1445
01:22:03,218 --> 01:22:07,355
that could almost be hot swapped
for this underlying it perhaps.

1446
01:22:07,856 --> 01:22:12,260
So what are the equivalencies with just
Bayesian graphs in general versus

1447
01:22:12,594 --> 01:22:15,697
factor
graphs versus other topics at that level?

1448
01:22:21,236 --> 01:22:22,671
I think for style

1449
01:22:22,671 --> 01:22:25,740
facts, graphs
or a bipartite graph revision network,

1450
01:22:26,474 --> 01:22:29,311
they are really different
they can be used as

1451
01:22:29,744 --> 01:22:33,248
they're just a representation
of a sexualized model.

1452
01:22:34,115 --> 01:22:36,017
And the way you represent that

1453
01:22:37,285 --> 01:22:37,652
can have

1454
01:22:37,652 --> 01:22:40,689
an impact
about how you think about those models.

1455
01:22:41,523 --> 01:22:43,892
So for example,
if you choose a photo style photograph,

1456
01:22:43,892 --> 01:22:47,595
representation is very suited
for signal processing because you kind of

1457
01:22:47,595 --> 01:22:51,166
can see these messages, the signals
that flow over your graphs.

1458
01:22:51,633 --> 01:22:56,104
So for us as engineers,
this is a very intuitive representation

1459
01:22:57,772 --> 01:23:00,942
Invasion Networks is a bit more.

1460
01:23:01,076 --> 01:23:04,412
The mode of representation
itself is more compact in that sense

1461
01:23:04,412 --> 01:23:07,248
that you only have variable nodes
and you see how they relate.

1462
01:23:07,248 --> 01:23:10,385
So it gives you
a good idea of model structure.

1463
01:23:10,385 --> 01:23:13,321
So it can be very nice to

1464
01:23:13,321 --> 01:23:15,790
have a quick overview of model like that.

1465
01:23:15,790 --> 01:23:19,194
And then you have for example,
a bipartite graph which also shows

1466
01:23:19,194 --> 01:23:24,599
a relation between variables as an additional kind of vector nodes in between

1467
01:23:26,167 --> 01:23:26,701
and it

1468
01:23:26,768 --> 01:23:27,569
gives you a bit more

1469
01:23:27,569 --> 01:23:31,172
granularity on how these are connected
and gives you room to talk about, well,

1470
01:23:31,239 --> 01:23:33,475
what is the relationship
between these variables

1471
01:23:35,343 --> 01:23:37,612
and so in the end, they're equivalent

1472
01:23:39,681 --> 01:23:42,450
you can take one model
and represented in three different

1473
01:23:42,650 --> 01:23:45,153
ways, maybe even more

1474
01:23:46,287 --> 01:23:48,423
but I think it does impact just the way

1475
01:23:48,423 --> 01:23:51,926
how you think
or how you think about these models.

1476
01:23:51,926 --> 01:23:59,067
So then that usually comes up
in writing a paper

1477
01:24:00,368 --> 01:24:03,238
and then you have to think, Okay,
what is actually the best representation

1478
01:24:03,238 --> 01:24:04,773
for my idea?

1479
01:24:04,773 --> 01:24:07,208
Sometimes it's about budget growth,
sometimes it's vision

1480
01:24:07,242 --> 01:24:09,611
afterwards, sometimes it's
so I still think to graphs,

1481
01:24:11,279 --> 01:24:14,516
it just depends on your story.

1482
01:24:14,749 --> 01:24:16,384
And hopefully a positive question.

1483
01:24:16,384 --> 01:24:20,155
I do find though, I mean, you may
experience when we think about systems

1484
01:24:20,155 --> 01:24:23,725
and a whole set of equations,
if you read that in a paper

1485
01:24:24,325 --> 01:24:25,460
or if you write it down,

1486
01:24:26,428 --> 01:24:26,761
it gives

1487
01:24:26,761 --> 01:24:31,833
more insight, which to me it gives
more insight if I draw the graph and

1488
01:24:32,867 --> 01:24:36,871
an X must be an exact correspondence
between the

1489
01:24:38,039 --> 01:24:40,008
the graph and the equations.

1490
01:24:40,008 --> 01:24:42,210
And very often if you draw the graph

1491
01:24:42,210 --> 01:24:46,481
and then you write down the equations,
there is not an extensive correspondence.

1492
01:24:46,481 --> 01:24:48,149
So you learn from it.

1493
01:24:48,149 --> 01:24:49,884
You basically, you know,

1494
01:24:49,884 --> 01:24:53,621
there must be x x correspondence
and basically you often find out

1495
01:24:53,621 --> 01:24:56,791
you have an error in your equations
or in you graph.

1496
01:24:58,126 --> 01:24:59,861
I think

1497
01:25:00,128 --> 01:25:02,697
like the end goal and goal

1498
01:25:03,665 --> 01:25:06,768
is to make toolbox a toolbox for,

1499
01:25:07,268 --> 01:25:11,172
let's say for the community to design
their own active inference agents

1500
01:25:11,840 --> 01:25:16,277
and I envision
there is something like Simulink.

1501
01:25:16,277 --> 01:25:19,280
I'm not sure about my lab few, I'm
not sure if people are familiar

1502
01:25:19,280 --> 01:25:22,684
with that,
but these are graphical models.

1503
01:25:22,684 --> 01:25:25,954
You want to actually also define them
graphically.

1504
01:25:25,987 --> 01:25:31,392
If you want to have a palette it notes
and just draw your graph and say,

1505
01:25:31,392 --> 01:25:33,862
This is my model and now go run.

1506
01:25:34,796 --> 01:25:37,599
You don't want to worry
about the of influences.

1507
01:25:37,599 --> 01:25:41,903
I don't have the root defenses,
but it should be done by the designers.

1508
01:25:41,903 --> 01:25:42,737
Of the toolbox.

1509
01:25:42,737 --> 01:25:47,408
But you should just be thinking
about your graphical structure.

1510
01:25:47,442 --> 01:25:48,209
That's the

1511
01:25:49,544 --> 01:25:51,613
and disrupt and connect it

1512
01:25:52,981 --> 01:25:55,783
with your mouse
to your microphone of the computer

1513
01:25:55,783 --> 01:25:58,586
or to your camera and maybe to

1514
01:26:00,088 --> 01:26:00,722
you nowadays.

1515
01:26:00,722 --> 01:26:03,691
Also connectors
in the tool box for robots.

1516
01:26:04,092 --> 01:26:06,928
And then it should just go right.

1517
01:26:07,729 --> 01:26:09,764
That's what I read because of graphs.

1518
01:26:10,031 --> 01:26:11,199
So a lot of

1519
01:26:12,066 --> 01:26:14,002
that's how you want to design anything.

1520
01:26:14,002 --> 01:26:15,336
You just want to draw the brain

1521
01:26:15,336 --> 01:26:19,274
and the generative model of the brain
and just let it go.

1522
01:26:19,807 --> 01:26:22,410
And don't worry
about how inference takes place.

1523
01:26:24,579 --> 01:26:28,216
What what you just said there
about viewing the equation

1524
01:26:28,550 --> 01:26:32,587
and then maybe going from the pen
and paper to the programing language

1525
01:26:32,587 --> 01:26:36,391
to the graphical representation
and then kind of cross-checking.

1526
01:26:36,558 --> 01:26:39,827
It's like when you reverse
translate languages and when you lock in

1527
01:26:39,827 --> 01:26:43,631
where two words map back to each other,
you know, you've made a map.

1528
01:26:43,631 --> 01:26:47,402
But if you're on this infinite loop,
you're you're lost in the word space.

1529
01:26:47,402 --> 01:26:52,807
So when you move across sectors like that
or across modalities,

1530
01:26:52,807 --> 01:26:56,110
whether analytical,
the simulations on the computer

1531
01:26:56,311 --> 01:26:59,447
and then the graphical,
it kind of embeds action

1532
01:26:59,714 --> 01:27:02,784
in what otherwise
might be seen as a knowledge

1533
01:27:03,518 --> 01:27:07,021
product, a product of inference,
and then a final action.

1534
01:27:07,622 --> 01:27:09,791
And that's a similar fallacy to

1535
01:27:10,291 --> 01:27:13,595
train the dynamic process in a snapshot
and then expect that it's

1536
01:27:13,595 --> 01:27:14,929
going to work in real time.

1537
01:27:14,929 --> 01:27:19,500
So it's like embedding this real time
flow in the production of knowledge.

1538
01:27:20,134 --> 01:27:21,803
Yes. Yes. You are.

1539
01:27:21,803 --> 01:27:23,304
Important. Yeah. Yeah.

1540
01:27:24,405 --> 01:27:25,073
I mean,

1541
01:27:25,073 --> 01:27:29,010
learning act definitions
while we are trying to design this stuff.

1542
01:27:29,010 --> 01:27:31,212
That's true. Yeah, sure. Yeah.

1543
01:27:32,080 --> 01:27:35,683
11 general question
was just about factorization.

1544
01:27:36,284 --> 01:27:40,888
So the factorization, the way we go about

1545
01:27:40,888 --> 01:27:44,259
it is starting with our intuition
and looking for residuals or

1546
01:27:44,959 --> 01:27:48,796
how of all the ways to factor as a model,
do we find one

1547
01:27:48,796 --> 01:27:50,898
that works

1548
01:27:53,568 --> 01:27:53,801
yeah.

1549
01:27:53,801 --> 01:27:55,536
There's two kinds of factorization.

1550
01:27:55,536 --> 01:27:58,773
There's a factorization
in, let's say, that generative model.

1551
01:27:59,941 --> 01:28:02,610
That's the graph that we draw

1552
01:28:02,610 --> 01:28:05,747
and so I mean, let's say most people

1553
01:28:07,081 --> 01:28:10,018
or the most common models are these.

1554
01:28:10,018 --> 01:28:13,621
I mean, this is these,

1555
01:28:13,621 --> 01:28:14,822
these Markov models,

1556
01:28:14,822 --> 01:28:18,826
right, where you
you kind of retain a current state.

1557
01:28:18,826 --> 01:28:21,396
And it summarizes
everything that happens in the past

1558
01:28:22,630 --> 01:28:27,535
and you use the current state
to basically to summarize the past.

1559
01:28:27,535 --> 01:28:30,571
And then that's all the information
that so

1560
01:28:30,571 --> 01:28:33,975
you don't need to remember the passages,
remember your state.

1561
01:28:34,676 --> 01:28:36,978
And with that,
you make a new observation.

1562
01:28:36,978 --> 01:28:40,181
You combine
the information, make a new state

1563
01:28:40,748 --> 01:28:43,384
and so forth, so hidden Markov models

1564
01:28:44,752 --> 01:28:46,020
from the piece.

1565
01:28:46,020 --> 01:28:49,123
All these models
have that same structure, these pieces,

1566
01:28:49,157 --> 01:28:53,961
this microstructure so that sort of
generative model of of Islamic systems.

1567
01:28:54,662 --> 01:28:56,264
Then there is a second question.

1568
01:28:56,264 --> 01:28:59,334
If we know the inference

1569
01:28:59,400 --> 01:29:01,936
and then there's often

1570
01:29:01,936 --> 01:29:06,741
what we call the mean field assumption
for the variation of posterior.

1571
01:29:06,741 --> 01:29:11,713
But there are also variants
on that structure mean fields.

1572
01:29:12,013 --> 01:29:14,349
So you can you can

1573
01:29:14,582 --> 01:29:16,317
fill this side if you want

1574
01:29:16,317 --> 01:29:19,320
your posterior to be even more structure

1575
01:29:19,721 --> 01:29:23,858
let's say even more effects arise
and the generative model.

1576
01:29:24,659 --> 01:29:27,161
But in the end, yeah, it's a

1577
01:29:27,161 --> 01:29:29,197
it's a proposal

1578
01:29:30,198 --> 01:29:31,532
you just run it

1579
01:29:31,532 --> 01:29:34,602
and if you have another proposal,
you just run it.

1580
01:29:34,602 --> 01:29:36,971
And the one that has the lowest strategy
wins.

1581
01:29:38,172 --> 01:29:40,141
That's that's it.

1582
01:29:40,141 --> 01:29:44,412
The challenge is to automate
that process, though,

1583
01:29:44,412 --> 01:29:48,683
from the power
structure to the better structure

1584
01:29:49,984 --> 01:29:51,085
just by forgetting to

1585
01:29:51,085 --> 01:29:54,555
minimization, just by message
passing in real time without

1586
01:29:55,890 --> 01:29:59,394
stopping the whole process,
doing an analysis right.

1587
01:29:59,460 --> 01:30:01,629
You should just get boring, right?

1588
01:30:01,629 --> 01:30:03,030
It should just just

1589
01:30:03,030 --> 01:30:07,702
structure adaptation should be like state
estimation just keeps moving over time.

1590
01:30:07,702 --> 01:30:10,872
There's no resetting.

1591
01:30:10,872 --> 01:30:13,441
Maybe there's a bit of a thing like

1592
01:30:15,476 --> 01:30:17,445
the dreaming stage, right?

1593
01:30:17,445 --> 01:30:21,149
But if predictable time moves on

1594
01:30:22,583 --> 01:30:24,519
and that's the challenge
and we don't know

1595
01:30:24,519 --> 01:30:28,356
that in our effectiveness, but we we
I mean,

1596
01:30:28,856 --> 01:30:32,326
we have one student
who's currently looking into that.

1597
01:30:32,527 --> 01:30:33,027
Yeah.

1598
01:30:34,262 --> 01:30:38,866
Like as an engineer, I think the question
is, well, what do you start out with?

1599
01:30:38,866 --> 01:30:41,135
What is what
will be your initial model proposal?

1600
01:30:41,536 --> 01:30:45,873
So if you talk about factorization
of your generative model, you think so

1601
01:30:45,940 --> 01:30:47,074
every sector then

1602
01:30:47,074 --> 01:30:50,745
kind of represents a prior distribution
or conditional distribution.

1603
01:30:50,778 --> 01:30:52,413
That's
how you kind of build up your model.

1604
01:30:53,481 --> 01:30:55,216
Where do you start

1605
01:30:55,216 --> 01:30:57,285
it starts with how you believe

1606
01:30:57,618 --> 01:31:00,254
the world generates observations.

1607
01:31:01,055 --> 01:31:05,059
So in a sense, you think about
what is the causal structure

1608
01:31:05,827 --> 01:31:09,697
of environment, and you might have
some idea about how physics works

1609
01:31:11,065 --> 01:31:12,567
or how

1610
01:31:13,167 --> 01:31:16,370
states transition in in your environment,
or at least

1611
01:31:16,471 --> 01:31:18,272
how you believe this transition.

1612
01:31:18,272 --> 01:31:21,375
And that's kind of where you start
and you think, OK, well,

1613
01:31:22,343 --> 01:31:25,713
maybe let's try a very course notice -1.

1614
01:31:25,713 --> 01:31:27,081
For example, in my talk,

1615
01:31:27,081 --> 01:31:29,083
let's try that here
because I don't really know

1616
01:31:29,083 --> 01:31:31,352
what I want to put there,
but I have to put something.

1617
01:31:31,652 --> 01:31:34,889
Let's try something
and see how that works.

1618
01:31:35,122 --> 01:31:37,391
It kind of models,
how I believe the world works

1619
01:31:39,660 --> 01:31:42,763
and that's that's how you start out.

1620
01:31:42,763 --> 01:31:46,501
And then you start thinking, Well,
I actually know a bit more about it.

1621
01:31:46,634 --> 01:31:49,637
I'm not satisfied
with how this model proposed,

1622
01:31:49,837 --> 01:31:53,140
how this model works,
and I can change this.

1623
01:31:53,341 --> 01:31:57,979
Mine's one, for example,
with with something as big, more complex

1624
01:31:57,979 --> 01:32:00,781
because I know
the physics. I know how these

1625
01:32:02,049 --> 01:32:03,317
temperature degrades with

1626
01:32:03,317 --> 01:32:05,553
so a distance, for example,
and I can build that in.

1627
01:32:07,121 --> 01:32:09,190
And so that's
how you go to a second proposal.

1628
01:32:10,057 --> 01:32:12,927
And it's always inspired by

1629
01:32:12,927 --> 01:32:16,531
how you believe
because the structure of the world is

1630
01:32:17,532 --> 01:32:20,134
is yeah. Is how that works.

1631
01:32:20,134 --> 01:32:23,337
So in that sense, kind of see rebuilding,
you're building a theory

1632
01:32:23,671 --> 01:32:26,007
or an explanation of your environment

1633
01:32:27,141 --> 01:32:29,944
and or maybe if you're really,
really good,

1634
01:32:30,611 --> 01:32:33,948
if you have an excellent model,
then you can find something that

1635
01:32:34,649 --> 01:32:37,952
kind of improves upon state of the art
because you can always improve.

1636
01:32:39,720 --> 01:32:41,188
Just find something that gives you

1637
01:32:41,188 --> 01:32:44,091
a level of free energy
or better performance in a sense.

1638
01:32:45,426 --> 01:32:48,629
And you can keep tweaking and tweaking

1639
01:32:48,863 --> 01:32:53,501
these models and these transitions
and, and things like that. Then

1640
01:32:56,837 --> 01:32:57,672
yeah.

1641
01:32:58,072 --> 01:33:01,576
Free energy
minimization has been described

1642
01:33:02,009 --> 01:33:03,978
or just as a way to rank

1643
01:33:03,978 --> 01:33:07,315
the different models and as an imperative
on these multiple different fronts.

1644
01:33:07,815 --> 01:33:12,787
How do we know that free energy
minimization is making the policy

1645
01:33:13,254 --> 01:33:16,157
that is going to be like resilient?

1646
01:33:16,591 --> 01:33:20,227
Is there a way where, similar
to local optimization, getting trapped

1647
01:33:20,227 --> 01:33:24,131
somewhere in a bigger optimization space,
there might be some avenue

1648
01:33:24,131 --> 01:33:28,469
of free energy minimization
that makes the system just like break

1649
01:33:28,469 --> 01:33:30,605
down, like we'll get there faster,
let's just accelerate.

1650
01:33:30,938 --> 01:33:36,377
And then there's some kind of one time
failure of the system I'm just wondering,

1651
01:33:36,644 --> 01:33:42,183
how can one metric that's a number,
you know, and can be sorted, how can it

1652
01:33:42,183 --> 01:33:46,120
evaluate such radically
different chess strategies or

1653
01:33:46,320 --> 01:33:48,723
driving approaches.

1654
01:33:50,024 --> 01:33:51,325
So the end is just probability.

1655
01:33:51,325 --> 01:33:54,328
Theory and probability
is also just a number, right?

1656
01:33:55,563 --> 01:33:56,397
And if energy

1657
01:33:56,397 --> 01:34:00,835
kind of it approximates your evidence,
which is the probability

1658
01:34:01,035 --> 01:34:04,038
according to your model
of observing the data.

1659
01:34:04,038 --> 01:34:07,074
So if you make a model
that gives you the best evidence,

1660
01:34:08,042 --> 01:34:11,512
then it's good explanation for for your
for your data.

1661
01:34:12,513 --> 01:34:15,216
So in the end, it's just

1662
01:34:15,249 --> 01:34:17,351
you try to do approximate

1663
01:34:17,351 --> 01:34:19,520
probability theory

1664
01:34:20,788 --> 01:34:24,759
and if the energy is
then bound upon your evidence

1665
01:34:25,292 --> 01:34:28,863
and it also takes into account
and is posterior divergence term,

1666
01:34:28,863 --> 01:34:31,999
which kind of says the price that you pay

1667
01:34:31,999 --> 01:34:34,568
for approximating Bayesian inference.

1668
01:34:35,202 --> 01:34:36,537
So it has two parts to it.

1669
01:34:36,537 --> 01:34:39,273
It has the model evidence part

1670
01:34:40,408 --> 01:34:44,278
and it has the posterior divergence part
and both play a role.

1671
01:34:44,278 --> 01:34:46,180
One says, OK,

1672
01:34:47,214 --> 01:34:50,217
this is the quality of my solution.

1673
01:34:50,217 --> 01:34:51,686
It's how well

1674
01:34:53,120 --> 01:34:54,789
your model explains the data

1675
01:34:54,789 --> 01:34:57,625
that you observe you can get
and you can get a number for that.

1676
01:34:57,992 --> 01:35:01,228
The surprise
or the negative log model evidence

1677
01:35:02,263 --> 01:35:05,433
and you have the other part
of the versions divergences says, well,

1678
01:35:05,433 --> 01:35:09,770
this is the price and information that
you pay for making this approximation.

1679
01:35:10,204 --> 01:35:12,406
You can also put a number on that.

1680
01:35:12,406 --> 01:35:14,442
It's just a scale of urgency to evaluate

1681
01:35:16,410 --> 01:35:17,745
and then you add those two

1682
01:35:17,745 --> 01:35:19,480
and you get a number

1683
01:35:22,950 --> 01:35:25,453
so yeah, so
the question is how can one number

1684
01:35:25,653 --> 01:35:29,223
kind of represent

1685
01:35:29,223 --> 01:35:31,926
everything in terms of quality?

1686
01:35:31,926 --> 01:35:33,994
Well,
you might care about different things

1687
01:35:33,994 --> 01:35:39,233
then how well your model predicts
or evaluates the observations right?

1688
01:35:39,700 --> 01:35:41,936
And then if you care about other things

1689
01:35:43,504 --> 01:35:44,972
then, then

1690
01:35:45,539 --> 01:35:45,940
yeah.

1691
01:35:45,940 --> 01:35:47,942
And then you might
use different number. But

1692
01:35:48,909 --> 01:35:52,813
in our in our sense, in our, in our

1693
01:35:52,947 --> 01:35:55,416
in our work, yeah, we kind of

1694
01:35:57,485 --> 01:35:59,720
everyone's
have this Bayesian measure of quality.

1695
01:36:00,488 --> 01:36:01,722
No, I don't know

1696
01:36:01,722 --> 01:36:04,992
that really answer your question,
but it's still a good question.

1697
01:36:04,992 --> 01:36:05,593
That's

1698
01:36:06,327 --> 01:36:09,063
this kind of is, is free energy
or the number that you get?

1699
01:36:09,063 --> 01:36:10,498
Is that enough?

1700
01:36:10,498 --> 01:36:11,132
Right.

1701
01:36:11,565 --> 01:36:14,001
That's just kind of what's behind this.

1702
01:36:14,001 --> 01:36:17,171
And probability theory says yes,
but if you apply in effect

1703
01:36:17,171 --> 01:36:18,806
is that you care about
maybe other things.

1704
01:36:18,806 --> 01:36:22,309
You care about how many people survive
or how many, you know,

1705
01:36:23,611 --> 01:36:25,713
how many how many mistakes you

1706
01:36:27,314 --> 01:36:29,583
your cash from from something.

1707
01:36:29,583 --> 01:36:31,418
And if you care about that, well,
then you should

1708
01:36:31,418 --> 01:36:34,355
use that as a performance metric,
I think.

1709
01:36:34,355 --> 01:36:36,791
Right. I mean, it's

1710
01:36:36,791 --> 01:36:41,128
the differentiate, of course,
has has many decompositions, right?

1711
01:36:41,128 --> 01:36:44,999
In actual complexity minus security

1712
01:36:44,999 --> 01:36:48,002
and and surprise minus

1713
01:36:49,003 --> 01:36:52,273
minus the key, all the virtues.

1714
01:36:52,273 --> 01:36:57,211
But I'm not sure if I interpret
the question correctly,

1715
01:36:57,211 --> 01:37:02,516
but if you say like, how do you know that
it does well in practice in the field?

1716
01:37:02,983 --> 01:37:05,853
Well, you don't, right?

1717
01:37:05,853 --> 01:37:08,155
The look,

1718
01:37:08,155 --> 01:37:13,727
the only thing you can say is that,
I mean, what the system does,

1719
01:37:13,727 --> 01:37:17,798
it will look for the configuration
that minimizes free energy.

1720
01:37:18,299 --> 01:37:19,733
But you don't know what you don't know.

1721
01:37:19,733 --> 01:37:21,535
You don't know if there is another model

1722
01:37:21,535 --> 01:37:25,272
that will do better if we haven't
simulated this model that we don't know.

1723
01:37:26,073 --> 01:37:30,211
And the only learning opportunities
there are

1724
01:37:30,744 --> 01:37:32,880
is to is to generate errors.

1725
01:37:33,180 --> 01:37:36,517
So the only way to really improve

1726
01:37:36,517 --> 01:37:39,987
the model is to actually hit, indeed,

1727
01:37:40,588 --> 01:37:42,957
let's say, situations
where it's not working

1728
01:37:43,657 --> 01:37:46,227
and then you need to adapt
your parameters

1729
01:37:46,227 --> 01:37:50,097
and and even more over time,
you adapt your structure.

1730
01:37:50,097 --> 01:37:54,635
So yeah, it's I mean, building
a good system is a process,

1731
01:37:55,603 --> 01:37:56,003
right?

1732
01:37:56,003 --> 01:37:57,137
It's not

1733
01:37:57,638 --> 01:38:01,475
a matter of just
you have to be extremely lucky

1734
01:38:01,475 --> 01:38:05,346
if you just build a system
and it's completely works right

1735
01:38:07,414 --> 01:38:11,218
it's this this we or most active

1736
01:38:11,218 --> 01:38:14,388
interest
describes is a process towards better

1737
01:38:15,456 --> 01:38:16,390
systems.

1738
01:38:16,390 --> 01:38:20,060
But not it doesn't describe a system
that doesn't make

1739
01:38:20,060 --> 01:38:22,963
mistakes, in fact,
that needs the mistakes to learn.

1740
01:38:23,998 --> 01:38:27,101
And it describes the process

1741
01:38:27,101 --> 01:38:28,369
awesome points.

1742
01:38:28,369 --> 01:38:32,740
It's operational insight
that if you're getting 100% of the test

1743
01:38:33,040 --> 01:38:37,811
like something is at the very best
or less than informative,

1744
01:38:38,312 --> 01:38:41,749
at the very worst
you're you're way down the wrong path.

1745
01:38:42,149 --> 01:38:45,619
And, and then it reminds me
of like a grocery store is it

1746
01:38:45,619 --> 01:38:50,524
let were ranking the different objects
according to one measure no not really.

1747
01:38:50,524 --> 01:38:55,162
It's like balancing strategies
for finding preference

1748
01:38:55,162 --> 01:38:57,531
and that's where all of these assumptions
like the factorization

1749
01:38:57,531 --> 01:39:01,602
in the mean field and it's not guaranteed
to give you the best object every time.

1750
01:39:01,602 --> 01:39:05,105
And there's still the stochastic city
of the real world and the ability

1751
01:39:05,105 --> 01:39:08,042
of the grocery store to change
like it's not the end of the story.

1752
01:39:08,676 --> 01:39:12,046
It's actually just a practice
and a process

1753
01:39:12,046 --> 01:39:16,517
that has some of the features of reactive
graphs and biological systems.

1754
01:39:17,518 --> 01:39:18,052
That's right.

1755
01:39:18,052 --> 01:39:18,719
Yeah.

1756
01:39:20,921 --> 01:39:24,458
If any of you have any final comments,
this was just really

1757
01:39:24,458 --> 01:39:27,928
one of the coolest times
to learn about this, but

1758
01:39:28,963 --> 01:39:33,200
you're always welcome back to join
any time as a participant or to present.

1759
01:39:33,200 --> 01:39:35,936
And if you have any final comments,
you can note them.

1760
01:39:36,804 --> 01:39:40,074
Well, it was a real pleasure to be here.

1761
01:39:40,074 --> 01:39:44,311
And if we have new stuff,
we would love to come back.

1762
01:39:44,611 --> 01:39:47,948
I think it's such a fantastic show
here or show.

1763
01:39:47,948 --> 01:39:52,353
It's a forum or whatever
it's properly called,

1764
01:39:52,353 --> 01:39:55,456
but I really enjoyed it
and we really enjoyed being part of it.

1765
01:39:56,023 --> 01:39:58,225
And thanks so much for the discussion.

1766
01:39:58,359 --> 01:40:00,160
Some some folks are something as well.

1767
01:40:00,160 --> 01:40:01,662
This is really cool.

1768
01:40:01,662 --> 01:40:04,565
Especially for the opportunity
to present this.

1769
01:40:05,933 --> 01:40:07,768
Great. OK, till next.

1770
01:40:07,768 --> 01:40:09,336
Time. Yeah. Bye.

1771
01:40:09,336 --> 01:40:13,173
Bill, I buy, buy, buy, buy, buy,

1772
01:40:13,774 --> 01:40:16,143
buy, buy, buy, buy, buy, buy,

1773
01:40:16,744 --> 01:40:19,113
buy, buy, buy, buy, buy, buy.

1774
01:40:19,747 --> 01:40:21,482
But I buy.

1775
01:40:21,482 --> 01:40:23,584
Like, I bet I.
