1
00:00:04,880 --> 00:00:09,360
안녕하세요. 2023년 1월 26일입니다.

2
00:00:09,360 --> 00:00:11,820


3
00:00:11,820 --> 00:00:14,519


4
00:00:14,519 --> 00:00:17,760
오늘은 능동적 추론 모델 스트림 번호 8.1에 있습니다.

5
00:00:17,760 --> 00:00:19,080


6
00:00:19,080 --> 00:00:21,539
보상에 대해 발표할 Thomas Ringstrom이 필요하지 않습니다.

7
00:00:21,539 --> 00:00:24,080


8
00:00:24,080 --> 00:00:26,460


9
00:00:26,460 --> 00:00:29,460


10
00:00:29,460 --> 00:00:32,040
프레젠테이션에 이어 토론이 이어지니

11
00:00:32,040 --> 00:00:34,320
Thomas 가입해 주셔서 감사합니다. 정말

12
00:00:34,320 --> 00:00:37,800
기대하고 있습니다.

13
00:00:37,800 --> 00:00:39,840
네 정말 감사합니다.

14
00:00:39,840 --> 00:00:42,059
여기에 와서 이것과 이야기할 수 있어서 정말 좋습니다. uh

15
00:00:42,059 --> 00:00:43,739
이 그룹에

16
00:00:43,739 --> 00:00:47,219
um 저는 uh 컴퓨터 과학 박사 과정 학생입니다.

17
00:00:47,219 --> 00:00:50,579
미네소타 대학에서 제

18
00:00:50,579 --> 00:00:54,660
관심사는 구성이 무엇인지 알고 있는 것입니다.

19
00:00:54,660 --> 00:00:57,300


20
00:00:57,300 --> 00:00:59,940
우리가 필요로 하는 일종의 계산 속성이 무엇인지, 음

21
00:00:59,940 --> 00:01:01,680


22
00:01:01,680 --> 00:01:04,799


23
00:01:04,799 --> 00:01:08,280


24
00:01:08,280 --> 00:01:10,740
제품 공간을 알고 있는 고차원에서 유연하게 계획하는 에이전트가 무엇인지에 관한 것입니다.

25
00:01:10,740 --> 00:01:12,299
변수

26
00:01:12,299 --> 00:01:15,600
음 그리고 에이전트가

27
00:01:15,600 --> 00:01:18,659
복잡한 작업을 수행하도록 하는 방법 어

28
00:01:18,659 --> 00:01:20,880
특히

29
00:01:20,880 --> 00:01:25,200
고차원 제품 공간에서 본질적으로 동기 부여되는 방식

30
00:01:25,200 --> 00:01:30,240
음 그래서 이 어 이 프레젠테이션은 음

31
00:01:30,240 --> 00:01:33,479


32
00:01:33,479 --> 00:01:36,000
보상 어

33
00:01:36,000 --> 00:01:38,939
능동적 추론의 군중 음

34
00:01:38,939 --> 00:01:42,000
하지만 어 능동적 추론에도 같은 요점 중 일부가 적용될 수

35
00:01:42,000 --> 00:01:45,420
있지만

36
00:01:45,420 --> 00:01:48,960
이 프레젠테이션은 주로

37
00:01:48,960 --> 00:01:50,520


38
00:01:50,520 --> 00:01:52,979
보상

39
00:01:52,979 --> 00:01:56,820
최대화 목표를 사용하고

40
00:01:56,820 --> 00:01:59,220
일종의 보상으로 이동하여 몇 가지 주요 문제가 있을 것이라고 생각합니다.  무료 목적 함수를

41
00:01:59,220 --> 00:02:01,740
얻을 수 있습니다. 우리는

42
00:02:01,740 --> 00:02:04,979
계획을 세우는 데 도움이 되는 정말 멋진 음 분해를 얻을 수 있습니다.

43
00:02:04,979 --> 00:02:07,500
일종의

44
00:02:07,500 --> 00:02:10,139
간단한 그림으로 시작하겠습니다. 유기체의 단순화된 그림입니다.

45
00:02:10,139 --> 00:02:12,239


46
00:02:12,239 --> 00:02:14,580
여기에 꿀 오소리가 있습니다.

47
00:02:14,580 --> 00:02:15,300
음,

48
00:02:15,300 --> 00:02:18,720
이 꿀 오소리는

49
00:02:18,720 --> 00:02:21,900
배고파지는 내부 상태를 가지고 있습니다.

50
00:02:21,900 --> 00:02:24,540
목이 마르고 에이전트가 살고 있는 외부 세계도 있습니다.

51
00:02:24,540 --> 00:02:26,280


52
00:02:26,280 --> 00:02:28,140


53
00:02:28,140 --> 00:02:31,500


54
00:02:31,500 --> 00:02:34,080
내부 상태 공간을 수정하려면 에이전트가

55
00:02:34,080 --> 00:02:35,360


56
00:02:35,360 --> 00:02:39,060
몇 가지 복잡한 작업을 수행해야 할 수 있습니다.

57
00:02:39,060 --> 00:02:42,440
음 여러 항목을 가져와야 할 수도 있습니다.

58
00:02:42,440 --> 00:02:46,500
당신은 먹다 사과나

59
00:02:46,500 --> 00:02:48,959
그와 비슷한 것을 먹는다는 것을 알 수 있습니다. 그래서 당신은

60
00:02:48,959 --> 00:02:50,940
아마도

61
00:02:50,940 --> 00:02:53,519
음 어떤 상징적인 상태 공간이

62
00:02:53,519 --> 00:02:55,080


63
00:02:55,080 --> 00:02:57,300
세상에서 당신이 하는 일과

64
00:02:57,300 --> 00:03:00,000
당신이 어떤 내부 상태

65
00:03:00,000 --> 00:03:03,060
공간에서 만드는 변환 사이의 연결을 중재한다는 것을 볼 수 있습니다.  Real

66
00:03:03,060 --> 00:03:04,739
Worlds

67
00:03:04,739 --> 00:03:07,920
음 유기체와 인간은 고차원 세계에 살고 있으므로

68
00:03:07,920 --> 00:03:09,300


69
00:03:09,300 --> 00:03:11,940
인코더와 디코더가 있다고 상상할 수 있습니다.

70
00:03:11,940 --> 00:03:12,959


71
00:03:12,959 --> 00:03:15,120


72
00:03:15,120 --> 00:03:17,760


73
00:03:17,760 --> 00:03:19,800


74
00:03:19,800 --> 00:03:23,640


75
00:03:23,640 --> 00:03:26,220


76
00:03:26,220 --> 00:03:28,800
y 물결표에 대한 점으로 내가 말하고 Z가

77
00:03:28,800 --> 00:03:30,780
그들에게 말하면 고차원 세계를 알 수 있습니다.

78
00:03:30,780 --> 00:03:32,760


79
00:03:32,760 --> 00:03:35,099
그것이 X 물결표라고 말할 수

80
00:03:35,099 --> 00:03:37,800
있고 실제로는

81
00:03:37,800 --> 00:03:39,780
일종의 이산 상태

82
00:03:39,780 --> 00:03:44,459
공간으로 매핑해야 합니다.  어, 이 도메인들은 어 상호 작용할 수 있습니다.

83
00:03:44,459 --> 00:03:46,080


84
00:03:46,080 --> 00:03:48,599


85
00:03:48,599 --> 00:03:51,060
예, 여기 간단한 인코더

86
00:03:51,060 --> 00:03:53,280
와 디코더가 있습니다.

87
00:03:53,280 --> 00:03:56,159
만약 에이전트가

88
00:03:56,159 --> 00:03:59,459
이와 같은 간단한 온톨로지를 가지고 있다면

89
00:03:59,459 --> 00:04:01,379
그것이 일종의

90
00:04:01,379 --> 00:04:04,260
생성적으로 세계에 동조

91
00:04:04,260 --> 00:04:05,580
된다고 상상할 수 있습니다.

92
00:04:05,580 --> 00:04:07,980


93
00:04:07,980 --> 00:04:09,900
일종의 능동적 추론에 매우 친숙한 개념입니다.

94
00:04:09,900 --> 00:04:13,080
음 사람들은

95
00:04:13,080 --> 00:04:15,480


96
00:04:15,480 --> 00:04:17,459
이러한 고차원 상태의

97
00:04:17,459 --> 00:04:20,820
일부 인코더가 있고 여기 머리 중간에 있는 연산자 PS가 있다는 것을 알고 있습니다.

98
00:04:20,820 --> 00:04:23,460


99
00:04:23,460 --> 00:04:25,320
잠재 상태를 발전시킨

100
00:04:25,320 --> 00:04:27,780
다음 디코딩하면 에이전트가 살고 있는

101
00:04:27,780 --> 00:04:31,259
고차원 세계에 대한 일종의 기대치를 얻게 됩니다.

102
00:04:31,259 --> 00:04:33,120


103
00:04:33,120 --> 00:04:34,400


104
00:04:34,400 --> 00:04:37,500
따라서

105
00:04:37,500 --> 00:04:39,780
문제는

106
00:04:39,780 --> 00:04:43,560
이러한 잠재 공간 전환 연산자를 명시적으로 표현할 수 없다는 것입니다.

107
00:04:43,560 --> 00:04:46,080


108
00:04:46,080 --> 00:04:49,440
이 모든 변수의 역학을 알고 있다고 지시하면

109
00:04:49,440 --> 00:04:51,419
이를 명시적 개체로 나타낼 수 없습니다.

110
00:04:51,419 --> 00:04:53,880


111
00:04:53,880 --> 00:04:56,400
세상에서 추적하는 상태 공간이 많을수록

112
00:04:56,400 --> 00:05:00,900
이 개체 PS가 커질

113
00:05:00,900 --> 00:05:03,419
수록

114
00:05:03,419 --> 00:05:06,060
이를 처리하기 위해

115
00:05:06,060 --> 00:05:08,220
일종의 인수분해된

116
00:05:08,220 --> 00:05:11,040
형식으로 표현해야 하므로 이 전환 연산자 아래에 있는 모든 상태 벡터 전환을 명시적으로 열거하지 않고 인수만 나타낼 수 있습니다.

117
00:05:11,040 --> 00:05:13,860


118
00:05:13,860 --> 00:05:16,080


119
00:05:16,080 --> 00:05:18,360


120
00:05:18,360 --> 00:05:19,860


121
00:05:19,860 --> 00:05:21,860
그래서

122
00:05:21,860 --> 00:05:25,440
우리가 정말로 생각해야 할 것은

123
00:05:25,440 --> 00:05:27,120
무엇이  계층적 상태 공간을 분해하기 위한 일종의 모델

124
00:05:27,120 --> 00:05:28,380
기반

125
00:05:28,380 --> 00:05:31,680
또는 일종의 종소리 원리와 같이

126
00:05:31,680 --> 00:05:36,120


127
00:05:36,120 --> 00:05:38,280
음, 그래서 우리는 시시각각 변하는 시간에 따라 달라지는 일종의 유연한 방식으로 계획하는 데 도움이 되는 올바른 표현을 만들 수 있습니다.

128
00:05:38,280 --> 00:05:41,460


129
00:05:41,460 --> 00:05:44,580


130
00:05:44,580 --> 00:05:48,000


131
00:05:48,000 --> 00:05:52,199
변수 그래서 이것은

132
00:05:52,199 --> 00:05:53,940
음 당신이

133
00:05:53,940 --> 00:05:58,080
PS에 적용되는 일종의 목적 함수 L 전신 L이 무엇인지 알고 있다는 것을 의미합니다.

134
00:05:58,080 --> 00:06:01,199
또는 그것의 분해는 우리에게

135
00:06:01,199 --> 00:06:04,740
여기서 우리에게 몇 가지 요소를 제공할 것입니다.

136
00:06:04,740 --> 00:06:08,160
어 에이다와 오메가는

137
00:06:08,160 --> 00:06:09,900
우리가 계획하는 데 도움이 될 수 있고

138
00:06:09,900 --> 00:06:11,940
또한

139
00:06:11,940 --> 00:06:14,880
어떻게

140
00:06:14,880 --> 00:06:17,220
상태 공간을 알고 있다는 사실을 감안할 때

141
00:06:17,220 --> 00:06:19,259
우리가 작업하고 있는 효과적인 제품 공간이

142
00:06:19,259 --> 00:06:21,780
너무 크고 세계의 가능한 상태를 설명하는 가능한 상태 벡터가 많이 있습니다.

143
00:06:21,780 --> 00:06:24,000


144
00:06:24,000 --> 00:06:27,479


145
00:06:27,479 --> 00:06:29,759
RL 이론가라면

146
00:06:29,759 --> 00:06:31,440


147
00:06:31,440 --> 00:06:35,100


148
00:06:35,100 --> 00:06:37,440
이 세계 상태가

149
00:06:37,440 --> 00:06:38,940
이 정도 보상의 가치가 있다는 것을 알려주는 일종의 보상 기능이 존재한다고 말해야 할 것입니다.

150
00:06:38,940 --> 00:06:42,000


151
00:06:42,000 --> 00:06:45,000


152
00:06:45,000 --> 00:06:48,000
거대한 제품 공간에서 보상 기능을 정의해야 하므로

153
00:06:48,000 --> 00:06:51,600
일종의 보상이 없는 관점에서 이 질문에 답할 것입니다.

154
00:06:51,600 --> 00:06:55,919


155
00:06:55,919 --> 00:06:58,020


156
00:06:58,020 --> 00:06:59,340


157
00:06:59,340 --> 00:07:03,600
필요한 것은

158
00:07:03,600 --> 00:07:06,600
일종의 구조화된 핵심

159
00:07:06,600 --> 00:07:08,759
온톨로지를 가지고 있는 에이전트입니다. 그것은 서로

160
00:07:08,759 --> 00:07:10,979
실제로 의존하는 결합된 상태 공간을 유지해야 하며 사용하는

161
00:07:10,979 --> 00:07:12,680


162
00:07:12,680 --> 00:07:15,500
정책은

163
00:07:15,500 --> 00:07:18,180
일종의 내부 무결성

164
00:07:18,180 --> 00:07:21,840
또는 에이전트의 제어 가능성을 유지합니다.

165
00:07:21,840 --> 00:07:22,680


166
00:07:22,680 --> 00:07:24,000


167
00:07:24,000 --> 00:07:25,680
임파워먼트는

168
00:07:25,680 --> 00:07:27,539
결국 도입될 것이므로 권한 부여에 대해서도 조금 이야기하겠습니다.

169
00:07:27,539 --> 00:07:30,000
그것이

170
00:07:30,000 --> 00:07:31,919
제어 가능성 메트릭입니다.

171
00:07:31,919 --> 00:07:33,300
그래서

172
00:07:33,300 --> 00:07:34,740
음 여기서 저는 단지 좋은

173
00:07:34,740 --> 00:07:37,740
정책이 무엇인지 또는

174
00:07:37,740 --> 00:07:39,979
어떤 내재적 동기 부여

175
00:07:39,979 --> 00:07:43,380
함수를 취하는 목적 함수 f가 무엇인지 말하고 있습니다. 여기 멋진 V가 있습니다.

176
00:07:43,380 --> 00:07:47,639


177
00:07:47,639 --> 00:07:49,800
세상에서 계획을 세울 수 있게 해주는 멋진 인수 분해와 함께

178
00:07:49,800 --> 00:07:52,139
제가 이미 말한 것을 요약하자면

179
00:07:52,139 --> 00:07:53,220


180
00:07:53,220 --> 00:07:57,240
음 우리는

181
00:07:57,240 --> 00:07:59,880
내부 및

182
00:07:59,880 --> 00:08:02,400
외부 상태 공간이 있는 변수의 제품 공간에 있습니다

183
00:08:02,400 --> 00:08:03,960
음 배고픔과 수분 공급을 알고 있습니다  상태

184
00:08:03,960 --> 00:08:06,000
공간은 더 배고파지는 세상에서 일을 함에 따라 동적일 수 있습니다

185
00:08:06,000 --> 00:08:08,880


186
00:08:08,880 --> 00:08:11,580
음 그래서 우리는 계획을 어떻게 세우고 좋은 목표가 무엇인지 어떻게 알며

187
00:08:11,580 --> 00:08:13,199
제가

188
00:08:13,199 --> 00:08:14,880
주장할 것은 부동산 시간 타당성이라는 특정 표현을 계산해야 한다는 것입니다

189
00:08:14,880 --> 00:08:17,280


190
00:08:17,280 --> 00:08:19,500


191
00:08:19,500 --> 00:08:22,919
추상화가 될 함수는 어

192
00:08:22,919 --> 00:08:24,720
초기 상태 시간에서 최종 상태 시간으로 우리를 매핑할 것이고

193
00:08:24,720 --> 00:08:27,000


194
00:08:27,000 --> 00:08:28,379
이것은

195
00:08:28,379 --> 00:08:31,080
우리가

196
00:08:31,080 --> 00:08:34,080
이 고차원 어 상태 공간에서 일종의 이유를 허용하는 몇 가지 정말 좋은 속성을 가질 것입니다.

197
00:08:34,080 --> 00:08:36,240


198
00:08:36,240 --> 00:08:39,599
동적 프로그래밍의 관점에서 이것에 대해 이야기하십시오. 어 관점에서

199
00:08:39,599 --> 00:08:41,219


200
00:08:41,219 --> 00:08:43,440
어떤 학습도

201
00:08:43,440 --> 00:08:47,040
괜찮지 않을 것이므로 전이 연산자 구성에 대해 이야기하겠습니다.

202
00:08:47,040 --> 00:08:48,720


203
00:08:48,720 --> 00:08:50,760


204
00:08:50,760 --> 00:08:52,860
우리가

205
00:08:52,860 --> 00:08:55,320
그것을 인수분해로 나타내면

206
00:08:55,320 --> 00:08:57,120
그게 무슨 뜻입니까

207
00:08:57,120 --> 00:08:57,779
음,

208
00:08:57,779 --> 00:09:00,300


209
00:09:00,300 --> 00:09:01,980
전 세계를 이동할 수 있는 기본 상태 공간과 같은 PX가 있고

210
00:09:01,980 --> 00:09:04,380
내부

211
00:09:04,380 --> 00:09:06,839
상태 공간 또는 보조 상태 공간 py가

212
00:09:06,839 --> 00:09:09,720
있고 이것들이 일부에 의해 연결되어 있다고 상상해보세요.  함수 f

213
00:09:09,720 --> 00:09:13,260
여기 기본 상태 공간이 있고 어

214
00:09:13,260 --> 00:09:14,940
여기 상태 공간에 허니 오소리가 있고

215
00:09:14,940 --> 00:09:15,920


216
00:09:15,920 --> 00:09:19,580
여기

217
00:09:19,580 --> 00:09:22,260


218
00:09:22,260 --> 00:09:25,320


219
00:09:25,320 --> 00:09:27,600


220
00:09:27,600 --> 00:09:30,120
보조 상태 공간이 있습니다.  그리고

221
00:09:30,120 --> 00:09:32,160
가용성 함수는 이렇게 말할 것입니다. 오

222
00:09:32,160 --> 00:09:34,740
이것은 이 벌꿀 오소리가

223
00:09:34,740 --> 00:09:39,420
상태 x a t 및 시간 T에 있다는 것을 알고 있고 그것이 거기에 있다는 것을 감안할 때 음

224
00:09:39,420 --> 00:09:41,040


225
00:09:41,040 --> 00:09:43,200
이 목표가

226
00:09:43,200 --> 00:09:48,120
이 상태 시간 상태 행동 시간에서 사용 가능할 확률은 얼마입니까?

227
00:09:48,120 --> 00:09:51,839
그래서 이 목표는 공식적으로

228
00:09:51,839 --> 00:09:54,120
더 높은

229
00:09:54,120 --> 00:09:56,880
수준의 상태 공간에 대한 작업이 될 것이므로 예를 들어

230
00:09:56,880 --> 00:10:00,240
어 높은 수준의 상태

231
00:10:00,240 --> 00:10:03,120
공간에 있는 이 녹색 선은 더 이상 배가

232
00:10:03,120 --> 00:10:04,100


233
00:10:04,100 --> 00:10:07,019
고프지 않은 가장 만족스러운 상태를 알 수 있도록 매핑할 것입니다.

234
00:10:07,019 --> 00:10:08,940


235
00:10:08,940 --> 00:10:10,740
내부 상태 공간의 검은색 선은

236
00:10:10,740 --> 00:10:12,420
당신이

237
00:10:12,420 --> 00:10:15,240


238
00:10:15,240 --> 00:10:17,880
나무에 있지 않은 경우 하나의 상태를 알고 있으므로 나무에서 사과를 먹으면

239
00:10:17,880 --> 00:10:19,019
당신을 맨

240
00:10:19,019 --> 00:10:21,720
위 및 다른 모든 상태로 매핑할 것입니다.  나무가 없는 상태는

241
00:10:21,720 --> 00:10:24,540
시간이 지남에 따라 배가 고파질 것입니다.

242
00:10:24,540 --> 00:10:28,140
제품

243
00:10:28,140 --> 00:10:31,200
공간 연산자를 작성하려면 PDS를 알고 있습니다.

244
00:10:31,200 --> 00:10:32,940
프라임 X 프라임

245
00:10:32,940 --> 00:10:35,820
어 우리는 이것을 구성으로 표현할 수 있습니다.

246
00:10:35,820 --> 00:10:37,680
여기서 Lambda p는

247
00:10:37,680 --> 00:10:39,360
구성 연산자입니다.  그리고 그것은

248
00:10:39,360 --> 00:10:43,500


249
00:10:43,500 --> 00:10:47,760
f를 연결한 두 상태 공간의 곱으로 정의될 것입니다.

250
00:10:47,760 --> 00:10:49,440
그런 다음 G를 합산하여

251
00:10:49,440 --> 00:10:51,180
목표 변수를 제거하고

252
00:10:51,180 --> 00:10:55,019
이렇게 곱 공간을 표현할 수 있습니다.

253
00:10:55,019 --> 00:10:56,459
또한

254
00:10:56,459 --> 00:10:59,100
제품 공간을 호출할 수 있습니다. 여기서 s bold s는

255
00:10:59,100 --> 00:11:02,279
상태 벡터입니다.

256
00:11:02,279 --> 00:11:04,500
Y X를 알고 있거나

257
00:11:04,500 --> 00:11:07,740
굵은 s에 통합할 수 있는 변수가

258
00:11:07,740 --> 00:11:11,360


259
00:11:11,459 --> 00:11:14,339
더 있는 경우 좋습니다.

260
00:11:14,339 --> 00:11:17,279
물을 마시거나

261
00:11:17,279 --> 00:11:19,740
집에서 몸을 따뜻하게 할 수 있습니다 음 음

262
00:11:19,740 --> 00:11:24,180
더 큰

263
00:11:24,180 --> 00:11:27,420
구성이 필요하므로 그냥 PR이라고 부를 연산자를 만들면 됩니다.

264
00:11:27,420 --> 00:11:30,300


265
00:11:30,300 --> 00:11:34,380


266
00:11:34,380 --> 00:11:37,100


267
00:11:37,100 --> 00:11:40,680
수분 공급 어 배고픔 및

268
00:11:40,680 --> 00:11:42,120
온도 공간에 해당하므로

269
00:11:42,120 --> 00:11:44,700
이것은 개별 작업자의 곱일 뿐이므로

270
00:11:44,700 --> 00:11:48,180


271
00:11:48,180 --> 00:11:50,700
이 영향 그래프는

272
00:11:50,700 --> 00:11:54,899


273
00:11:54,899 --> 00:11:57,720
F를 통해 PX를 어 PW p y 및 TZ에 연결하므로 제품을 정의할 수 있습니다.

274
00:11:57,720 --> 00:12:00,600
공간 연산자를

275
00:12:00,600 --> 00:12:01,980
이런 식으로 구성

276
00:12:01,980 --> 00:12:04,980
하고 우리가 그렇게 하면 여러분이

277
00:12:04,980 --> 00:12:08,040
잘 깨닫기 시작한다는 것을 알고 있기 때문에 이것은 좋습니다. 왜냐하면

278
00:12:08,040 --> 00:12:10,040
여러분이 알고 있는 상태 공간의 효과는

279
00:12:10,040 --> 00:12:12,839


280
00:12:12,839 --> 00:12:16,019
여러분이 제어할 수 있는 더 많은 상태 공간을 추가함에 따라 본질적으로 지수화되기 때문입니다.

281
00:12:16,019 --> 00:12:17,399


282
00:12:17,399 --> 00:12:19,620
그래서 이것이 그래프에 영향을 미칩니다.

283
00:12:19,620 --> 00:12:22,140


284
00:12:22,140 --> 00:12:25,079
에이전트의 온톨로지의 종류가 무엇인지 알고 있음을 보여주고 있습니다. 내부 및 외부 결합

285
00:12:25,079 --> 00:12:28,500
으로서 에이전트를 구성하는 요소는 무엇이며,

286
00:12:28,500 --> 00:12:30,839


287
00:12:30,839 --> 00:12:32,700


288
00:12:32,700 --> 00:12:35,640
예를 들어 명중하면

289
00:12:35,640 --> 00:12:40,079
w0 또는 y y 0을 알게 되는 것과 같이 더 복잡해진다고 상상할 수 있습니다.  또는

290
00:12:40,079 --> 00:12:42,480
당신이 이 두개골과 이미지가 당신이

291
00:12:42,480 --> 00:12:44,820
죽었다는 것을 나타내는 것이 무엇이든 당신이

292
00:12:44,820 --> 00:12:46,800
상태에 있는 것을 상상할 수 있도록

293
00:12:46,800 --> 00:12:51,600
양방향 영향을 미치므로 여기서 Zeta는

294
00:12:51,600 --> 00:12:54,060
음, 가능한 Dynamics

295
00:12:54,060 --> 00:12:56,700
PX가 생성할 수 있는 조건을 조정하고 있으므로

296
00:12:56,700 --> 00:12:58,320
일단 당신이 '  그것은

297
00:12:58,320 --> 00:13:00,420


298
00:13:00,420 --> 00:13:02,579
당신을 죽이고 당신이 움직일 수 없는 그런 종류의 결함 있는 나쁜 상태 중 하나에 있습니다. 그래서 당신은

299
00:13:02,579 --> 00:13:04,860


300
00:13:04,860 --> 00:13:07,399


301
00:13:07,399 --> 00:13:10,079
본질적으로 당신이

302
00:13:10,079 --> 00:13:12,180
세상에 나가서 일을 해야 한다는 것을 의미하는 이와 같은 좀 더 복잡한 어 구조를 알고 있다고 상상할 수 있습니다.

303
00:13:12,180 --> 00:13:14,820
시스템을 활성 상태로 유지하기 위해

304
00:13:14,820 --> 00:13:18,180
W를 누르지 않으려면 w w naught

305
00:13:18,180 --> 00:13:20,639
또는 Z naught

306
00:13:20,639 --> 00:13:22,019
음 음, 이것이 훨씬 더 복잡해지는 것을 상상할 수 있습니다.

307
00:13:22,019 --> 00:13:25,019


308
00:13:25,019 --> 00:13:28,740
P 시그마가 논리적이 될 일종의 더 큰 구조를 구성할 수 있습니다.

309
00:13:28,740 --> 00:13:30,420


310
00:13:30,420 --> 00:13:33,079


311
00:13:33,079 --> 00:13:35,519
발생해야 하는 여러 조건부 이벤트를 알고 있는 상태 공간을 추적하는 상태 공간은

312
00:13:35,519 --> 00:13:38,399
먹은 사과 또는 이와 유사한 것을 알기 위해 발생해야 합니다.

313
00:13:38,399 --> 00:13:40,680


314
00:13:40,680 --> 00:13:41,639


315
00:13:41,639 --> 00:13:44,519
그래서 이 형식으로

316
00:13:44,519 --> 00:13:46,860
표현하는 것은 매우 좋습니다.

317
00:13:46,860 --> 00:13:49,320
상태

318
00:13:49,320 --> 00:13:52,740
공간과 그것은

319
00:13:52,740 --> 00:13:56,100
공간을 표현하는 일종의 메모리 효율적인 방법입니다.

320
00:13:56,100 --> 00:13:57,540


321
00:13:57,540 --> 00:14:02,459
그래서 우리가 항상성 작업을 가지고 있다면

322
00:14:02,459 --> 00:14:04,260
결국

323
00:14:04,260 --> 00:14:06,779
모델 기반 양식 공식에서 일종의 벨만 방정식에 도달하게 될 것입니다.

324
00:14:06,779 --> 00:14:09,360
하지만 먼저 저는 단지

325
00:14:09,360 --> 00:14:13,260


326
00:14:13,260 --> 00:14:15,839
이러한

327
00:14:15,839 --> 00:14:17,579
상태 시간 타당성 기능이 어떻게

328
00:14:17,579 --> 00:14:19,139
작동하는지에 대한 예의 형태로 일종의 직관을 구축할 것입니다. 상태 시간

329
00:14:19,139 --> 00:14:20,880
사용성 기능은

330
00:14:20,880 --> 00:14:23,579
내가 이 강연에서 주장하는 표현이 됩니다.

331
00:14:23,579 --> 00:14:25,860


332
00:14:25,860 --> 00:14:28,440
등산객

333
00:14:28,440 --> 00:14:30,779
음 그리고 세계로 나가서

334
00:14:30,779 --> 00:14:33,000
마시고 먹고 따뜻해질 수 있습니다.

335
00:14:33,000 --> 00:14:36,660
어 이러한 목표 변수와 함께 음 이

336
00:14:36,660 --> 00:14:38,220


337
00:14:38,220 --> 00:14:41,100
목표 변수 G Epsilon은 어

338
00:14:41,100 --> 00:14:46,440
1씩 감소할 것입니다.

339
00:14:46,440 --> 00:14:48,300


340
00:14:48,300 --> 00:14:54,060
등산객이 돌아다니면

341
00:14:54,060 --> 00:14:56,160


342
00:14:56,160 --> 00:14:58,199
이것을 함수로 나타낼 수 있으므로

343
00:14:58,199 --> 00:15:02,040
등산객이 집인 xg1

344
00:15:02,040 --> 00:15:03,839


345
00:15:03,839 --> 00:15:07,380
과 시작 시간인 TS에서 시작하고

346
00:15:07,380 --> 00:15:11,279
등산객이 정책 Pi 2를 따르는 경우를 상상해 보십시오. 따라서

347
00:15:11,279 --> 00:15:14,220
다음과 같은 정책이 있다고 상상해 보십시오.

348
00:15:14,220 --> 00:15:17,220
황금 조건 정책과 같은 목표 Pi G2는

349
00:15:17,220 --> 00:15:20,760
xg2로 이동하게 할 것이므로

350
00:15:20,760 --> 00:15:22,920
정책입니다.

351
00:15:22,920 --> 00:15:26,279
최단 경로 정책과 같은 정책입니다.

352
00:15:26,279 --> 00:15:28,440
음 그러면

353
00:15:28,440 --> 00:15:32,639
최종 상태 시간 xg2 TF가 있을 것이라는 의미입니다.

354
00:15:32,639 --> 00:15:35,699
이 목표를 달성하는  기억하는 g-drink는

355
00:15:35,699 --> 00:15:38,579


356
00:15:38,579 --> 00:15:41,300
상위 수준 공간에 대한 작업이므로

357
00:15:42,380 --> 00:15:45,600


358
00:15:45,600 --> 00:15:48,540


359
00:15:48,540 --> 00:15:50,639
다리에 도달하는 데 두 단계가 걸리고

360
00:15:50,639 --> 00:15:52,920
호수에 도달하면

361
00:15:52,920 --> 00:15:54,720
상태 작업을 수행하기 때문에 두 개의 권리를 줄이는 것과 같습니다.  그것은 마실 것이고

362
00:15:54,720 --> 00:15:56,279
그것은 여러분을 데려올 것입니다. 그래서

363
00:15:56,279 --> 00:15:59,160


364
00:15:59,160 --> 00:16:03,240
이 과정에는 총 3개의 단계가 있습니다. 어, 음료

365
00:16:03,240 --> 00:16:05,519
목표 변수를 유도하고 음주 후 단계는

366
00:16:05,519 --> 00:16:08,519


367
00:16:08,940 --> 00:16:10,980
다음과 같을 것입니다.

368
00:16:10,980 --> 00:16:14,160
그러면 다른 상태 공간을 잘 상상할 수 있습니다.

369
00:16:14,160 --> 00:16:17,760


370
00:16:17,760 --> 00:16:19,980


371
00:16:19,980 --> 00:16:22,199
3개의 시간 단계가 있기 때문에 모두 3을 감소시킬 것입니다.

372
00:16:22,199 --> 00:16:26,459
이를 나타내는 한 가지 방법은

373
00:16:26,459 --> 00:16:30,720
어

374
00:16:30,720 --> 00:16:33,540


375
00:16:33,540 --> 00:16:36,600


376
00:16:36,600 --> 00:16:38,880
null 목표 변수는

377
00:16:38,880 --> 00:16:40,920
에이전트가 다른 상태 공간에 영향을 미치지 않는다는 것을 의미하며

378
00:16:40,920 --> 00:16:42,000


379
00:16:42,000 --> 00:16:44,399
이를 Markov 체인으로 정의할 수 있으므로

380
00:16:44,399 --> 00:16:47,639
모든

381
00:16:47,639 --> 00:16:52,259
목표를 엡실론 목표 null

382
00:16:52,259 --> 00:16:53,339
목표로 설정하면

383
00:16:53,339 --> 00:16:58,800
이 파이 엡실론이 진행됩니다.

384
00:16:58,800 --> 00:17:02,399
음 Markov 체인 매트릭스가 되려면

385
00:17:02,399 --> 00:17:06,419


386
00:17:06,419 --> 00:17:07,559


387
00:17:07,559 --> 00:17:09,480
상태 시간 타당성 함수에 인코딩된 시간 차이 음

388
00:17:09,480 --> 00:17:13,260
TF 빼기 TS가 앞으로 진화하기 위해

389
00:17:13,260 --> 00:17:14,880
이 Markov 체인을 사용할 수 있는 힘이 될 것임을 의미합니다.

390
00:17:14,880 --> 00:17:18,900


391
00:17:18,900 --> 00:17:22,260
내부 상태 공간은

392
00:17:22,260 --> 00:17:24,359
다른 모든 내부 상태 공간이므로

393
00:17:24,359 --> 00:17:27,240


394
00:17:27,240 --> 00:17:30,900
Omega Y라는 한 단계에서 이 작업을 수행하는 연산자를 정의할 수 있습니다. 이 연산자는

395
00:17:30,900 --> 00:17:32,580
일부 초기 상태를 취하므로

396
00:17:32,580 --> 00:17:36,000
이 녹색 점 또는 이 빨간색 점

397
00:17:36,000 --> 00:17:36,179
[음악]

398
00:17:36,179 --> 00:17:37,559
음

399
00:17:37,559 --> 00:17:39,360
그리고 그것은  시차를 고려하여

400
00:17:39,360 --> 00:17:41,520


401
00:17:41,520 --> 00:17:43,440
집에서 호수까지 가려면 2가 될 것입니다. 두

402
00:17:43,440 --> 00:17:47,880
시간 단계이므로 이 회색 호는

403
00:17:47,880 --> 00:17:50,660


404
00:17:50,660 --> 00:17:54,980
이 정책에 따른 초기에서 최종 상태 지도에 불과합니다.

405
00:17:55,200 --> 00:17:57,780


406
00:17:57,780 --> 00:18:00,179


407
00:18:00,179 --> 00:18:02,039
복잡해 보이지만 예를 들어 y x t와 같은 초기 고차원 상태에서

408
00:18:02,039 --> 00:18:05,340
점프하는 점프 연산자를 만들 수 있습니다.

409
00:18:05,340 --> 00:18:08,360


410
00:18:08,360 --> 00:18:11,280


411
00:18:11,280 --> 00:18:13,320
지금은

412
00:18:13,320 --> 00:18:16,320
다른 상태 공간이 없는 이유를 고려하고 있습니다. 어 w

413
00:18:16,320 --> 00:18:21,000
와 z는 여기에 있지만 어  여기 있는 이 Ada는

414
00:18:21,000 --> 00:18:24,720
당신을 X 공간에 매핑하고 있습니다.

415
00:18:24,720 --> 00:18:29,100
Omega Y는 당신을 앞으로 매핑하고 있습니다.

416
00:18:29,100 --> 00:18:30,600


417
00:18:30,600 --> 00:18:33,780
y 공간의 uh에서 그리고 나서 py와 p

418
00:18:33,780 --> 00:18:37,620
x는

419
00:18:37,620 --> 00:18:40,500
당신이 목표를 달성한 후 업데이트하기 위해 한 단계 음 진화하고 있습니다.

420
00:18:40,500 --> 00:18:41,700
목표를 달성한 후에는

421
00:18:41,700 --> 00:18:45,480
한 단계씩 업데이트해야 하므로 어 py와 PS는

422
00:18:45,480 --> 00:18:48,059
두 상태 공간 모두에 대해 그렇게 한 다음 물론

423
00:18:48,059 --> 00:18:49,080


424
00:18:49,080 --> 00:18:51,840
모든 상태 공간에 대해 이 작업을 수행할 수 있으므로

425
00:18:51,840 --> 00:18:55,080
모든

426
00:18:55,080 --> 00:18:57,480
내부 상태 공간에 대한 점프 연산자는 R입니다.

427
00:18:57,480 --> 00:19:00,660


428
00:19:00,660 --> 00:19:05,160
모든 내부 상태 w y 및 z의 벡터를 기억한다는 것을 알고 있습니까?

429
00:19:05,160 --> 00:19:09,559
이것은 umega Omega R이 다른 모든 omega의 곱인 곳에서 유사하게 정의되므로

430
00:19:09,559 --> 00:19:11,280


431
00:19:11,280 --> 00:19:14,520


432
00:19:14,520 --> 00:19:17,520


433
00:19:17,520 --> 00:19:19,440
여기서 Omega y를 정의했지만 모든 것에 대해 이것을 정의할 수 있습니다.

434
00:19:19,440 --> 00:19:22,700
다른 상태 공간에서

435
00:19:23,340 --> 00:19:25,440


436
00:19:25,440 --> 00:19:29,340
이제 우리는

437
00:19:29,340 --> 00:19:32,039
트리로 이동하여 여행을 계속할 수 있습니다.

438
00:19:32,039 --> 00:19:34,740
두 단계 떨어져 있으므로

439
00:19:34,740 --> 00:19:36,600
다른 모든 것들은 2를 감소시킨 다음

440
00:19:36,600 --> 00:19:38,160
추가 1을 감소시킵니다. 그런

441
00:19:38,160 --> 00:19:39,799
다음 집으로 돌아가면

442
00:19:39,799 --> 00:19:43,679
4걸음 거리에

443
00:19:43,679 --> 00:19:47,039
어 주택에 들어가 따뜻해지는 추가 시간 간격을 더한 것입니다.

444
00:19:47,039 --> 00:19:48,960


445
00:19:48,960 --> 00:19:50,160


446
00:19:50,160 --> 00:19:52,500
그래서

447
00:19:52,500 --> 00:19:55,740
여기 당신이 취할 수 있는 또 다른 경로가 있습니다.

448
00:19:55,740 --> 00:19:58,679
어 에이전트는 등산객이

449
00:19:58,679 --> 00:20:02,460
나무로 가서 식사를 한 다음 등산객이

450
00:20:02,460 --> 00:20:05,600
호수로 가서 물을 마십니다.

451
00:20:05,600 --> 00:20:08,820
그런 다음 몸을 녹이기 위해 집으로 돌아갑니다.

452
00:20:08,820 --> 00:20:12,960
이것은 JS가 엄청납니다.

453
00:20:12,960 --> 00:20:15,780
JS는 거대한 연산자라는 점을 명심하는 것이 중요합니다.

454
00:20:15,780 --> 00:20:19,020


455
00:20:19,020 --> 00:20:22,320
어, 메모리에 명시적으로 형식화할 수 없습니다.

456
00:20:22,320 --> 00:20:25,380


457
00:20:25,380 --> 00:20:28,200


458
00:20:28,200 --> 00:20:30,600
하지만 이 인수분해를 사용하면

459
00:20:30,600 --> 00:20:34,320
정책을 함께 연결하고

460
00:20:34,320 --> 00:20:37,140
이러한 점프에서 고차원 상태 벡터를 진화시킬 수 있으므로

461
00:20:37,140 --> 00:20:40,380


462
00:20:40,380 --> 00:20:42,720


463
00:20:42,720 --> 00:20:46,740
각 상태 벡터가

464
00:20:46,740 --> 00:20:50,400
업데이트되는 객체 지향 방식으로 상태 벡터를 점프합니다.  사과가 있는 나무나 물이 있는 호수와 같은 주요 관심 대상에 도달하면

465
00:20:50,400 --> 00:20:52,440


466
00:20:52,440 --> 00:20:56,360


467
00:20:56,580 --> 00:21:01,559
이 예에서도

468
00:21:01,559 --> 00:21:04,260
에이전트가 호수에서 집으로 갔다는 것을 알 수 있습니다.

469
00:21:04,260 --> 00:21:07,860


470
00:21:07,860 --> 00:21:12,360
그것은 가장 낮은

471
00:21:12,360 --> 00:21:14,940
상태 Z 영점을 차지하므로 기술적으로는

472
00:21:14,940 --> 00:21:17,640
죽어야 합니다. 어 적어도

473
00:21:17,640 --> 00:21:19,679
지도에서 해골과 이미지가 표시되지만 우리는

474
00:21:19,679 --> 00:21:21,539
그의 여정을 끝내도록 하고

475
00:21:21,539 --> 00:21:23,580
이런 종류의 양방향

476
00:21:23,580 --> 00:21:25,320
결합에 대해 아직 이야기하지 않았지만 우리는

477
00:21:25,320 --> 00:21:27,600
다음 슬라이드에서 이를

478
00:21:27,600 --> 00:21:31,380
구체화하여 제대로 만들 것이므로

479
00:21:31,380 --> 00:21:33,600


480
00:21:33,600 --> 00:21:35,280


481
00:21:35,280 --> 00:21:38,039
이러한 결함 상태가 있는 경우

482
00:21:38,039 --> 00:21:41,940
모드 매개변수 e 플러스 및 E 마이너스를 정의할 수 있습니다.

483
00:21:41,940 --> 00:21:44,460


484
00:21:44,460 --> 00:21:46,020
음은

485
00:21:46,020 --> 00:21:48,299
다이내믹스를 조절하는 변수가 될 것입니다.

486
00:21:48,299 --> 00:21:51,179
임의의 벡터 r을 사용하는 모드 함수

487
00:21:51,179 --> 00:21:55,320
이므로 R은

488
00:21:55,320 --> 00:21:58,620
공간에 있는 파란색 녹색 및 빨간색 사각형의 벡터이며

489
00:21:58,620 --> 00:22:01,740
이를 모드 매개변수에 매핑할 수 있으므로

490
00:22:01,740 --> 00:22:04,679
Zeta를 정의하여 양호한 모드 정상 정상 모드에 매핑할 수 있습니다.  음

491
00:22:04,679 --> 00:22:08,400


492
00:22:08,400 --> 00:22:10,620


493
00:22:10,620 --> 00:22:12,780


494
00:22:12,780 --> 00:22:16,260
결함 상태를 점유하고 있지 않지만 하나 이상의

495
00:22:16,260 --> 00:22:17,940
음 결함 상태가

496
00:22:17,940 --> 00:22:21,659
점유되어 있다는 것을 알고 있다면

497
00:22:21,659 --> 00:22:24,480


498
00:22:24,480 --> 00:22:25,799


499
00:22:25,799 --> 00:22:28,200
이를 e 마이너스로 매핑할 수 있습니다.  즉,

500
00:22:28,200 --> 00:22:31,320
정상적인 Dynamics

501
00:22:31,320 --> 00:22:35,220
p e 플러스와 결함이 있는 Dynamics p e

502
00:22:35,220 --> 00:22:37,559
마이너스로 나눌 수 있으며

503
00:22:37,559 --> 00:22:39,480
결함이 있는 Dynamics는

504
00:22:39,480 --> 00:22:42,000
일종의 정체성 작업이라는 것을 알 수 있습니다.

505
00:22:42,000 --> 00:22:43,919


506
00:22:43,919 --> 00:22:45,299
일반적인

507
00:22:45,299 --> 00:22:48,539
Dynamics는 일반적인 그리드 세계일 뿐입니다.

508
00:22:48,539 --> 00:22:49,860
이동은

509
00:22:49,860 --> 00:22:55,320
괜찮습니다. 그래서 우리가 할 수 있는 것은 지도

510
00:22:55,320 --> 00:22:58,679


511
00:22:58,679 --> 00:23:01,440
에서 관심 있는 각 개체에 대한 일련의 개별 타당성 함수를 계산할 수 있다는 것입니다.

512
00:23:01,440 --> 00:23:04,799
이전 예에서 우리는

513
00:23:04,799 --> 00:23:08,460
두 나무 두 호수 두

514
00:23:08,460 --> 00:23:11,340
집이므로 5개의 상태 시간

515
00:23:11,340 --> 00:23:13,620
타당성 함수가

516
00:23:13,620 --> 00:23:17,640
있고 이 Ada 모자는

517
00:23:17,640 --> 00:23:21,120


518
00:23:21,120 --> 00:23:23,700
파이가

519
00:23:23,700 --> 00:23:27,299
해당 함수에 대한 해당 파이를 인덱싱하는 이 모든 어 함수의 집계 함수입니다.

520
00:23:27,299 --> 00:23:30,179
누구든지 질문을 할 수 있습니다.

521
00:23:30,179 --> 00:23:33,679
어떤 질문이든

522
00:23:35,159 --> 00:23:37,880


523
00:23:41,940 --> 00:23:44,280
좋습니다. 따라서

524
00:23:44,280 --> 00:23:48,600
전체 Dynamics는

525
00:23:48,600 --> 00:23:51,360
이전에 정의한 것처럼 정의될 것입니다.

526
00:23:51,360 --> 00:23:55,799
어 우리는 이 두 상태 공간이 있습니다.

527
00:23:55,799 --> 00:23:58,320
기본 상태 공간은

528
00:23:58,320 --> 00:24:00,419
F를 통해 내부 상태 공간에 결합되지만

529
00:24:00,419 --> 00:24:04,200
이 Zeta가 있습니다.  여기

530
00:24:04,200 --> 00:24:07,320
컨디셔닝 측면에 있는 R입니다. 그래서 이것은

531
00:24:07,320 --> 00:24:11,940
일종의 어 연산자입니다.

532
00:24:11,940 --> 00:24:13,280


533
00:24:13,280 --> 00:24:17,220
어 어

534
00:24:17,220 --> 00:24:20,100
이러한 종류의 흡수 결함 상태로부터 자신을 보호하기 위해 목표를 달성해야 합니다.

535
00:24:20,100 --> 00:24:23,760


536
00:24:23,760 --> 00:24:27,120
음

537
00:24:27,120 --> 00:24:28,620
영향 다이어그램은 이전에 있지만 이

538
00:24:28,620 --> 00:24:32,039
영향 다이어그램은 어 이 결합을 캡처하고 있습니다.

539
00:24:32,039 --> 00:24:34,940


540
00:24:35,280 --> 00:24:37,620


541
00:24:37,620 --> 00:24:38,340
음

542
00:24:38,340 --> 00:24:40,679
많은 분들이

543
00:24:40,679 --> 00:24:43,320
표준 Bellman 방정식에 익숙할 것입니다.

544
00:24:43,320 --> 00:24:44,100
음

545
00:24:44,100 --> 00:24:47,880


546
00:24:47,880 --> 00:24:50,940
어떤 보상 함수

547
00:24:50,940 --> 00:24:54,600
와 할인된 기대치가 있는 이런 식으로 공식화되어 있는지 알고 있습니다.

548
00:24:54,600 --> 00:24:57,059
미래 가치와

549
00:24:57,059 --> 00:24:58,620
일종의 표준 Bellman 방정식의 가치 함수는

550
00:24:58,620 --> 00:25:01,020
내가 여기에서 최적으로 um 무한한 지평선에 대해 행동할 경우 얼마나 많은 보상을 얻을 수 있는지를 말하므로

551
00:25:01,020 --> 00:25:02,940


552
00:25:02,940 --> 00:25:04,740


553
00:25:04,740 --> 00:25:06,740


554
00:25:06,740 --> 00:25:09,659
보상 함수는

555
00:25:09,659 --> 00:25:12,840
종종 그것이 가진 작업으로 생각되는 것입니다.

556
00:25:12,840 --> 00:25:18,299
RL 토지의 일종의 의미 체계

557
00:25:18,299 --> 00:25:19,320
음

558
00:25:19,320 --> 00:25:21,900
그리고 최적의 정책은

559
00:25:21,900 --> 00:25:24,659


560
00:25:24,659 --> 00:25:27,240


561
00:25:27,240 --> 00:25:31,380
당신의 가치를 극대화하는 최선의 행동에 해당하는 행동을 반환할 것입니다 장기적으로

562
00:25:31,380 --> 00:25:33,299
얻을 수 있는 보상의 합계

563
00:25:33,299 --> 00:25:37,320
그래서 이것은 재귀 방정식입니다

564
00:25:37,320 --> 00:25:39,840
하지만 여기에서

565
00:25:39,840 --> 00:25:44,960
제 논문은 이전 슬라이드에서 이야기한 것처럼 고차원 공간에서

566
00:25:44,960 --> 00:25:48,620


567
00:25:48,620 --> 00:25:52,620


568
00:25:52,620 --> 00:25:55,080
우리를 이동시키는 멋진 인수분해를 계산하기 위해 일종의 모델 기반 벨맨 형식화를 다시 생각해야 한다는 것입니다.

569
00:25:55,080 --> 00:25:57,600


570
00:25:57,600 --> 00:25:58,919


571
00:25:58,919 --> 00:26:00,299


572
00:26:00,299 --> 00:26:03,419
그래서 우리는

573
00:26:03,419 --> 00:26:05,340
연산자 개발 방정식이라고 하는 몇 가지 새로운 개발 방정식을 공식화할 것입니다.

574
00:26:05,340 --> 00:26:06,960


575
00:26:06,960 --> 00:26:10,140
이것은

576
00:26:10,140 --> 00:26:13,380
비정적 개발 방정식이 되거나

577
00:26:13,380 --> 00:26:15,539
시간 함수가 될 것입니다.

578
00:26:15,539 --> 00:26:18,059


579
00:26:18,059 --> 00:26:20,159


580
00:26:20,159 --> 00:26:22,860
내가 얻는 누적 보상 나는

581
00:26:22,860 --> 00:26:24,779
누적 타당성

582
00:26:24,779 --> 00:26:27,059
함수 Kappa를 갖게 될 것이고

583
00:26:27,059 --> 00:26:30,360
이것은

584
00:26:30,360 --> 00:26:32,460
내가

585
00:26:32,460 --> 00:26:34,980
특정 목표를 달성할 누적 확률이 무엇인지 나타낼 것입니다. 여기서 목표

586
00:26:34,980 --> 00:26:37,020
기억은 더 높은 수준 공간에서의 행동이므로

587
00:26:37,020 --> 00:26:39,320


588
00:26:39,320 --> 00:26:43,080
이것은 매우  방금 보여드린

589
00:26:43,080 --> 00:26:44,460
무한한 Horizon 개발 방정식과 유사한 형태

590
00:26:44,460 --> 00:26:46,919
이지만

591
00:26:46,919 --> 00:26:49,380


592
00:26:49,380 --> 00:26:52,200
여기에 특정 목표에 대한 가용성 함수가 있다는 것을 알 수 있습니다. 따라서 이것은

593
00:26:52,200 --> 00:26:54,240
우리가 선택하는 단일 목표 G이므로 예를 들어

594
00:26:54,240 --> 00:26:57,840
Eden Apple 목표 또는

595
00:26:57,840 --> 00:26:59,580
물을 마시는 목표는 우리가 하나를 선택하는

596
00:26:59,580 --> 00:27:00,539


597
00:27:00,539 --> 00:27:03,960
것이므로 f는

598
00:27:03,960 --> 00:27:07,679


599
00:27:07,679 --> 00:27:13,100
주어진 상태, 시간 및 행동에서 G의 가용성을 반환하는 것이므로

600
00:27:13,100 --> 00:27:17,940
에이전트가

601
00:27:17,940 --> 00:27:20,400
지금 이 방정식이

602
00:27:20,400 --> 00:27:24,659
말하는 목표를 달성하거나  더하기 에이전트가

603
00:27:24,659 --> 00:27:27,120
목표를 달성하지 못하므로 1 빼기

604
00:27:27,120 --> 00:27:29,220
목표 달성 확률은

605
00:27:29,220 --> 00:27:33,059


606
00:27:33,059 --> 00:27:34,740
목표를 달성하지 못할 확률과

607
00:27:34,740 --> 00:27:37,559


608
00:27:37,559 --> 00:27:40,740
미래에 목표를 달성할 것이라는 기대치를 곱한 것입니다.

609
00:27:40,740 --> 00:27:44,100


610
00:27:44,100 --> 00:27:47,400
Horizon 개발 방정식은

611
00:27:47,400 --> 00:27:53,580
괜찮습니다. 그러면 정책이 있고 이

612
00:27:53,580 --> 00:27:55,200
정책 방정식은

613
00:27:55,200 --> 00:27:58,679


614
00:27:58,679 --> 00:28:01,260


615
00:28:01,260 --> 00:28:04,260
목표를 달성한 누적을 최대화할 수 있다고 상상할 수 있기 때문에

616
00:28:04,260 --> 00:28:05,940
마지막 정책 방정식과 약간 다릅니다.

617
00:28:05,940 --> 00:28:08,520
많은 사람들이

618
00:28:08,520 --> 00:28:10,500
매장이 문을 닫기 직전에 도착할 수 있다는 확신을 극대화하여 매장이 문을

619
00:28:10,500 --> 00:28:13,559


620
00:28:13,559 --> 00:28:16,380


621
00:28:16,380 --> 00:28:18,600


622
00:28:18,600 --> 00:28:20,520


623
00:28:20,520 --> 00:28:23,279
닫기 5분 전에 알고 있는 매장에서 물건을 구매한다는 목표를 달성할 수 있다는 것을 알고 있습니다.  상점이

624
00:28:23,279 --> 00:28:27,020
일정 기간 동안 열려 있다면

625
00:28:27,020 --> 00:28:28,799


626
00:28:28,799 --> 00:28:29,640
음

627
00:28:29,640 --> 00:28:32,039
본질적으로 가능한 한 빨리 그것을 얻고 싶을 수 있습니다.

628
00:28:32,039 --> 00:28:34,020
그래서 이 방정식이

629
00:28:34,020 --> 00:28:37,039
말하는 것은 우리가

630
00:28:37,039 --> 00:28:39,779


631
00:28:39,779 --> 00:28:43,200
누적을 최대화하는 행동을 선택할 것이라는 것입니다. 하지만

632
00:28:43,200 --> 00:28:45,600
그 세트에서

633
00:28:45,600 --> 00:28:47,700
별표인 누적을 최대화하는 동등한 행동의

634
00:28:47,700 --> 00:28:49,980


635
00:28:49,980 --> 00:28:52,559
누적을 최대화하는 행동을 수집하고

636
00:28:52,559 --> 00:28:54,960
시간을 최소화하는 행동을 선택할 것이므로

637
00:28:54,960 --> 00:28:57,120
이것은 일종의 조건부 최적화입니다.

638
00:28:57,120 --> 00:28:59,820


639
00:28:59,820 --> 00:29:02,460
우리가 누적을 최대화하기를 원한다는 사실

640
00:29:02,460 --> 00:29:05,760
우리는 가능한 한 빨리 거기에 도달하기를 원합니다 음

641
00:29:05,760 --> 00:29:08,299


642
00:29:09,000 --> 00:29:12,299
그래서 일반적으로

643
00:29:12,299 --> 00:29:13,799
무한한 Horizon 개발

644
00:29:13,799 --> 00:29:15,120
방정식으로 알 수 있습니다 정책에 가치 함수가 있습니다

645
00:29:15,120 --> 00:29:18,000
여기 우리는 세 번째

646
00:29:18,000 --> 00:29:21,179
음 어 함수가 있습니다  내가 이야기한 상태 시간

647
00:29:21,179 --> 00:29:22,799
타당성 함수

648
00:29:22,799 --> 00:29:24,240


649
00:29:24,240 --> 00:29:26,520
와 상태 시간 타당성 함수는

650
00:29:26,520 --> 00:29:30,500
내가 x와 t에서 시작한다고 가정할 때

651
00:29:30,500 --> 00:29:33,840


652
00:29:33,840 --> 00:29:35,159


653
00:29:35,159 --> 00:29:39,240
특정 상태 최종 상태에서 목표 G를 달성할 확률이 얼마인지 최종 상태와

654
00:29:39,240 --> 00:29:41,399
시간 XF와 TF

655
00:29:41,399 --> 00:29:43,559
등

656
00:29:43,559 --> 00:29:46,140
음 당신은  이러한 다른 함수를 계산할 때 동적 프로그래밍을 통해 이것을 계산할 수 있습니다.

657
00:29:46,140 --> 00:29:48,059


658
00:29:48,059 --> 00:29:49,679


659
00:29:49,679 --> 00:29:51,539


660
00:29:51,539 --> 00:29:54,480
음

661
00:29:54,480 --> 00:29:55,860
누적 가능성과 상태

662
00:29:55,860 --> 00:29:59,100
시간 가능성 사이에는 관계가 있습니다. 즉,

663
00:29:59,100 --> 00:30:02,460


664
00:30:02,460 --> 00:30:05,039


665
00:30:05,039 --> 00:30:07,320
상태 시간에서 개별 척추 상태와 시간을 합산할 수 있다면  타당성 및 그것은 누적이므로

666
00:30:07,320 --> 00:30:08,820


667
00:30:08,820 --> 00:30:11,340
누적 타당성은

668
00:30:11,340 --> 00:30:13,200


669
00:30:13,200 --> 00:30:15,299
주어진 상태

670
00:30:15,299 --> 00:30:18,000
최종 상태 시간의 개별 확률에 대해 합산하는 것

671
00:30:18,000 --> 00:30:21,779
입니다. 좋은 속성은 제품과 같은 계층적 상태 공간에서

672
00:30:21,779 --> 00:30:23,640
이러한 연산자 Bellman 방정식을 사용할 때 이동할 때입니다.

673
00:30:23,640 --> 00:30:25,919


674
00:30:25,919 --> 00:30:28,679


675
00:30:28,679 --> 00:30:32,880
에이전트의 핵심 온톨로지의 공간 음

676
00:30:32,880 --> 00:30:34,799
그것은 좋은 분해 속성을 가지고 있습니다.

677
00:30:34,799 --> 00:30:38,279
즉,

678
00:30:38,279 --> 00:30:40,700
세계의 특정 지점으로 이동하기 위해 해결하는 경우

679
00:30:40,700 --> 00:30:45,659
실제로

680
00:30:45,659 --> 00:30:48,659
상위 수준 공간과 별도로 Ada를 계산할 수 있으므로 다음을

681
00:30:48,659 --> 00:30:51,059
해결합니다.  Ada의 경우

682
00:30:51,059 --> 00:30:53,220
저수준 공간에 대한 상태 시간 타당성 함수

683
00:30:53,220 --> 00:30:56,220
이지만 오메가는

684
00:30:56,220 --> 00:30:58,919
고수준 공간에서 독립적으로 계산할 수 있고

685
00:30:58,919 --> 00:31:01,860
결합할 수 있으므로 이

686
00:31:01,860 --> 00:31:03,539
분해 속성은 특히 제품 공간

687
00:31:03,539 --> 00:31:05,520
에서 작업하고 싶지 않기 때문에 정말 좋습니다.

688
00:31:05,520 --> 00:31:06,919


689
00:31:06,919 --> 00:31:10,080


690
00:31:10,080 --> 00:31:12,960
세상이 어떻게 작동하는지에 대한 수많은 역학이 필요합니다. 우리

691
00:31:12,960 --> 00:31:14,220


692
00:31:14,220 --> 00:31:16,860


693
00:31:16,860 --> 00:31:20,220
는 합리적으로 이동하는 데 도움이 되는 분해된 방식으로 표현을 계산할 수 있어야 합니다.

694
00:31:20,220 --> 00:31:21,600


695
00:31:21,600 --> 00:31:23,220


696
00:31:23,220 --> 00:31:27,000


697
00:31:27,000 --> 00:31:28,380


698
00:31:28,380 --> 00:31:31,740


699
00:31:31,740 --> 00:31:34,140
각 목표에 대한 상태 시간 타당성 함수 이

700
00:31:34,140 --> 00:31:35,580
작은 모자가 왜 여기에 있는지 모르겠지만

701
00:31:35,580 --> 00:31:37,080


702
00:31:37,080 --> 00:31:38,039
음,

703
00:31:38,039 --> 00:31:40,320
만약 우리가 이 중 5개를 알고 있고

704
00:31:40,320 --> 00:31:42,360
집계 타당성 함수가 있다면

705
00:31:42,360 --> 00:31:43,919


706
00:31:43,919 --> 00:31:46,080
이 집계 타당성 함수를 사용하여 이동할 수 있습니다.

707
00:31:46,080 --> 00:31:47,720


708
00:31:47,720 --> 00:31:51,360


709
00:31:51,360 --> 00:31:53,700
낮은

710
00:31:53,700 --> 00:31:55,860
수준의 세계에 표시하고 모든

711
00:31:55,860 --> 00:31:59,299
내부 및 높은 수준의 상태를 업데이트하는 기능입니다.

712
00:31:59,299 --> 00:32:02,520


713
00:32:02,520 --> 00:32:04,320
이것은 이전

714
00:32:04,320 --> 00:32:06,480
슬라이드의 개체로 전 세계의 지도를 만드는 것이므로

715
00:32:06,480 --> 00:32:08,580


716
00:32:08,580 --> 00:32:10,799
여러분도 할 수 있습니다. 이에 대해서는 이야기하지 않겠습니다.

717
00:32:10,799 --> 00:32:12,840
많이 하지만

718
00:32:12,840 --> 00:32:14,820


719
00:32:14,820 --> 00:32:16,380
사과를 먹는 대신

720
00:32:16,380 --> 00:32:19,919
사과를 모으는 논리적 작업을 수행할 수도 있습니다. 따라서

721
00:32:19,919 --> 00:32:21,960
사과를 얻으러 가면 사과를 갖는 것에 해당하는 비트가 있을 수 있고

722
00:32:21,960 --> 00:32:23,820


723
00:32:23,820 --> 00:32:25,740
그 비트를 뒤집습니다.  하나는

724
00:32:25,740 --> 00:32:28,080
나무에 가서 호수에 물을 모으고

725
00:32:28,080 --> 00:32:31,140
그 비트를 뒤집은 다음

726
00:32:31,140 --> 00:32:34,860
열쇠로 가서 그 열쇠를 얻으면

727
00:32:34,860 --> 00:32:37,679


728
00:32:37,679 --> 00:32:39,179
이 세 가지를 해야 하는 작업이 될 수 있습니다.

729
00:32:39,179 --> 00:32:41,460
아마도 당신이 알고 싶은 다른 것으로 이 작업을 구성하고 싶었기 때문에 이 세 가지 항목을 얻었을 것입니다.

730
00:32:41,460 --> 00:32:43,740


731
00:32:43,740 --> 00:32:45,779


732
00:32:45,779 --> 00:32:47,880
이 항목을 다른 에이전트에게 가져오거나

733
00:32:47,880 --> 00:32:50,520
무엇이든 간에 요점은 특히 당신이 알고 있는 것을 알고 있을 때

734
00:32:50,520 --> 00:32:52,559
이러한 분해를 사용하여 전 세계를 이동할 수 있다는 것입니다.

735
00:32:52,559 --> 00:32:54,600


736
00:32:54,600 --> 00:32:56,820
세계는 그것들을 사용할 수 있는 일종의 제한된 시간을 가지고 있습니다.

737
00:32:56,820 --> 00:32:58,860


738
00:32:58,860 --> 00:33:00,840


739
00:33:00,840 --> 00:33:03,480
그래서 음 그래서

740
00:33:03,480 --> 00:33:04,260


741
00:33:04,260 --> 00:33:06,779
저는

742
00:33:06,779 --> 00:33:08,580
우리가 이 인수분해를 사용하여 이러한 고차원 상태 공간에서 계획할 수 있는 방법에 대해 이야기했고

743
00:33:08,580 --> 00:33:10,919


744
00:33:10,919 --> 00:33:13,700


745
00:33:13,700 --> 00:33:16,679
이제

746
00:33:16,679 --> 00:33:19,260
음 우리는 질문에 잘 도달했습니다.

747
00:33:19,260 --> 00:33:20,640


748
00:33:20,640 --> 00:33:22,919
특정 고차원

749
00:33:22,919 --> 00:33:25,980
상태 제품 공간

750
00:33:25,980 --> 00:33:28,559


751
00:33:28,559 --> 00:33:30,659
에 기하급수적으로 많은 상태 벡터가 있다는 점을 감안할 때 본질적인 동기 부여 질문입니다.

752
00:33:30,659 --> 00:33:34,500


753
00:33:34,500 --> 00:33:36,779


754
00:33:36,779 --> 00:33:39,860


755
00:33:39,860 --> 00:33:43,080


756
00:33:43,080 --> 00:33:46,399
임파워먼트는 일종의 제어 가능성을 나타내는 본질적인 동기 부여

757
00:33:46,399 --> 00:33:50,399
메트릭이므로

758
00:33:50,399 --> 00:33:53,760
공식적으로 권한 부여는

759
00:33:53,760 --> 00:33:57,059
전환 연산자의 기능입니다.

760
00:33:57,059 --> 00:34:01,320


761
00:34:01,320 --> 00:34:04,440


762
00:34:04,440 --> 00:34:06,539
그것은 전환 연산자의

763
00:34:06,539 --> 00:34:09,300
인턴에 대한 고유한 척도입니다.  에이전트는 에 있으므로

764
00:34:09,300 --> 00:34:11,520
두 개의 인수를 취합니다.

765
00:34:11,520 --> 00:34:14,760
수평선 n도 있습니다. 이 항목에 대해서는 잠시 후에 이야기하겠습니다.

766
00:34:14,760 --> 00:34:16,139


767
00:34:16,139 --> 00:34:17,940
따라서 공식적으로 정의된

768
00:34:17,940 --> 00:34:20,040


769
00:34:20,040 --> 00:34:24,179
액추에이터 또는 사용자가 취하는 일련의 작업

770
00:34:24,179 --> 00:34:27,179
과 그 결과 상태 사이의 Shannon 채널 용량입니다.

771
00:34:27,179 --> 00:34:28,800
용량

772
00:34:28,800 --> 00:34:31,739
uh 그래서 여기서 개방 루프

773
00:34:31,739 --> 00:34:33,780
동작 시퀀스는

774
00:34:33,780 --> 00:34:37,260
오른쪽 위로 이동하고 다시 위로 이동하거나 왼쪽으로 이동한

775
00:34:37,260 --> 00:34:39,239
다음 아래로

776
00:34:39,239 --> 00:34:41,460
음 음 전체 무리가 있습니다 거기에는

777
00:34:41,460 --> 00:34:43,560
가능한 많은 동작 시퀀스가 ​​있으므로

778
00:34:43,560 --> 00:34:46,859
여기

779
00:34:46,859 --> 00:34:50,399
일련의 동작에 대한 무작위 변수와

780
00:34:50,399 --> 00:34:53,940
수평선 n에 대해 액추에이터에서 시간 Tau에서 결과 상태로 얼마나 많은

781
00:34:53,940 --> 00:34:57,540
정보를 전송할 수 있는지 물어볼 수 있습니다.

782
00:34:57,540 --> 00:35:01,320


783
00:35:01,320 --> 00:35:06,359
따라서 Tau 빼기 uh Tau 빼기 t는

784
00:35:06,359 --> 00:35:09,540
이 매개변수인 Horizon uh n입니다.

785
00:35:09,540 --> 00:35:11,940
임파워먼트에 따라서 그것은

786
00:35:11,940 --> 00:35:14,339


787
00:35:14,339 --> 00:35:18,420
어

788
00:35:18,420 --> 00:35:21,420
확실성 또는 다양한 양의

789
00:35:21,420 --> 00:35:22,560
확실성으로 미래에 영향을 미칠 수 있는 에이전트의 능력이 얼마인지 알고 있다는 것입니다.

790
00:35:22,560 --> 00:35:24,960
따라서 채널 용량은 공식적으로

791
00:35:24,960 --> 00:35:28,500
최대 상호 정보로 정의됩니다.

792
00:35:28,500 --> 00:35:31,380


793
00:35:31,380 --> 00:35:34,760


794
00:35:35,460 --> 00:35:38,880
그리고 상호 정보는

795
00:35:38,880 --> 00:35:41,240
최종 상태의 엔트로피에서

796
00:35:41,240 --> 00:35:43,980


797
00:35:43,980 --> 00:35:46,980
최종 상태 임의의 조건부 엔트로피를 뺀 값으로 분해됩니다. 주어진

798
00:35:46,980 --> 00:35:50,760
행동

799
00:35:50,760 --> 00:35:53,160
과 시작 상태를 알고 있다는 점을

800
00:35:53,160 --> 00:35:55,380


801
00:35:55,380 --> 00:35:58,560
감안할 때 임의

802
00:35:58,560 --> 00:35:59,480


803
00:35:59,480 --> 00:36:02,820
변수입니다.

804
00:36:02,820 --> 00:36:05,940
PX가 결정론적 연산자

805
00:36:05,940 --> 00:36:08,880
이고 그래서 언제든지 내가 상태 X에 있고

806
00:36:08,880 --> 00:36:11,540
행동을 적용하면

807
00:36:11,540 --> 00:36:14,400
결정론적 출력 X Prime을 얻습니다.

808
00:36:14,400 --> 00:36:16,320


809
00:36:16,320 --> 00:36:18,660
음 조건부 엔트로피

810
00:36:18,660 --> 00:36:20,960
는 미래 상태에 대한 불확실성이 없을 것이므로

811
00:36:20,960 --> 00:36:24,839
엔트로피는

812
00:36:24,839 --> 00:36:26,940
0이 되면 불확실성이 없으므로

813
00:36:26,940 --> 00:36:29,280
조건부

814
00:36:29,280 --> 00:36:33,540
엔트로피가 상쇄되어야 하고

815
00:36:33,540 --> 00:36:36,420
권한 부여는 실제로 이 분포가

816
00:36:36,420 --> 00:36:39,960
주어진 최대 가능한 엔트로피

817
00:36:39,960 --> 00:36:42,960
이며 이는 가능한 도달 가능한 상태 수

818
00:36:42,960 --> 00:36:45,599
의 로그로 줄어듭니다.

819
00:36:45,599 --> 00:36:47,820


820
00:36:47,820 --> 00:36:49,500
나는 실제로 세계에 도달합니다.

821
00:36:49,500 --> 00:36:51,839


822
00:36:51,839 --> 00:36:53,099


823
00:36:53,099 --> 00:36:55,980
그래서 내 지평선이 2이면

824
00:36:55,980 --> 00:36:57,900
여기서 권한 부여가 로그 13이라는 것을 알 수 있습니다.

825
00:36:57,900 --> 00:37:01,440


826
00:37:01,440 --> 00:37:03,240


827
00:37:03,240 --> 00:37:05,940


828
00:37:05,940 --> 00:37:09,240
내가 원하는 경우 13개 상태 중 하나

829
00:37:09,240 --> 00:37:13,380
이고 다른 극단은 PX가

830
00:37:13,380 --> 00:37:16,079
동작 독립적인 경우와 같으며 이는

831
00:37:16,079 --> 00:37:18,180
내가 있는 모든 종류의 상태가 해당 동작이 유니폼이라고 가정할

832
00:37:18,180 --> 00:37:21,839


833
00:37:21,839 --> 00:37:24,060
때 동일한 분포가 있을 수 있는 동작이 있음을 의미합니다.

834
00:37:24,060 --> 00:37:25,450
distribution

835
00:37:25,450 --> 00:37:27,240
[음악]

836
00:37:27,240 --> 00:37:31,200
음 그럼 당신은 내 조건부 uh

837
00:37:31,200 --> 00:37:35,220
my uh 그리고 주어진 행동에 대한 내 조건부 엔트로피는

838
00:37:35,220 --> 00:37:38,220
그냥 어 엔트로피가 될 거라는 걸 알죠.

839
00:37:38,220 --> 00:37:42,540
그래서 권한

840
00:37:42,540 --> 00:37:44,820


841
00:37:44,820 --> 00:37:46,920
부여는

842
00:37:46,920 --> 00:37:49,320
0이 되어야 합니다.

843
00:37:49,320 --> 00:37:51,119
나는 행동을 선택할 수 있기 때문에 기술적으로 도달할 수 있는 많은 상태에 도달할 수 있습니다.

844
00:37:51,119 --> 00:37:52,680


845
00:37:52,680 --> 00:37:54,839
임의의 장소로 이동할 것이므로 도달할 수 있는 모든 상태는 분홍색이지만

846
00:37:54,839 --> 00:37:57,599


847
00:37:57,599 --> 00:37:59,760
어떤 상태에 도달할지 제어할 수 없습니다.

848
00:37:59,760 --> 00:38:02,400
에서 끝날 것이고

849
00:38:02,400 --> 00:38:06,000


850
00:38:06,000 --> 00:38:07,560
어떤 식으로든 내 미래에 영향을 미칠 수 없습니다

851
00:38:07,560 --> 00:38:08,280
음

852
00:38:08,280 --> 00:38:10,140
가능한

853
00:38:10,140 --> 00:38:12,420
미래가 많더라도 그 극단에서의 권한 부여는

854
00:38:12,420 --> 00:38:14,940
0이고

855
00:38:14,940 --> 00:38:17,099
음 당신이 알고 있는 중간 영역을 알고 있습니다

856
00:38:17,099 --> 00:38:19,740
당신은 행동을 취하고 One Direction에는 편향이 있거나

857
00:38:19,740 --> 00:38:21,839


858
00:38:21,839 --> 00:38:24,300
각 행동에 대해 다른 분포가 있으므로

859
00:38:24,300 --> 00:38:26,280
불확실성이 있을 수 있지만

860
00:38:26,280 --> 00:38:28,980
얼마나 많은 정보를 제어할 수 있는지 제어할 수 있습니다.

861
00:38:28,980 --> 00:38:31,020


862
00:38:31,020 --> 00:38:33,680


863
00:38:33,839 --> 00:38:38,040
'정의는

864
00:38:38,040 --> 00:38:40,980
함수 원자가

865
00:38:40,980 --> 00:38:43,440
음 그리고

866
00:38:43,440 --> 00:38:45,300


867
00:38:45,300 --> 00:38:48,060
두 가지 인수가 있다는 것을 알고 있다는 점에 유의하는 것이 중요합니다. 어

868
00:38:48,060 --> 00:38:49,859
상태와 시간도 포함할 수 있고 컨디셔닝 측면도 포함할 수 있으므로

869
00:38:49,859 --> 00:38:52,260


870
00:38:52,260 --> 00:38:54,960
권한을 부여할 수 있습니다. 음,

871
00:38:54,960 --> 00:38:57,420


872
00:38:57,420 --> 00:38:59,640
음, diff를 정의할 수 있습니다.

873
00:38:59,640 --> 00:39:01,920
권한 부여 차이가 있으므로

874
00:39:01,920 --> 00:39:04,859
uh s 및 t에서 시작하여

875
00:39:04,859 --> 00:39:07,859


876
00:39:07,859 --> 00:39:10,020


877
00:39:10,020 --> 00:39:13,619


878
00:39:13,619 --> 00:39:16,140
정책 시퀀스를 실행한 후 미래 상태 및 시간에 도달한다고 가정합니다. 따라서 여기에

879
00:39:16,140 --> 00:39:19,380
추가된 행은 s t에

880
00:39:19,380 --> 00:39:22,260
정책 시퀀스이고 S 행 및 T입니다.  행은

881
00:39:22,260 --> 00:39:24,000
결과 상태이고

882
00:39:24,000 --> 00:39:26,160
권한 부여 차이를 계산할 수 있으며

883
00:39:26,160 --> 00:39:27,900


884
00:39:27,900 --> 00:39:31,920
이것은 우리의 원자가 함수가 될 것이므로

885
00:39:31,920 --> 00:39:36,960
Q는 잠시 후에 이야기할 함수이지만

886
00:39:36,960 --> 00:39:39,660


887
00:39:39,660 --> 00:39:40,619


888
00:39:40,619 --> 00:39:41,220


889
00:39:41,220 --> 00:39:43,859
이동하는 점프 연산자를 볼 수 있습니다.

890
00:39:43,859 --> 00:39:46,460
고차원 공간은

891
00:39:46,460 --> 00:39:49,800
이 분해로 정의되므로 우리는

892
00:39:49,800 --> 00:39:51,119
그것을 나타낼 필요가 없습니다.

893
00:39:51,119 --> 00:39:53,040
그것이 중요한 부분임을 기억

894
00:39:53,040 --> 00:39:55,440
하고 그래서 우리는 당신이 알고 있는 여러 정책을 샘플링할 수 있습니다.

895
00:39:55,440 --> 00:39:57,660


896
00:39:57,660 --> 00:40:00,480


897
00:40:00,480 --> 00:40:04,079
결과적으로 State R

898
00:40:04,079 --> 00:40:08,220
double Prime X double Prime TF2를 가지려면

899
00:40:08,220 --> 00:40:11,880
음, 여기서 Q는

900
00:40:11,880 --> 00:40:14,160
정책 체인의 출력을 나타낼 수 있으므로

901
00:40:14,160 --> 00:40:17,160


902
00:40:17,160 --> 00:40:18,960
정책 체인의 트리 검색을 알고 있다고 상상할 수 있으며 Q는

903
00:40:18,960 --> 00:40:21,240
해당 정책의 최종 상태를 요약하는 것입니다.  따라서

904
00:40:21,240 --> 00:40:25,200


905
00:40:25,200 --> 00:40:27,859


906
00:40:27,859 --> 00:40:29,780


907
00:40:29,780 --> 00:40:34,020
우리는 이 Q를 올바르게 사용할 수 있습니다.

908
00:40:34,020 --> 00:40:36,599
여기 있는 이 Q는 여기의 기대치에 있으므로

909
00:40:36,599 --> 00:40:39,780


910
00:40:39,780 --> 00:40:42,119
원래 상태 시간을 최종 상태

911
00:40:42,119 --> 00:40:44,339
시간에 연결하므로 일부 후 권한 부여입니다.

912
00:40:44,339 --> 00:40:47,160
일련의 정책은

913
00:40:47,160 --> 00:40:49,300
괜찮습니다.

914
00:40:49,300 --> 00:40:49,680
[음악]이 있는 경우

915
00:40:49,680 --> 00:40:51,680


916
00:40:53,220 --> 00:40:55,619
음 어 결정론적

917
00:40:55,619 --> 00:40:58,920
연산자가 있고 이것이 p여야 한다고 가정

918
00:40:58,920 --> 00:41:00,720
하면 원자가는 권한 부여 차이입니다.

919
00:41:00,720 --> 00:41:03,480


920
00:41:03,480 --> 00:41:05,700
여기에서 두 명의 등산객이

921
00:41:05,700 --> 00:41:08,339
두 가지를 고려하는 간단한 예를 들 수 있습니다.  다른 계획이

922
00:41:08,339 --> 00:41:09,900
있고 따라서

923
00:41:09,900 --> 00:41:14,640
여기 이 트리가 공간과 같다면

924
00:41:14,640 --> 00:41:17,460
두 가지 가능한 정책 체인을 알고 있는

925
00:41:17,460 --> 00:41:18,720


926
00:41:18,720 --> 00:41:21,240
경우 이 등산객은

927
00:41:21,240 --> 00:41:24,260
이 트리를 통해 한 종류의 경로를 알고 있으므로

928
00:41:24,260 --> 00:41:26,579
음

929
00:41:26,579 --> 00:41:30,900
등산객은 둘 다

930
00:41:30,900 --> 00:41:31,980
동일한 권한을 가집니다.  그들은

931
00:41:31,980 --> 00:41:35,520
같은 상태에서 시작하고

932
00:41:35,520 --> 00:41:37,980
있고 둘 다 굶주림에서 너무 멀리 떨어져 있기

933
00:41:37,980 --> 00:41:39,900
때문에

934
00:41:39,900 --> 00:41:42,780
처음에 권한 부여를 고려하면

935
00:41:42,780 --> 00:41:44,940
로그 13입니다.

936
00:41:44,940 --> 00:41:49,140
그리고 여기서 두 개의 정책을 함께 연결하면 우리는 우리

937
00:41:49,140 --> 00:41:54,119
의 um을 발전시킬 수 있습니다.

938
00:41:54,119 --> 00:41:54,900


939
00:41:54,900 --> 00:41:57,300
내부 상태 공간과 에이전트는

940
00:41:57,300 --> 00:41:59,400
호수에서 끝날 것이므로

941
00:41:59,400 --> 00:42:02,160
호수에 있는 경우

942
00:42:02,160 --> 00:42:04,560


943
00:42:04,560 --> 00:42:08,099
죽기에서 한 상태 떨어져 있음을 알 수 있으므로

944
00:42:08,099 --> 00:42:10,940


945
00:42:10,940 --> 00:42:14,820
어디로 갈 수 있는지에 대한 유효 범위에 영향을 미칩니다.

946
00:42:14,820 --> 00:42:17,460
최종 권한 부여는 로그 5입니다.

947
00:42:17,460 --> 00:42:20,040
도달 가능한 5가지 상태가 있고 우리는

948
00:42:20,040 --> 00:42:23,339
이것을 쉽게 하기 위해 결정론을 가정하고 있으므로

949
00:42:23,339 --> 00:42:27,300
여기의 원자가는

950
00:42:27,300 --> 00:42:31,200
PS여야 하지만 여기에는 없지만

951
00:42:31,200 --> 00:42:36,000
원자가는 로그 5 빼기 로그 13입니다.

952
00:42:36,000 --> 00:42:38,160
그것이 최종

953
00:42:38,160 --> 00:42:40,260
과 초기의 차이이므로 음의 원자가를 갖습니다.

954
00:42:40,260 --> 00:42:43,619
등산객

955
00:42:43,619 --> 00:42:44,760
노란색

956
00:42:44,760 --> 00:42:47,640
Spirit 등산객은 분명히

957
00:42:47,640 --> 00:42:51,000
그가 출발했을 때보다 더 나쁜 위치에

958
00:42:51,000 --> 00:42:55,859
있지만

959
00:42:55,859 --> 00:43:00,180
Pi G3를 사용하는 다른 등산객을 다음 단계로 진행할 수 있습니다.  호수와 Pi G4를

960
00:43:00,180 --> 00:43:02,160
트리에 연결

961
00:43:02,160 --> 00:43:03,780
하고

962
00:43:03,780 --> 00:43:06,780
그의 내부 상태를 업데이트하면

963
00:43:06,780 --> 00:43:10,140
그가 죽기까지 3개 남았음을 알 수 있으므로

964
00:43:10,140 --> 00:43:12,240
더 큰 유효 범위가 있으므로

965
00:43:12,240 --> 00:43:14,220


966
00:43:14,220 --> 00:43:16,619
그가

967
00:43:16,619 --> 00:43:18,100
도달할 수 있는 상태가 25개이고

968
00:43:18,100 --> 00:43:19,319
[음악]

969
00:43:19,319 --> 00:43:25,579
음 25의 로그입니다.  빼기 로그 13은 0.94입니다.

970
00:43:25,579 --> 00:43:30,780
즉, 어 그가

971
00:43:30,780 --> 00:43:33,780
시작한 곳보다 더 잘 살게 되었고

972
00:43:33,780 --> 00:43:36,540
두 번째 등산객이 더 나은 계획을 실행하고 있는 것이 분명합니다. 음

973
00:43:36,540 --> 00:43:37,859


974
00:43:37,859 --> 00:43:42,180
아직

975
00:43:42,180 --> 00:43:44,640
세상의 다른 작업에 참여할 수 있는 더 많은 자유가 있습니다.

976
00:43:44,640 --> 00:43:48,480


977
00:43:48,480 --> 00:43:52,619
정책 기회의 전체 트리에서 검색한 것을 알고 있다면 어 우리는

978
00:43:52,619 --> 00:43:54,720
가장 좋은 것을 고를 수 있습니다 어 그리고

979
00:43:54,720 --> 00:43:56,280
이 예에서 우리는

980
00:43:56,280 --> 00:43:59,280
이 어 가지 중 두 가지를 고려

981
00:43:59,280 --> 00:44:06,140
하고 정책을 선택할 것입니다 IG IG hi G3 Pi G4

982
00:44:06,780 --> 00:44:08,280


983
00:44:08,280 --> 00:44:10,920
또 다른 흥미로운 점이 있습니다.

984
00:44:10,920 --> 00:44:13,740
이 과거의 예에서 우리는 단지

985
00:44:13,740 --> 00:44:15,900


986
00:44:15,900 --> 00:44:19,020
초기 상태를 변경하고 있는 구조를 변경하는 것입니다.

987
00:44:19,020 --> 00:44:21,119
하지만 권한 부여는

988
00:44:21,119 --> 00:44:23,700
전환 연산자의 함수이고

989
00:44:23,700 --> 00:44:27,060
우리의 연산자 Bellman 방정식은 다음을

990
00:44:27,060 --> 00:44:29,819
생성합니다.

991
00:44:29,819 --> 00:44:31,920
상태 시간에서 상태 시간으로 우리를 매핑하는 전이 연산자

992
00:44:31,920 --> 00:44:34,440
그런 다음 벨만 방정식의 출력

993
00:44:34,440 --> 00:44:36,440
연산자 벨만 방정식은 전이

994
00:44:36,440 --> 00:44:39,300
연산자를 생성하여

995
00:44:39,300 --> 00:44:41,940
권한 부여를 계산할 수 있습니다.

996
00:44:41,940 --> 00:44:43,740
이것이

997
00:44:43,740 --> 00:44:47,040
개발 방정식과 이러한

998
00:44:47,040 --> 00:44:49,380
본질적인 동기 메트릭 사이의 깊은 연결이므로

999
00:44:49,380 --> 00:44:52,319
우리는 할 수 있습니다.  세계

1000
00:44:52,319 --> 00:44:54,720
의 구조가 다르다면 우리가 잘 말할 수 있는 흥미로운 것

1001
00:44:54,720 --> 00:44:57,420


1002
00:44:57,420 --> 00:44:59,040


1003
00:44:59,040 --> 00:45:01,500


1004
00:45:01,500 --> 00:45:05,520
세계의 다른 구성에서 계산할 수 있는 실현 가능성 함수는 다를 것입니다.

1005
00:45:05,520 --> 00:45:06,660


1006
00:45:06,660 --> 00:45:09,180
만약 꿀 오소리가 열쇠를 얻어

1007
00:45:09,180 --> 00:45:12,180
산길에서 문을 연다면

1008
00:45:12,180 --> 00:45:16,200
그런 다음 잠재적으로

1009
00:45:16,200 --> 00:45:17,760
다른 쪽을 통과할 수 있지만

1010
00:45:17,760 --> 00:45:20,819


1011
00:45:20,819 --> 00:45:23,880
이것이 하위 수준

1012
00:45:23,880 --> 00:45:28,680
상태 공간의 구조를 변경하고 있으므로 우리가

1013
00:45:28,680 --> 00:45:30,960


1014
00:45:30,960 --> 00:45:32,640
할 수 없는 원래 전환 연산자라고 부르는 것이 중요합니다.  산길을 통과하면

1015
00:45:32,640 --> 00:45:34,140


1016
00:45:34,140 --> 00:45:36,780


1017
00:45:36,780 --> 00:45:39,839
이 연산자에서 상태 시간 타당성 함수 키트를 계산하면

1018
00:45:39,839 --> 00:45:44,160
여기서 PPE가

1019
00:45:44,160 --> 00:45:47,160
개발 방정식에 들어간다는 것을 의미하고

1020
00:45:47,160 --> 00:45:49,200


1021
00:45:49,200 --> 00:45:51,000


1022
00:45:51,000 --> 00:45:52,980
해당 연산자 Bellman 방정식에서 상태 시간 타당성 함수를 생성할 것입니다.

1023
00:45:52,980 --> 00:45:56,400
어 개체는 여기서

1024
00:45:56,400 --> 00:45:58,560
J를 구성하여 고차원 공간에서 우리를 이동할 수 있다는 것을 의미하므로

1025
00:45:58,560 --> 00:46:00,780


1026
00:46:00,780 --> 00:46:04,140
이 J에 대한 권한이 있지만

1027
00:46:04,140 --> 00:46:05,400


1028
00:46:05,400 --> 00:46:08,040
키를 얻고 키가

1029
00:46:08,040 --> 00:46:10,200
우리가 문을 통해 이동할 수 있게 하면

1030
00:46:10,200 --> 00:46:14,160
구조가 변경됩니다.

1031
00:46:14,160 --> 00:46:15,839
그것은

1032
00:46:15,839 --> 00:46:18,540
다른 Dynamics 모드이므로

1033
00:46:18,540 --> 00:46:20,760


1034
00:46:20,760 --> 00:46:22,680


1035
00:46:22,680 --> 00:46:24,240
우리가 계산할 수 있는 다른 쪽의 모든 공급품은

1036
00:46:24,240 --> 00:46:26,819


1037
00:46:26,819 --> 00:46:29,460
우리가 산길로 이동할 수 있는 다른 Dynamics 모드에서 타당성 기능을 알고 있음을 의미합니다.

1038
00:46:29,460 --> 00:46:31,800
그리고 그것은 우리가

1039
00:46:31,800 --> 00:46:34,020
당신이 알고 있는 것을

1040
00:46:34,020 --> 00:46:37,800
컴퓨팅 원자가로 계산할 수 있다는 것을 의미합니다. 당신이 알고 있는 것이

1041
00:46:37,800 --> 00:46:40,980


1042
00:46:40,980 --> 00:46:43,859


1043
00:46:43,859 --> 00:46:46,500
에이전트의 핵심 온톨로지에 더 도움이 되는 세계의 구성 구성인지,

1044
00:46:46,500 --> 00:46:49,619


1045
00:46:49,619 --> 00:46:51,720


1046
00:46:51,720 --> 00:46:53,890
즉 에이전트의 내부 외부 결합으로 유지되어야 하는지를 묻습니다.  일종의 핵심 개체

1047
00:46:53,890 --> 00:46:55,040
[음악]

1048
00:46:55,040 --> 00:46:58,380
그래서 우리는 단지

1049
00:46:58,380 --> 00:47:01,800
J를 변경함으로써 원자가를 계산할 수 있습니다. 에이전트의 추상화 구조를 변경하여

1050
00:47:01,800 --> 00:47:05,640


1051
00:47:05,640 --> 00:47:08,220
세계에서

1052
00:47:08,220 --> 00:47:10,560


1053
00:47:10,560 --> 00:47:12,599
작업을 수행하기 위해 이동하는 것입니다.  우리가 가지고 있지 않은 공간 우리는

1054
00:47:12,599 --> 00:47:16,079


1055
00:47:16,079 --> 00:47:17,760
제품 공간의 가능한 모든 상태를 고려할 필요가 없습니다 우리는

1056
00:47:17,760 --> 00:47:20,400


1057
00:47:20,400 --> 00:47:22,740


1058
00:47:22,740 --> 00:47:25,859
역학을 유도하는 작업 공간 주위로 우리를 이동시키는 연산자로 범위를 좁힐 수 있습니다. 유지 관리에

1059
00:47:25,859 --> 00:47:27,540
관심이 있는 다른 주요 상태 공간을 알고 있습니다.

1060
00:47:27,540 --> 00:47:28,920
우리의

1061
00:47:28,920 --> 00:47:32,880
생리학적 상태 공간과 같은 것이

1062
00:47:33,300 --> 00:47:36,900
좋습니다. 여기에 간단한 예가 있습니다.

1063
00:47:36,900 --> 00:47:40,380
꿀 오소리는 호수에서 시작하여

1064
00:47:40,380 --> 00:47:44,099


1065
00:47:44,099 --> 00:47:44,760


1066
00:47:44,760 --> 00:47:47,520
낮은 수준의 운영자에게 약간의 초기 음 권한을 부여합니다.

1067
00:47:47,520 --> 00:47:49,920


1068
00:47:49,920 --> 00:47:51,960


1069
00:47:51,960 --> 00:47:54,180


1070
00:47:54,180 --> 00:47:56,640
하지만

1071
00:47:56,640 --> 00:47:59,400
작업 권한 부여도 있습니다

1072
00:47:59,400 --> 00:48:01,500
음 실제로는 0입니다 왜냐하면

1073
00:48:01,500 --> 00:48:04,020


1074
00:48:04,020 --> 00:48:07,380


1075
00:48:07,380 --> 00:48:11,520
키를 작업으로 가져오는 것을 포함하지 않는 경우 참여할 수 있는 작업이 하나뿐이기 때문입니다 그래서

1076
00:48:11,520 --> 00:48:13,440
음 여기 원은

1077
00:48:13,440 --> 00:48:15,720
하나의 종류만 있다고 말하고 있습니다

1078
00:48:15,720 --> 00:48:17,099
수행할 수 있는 작업의 수

1079
00:48:17,099 --> 00:48:19,619
이므로 에이전트가 가서 키를 가져오면

1080
00:48:19,619 --> 00:48:20,819


1081
00:48:20,819 --> 00:48:24,000
어

1082
00:48:24,000 --> 00:48:25,319


1083
00:48:25,319 --> 00:48:27,420
그것은 그곳으로 이동해야 했기 때문에 생리적

1084
00:48:27,420 --> 00:48:30,060


1085
00:48:30,060 --> 00:48:31,859
상태를 줄일 것입니다.  Dynamics

1086
00:48:31,859 --> 00:48:33,240
그래서

1087
00:48:33,240 --> 00:48:36,119
해당 모드와 관련된 다른 타당성 기능이 있습니다 어 방금

1088
00:48:36,119 --> 00:48:37,800
마지막 슬라이드에서 설명한 것입니다

1089
00:48:37,800 --> 00:48:39,359


1090
00:48:39,359 --> 00:48:41,160
그러면

1091
00:48:41,160 --> 00:48:44,220
어 문이 열리고

1092
00:48:44,220 --> 00:48:45,839
호수로 다시 이동할 수 있으므로

1093
00:48:45,839 --> 00:48:48,660
이제 호수에 있으므로

1094
00:48:48,660 --> 00:48:52,200
어 갈 수 있습니다 어 먹을 수 있습니다  건너편에 음식이 있으니

1095
00:48:52,200 --> 00:48:56,220
열쇠를 받기 전에 어

1096
00:48:56,220 --> 00:48:57,660
열쇠를 얻지 못하면

1097
00:48:57,660 --> 00:49:00,119
열쇠가 없으면 그냥 굶어 죽습니다

1098
00:49:00,119 --> 00:49:01,560
음 음 물을 마시고 수분을 유지할 수 있기 때문에

1099
00:49:01,560 --> 00:49:03,540
얻을 수 없습니다 먹을 수 없습니다

1100
00:49:03,540 --> 00:49:06,119
사과나무에서 왔지만 이제는 원하는 만큼

1101
00:49:06,119 --> 00:49:07,859
사과

1102
00:49:07,859 --> 00:49:12,119
나무와 호수 사이를 오가며 순환할 수 있으므로

1103
00:49:12,119 --> 00:49:16,260


1104
00:49:16,260 --> 00:49:19,079
낮은 수준의 상태

1105
00:49:19,079 --> 00:49:21,540
공간에서 더 높은 권한 부여를 가지지만  작업

1106
00:49:21,540 --> 00:49:24,240
권한 부여는

1107
00:49:24,240 --> 00:49:26,819
3개의 수평선 너머에 있고 우리는

1108
00:49:26,819 --> 00:49:28,920
단지 Computing 어, 수평선을 선택해야 하기

1109
00:49:28,920 --> 00:49:32,040


1110
00:49:32,040 --> 00:49:34,380
때문에 작업 공간의 권한 부여는 8입니다.

1111
00:49:34,380 --> 00:49:37,619


1112
00:49:37,619 --> 00:49:39,480


1113
00:49:39,480 --> 00:49:45,000
그것은 매우

1114
00:49:45,000 --> 00:49:46,319
유용합니다.

1115
00:49:46,319 --> 00:49:49,440
그래서 우리는

1116
00:49:49,440 --> 00:49:54,540
저수준 공간에서 0.5인 원자가를 계산할 수

1117
00:49:54,540 --> 00:49:57,000
있지만 작업 공간에서도 3이고

1118
00:49:57,000 --> 00:49:58,260


1119
00:49:58,260 --> 00:50:00,780


1120
00:50:00,780 --> 00:50:01,680


1121
00:50:01,680 --> 00:50:03,720
음 매우 중요한 또 다른 흥미로운 질문은 키의 값이 무엇인지 잘 말하는 것입니다.

1122
00:50:03,720 --> 00:50:06,420


1123
00:50:06,420 --> 00:50:09,540
이것 역시 계산할 수 있습니다.

1124
00:50:09,540 --> 00:50:11,760
내가 있는 상태 벡터를 수정하고

1125
00:50:11,760 --> 00:50:17,760


1126
00:50:17,760 --> 00:50:21,180
해당

1127
00:50:21,180 --> 00:50:22,740
상태를 변경하고 키와 키 간에 전환하면 키의 개체를 인코딩하는 상태 Phi를 변경하면 잘 주어진 것이라고 말할 수 있습니다.

1128
00:50:22,740 --> 00:50:25,319
잘 말할 수 있는 이벤트 키 이

1129
00:50:25,319 --> 00:50:28,079
키는 내부 조직에 이 정도의 가치가 있습니다.

1130
00:50:28,079 --> 00:50:30,420


1131
00:50:30,420 --> 00:50:33,420


1132
00:50:33,420 --> 00:50:37,020
에이전트의 내부 무결성 또는 제어 가능성이므로 일종의 에이전트 중심입니다.

1133
00:50:37,020 --> 00:50:40,920


1134
00:50:40,920 --> 00:50:43,560
키는 에이전트가 핵심 온톨로지를 제어하는 ​​데 도움이 되는 작업을 세상에서

1135
00:50:43,560 --> 00:50:46,079
수행하지 않으면 가치가 없을 수 있습니다.

1136
00:50:46,079 --> 00:50:48,480


1137
00:50:48,480 --> 00:50:51,720


1138
00:50:51,720 --> 00:50:54,359
따라서 이것은 부트스트랩 어 가치를 세상으로 정렬할 수 있는 방법입니다.

1139
00:50:54,359 --> 00:50:58,680


1140
00:50:58,680 --> 00:51:01,920
사용할 수 있습니다. 변경 사항을 사용할 수 있습니다.

1141
00:51:01,920 --> 00:51:05,700
에이전트의 내부 구조는

1142
00:51:05,700 --> 00:51:08,700
내부 상태 공간과

1143
00:51:08,700 --> 00:51:10,859
외부 세계 사이의 결합입니다.

1144
00:51:10,859 --> 00:51:12,780
해당 구조의 변경 사항을 사용하여

1145
00:51:12,780 --> 00:51:16,700
사물에 값을 할당할 수 있으며 매우 유용합니다.

1146
00:51:16,700 --> 00:51:19,980
한

1147
00:51:19,980 --> 00:51:24,240
시간이 다가오고 있으므로 다음과 같이 결론을 내리겠습니다.

1148
00:51:24,240 --> 00:51:26,520
음 지능형 시스템은

1149
00:51:26,520 --> 00:51:28,559


1150
00:51:28,559 --> 00:51:30,839
비정적 역학을 사용하여 고차원 제품 공간에서 작동하는 경우가 많습니다.

1151
00:51:30,839 --> 00:51:34,619
이는 특히 인공 지능에서 많은 문제를 야기합니다.

1152
00:51:34,619 --> 00:51:36,960


1153
00:51:36,960 --> 00:51:39,619


1154
00:51:39,619 --> 00:51:42,480


1155
00:51:42,480 --> 00:51:44,520


1156
00:51:44,520 --> 00:51:46,380


1157
00:51:46,380 --> 00:51:48,480
샘플 복잡성에 많은 기여를 하는 것과

1158
00:51:48,480 --> 00:51:50,760
내가 말하는 것은

1159
00:51:50,760 --> 00:51:53,220
벨만 연산자 방정식이

1160
00:51:53,220 --> 00:51:54,720


1161
00:51:54,720 --> 00:51:56,640


1162
00:51:56,640 --> 00:51:58,980


1163
00:51:58,980 --> 00:52:00,540


1164
00:52:00,540 --> 00:52:02,220
전 세계를 이동하고

1165
00:52:02,220 --> 00:52:06,559
결과로 나타나는 고차원 상태 인자를 예측하기 위한 표현을 분해하는 데 도움이 되는 전환 연산자를 생성하는 이 다른 형식을 가지고 있다는 것을 알고 있다는 것입니다.

1166
00:52:06,559 --> 00:52:10,079
이러한 연산자는 스스로 구성할 수

1167
00:52:10,079 --> 00:52:11,579
있지만

1168
00:52:11,579 --> 00:52:13,800
더 높은 수준의 구조로도 구성할 수 있으므로

1169
00:52:13,800 --> 00:52:15,839
다른 전환 구조를 다시 매핑할 수 있습니다.

1170
00:52:15,839 --> 00:52:18,660
매우 모듈식이며

1171
00:52:18,660 --> 00:52:20,579
이것들은 당신이 필요로 하는 아주 좋은 속성입니다.

1172
00:52:20,579 --> 00:52:21,839


1173
00:52:21,839 --> 00:52:24,780


1174
00:52:24,780 --> 00:52:26,640
사물을 재계산하고 싶고

1175
00:52:26,640 --> 00:52:28,440
일종의 모듈식 구조가 들어와서

1176
00:52:28,440 --> 00:52:31,559


1177
00:52:31,559 --> 00:52:33,540
이미 계산한 표현에 다시 매핑한 다음

1178
00:52:33,540 --> 00:52:35,880


1179
00:52:35,880 --> 00:52:38,099
포워드 샘플링을 원합니다. 제 목소리가

1180
00:52:38,099 --> 00:52:41,660
여전히 들리나요 Daniel 알겠습니다.

1181
00:52:42,200 --> 00:52:45,420
확인만 하면 포워드 샘플링이 문제를

1182
00:52:45,420 --> 00:52:47,160
해결하는 좋은 방법입니다.  제품 공간을 나타내지

1183
00:52:47,160 --> 00:52:48,599
않는 고차원 상태 공간의 문제

1184
00:52:48,599 --> 00:52:50,579
우리는

1185
00:52:50,579 --> 00:52:53,579
실제로 해결할 수 없습니다. 작동하지 않을

1186
00:52:53,579 --> 00:52:55,980
거대한 제품 공간에서 동적 프로그래밍을 수행할 수 없습니다. 작동하지

1187
00:52:55,980 --> 00:52:58,260


1188
00:52:58,260 --> 00:53:00,480
않을 낮은 수준의 동작을 샘플링할 수 없습니다.

1189
00:53:00,480 --> 00:53:04,440
트리가 너무 크지만 우리는

1190
00:53:04,440 --> 00:53:08,040


1191
00:53:08,040 --> 00:53:10,440
정책의 시퀀스 수준에서 작업할 수

1192
00:53:10,440 --> 00:53:13,680
있고 권한 부여 이득을 평가하여

1193
00:53:13,680 --> 00:53:16,680
목표 상태를 정당화할 수 있으므로

1194
00:53:16,680 --> 00:53:21,660
원자가는

1195
00:53:21,660 --> 00:53:24,359
다른 종류의 하위 필드가 있는 것처럼 많은 고유한 드라이브를 통합합니다.

1196
00:53:24,359 --> 00:53:26,160
RL은

1197
00:53:26,160 --> 00:53:27,599
다중 목표

1198
00:53:27,599 --> 00:53:30,960
강화 학습이라고 합니다. 오,

1199
00:53:30,960 --> 00:53:32,700
우리는 다양한

1200
00:53:32,700 --> 00:53:34,859
보상 기능을 갖게 될 것이고 그런 다음 서로 다른 작업에 대한

1201
00:53:34,859 --> 00:53:36,960
이러한 각 보상 기능에 대한 가치 기능을 갖게 될 것이며

1202
00:53:36,960 --> 00:53:39,240


1203
00:53:39,240 --> 00:53:40,619
이는 고차원처럼 만들 것입니다.

1204
00:53:40,619 --> 00:53:44,640
가치 함수 벡터 공간

1205
00:53:44,640 --> 00:53:47,160
음 그리고 일반적으로

1206
00:53:47,160 --> 00:53:49,260
다중 목표 RL과 같은 경우 정책을 선택해야 합니다. 그 정책이

1207
00:53:49,260 --> 00:53:52,859


1208
00:53:52,859 --> 00:53:55,380
잘 작동한다는 것을 알고 있습니다.

1209
00:53:55,380 --> 00:53:58,020


1210
00:53:58,020 --> 00:54:01,980
음, 가치 함수 공간을 알고 있지만 일반적으로

1211
00:54:01,980 --> 00:54:03,900
처리해야 합니다.  일부 대기 기능에 의한 트레이드 오프

1212
00:54:03,900 --> 00:54:07,200
이므로 여기서 제가 말하는 것은

1213
00:54:07,200 --> 00:54:10,079
원자가가

1214
00:54:10,079 --> 00:54:13,380
하나의 숫자일 뿐이고 대기 기능이나 가중치와 같은 것을 도입할 필요가 없는 전체

1215
00:54:13,380 --> 00:54:15,859
종류의 제어 아키텍처를 요약하기 때문에 이것이 가능하다는 것입니다.

1216
00:54:15,859 --> 00:54:18,540


1217
00:54:18,540 --> 00:54:21,599


1218
00:54:21,599 --> 00:54:24,720
계수는 오

1219
00:54:24,720 --> 00:54:27,059
지금 이 목표가 더 중요하다 또는

1220
00:54:27,059 --> 00:54:30,480
지금 이 목표가 더 중요합니다

1221
00:54:30,480 --> 00:54:32,599
음

1222
00:54:32,599 --> 00:54:36,180
그래서 많은 잠재된 추진력이 반드시

1223
00:54:36,180 --> 00:54:37,920
다목적적일 필요는 없습니다 다차원적입니다

1224
00:54:37,920 --> 00:54:40,079
다목적적이지만

1225
00:54:40,079 --> 00:54:43,559
다목적적일 필요는 없습니다

1226
00:54:43,559 --> 00:54:44,960
음

1227
00:54:44,960 --> 00:54:48,240
어 그래서 예 임파워먼트를 사용하면

1228
00:54:48,240 --> 00:54:49,680


1229
00:54:49,680 --> 00:54:50,880
임파워먼트

1230
00:54:50,880 --> 00:54:52,880
와

1231
00:54:52,880 --> 00:54:55,440
원자가의 가중 조합이 없습니다 어 환경의 구조에 따라 다르

1232
00:54:55,440 --> 00:54:58,500
므로 음 그것은

1233
00:54:58,500 --> 00:55:01,559
단지 세계의 정적 속성

1234
00:55:01,559 --> 00:55:04,460
이나 에이전트의 정적 속성이 아닙니다 그것이

1235
00:55:04,460 --> 00:55:09,540
통합하는 어 에이전트  World Coupling

1236
00:55:09,540 --> 00:55:11,520
그리고 나는 불완전한 자연이라는

1237
00:55:11,520 --> 00:55:13,920


1238
00:55:13,920 --> 00:55:15,480


1239
00:55:15,480 --> 00:55:17,280
훌륭한 책을 썼고

1240
00:55:17,280 --> 00:55:19,680


1241
00:55:19,680 --> 00:55:21,839
대학원 초반에 읽었고

1242
00:55:21,839 --> 00:55:25,140
나에게 많은 영감을 준 Terence

1243
00:55:25,140 --> 00:55:27,740
Deacon이 쓴 이 인용문으로 끝내야겠다고 생각했습니다.

1244
00:55:27,740 --> 00:55:30,359
일종의 열역학적 관점에서 목적론에 대해 많은 것을 알게 되었고

1245
00:55:30,359 --> 00:55:32,700
정말 매력적이었습니다

1246
00:55:32,700 --> 00:55:35,280
음 그리고 저는 그가 목적역학에 대해 말했던 것이 마음에 들었습니다.

1247
00:55:35,280 --> 00:55:36,619


1248
00:55:36,619 --> 00:55:40,380


1249
00:55:40,380 --> 00:55:42,540
유기체가 있을 수 있다는 것을 알고 있거나 그것의

1250
00:55:42,540 --> 00:55:44,180
행동이 조직될 수 있다는

1251
00:55:44,180 --> 00:55:46,980
생각은

1252
00:55:46,980 --> 00:55:49,559
일종의  그는 원격 역학이

1253
00:55:49,559 --> 00:55:51,960
최종 인과 관계의 동적 실현이라고 말하며

1254
00:55:51,960 --> 00:55:54,359
주어진 동적

1255
00:55:54,359 --> 00:55:57,059
조직이

1256
00:55:57,059 --> 00:55:59,819
그 자체의 연속성, 따라서 연속성의 결과로 인해 존재하므로

1257
00:55:59,819 --> 00:56:02,579


1258
00:56:02,579 --> 00:56:03,900


1259
00:56:03,900 --> 00:56:06,420
자체 생성하는 것으로 설명될 수 있습니다.

1260
00:56:06,420 --> 00:56:08,339


1261
00:56:08,339 --> 00:56:10,859


1262
00:56:10,859 --> 00:56:12,960
자기 실현 잠재력을 중심으로 조직되거나

1263
00:56:12,960 --> 00:56:16,619
다소 수수께끼 같은 정형 역학의 독특한 영역입니다.

1264
00:56:16,619 --> 00:56:19,200
조직된 역학은 그

1265
00:56:19,200 --> 00:56:22,380
자체의 결과이며

1266
00:56:22,380 --> 00:56:24,300


1267
00:56:24,300 --> 00:56:26,220
제가 여기서 하는 일과 관련이 있다고 생각합니다.

1268
00:56:26,220 --> 00:56:29,579


1269
00:56:29,579 --> 00:56:30,780


1270
00:56:30,780 --> 00:56:33,660
구조화된 온톨로지의 내부적 종류에 대한 권한 부여를 생각하면 에이전트가

1271
00:56:33,660 --> 00:56:35,040


1272
00:56:35,040 --> 00:56:37,380


1273
00:56:37,380 --> 00:56:40,160
가능한 미래의 거대한 공간이 여러 개 있다고 말할 수 있지만 먼 미래에 멀리 떨어져 있는

1274
00:56:40,160 --> 00:56:43,140
세계의 상태를 알고 있다고 평가할 수 있습니다.

1275
00:56:43,140 --> 00:56:46,500


1276
00:56:46,500 --> 00:56:48,000


1277
00:56:48,000 --> 00:56:50,160
나는

1278
00:56:50,160 --> 00:56:53,099
그것이 왜 내 종류의 핵심 온톨로지에 도움이 되는지에 대한 설명을 할 수 있다고 말할 수 있기 때문에

1279
00:56:53,099 --> 00:56:58,260


1280
00:56:58,260 --> 00:57:00,540


1281
00:57:00,540 --> 00:57:02,160


1282
00:57:02,160 --> 00:57:05,099


1283
00:57:05,099 --> 00:57:06,720


1284
00:57:06,720 --> 00:57:09,660
그것에 대해 내 모든 행동을 조직화할 수 있습니다.  그것 자체의 결과

1285
00:57:09,660 --> 00:57:12,480
그래서 음 그것과 함께

1286
00:57:12,480 --> 00:57:15,240
능동적 추론 연구소에 감사하고 싶고

1287
00:57:15,240 --> 00:57:17,579
질문을 받을 것입니다.

1288
00:57:17,579 --> 00:57:20,760
능동적

1289
00:57:20,760 --> 00:57:23,280
추론 어 이론가들이

1290
00:57:23,280 --> 00:57:25,980
일종의

1291
00:57:25,980 --> 00:57:28,500
통합된 관점에 대한 일종의 잠재력에 대해 어떻게 생각하는지 알고 싶습니다.

1292
00:57:28,500 --> 00:57:31,200


1293
00:57:31,200 --> 00:57:32,460
제너레이티브

1294
00:57:32,460 --> 00:57:34,559
모델과 그 속성에 대해 생각해 본 경험이 많으신 것 같아서

1295
00:57:34,559 --> 00:57:36,420
어떻게 생각하시는지 매우 궁금합니다 감사합니다

1296
00:57:36,420 --> 00:57:39,380


1297
00:57:39,900 --> 00:57:42,420
훌륭합니다 감사합니다 훌륭합니다

1298
00:57:42,420 --> 00:57:46,619
프레젠테이션이 재미있을 것입니다

1299
00:57:46,619 --> 00:57:48,540
토론 실시간으로 시청하는 분들은

1300
00:57:48,540 --> 00:57:51,599


1301
00:57:51,599 --> 00:57:52,619
실시간 채팅에서 자유롭게 질문을 추가하고

1302
00:57:52,619 --> 00:57:55,740
화면 공유를 해제할 수 있습니다.

1303
00:57:55,740 --> 00:57:58,098
시작하겠습니다.

1304
00:57:58,440 --> 00:58:00,359


1305
00:58:00,359 --> 00:58:03,240
힘을 실어주는 심호흡을

1306
00:58:03,240 --> 00:58:04,859
하고

1307
00:58:04,859 --> 00:58:07,920
일반적인 질문을 한 다음

1308
00:58:07,920 --> 00:58:09,660
흩어져 있는 메모가 있습니다.  나는

1309
00:58:09,660 --> 00:58:12,359
당신이

1310
00:58:12,359 --> 00:58:15,960


1311
00:58:15,960 --> 00:58:18,720
이론 모델링과

1312
00:58:18,720 --> 00:58:22,640
권한 부여 관점을 제어하게 된 이유가 무엇인지 어떻게 이 연구 영역에 오셨는지에 대해 자세히 살펴

1313
00:58:23,940 --> 00:58:25,380


1314
00:58:25,380 --> 00:58:27,180
보고 싶습니다.

1315
00:58:27,180 --> 00:58:28,980


1316
00:58:28,980 --> 00:58:30,480


1317
00:58:30,480 --> 00:58:32,280
무엇을 가져왔고

1318
00:58:32,280 --> 00:58:34,619
그냥 일반적인 질문 음소거 하나는

1319
00:58:34,619 --> 00:58:37,859
우리가 간다 예 만나보겠습니다

1320
00:58:37,859 --> 00:58:39,900
좋은 것 같습니다 감사합니다

1321
00:58:39,900 --> 00:58:43,319
예 그래서 제가 권한을 부여하게 된 이유

1322
00:58:43,319 --> 00:58:47,819
저는 항상 관심이 있었습니다 예

1323
00:58:47,819 --> 00:58:50,780
동물이 세상에서 어떻게 상호 작용할 수 있는지 어떻게 알 수 있습니까?

1324
00:58:50,780 --> 00:58:54,720


1325
00:58:54,720 --> 00:58:58,140
매우 효율적인 방식으로 특히

1326
00:58:58,140 --> 00:59:00,299
동물을 알고 있다는 것을 아는 것과 같이

1327
00:59:00,299 --> 00:59:03,420
오 아기 말처럼 알 수 있는지 알 수 있습니까?

1328
00:59:03,420 --> 00:59:05,280
일어나서 움직이고

1329
00:59:05,280 --> 00:59:07,799
일종의 유동적이고 유연한 방식으로 세상과 상호 작용할 수 있습니까?

1330
00:59:07,799 --> 00:59:10,799


1331
00:59:10,799 --> 00:59:14,339


1332
00:59:14,339 --> 00:59:16,380
이를 수행하는 데 필요한 일종의 핵심 표현 능력

1333
00:59:16,380 --> 00:59:19,079
과 저는 RL 세계에서 실제로 아무것도 보지 못했습니다.

1334
00:59:19,079 --> 00:59:21,839
이것은 제가

1335
00:59:21,839 --> 00:59:23,760
능동적 추론에 대해 알기 전이고

1336
00:59:23,760 --> 00:59:25,980
그래서 그것은 항상 제 마음 뒤에 있었고 또

1337
00:59:25,980 --> 00:59:28,319


1338
00:59:28,319 --> 00:59:31,020
다른 큰 영향

1339
00:59:31,020 --> 00:59:34,740
은  nishith srivastava라는 사람은

1340
00:59:34,740 --> 00:59:36,960


1341
00:59:36,960 --> 00:59:40,440
기본적으로 일종의

1342
00:59:40,440 --> 00:59:42,839
상대론적 결정 이론을 가질 수 있는 방법에 대한 흥미로운 논문을 썼는데, 이는

1343
00:59:42,839 --> 00:59:46,040


1344
00:59:46,040 --> 00:59:50,579
일종의 쾌락적 효용 이론 최대화에 의지하지 않고 서로 다른 항목 사이에서 판단을 내릴 수 있도록 허용했습니다.

1345
00:59:50,579 --> 00:59:53,400


1346
00:59:53,400 --> 00:59:56,700


1347
00:59:56,700 --> 00:59:58,559
일종의 잠재

1348
00:59:58,559 --> 01:00:01,319
수용 가능성 함수와 같은 것입니다.

1349
01:00:01,319 --> 01:00:03,660


1350
01:00:03,660 --> 01:00:06,540
항목

1351
01:00:06,540 --> 01:00:08,760
수용 가능성의 기록을 기억할 수 있고

1352
01:00:08,760 --> 01:00:10,319
결정을 내린 맥락을 기억할 수 있으며

1353
01:00:10,319 --> 01:00:11,460
실제로

1354
01:00:11,460 --> 01:00:15,180
이러한 기억에 대해 베이지안 추론을 수행할 수 있고

1355
01:00:15,180 --> 01:00:16,319
설명할 수 있습니다.

1356
01:00:16,319 --> 01:00:17,819
선호도 역전

1357
01:00:17,819 --> 01:00:20,040
현상 및

1358
01:00:20,040 --> 01:00:23,040
관련 없는 대안을 도입한 의사 결정 이론과 같은 많은 흥미로운 것들이

1359
01:00:23,040 --> 01:00:25,339
기본 선택을 변경하는 것과 같습니다.

1360
01:00:25,339 --> 01:00:28,200


1361
01:00:28,200 --> 01:00:32,040
그런 종류의 것이 어떻게 할 수 있는지, 음 어떻게 가져올 수 있는지에 대한 많은 생각을 시작했다고 생각했습니다.

1362
01:00:32,040 --> 01:00:36,420


1363
01:00:36,420 --> 01:00:39,059


1364
01:00:39,059 --> 01:00:41,599
일종의 구체화된

1365
01:00:41,599 --> 01:00:44,700
계획에 대한 직관의 종류와 같은 것입니다.

1366
01:00:44,700 --> 01:00:48,020
에이전트가 사물에 가치를 할당하도록 하는 방법과 같이

1367
01:00:48,020 --> 01:00:52,020


1368
01:00:52,020 --> 01:00:54,180
일종의 정적

1369
01:00:54,180 --> 01:00:57,000
음 일종의 정적 선호도 또는

1370
01:00:57,000 --> 01:01:00,059
세계의 정적 유틸리티로 귀속되지 않고 어떻게 할 수 있었습니까?

1371
01:01:00,059 --> 01:01:03,619
큰 영감을 얻었습니다.

1372
01:01:04,140 --> 01:01:07,260
알겠습니다. 그리고

1373
01:01:07,260 --> 01:01:10,880
왜 허니 오소리가 있는지에 대한 짧은 일반적인 질문이 있습니다. 안녕하세요 오소리

1374
01:01:10,980 --> 01:01:12,540


1375
01:01:12,540 --> 01:01:16,740
음 예 제 고문이

1376
01:01:16,740 --> 01:01:19,859
stoffel이라는 꿀 오소리의 YouTube 동영상을 보여줬고

1377
01:01:19,859 --> 01:01:23,520
제 종이 보상은 필요하지 않습니다.

1378
01:01:23,520 --> 01:01:26,280
그것은 오프닝

1379
01:01:26,280 --> 01:01:28,799
음 단락에서 stoffel에 대해 이야기합니다.  그리고

1380
01:01:28,799 --> 01:01:31,020
이 유튜브 영상에 대한 링크가 있는데

1381
01:01:31,020 --> 01:01:34,500
stoffel은 호주의 벌꿀 오소리이고

1382
01:01:34,500 --> 01:01:36,839


1383
01:01:36,839 --> 01:01:38,880
음 그는

1384
01:01:38,880 --> 01:01:41,700
동물 보호 센터 같은 곳에 있고 그는

1385
01:01:41,700 --> 01:01:45,119
사물에서 탈출하는 데 정말 능숙하므로 어

1386
01:01:45,119 --> 01:01:47,160
관리인은

1387
01:01:47,160 --> 01:01:51,420
여기에서  동물 보호소는

1388
01:01:51,420 --> 01:01:53,400


1389
01:01:53,400 --> 01:01:56,040
스토펠을 보관하기 위해 정교한 구조물처럼 끊임없이 지어야 합니다. 그래서 그는

1390
01:01:56,040 --> 01:01:58,400
Badger Alcatraz라는 이런 종류의 우리를 가지고 있고

1391
01:01:58,400 --> 01:02:01,619
어 스토펠은 벽에 기대어 넘어갈

1392
01:02:01,619 --> 01:02:04,079
물건을 찾는 것과 같은 흥미로운 일을 할 것입니다.

1393
01:02:04,079 --> 01:02:06,420


1394
01:02:06,420 --> 01:02:09,000
멀리 있는 소파는

1395
01:02:09,000 --> 01:02:12,599
진흙을 공 모양으로 포장하고 벽

1396
01:02:12,599 --> 01:02:15,180
에 작은 피라미드처럼 쌓아서

1397
01:02:15,180 --> 01:02:16,799
올라가는 것과 같은 것입니다.

1398
01:02:16,799 --> 01:02:19,740


1399
01:02:19,740 --> 01:02:23,000


1400
01:02:23,000 --> 01:02:26,640
t는

1401
01:02:26,640 --> 01:02:30,119
당신이 알고 있는 낮은 수준의

1402
01:02:30,119 --> 01:02:33,000
상태에서만 작동하는 것이 아니라

1403
01:02:33,000 --> 01:02:35,640


1404
01:02:35,640 --> 01:02:38,760
물체나 짝짓기 기회

1405
01:02:38,760 --> 01:02:40,980
또는 외부 Badger

1406
01:02:40,980 --> 01:02:44,220
Alcatraz와 같은 일종의 개념적 계층적 공간에서도 작동합니다.

1407
01:02:44,220 --> 01:02:46,680
에이전트는 동기 부여를 정당화하기

1408
01:02:46,680 --> 01:02:49,980
위해 일종의 추상적인 방식으로 생각합니다.

1409
01:02:49,980 --> 01:02:54,720


1410
01:02:54,720 --> 01:02:58,079
그래서 청취자들이 어

1411
01:02:58,079 --> 01:03:00,180
그 비디오를 찾아보라고 권합니다. 재미있습니다.

1412
01:03:00,180 --> 01:03:01,920


1413
01:03:01,920 --> 01:03:06,660
일반 탈출 충동과 같습니다.

1414
01:03:06,660 --> 01:03:11,520
예,

1415
01:03:11,520 --> 01:03:14,819
우리가 원하는 야외 컨텍스트로 확장됩니다.  움직일 수 있는 능력을 유지하기 위해

1416
01:03:14,819 --> 01:03:16,619
그리고 움직이는 생물체를 위해

1417
01:03:16,619 --> 01:03:19,140


1418
01:03:19,140 --> 01:03:23,040
그것은 우리가 삶의 권리와 같이 관심을 갖고 싶어할 수 있는 것에 대한 꽤 좋은 대용물입니다.

1419
01:03:23,040 --> 01:03:26,280


1420
01:03:26,280 --> 01:03:28,260


1421
01:03:28,260 --> 01:03:30,780
저는

1422
01:03:30,780 --> 01:03:32,040


1423
01:03:32,040 --> 01:03:34,200
Alex Kiefer의

1424
01:03:34,200 --> 01:03:36,720
환상적인 작품이 아마도 순진한 질문일 수도 있다는 채팅의 질문으로 가겠습니다.

1425
01:03:36,720 --> 01:03:38,400


1426
01:03:38,400 --> 01:03:41,099
이제 막 살펴보기 시작한 형식주의에서는 분명하지만

1427
01:03:41,099 --> 01:03:43,680
아이디어는 실제 에이전트

1428
01:03:43,680 --> 01:03:46,500
환경 커플링 수치가

1429
01:03:46,500 --> 01:03:48,900
컴퓨팅 권한 부여에 있다는 것입니다.

1430
01:03:48,900 --> 01:03:52,680
그렇다면 내부적으로 사용 가능한 정보가 주어졌을 때 최적화할 수 있는 완전한 내부 프록시가 있는지 흠

1431
01:03:52,680 --> 01:03:55,319


1432
01:03:55,319 --> 01:03:59,000


1433
01:04:00,059 --> 01:04:03,059
거기에

1434
01:04:03,059 --> 01:04:05,460
봅시다.

1435
01:04:05,460 --> 01:04:08,940


1436
01:04:08,940 --> 01:04:11,520


1437
01:04:11,520 --> 01:04:13,079


1438
01:04:13,079 --> 01:04:14,660


1439
01:04:14,660 --> 01:04:18,119
커플링의 해당 부분에서 내부적으로 사용 가능한 주어진 정보를 최적화할 수 있는 계산할 수 있는 완전한 내부 프록시가 있습니까?

1440
01:04:18,119 --> 01:04:20,760
그가 의미하는 것은 내 말은

1441
01:04:20,760 --> 01:04:23,400
당신을 의미하는 것입니다.

1442
01:04:23,400 --> 01:04:25,380


1443
01:04:25,380 --> 01:04:28,200
내부 상태 공간에서만 권한 부여를 계산할 수 있다고 가정합니다.

1444
01:04:28,200 --> 01:04:31,740
음 하지만 그렇지 않습니다.

1445
01:04:31,740 --> 01:04:33,839


1446
01:04:33,839 --> 01:04:37,740
이동하고

1447
01:04:37,740 --> 01:04:39,839
다른 상태 공간에 영향을 미치기 위해 행동을 사용해야 하기 때문에 사실 아니오라고 말하고 싶습니다.

1448
01:04:39,839 --> 01:04:41,579


1449
01:04:41,579 --> 01:04:44,540


1450
01:04:44,540 --> 01:04:48,920
음, 계산 방법을 모르겠습니다.

1451
01:04:48,920 --> 01:04:51,599
그것은

1452
01:04:51,599 --> 01:04:54,000
어떤 더 넓은 시스템과의 결합의 일부가 아니라는 것입니다.

1453
01:04:54,000 --> 01:04:56,460


1454
01:04:56,460 --> 01:04:59,339
자유롭게 생각

1455
01:04:59,339 --> 01:05:03,540
하고 폭넓은 인지 공간에서 움직이고 싶은 욕구는 어떻습니까? 네 저도

1456
01:05:03,540 --> 01:05:07,319


1457
01:05:07,319 --> 01:05:08,880
동의합니다.

1458
01:05:08,880 --> 01:05:11,339
생리학적인

1459
01:05:11,339 --> 01:05:14,220
요구 사항이 충족되고 자신을

1460
01:05:14,220 --> 01:05:17,460
강요하는 일이 없다는 것을 알고 있습니다.

1461
01:05:17,460 --> 01:05:20,760
다른 일을 할 수 있는 일종의 자유가 있습니다.

1462
01:05:20,760 --> 01:05:23,540
음 그래서 저는

1463
01:05:23,540 --> 01:05:27,240
이것이 매우 추상적인 공간, 어쩌면 수학적 공간에서도 일반적으로 작동할 수 있다고 생각합니다. 음

1464
01:05:27,240 --> 01:05:29,520


1465
01:05:29,520 --> 01:05:31,200


1466
01:05:31,200 --> 01:05:33,119
그리고 예

1467
01:05:33,119 --> 01:05:34,920
저는

1468
01:05:34,920 --> 01:05:36,780


1469
01:05:36,780 --> 01:05:39,780
당신이 알고 있는 추상적 사고나

1470
01:05:39,780 --> 01:05:41,339
수학적 사고 또는 이와 같은 것들에 더 높은 수준의 종속성 구조와 같은 종속성이 있을 수 있다고 생각

1471
01:05:41,339 --> 01:05:43,280
하세요.

1472
01:05:43,280 --> 01:05:46,260


1473
01:05:46,260 --> 01:05:48,059


1474
01:05:48,059 --> 01:05:50,819


1475
01:05:50,819 --> 01:05:54,900


1476
01:05:54,900 --> 01:05:57,720


1477
01:05:57,720 --> 01:05:59,880
어떤 증거가 참이라고 가정하고

1478
01:05:59,880 --> 01:06:02,339
그것이 거짓으로 판명되는 수학을 연구하고 있다면 그것이

1479
01:06:02,339 --> 01:06:05,339


1480
01:06:05,339 --> 01:06:07,619
일종의 추상적

1481
01:06:07,619 --> 01:06:10,079
어 관점에서 힘을 빼는 것임을 알 수 있는 의존성 구조입니다.

1482
01:06:10,079 --> 01:06:12,720


1483
01:06:12,720 --> 01:06:15,780
그들이 다시 있을 때 당신은 예

1484
01:06:15,780 --> 01:06:17,520
훌륭합니다. 나는 단지 말할 것입니다. 하지만 다시 예,

1485
01:06:17,520 --> 01:06:19,500
모든 수학은

1486
01:06:19,500 --> 01:06:22,980
당신이 알고 있는 어떤 시스템에 의해 수행되고 있습니다.

1487
01:06:22,980 --> 01:06:25,200


1488
01:06:25,200 --> 01:06:27,900
어, 에너지를

1489
01:06:27,900 --> 01:06:32,700
필요로 하는 계산을 수행해야 하는 시스템입니다.  그것들은

1490
01:06:32,700 --> 01:06:34,920
어떤 종류의 외부 내부 결합에 의해 잘 제한되어 있습니다.

1491
01:06:34,920 --> 01:06:38,720


1492
01:06:40,920 --> 01:06:44,099
여러 가지 방법이 있습니다.

1493
01:06:44,099 --> 01:06:46,500
능동적 추론으로 방향을 틀고

1494
01:06:46,500 --> 01:06:49,740
다른 영역으로 돌아올 수 있는지 봅시다 음,

1495
01:06:49,740 --> 01:06:51,660


1496
01:06:51,660 --> 01:06:54,180


1497
01:06:54,180 --> 01:06:56,760
능동적 추론의 생성 모델을 언급했지만

1498
01:06:56,760 --> 01:06:58,260
다른 접근 방식을 취했습니다.

1499
01:06:58,260 --> 01:07:01,500
모델 온톨로지이므로

1500
01:07:01,500 --> 01:07:05,160


1501
01:07:05,160 --> 01:07:07,559


1502
01:07:07,559 --> 01:07:10,500
활성 추론에서 환경에서 에이전트의 결합과 제안한 것과 구조적으로 어떻게 대조할 수 있습니까?

1503
01:07:10,500 --> 01:07:12,480


1504
01:07:12,480 --> 01:07:14,880
활성 추론에서 볼 수 있는 표현은 종종

1505
01:07:14,880 --> 01:07:17,339


1506
01:07:17,339 --> 01:07:20,039
베이지안 그래프의 Markov 블랭킷

1507
01:07:20,039 --> 01:07:22,799
내부 상태

1508
01:07:22,799 --> 01:07:25,319
와 외부 상태 사이를 중재하고 그런 다음

1509
01:07:25,319 --> 01:07:27,480
이러한 내부 상태와 외부 상태 사이에 매핑 기능이 있어서

1510
01:07:27,480 --> 01:07:30,539
그들이

1511
01:07:30,539 --> 01:07:33,359


1512
01:07:33,359 --> 01:07:35,160


1513
01:07:35,160 --> 01:07:37,859
들어오는

1514
01:07:37,859 --> 01:07:40,200
감각 관찰과 나가는

1515
01:07:40,200 --> 01:07:43,380
행동을 제공하는 것으로 해석되는 블랭킷을 통해 다시 조정되는 적응 결합에 참여할 수 있으므로 구조적으로

1516
01:07:43,380 --> 01:07:47,339
호환 가능합니다.  당신이 제안한 것과 양립할 수 없거나 다른

1517
01:07:47,339 --> 01:07:49,079
비밀 세 번째 것

1518
01:07:49,079 --> 01:07:51,599


1519
01:07:51,599 --> 01:07:54,240
예 그래서

1520
01:07:54,240 --> 01:07:57,780
제 작업을 다르게 만드는 것은

1521
01:07:57,780 --> 01:08:01,260


1522
01:08:01,260 --> 01:08:03,960
잠재적인 일종의

1523
01:08:03,960 --> 01:08:07,319
이산 상태 공간의 구조라는 것입니다.

1524
01:08:07,319 --> 01:08:12,119


1525
01:08:12,119 --> 01:08:15,000


1526
01:08:15,000 --> 01:08:17,100


1527
01:08:17,100 --> 01:08:19,679
항상성 드라이브와 같은 코드에서 비활성 추론은 일반적으로

1528
01:08:19,679 --> 01:08:23,219
생성 모델로 인코딩합니다. 맞습니다.

1529
01:08:23,219 --> 01:08:26,040


1530
01:08:26,040 --> 01:08:29,420
감각 관찰보다 선호하는 것으로 인코딩되어

1531
01:08:29,420 --> 01:08:32,880
엔터티가 궁극적으로 정책을 찾고 선택합니다.

1532
01:08:32,880 --> 01:08:36,540


1533
01:08:36,540 --> 01:08:38,520


1534
01:08:38,520 --> 01:08:40,979
내가 기대하는 것과 같은 관찰에 대한 그들의 놀라움을 줄이거 나 제한하고 나 자신이 항상성 온도에 있는 것을 선호합니다. 나는 내가

1535
01:08:40,979 --> 01:08:43,080


1536
01:08:43,080 --> 01:08:45,000
그 범위에 있을 때 놀라지 않고

1537
01:08:45,000 --> 01:08:47,160


1538
01:08:47,160 --> 01:08:49,679
그 범위에 있는 자신을 발견하도록 조치를 취할 것입니다

1539
01:08:49,679 --> 01:08:52,560
예 예  제 경우

1540
01:08:52,560 --> 01:08:54,120


1541
01:08:54,120 --> 01:08:57,179


1542
01:08:57,179 --> 01:09:00,179
에는 상태 공간이

1543
01:09:00,179 --> 01:09:02,279
이런 종류의 자기 훼손 품질을 가지고 있기 때문에

1544
01:09:02,279 --> 01:09:05,279
기아 상태가 좋지 않다는 것을 알고 있습니다.

1545
01:09:05,279 --> 01:09:08,640


1546
01:09:08,640 --> 01:09:10,979


1547
01:09:10,979 --> 01:09:13,080
특정 신호를 받을 것이라는 기대가 실제로 놀라운 것은 아닙니다.  또는

1548
01:09:13,080 --> 01:09:16,439
세계의 어떤 상태보다 선호하는 것은 다른 모든 것을 통제할 수 있는

1549
01:09:16,439 --> 01:09:20,399
능력에 영향을 미치는 일종의 어 자해적 특성을 가지고 있습니다.

1550
01:09:20,399 --> 01:09:22,259


1551
01:09:22,259 --> 01:09:23,939


1552
01:09:23,939 --> 01:09:27,000


1553
01:09:27,000 --> 01:09:28,859


1554
01:09:28,859 --> 01:09:31,560


1555
01:09:31,560 --> 01:09:34,259
상태의 품질은 활성 추론 설정의

1556
01:09:34,259 --> 01:09:36,839
생성 모델에서 일종의 인코딩되며

1557
01:09:36,839 --> 01:09:40,500
여기서

1558
01:09:40,500 --> 01:09:42,779


1559
01:09:42,779 --> 01:09:45,179
이러한

1560
01:09:45,179 --> 01:09:48,560


1561
01:09:48,719 --> 01:09:50,719


1562
01:09:52,439 --> 01:09:55,560
원자가 신호를

1563
01:09:55,560 --> 01:09:58,500
발생시키는 일종의 구조적 결합이 있다고 말하고 있습니다.  에이전트의

1564
01:09:58,500 --> 01:09:59,699
온톨로지

1565
01:09:59,699 --> 01:10:02,820
와 궁극적으로

1566
01:10:02,820 --> 01:10:05,160
임파워먼트 증가에 의해 반영되어 원자가가 증가하므로

1567
01:10:05,160 --> 01:10:08,820


1568
01:10:08,820 --> 01:10:12,960
이 반짝이는 물체가

1569
01:10:12,960 --> 01:10:15,780
그 문을 여는 것을 어떻게 이해하게 됩니까?

1570
01:10:15,780 --> 01:10:20,239


1571
01:10:20,239 --> 01:10:23,219


1572
01:10:23,219 --> 01:10:25,080
당신이 아는 것처럼

1573
01:10:25,080 --> 01:10:27,679
실제로

1574
01:10:28,020 --> 01:10:30,120
음 실제로 알아내는 것은

1575
01:10:30,120 --> 01:10:31,800
Dynamics 학습으로 귀결되기 때문에

1576
01:10:31,800 --> 01:10:33,960
에이전트가

1577
01:10:33,960 --> 01:10:36,600
키가 무엇을 하는지 모른다면 키가

1578
01:10:36,600 --> 01:10:39,060
문을 여는 것을 알지 못

1579
01:10:39,060 --> 01:10:40,380
하므로 키가  문을 통해 이동

1580
01:10:40,380 --> 01:10:42,239
하고 이와 같은 것들은

1581
01:10:42,239 --> 01:10:45,360
Dinah와 같은 알고리즘과 같은 것이 많이 있다고 생각합니다.

1582
01:10:45,360 --> 01:10:46,580


1583
01:10:46,580 --> 01:10:48,719


1584
01:10:48,719 --> 01:10:51,780


1585
01:10:51,780 --> 01:10:53,699
Dynamics에 대한 학습 학습 또는 이와 같은 것 사이를 번갈아 가며 수행

1586
01:10:53,699 --> 01:10:55,380
하지만 그것은

1587
01:10:55,380 --> 01:10:57,840
저에게 일종의 뛰어난 질문입니다.  예를 들어 예를 들어

1588
01:10:57,840 --> 01:11:00,239
어떻게 키를 가져오고

1589
01:11:00,239 --> 01:11:03,300
어떻게 그것이 Dynamics를 변화시키는지 정확히 배우겠습니까 음

1590
01:11:03,300 --> 01:11:04,320


1591
01:11:04,320 --> 01:11:08,580
하지만 제가 말하는 것은

1592
01:11:08,580 --> 01:11:11,159
여러분이 그렇게 할 수 있다는 점을 감안할 때 여러분이

1593
01:11:11,159 --> 01:11:13,260
그렇게 할 수 있다면 사물

1594
01:11:13,260 --> 01:11:15,960
에 대해 이러한 가치 판단을 실제로 할 수 있다는 것입니다.

1595
01:11:15,960 --> 01:11:17,640
세상에

1596
01:11:17,640 --> 01:11:19,320
그래서 그게 정말 중요하다고 생각해요.

1597
01:11:19,320 --> 01:11:21,960


1598
01:11:21,960 --> 01:11:24,659


1599
01:11:24,659 --> 01:11:25,980


1600
01:11:25,980 --> 01:11:28,679


1601
01:11:28,679 --> 01:11:32,219
오 안돼 내 은행 계좌가

1602
01:11:32,219 --> 01:11:34,920
20달러 더 커졌어 그래서

1603
01:11:34,920 --> 01:11:36,600
나는 이 모든 새로운 용량

1604
01:11:36,600 --> 01:11:39,300
이나 이런 것들을 갖게 될 거야

1605
01:11:39,300 --> 01:11:41,940


1606
01:11:41,940 --> 01:11:45,300
열쇠나 1달러 지폐 같은 다양한

1607
01:11:45,300 --> 01:11:48,960
물건에 대한 이런 종류의 선호도

1608
01:11:48,960 --> 01:11:52,560
저장되어 있다는 것을 알고 있을 수도 있고 유틸리티 이론이 있는 모델을 알고 있을 수도 있습니다.

1609
01:11:52,560 --> 01:11:55,800


1610
01:11:55,800 --> 01:11:58,199
음 괜찮다는 것을 아는

1611
01:11:58,199 --> 01:11:59,820
몇 가지 다른 질문에 대해 점프할 수 있습니다.

1612
01:11:59,820 --> 01:12:01,260


1613
01:12:01,260 --> 01:12:03,179


1614
01:12:03,179 --> 01:12:06,120
권한 부여를 Shannon 정보 이론으로 설명했다고 말하는 것이 정확하기를 바랍니다.

1615
01:12:06,120 --> 01:12:08,640


1616
01:12:08,640 --> 01:12:11,520
액추에이터와 실현 사이의 채널 용량

1617
01:12:11,520 --> 01:12:14,040


1618
01:12:14,040 --> 01:12:16,020


1619
01:12:16,020 --> 01:12:18,840


1620
01:12:18,840 --> 01:12:20,940


1621
01:12:20,940 --> 01:12:24,239


1622
01:12:24,239 --> 01:12:26,120
예를 들어 정보 전송 또는 업로드 및 다운로드의 대역폭 맥락에서 우리는 어 섀넌 채널 용량을 듣는 것에 익숙할 수 있지만 이것은 일종의

1623
01:12:26,120 --> 01:12:28,679
행동 지향적인 섀넌 채널 용량이므로

1624
01:12:28,679 --> 01:12:32,340


1625
01:12:32,340 --> 01:12:35,100
직관을 얻는다는 것은 무엇을 의미합니까?  상태에 있는 액추에이터 사이의 해당 용량에 대해

1626
01:12:35,100 --> 01:12:38,040


1627
01:12:38,040 --> 01:12:40,679
그렇습니다. 채널 용량은

1628
01:12:40,679 --> 01:12:43,199
가능한 최대입니다.

1629
01:12:43,199 --> 01:12:45,840


1630
01:12:45,840 --> 01:12:49,500
선택한 작업과 결과 상태 간의 상호 정보이므로

1631
01:12:49,500 --> 01:12:51,239


1632
01:12:51,239 --> 01:12:55,260
채널 용량은 액추에이터에서 가능한 최대

1633
01:12:55,260 --> 01:12:57,780
정보로 전송할 수 있는 일종의 최대 정보입니다.

1634
01:12:57,780 --> 01:13:01,199


1635
01:13:01,199 --> 01:13:04,620
세계의 상태 그것은

1636
01:13:04,620 --> 01:13:06,840
내가 이

1637
01:13:06,840 --> 01:13:07,739


1638
01:13:07,739 --> 01:13:11,580
많은 종류의 가능한 미래에 영향을 미칠 수 있다는 것을 당신이 알고 있다고 말하는 선택의 한 형태입니다. 그래서

1639
01:13:11,580 --> 01:13:13,800
예 그것은 에이전트의 일종의 본질적인 속성이므로

1640
01:13:13,800 --> 01:13:16,620


1641
01:13:16,620 --> 01:13:19,860
제품 공간에서 이것은

1642
01:13:19,860 --> 01:13:21,300


1643
01:13:21,300 --> 01:13:23,400
다음에 의해 영향을 받을 것입니다.  많은 다른 상태 공간이

1644
01:13:23,400 --> 01:13:25,140
생리학적

1645
01:13:25,140 --> 01:13:28,739
상태 공간처럼 상호 작용하는 경우 너무 낮아지면 죽임을 알 수 있습니다.

1646
01:13:28,739 --> 01:13:30,179


1647
01:13:30,179 --> 01:13:31,739
그래서

1648
01:13:31,739 --> 01:13:34,380
제 생각에 이것에 대한 흥미로운 점은

1649
01:13:34,380 --> 01:13:38,040


1650
01:13:38,040 --> 01:13:42,060
이런 종류의 의문문에서 인지에 대해 생각하도록 격려한다는 것입니다.

1651
01:13:42,060 --> 01:13:43,920
방법

1652
01:13:43,920 --> 01:13:47,280
음, 본질적으로

1653
01:13:47,280 --> 01:13:50,460
당신이 무엇을

1654
01:13:50,460 --> 01:13:53,400
할 수 있는지 알아내려고 노력하고 있다는 것을 알고 있기 때문에 당신이 알고 있는 액추에이터에서 상태 공간으로 정보가 전달되는 것을 방해하는

1655
01:13:53,400 --> 01:13:56,280
다양한 상태 공간을 알고 있는 많은 사람들이 있습니다.

1656
01:13:56,280 --> 01:13:58,380


1657
01:13:58,380 --> 01:14:00,060


1658
01:14:00,060 --> 01:14:03,000
그것이

1659
01:14:03,000 --> 01:14:05,699
일종의

1660
01:14:05,699 --> 01:14:07,920


1661
01:14:07,920 --> 01:14:10,140
설명할 수 있는 AI와 같은 것으로 이어질 수 있기 때문에 매우 유용하다고 생각합니다. 구조와 설명이 있는 구체적인 상태 공간의 관점

1662
01:14:10,140 --> 01:14:12,719
에서 의도를 설명할 수 있습니다.

1663
01:14:12,719 --> 01:14:15,239


1664
01:14:15,239 --> 01:14:17,100


1665
01:14:17,100 --> 01:14:18,540


1666
01:14:18,540 --> 01:14:20,219
귀하의

1667
01:14:20,219 --> 01:14:22,080
질문이지만

1668
01:14:22,080 --> 01:14:23,100
음

1669
01:14:23,100 --> 01:14:25,739
채널 Shannon 채널

1670
01:14:25,739 --> 01:14:28,620
용량에 대해 이야기해야 할 사항

1671
01:14:28,620 --> 01:14:29,280
음 음

1672
01:14:29,280 --> 01:14:31,739


1673
01:14:31,739 --> 01:14:34,500
잠재적으로 예상되는 자유 에너지로 루프백하기 전에 생각합니다.

1674
01:14:34,500 --> 01:14:36,900
음 당신은

1675
01:14:36,900 --> 01:14:38,940
음AI

1676
01:14:38,940 --> 01:14:42,900
주제를 언급했고

1677
01:14:42,900 --> 01:14:47,340
자체 권한 부여를 특징으로 하는 명령의 위험이 있습니까

1678
01:14:47,340 --> 01:14:50,060


1679
01:14:50,100 --> 01:14:53,040
AI가

1680
01:14:53,040 --> 01:14:56,219


1681
01:14:56,219 --> 01:14:59,159
다른 사람이 기대하거나 선호하지 않을 수 있는 조치 정책을 선택할 수 있다는 점에서

1682
01:14:59,159 --> 01:15:01,440


1683
01:15:01,440 --> 01:15:05,040
자체 인코딩된 설명 가능한 AI 사전과 일치하지 않을 수 있지만

1684
01:15:05,040 --> 01:15:06,780
오히려

1685
01:15:06,780 --> 01:15:09,980
무한한 접근 방식을 취하는 것입니다.

1686
01:15:10,380 --> 01:15:12,900
예 저는 그것이 음이라고 생각합니다.

1687
01:15:12,900 --> 01:15:15,060
두려운 것은

1688
01:15:15,060 --> 01:15:17,159
정렬 질문과 같은 것에 대해 많이 생각하지 않았기

1689
01:15:17,159 --> 01:15:19,440
때문에 정렬 연구원이 이 관점에 대해 어떻게 생각하는지에 대해 매우 관심이 있습니다

1690
01:15:19,440 --> 01:15:21,840


1691
01:15:21,840 --> 01:15:23,460


1692
01:15:23,460 --> 01:15:25,260
음 일종의 흥미로운 작업이 있다고 생각합니다.

1693
01:15:25,260 --> 01:15:27,420


1694
01:15:27,420 --> 01:15:30,239
특히

1695
01:15:30,239 --> 01:15:32,940
이러한 종류의 추상적 어 전환

1696
01:15:32,940 --> 01:15:36,840
연산자를 사용하는 다중 에이전트 권한 부여는 장기간에 걸쳐 작동합니다.

1697
01:15:36,840 --> 01:15:40,219
음,

1698
01:15:40,219 --> 01:15:43,920
하우스 종류의 사회화 문제

1699
01:15:43,920 --> 01:15:45,540
와 이와 같은 것들을 볼 수 있습니다.

1700
01:15:45,540 --> 01:15:47,520


1701
01:15:47,520 --> 01:15:50,280
에이전트

1702
01:15:50,280 --> 01:15:51,120
음

1703
01:15:51,120 --> 01:15:53,520
당신은 당신이

1704
01:15:53,520 --> 01:15:56,159


1705
01:15:56,159 --> 01:15:57,780
알고 있는 모든 에이전트를 존중하는 법을 배워야 하는지 알고 있어야 합니다 권한 부여 내 말은 그들이 또한

1706
01:15:57,780 --> 01:15:59,820
당신에게 불리하게 행동할 수 있다는 뜻입니다

1707
01:15:59,820 --> 01:16:02,820
음 그래서 예 잘 모르겠습니다 진지하게

1708
01:16:02,820 --> 01:16:06,420
받아들이는 것이 두려운 것 같습니다

1709
01:16:06,420 --> 01:16:08,159
음

1710
01:16:08,159 --> 01:16:10,560


1711
01:16:10,560 --> 01:16:12,780


1712
01:16:12,780 --> 01:16:15,900
개미 식민지 배경에서 나온 저에게 뛰어난 연구 질문이기 때문에 어떻게 해야할지 모르겠습니다. 당신은

1713
01:16:15,900 --> 01:16:17,460
사회화를 언급했고 저는

1714
01:16:17,460 --> 01:16:18,900
즉시 잘 생각했습니다.

1715
01:16:18,900 --> 01:16:22,380
씨앗이 집으로 가져갈 두세 명의 둥지 동료가 필요하다고 말합시다.

1716
01:16:22,380 --> 01:16:24,540


1717
01:16:24,540 --> 01:16:28,340
Nest mate 한 명이

1718
01:16:28,340 --> 01:16:31,739
최대한의 권한을 부여하려면

1719
01:16:31,739 --> 01:16:34,199
친사회적 환경에 참여해야 합니다.

1720
01:16:34,199 --> 01:16:37,560
다른 사람이 자신

1721
01:16:37,560 --> 01:16:40,560
의 모델이 더 작고

1722
01:16:40,560 --> 01:16:42,719
권한이 적더라도 게임을 하지 않기로 결정하면

1723
01:16:42,719 --> 01:16:45,360
그 개인이

1724
01:16:45,360 --> 01:16:47,040
방법을 알아낼 때까지  나홀로 집에 씨앗을 옮기는

1725
01:16:47,040 --> 01:16:48,540


1726
01:16:48,540 --> 01:16:51,420
것은 실제로

1727
01:16:51,420 --> 01:16:54,060


1728
01:16:54,060 --> 01:16:57,600
그러한 목표를 실제로 달성하는 데 도움이 되는 사회적 구조에 일종의 구속을 받을 것이므로

1729
01:16:57,600 --> 01:17:01,380
사회적 명령을

1730
01:17:01,380 --> 01:17:04,080
잠재적으로 다른 모든 명령 앞에 화면으로 배치합니다.

1731
01:17:04,080 --> 01:17:06,420


1732
01:17:06,420 --> 01:17:08,040


1733
01:17:08,040 --> 01:17:09,840


1734
01:17:09,840 --> 01:17:11,520


1735
01:17:11,520 --> 01:17:15,659


1736
01:17:15,659 --> 01:17:18,900
일부 함수의 분해에 대해 언급한 좋은 생각입니다.

1737
01:17:18,900 --> 01:17:20,460
어떤 함수가 분해되고 있었는지 정확히 무엇을 풀 수 있는지 알려드리겠습니다. 음, 우리는

1738
01:17:20,460 --> 01:17:22,500


1739
01:17:22,500 --> 01:17:25,260


1740
01:17:25,260 --> 01:17:28,739
제품 공간에서 작업하고 싶지 않다고 말함으로써

1741
01:17:28,739 --> 01:17:30,300
예,

1742
01:17:30,300 --> 01:17:32,520
계산 복잡성

1743
01:17:32,520 --> 01:17:36,060
관점에서 또는

1744
01:17:36,060 --> 01:17:39,540
위험이 무엇인지 또는

1745
01:17:39,540 --> 01:17:42,719
해당 제품 공간의 확장 기능이

1746
01:17:42,719 --> 01:17:44,699
무엇인지 감지하고

1747
01:17:44,699 --> 01:17:48,840
더 다루기 쉬운 형태를 용이하게 하는 분해가 무엇인지

1748
01:17:48,840 --> 01:17:50,820
예, 화면을 다시 공유하겠습니다.

1749
01:17:50,820 --> 01:17:52,739
해당 슬라이드로 돌아갈 수 있습니다.

1750
01:17:52,739 --> 01:17:55,099
감사합니다.

1751
01:17:59,159 --> 01:18:02,059


1752
01:18:04,440 --> 01:18:07,400
외국

1753
01:18:26,880 --> 01:18:30,180
[음악]

1754
01:18:31,260 --> 01:18:33,480
내 화면을 볼 수 있습니다. 예,

1755
01:18:33,480 --> 01:18:35,880
Bellman 방정식이 무엇인지에 대한 간략한 요약

1756
01:18:35,880 --> 01:18:39,540
과

1757
01:18:39,540 --> 01:18:41,340
bellman 방정식의 표준 공식화에서

1758
01:18:41,340 --> 01:18:45,020
이 연산자 공간으로 어떻게 이동했는지 알 수 있습니다.

1759
01:18:45,179 --> 01:18:49,940
물론 표준 Bellman 방정식입니다.

1760
01:18:51,960 --> 01:18:55,080
한 슬라이드의 버튼을 모르겠습니다.

1761
01:18:55,080 --> 01:18:57,120
전진하지만 괜찮습니다. 그래서 표준

1762
01:18:57,120 --> 01:19:00,360
지배 방정식은 이 어

1763
01:19:00,360 --> 01:19:02,100
재귀적 형태를 말하며

1764
01:19:02,100 --> 01:19:05,100


1765
01:19:05,100 --> 01:19:06,120


1766
01:19:06,120 --> 01:19:09,179
상태의 최적 값에 있다는 것입니다.

1767
01:19:09,179 --> 01:19:12,360


1768
01:19:12,360 --> 01:19:14,880
그것은

1769
01:19:14,880 --> 01:19:16,380
당신에게 보상

1770
01:19:16,380 --> 01:19:19,140
하고 당신이

1771
01:19:19,140 --> 01:19:21,679
미래에 더 많은 보상을 얻기 위해 행동할 수 있는 상태로 당신을 데려갑니다

1772
01:19:21,679 --> 01:19:25,800
그래서 벨만 방정식 음은

1773
01:19:25,800 --> 01:19:30,060
동적 프로그래밍으로 풀 수 있습니다 음 이

1774
01:19:30,060 --> 01:19:33,420
함수 V를 최대화하기 위해 음

1775
01:19:33,420 --> 01:19:36,840
그래서 그것은 될 것입니다  결과적으로

1776
01:19:36,840 --> 01:19:39,719
당신을 전 세계로 이동시키는 정책이 발생합니다. 어 환경에서 찾을 수 있는

1777
01:19:39,719 --> 01:19:42,480
보상을 축적하는 방식으로

1778
01:19:42,480 --> 01:19:45,659


1779
01:19:45,659 --> 01:19:48,179
음 그래서 이 재귀 형식을 가집니다. 어

1780
01:19:48,179 --> 01:19:49,920
당신은 그것을 시퀀스로 펼칠 수 있습니다

1781
01:19:49,920 --> 01:19:51,840


1782
01:19:51,840 --> 01:19:53,820
음 그리고 나서 연산자  Bellman

1783
01:19:53,820 --> 01:19:57,840
방정식은 이와 유사한 재귀 형식을 가지고 있습니다.

1784
01:19:57,840 --> 01:19:59,940
이제

1785
01:19:59,940 --> 01:20:02,340
보상 함수가 없다는 것을 알 수 있습니다.

1786
01:20:02,340 --> 01:20:04,199
이 가용성

1787
01:20:04,199 --> 01:20:06,300
함수는

1788
01:20:06,300 --> 01:20:08,880
0과 1 사이의 숫자를 반환하고 확률을 반환합니다.

1789
01:20:08,880 --> 01:20:11,760


1790
01:20:11,760 --> 01:20:14,100


1791
01:20:14,100 --> 01:20:16,320
누적 타당성을 최대화하므로

1792
01:20:16,320 --> 01:20:19,440
여기에서 F는 지금

1793
01:20:19,440 --> 01:20:22,380
목표를 달성하거나 지금은 달성

1794
01:20:22,380 --> 01:20:24,900
하지 못했지만

1795
01:20:24,900 --> 01:20:26,219


1796
01:20:26,219 --> 01:20:28,860
미래에 달성할 조치를 취했을 때 이 목표를 사용할 수 있다고 말하는 것입니다.

1797
01:20:28,860 --> 01:20:30,380


1798
01:20:30,380 --> 01:20:32,940
그래서

1799
01:20:32,940 --> 01:20:34,980
음 그것은 가용성 함수를 보상으로 생각할 수 있는 것과 같은 형식을 갖지만

1800
01:20:34,980 --> 01:20:36,300


1801
01:20:36,300 --> 01:20:39,600


1802
01:20:39,600 --> 01:20:42,420
확률적

1803
01:20:42,420 --> 01:20:45,000
음 형식을 유지하고 있고 그 확률적 형식은

1804
01:20:45,000 --> 01:20:48,239


1805
01:20:48,239 --> 01:20:52,679


1806
01:20:52,679 --> 01:20:54,840
전환 연산자로서 상태 시간 타당성을 계산할 수 있기 때문에 중요합니다.

1807
01:20:54,840 --> 01:20:58,380
현재 위치에서 현재

1808
01:20:58,380 --> 01:21:00,780
상태 시간(XT)을 정책에 따라 달성한

1809
01:21:00,780 --> 01:21:04,020
최종 상태 시간 및 목표로 매핑하는 연산자이므로

1810
01:21:04,020 --> 01:21:05,780


1811
01:21:05,780 --> 01:21:09,780


1812
01:21:09,780 --> 01:21:12,300
XT에서 시작하고 이 정책을 따르고

1813
01:21:12,300 --> 01:21:13,920


1814
01:21:13,920 --> 01:21:16,199
이 상태 공간을 통해 나를 이동시키는 행동을 선택하면

1815
01:21:16,199 --> 01:21:17,940
결국 목표에 도달하게 될 것이고

1816
01:21:17,940 --> 01:21:20,940
최종 상태와 시간을 알고 싶습니다.

1817
01:21:20,940 --> 01:21:24,179


1818
01:21:24,179 --> 01:21:26,360
주어진 시간에 주어진 상태에서 이것을 달성할 확률

1819
01:21:26,360 --> 01:21:29,580
과 상태 시간을 알고 싶습니다.  타당성

1820
01:21:29,580 --> 01:21:33,659
함수는 여기에 표현된 대로 정책인

1821
01:21:33,659 --> 01:21:35,280
하나의 조치가 있는 전환 연산자입니다.

1822
01:21:35,280 --> 01:21:38,040
그러나 우리가

1823
01:21:38,040 --> 01:21:41,460
그것을 집계할 때 오, 우리가

1824
01:21:41,460 --> 01:21:44,580
그것을

1825
01:21:44,580 --> 01:21:46,620


1826
01:21:46,620 --> 01:21:47,460


1827
01:21:47,460 --> 01:21:50,520
세계의 여러 종류의 객체를 중심으로 하는 여러 가능한 타당성 함수로 집계할 때 이것을 가져옵니다.

1828
01:21:50,520 --> 01:21:53,640


1829
01:21:53,640 --> 01:21:55,980
이들 각각과 관련된 정책 중 하나는 이러한 기능

1830
01:21:55,980 --> 01:21:58,560


1831
01:21:58,560 --> 01:22:00,300


1832
01:22:00,300 --> 01:22:02,940
중 하나에 대한 목표를 달성할 때 종료되는 목표 조건 정책

1833
01:22:02,940 --> 01:22:05,100
이며 예를 들어 Apple을 얻는 것을 알고 있습니다. 그런

1834
01:22:05,100 --> 01:22:07,679
다음

1835
01:22:07,679 --> 01:22:11,100
각 정책은

1836
01:22:11,100 --> 01:22:13,739
이 전환 오퍼레이터에 대한 조치이므로 전 세계 공간을 이동할

1837
01:22:13,739 --> 01:22:15,719
수 있는 5가지 가능한 정책이 있습니다.

1838
01:22:15,719 --> 01:22:17,640


1839
01:22:17,640 --> 01:22:19,320
따라서 이러한 오퍼레이터 개발

1840
01:22:19,320 --> 01:22:21,000
방정식은 이

1841
01:22:21,000 --> 01:22:23,820
확률적 구조를 유지하는 확률적 형식을 가지며

1842
01:22:23,820 --> 01:22:24,960


1843
01:22:24,960 --> 01:22:28,320
이것을 음과 비교할 수 있습니다.

1844
01:22:28,320 --> 01:22:29,520
익숙한지 알겠지만

1845
01:22:29,520 --> 01:22:31,739
RL에는 계승자 표현이라는 개념이 있습니다. 음,

1846
01:22:31,739 --> 01:22:34,380


1847
01:22:34,380 --> 01:22:36,960


1848
01:22:36,960 --> 01:22:39,900
전산 신경과학에서 자주 핫 토픽이 되는 것과 같습니다.

1849
01:22:39,900 --> 01:22:41,760
계승자 표현은

1850
01:22:41,760 --> 01:22:43,739
일종의

1851
01:22:43,739 --> 01:22:46,620
예측 연산자인 것처럼 이야기되지만 실제로 그것이

1852
01:22:46,620 --> 01:22:50,100
나타내는 것은 예상됩니다.

1853
01:22:50,100 --> 01:22:53,520
정책에 따른 주 점유 및 예상되는 주

1854
01:22:53,520 --> 01:22:55,500
점유는 할인 요소에 의해 대기되므로

1855
01:22:55,500 --> 01:22:58,320
정말

1856
01:22:58,320 --> 01:23:00,780
성공적인 표현은 실제로

1857
01:23:00,780 --> 01:23:02,640
일종의 가중 통계이며

1858
01:23:02,640 --> 01:23:04,620


1859
01:23:04,620 --> 01:23:07,620
초기 상태와 같은 상태에서 달성 상태로 매핑되지 않습니다.

1860
01:23:07,620 --> 01:23:11,400


1861
01:23:11,400 --> 01:23:14,100
목표 달성 이벤트 유도

1862
01:23:14,100 --> 01:23:16,280
따라서 후속 표현이

1863
01:23:16,280 --> 01:23:19,620
구성적이지 않은 경우

1864
01:23:19,620 --> 01:23:21,719
두 개의 후속 표현을 곱하고

1865
01:23:21,719 --> 01:23:24,420
다른 후속 표현을 얻을 수 없지만

1866
01:23:24,420 --> 01:23:26,960


1867
01:23:26,960 --> 01:23:29,280


1868
01:23:29,280 --> 01:23:30,360


1869
01:23:30,360 --> 01:23:34,020
가능성을 매핑하기 때문에 실현 가능성 함수를 나타내는 행렬을 곱할 수 있습니다.  주어진 정책에 대한

1870
01:23:34,020 --> 01:23:36,540


1871
01:23:36,540 --> 01:23:38,760


1872
01:23:38,760 --> 01:23:41,040
상태 시간

1873
01:23:41,040 --> 01:23:43,679
실행 가능성 함수를 알고 있음을 나타내는 행렬을

1874
01:23:43,679 --> 01:23:46,100
다른 정책에 대한 다른 함수

1875
01:23:46,100 --> 01:23:49,020


1876
01:23:49,020 --> 01:23:51,239


1877
01:23:51,239 --> 01:23:53,880
와 곱함으로써 확률 함수의 형태를 유지할 수 있도록 이벤트를 결합할 수 있습니다.

1878
01:23:53,880 --> 01:23:55,860
그것들은 재사용 가능

1879
01:23:55,860 --> 01:23:57,300
구성 가능

1880
01:23:57,300 --> 01:23:58,320
Etc

1881
01:23:58,320 --> 01:24:01,140
이고 분해 및 이 분해에 대해 질문하신 것 같습니다.

1882
01:24:01,140 --> 01:24:02,760


1883
01:24:02,760 --> 01:24:06,480


1884
01:24:06,480 --> 01:24:08,640
예, 제가 이것에 대해 얼버무렸을 수도 있지만

1885
01:24:08,640 --> 01:24:11,640
분해 결과는

1886
01:24:11,640 --> 01:24:15,120


1887
01:24:15,120 --> 01:24:17,340
제품 공간에서 상태-시간 타당성 함수를 계산했다면

1888
01:24:17,340 --> 01:24:21,420
괜찮다는 것입니다.  많은 상태 많은

1889
01:24:21,420 --> 01:24:23,880
상태 각각의 상태인 많은 상태 벡터

1890
01:24:23,880 --> 01:24:26,400


1891
01:24:26,400 --> 01:24:27,840
음 그러면

1892
01:24:27,840 --> 01:24:29,580


1893
01:24:29,580 --> 01:24:32,040
제품 공간이 매우 크고 연산자를 나타내기

1894
01:24:32,040 --> 01:24:35,580
위해 메모리에서 많은 것을 알고 있기 때문에 그렇게 하고 싶지 않다는 것을 알고 있습니다.

1895
01:24:35,580 --> 01:24:39,659


1896
01:24:39,659 --> 01:24:43,500
PX가 아니었고 이것은 PS였고 PS는

1897
01:24:43,500 --> 01:24:45,540


1898
01:24:45,540 --> 01:24:47,580
이 고차원 공간에서 당신을 이동시키는 전체 제품 공간 연산자였습니다.

1899
01:24:47,580 --> 01:24:49,440
당신은 그것을 정말로 표현할 수 없고

1900
01:24:49,440 --> 01:24:51,239
정말로 원하지도 않지만 만약

1901
01:24:51,239 --> 01:24:54,239
당신이 그렇게 했고 당신이 상태 시간

1902
01:24:54,239 --> 01:24:56,900
타당성을 계산했다면  제품 공간에서 기능을 수행하면

1903
01:24:56,900 --> 01:25:02,159
특정 조건에서 할 수 있고

1904
01:25:02,159 --> 01:25:03,360
그 조건이 무엇인지 말할 수 있지만

1905
01:25:03,360 --> 01:25:05,699
특정 조건에서

1906
01:25:05,699 --> 01:25:09,780
이것을 독립적으로 계산된 모든 상위 수준 상태 공간의 예측으로 분해할 수 있으므로

1907
01:25:09,780 --> 01:25:11,840


1908
01:25:11,840 --> 01:25:15,840


1909
01:25:15,840 --> 01:25:17,880
기아 공간을 별도로 진화시키고

1910
01:25:17,880 --> 01:25:20,219
그들의 공간을 개별적으로 진화시키고 당신은

1911
01:25:20,219 --> 01:25:23,400
온도 공간을 개별적으로 진화시킵니다.

1912
01:25:23,400 --> 01:25:25,219
그 모든 계산을

1913
01:25:25,219 --> 01:25:28,860
해당 공간에서 로컬로 수행할 수 있고

1914
01:25:28,860 --> 01:25:31,679


1915
01:25:31,679 --> 01:25:33,420


1916
01:25:33,420 --> 01:25:37,920
저수준 공간에서만 계산되는 상태 시간 타당성 함수와 결합할 수 있습니다. 그래서

1917
01:25:37,920 --> 01:25:41,580
음 그래서 이 계층적 stf는  상태

1918
01:25:41,580 --> 01:25:44,699
시간 타당성 함수는

1919
01:25:44,699 --> 01:25:47,100
가장

1920
01:25:47,100 --> 01:25:50,280
합리적이고 합리적으로 크기가 큰 문제에 대해 다루기 힘든 개체이지만

1921
01:25:50,280 --> 01:25:54,360
이러한 항목의 이 제품에 의해 개별적으로 암시적으로 형성할 수 있으므로

1922
01:25:54,360 --> 01:25:57,420


1923
01:25:57,420 --> 01:26:02,400


1924
01:26:02,400 --> 01:26:04,980
어 계층적

1925
01:26:04,980 --> 01:26:07,080
상태 시간에 대한 경우 목표가 있을 때 작동합니다.  타당성 함수는 나무와 같은 세계의 특정 기능에

1926
01:26:07,080 --> 01:26:10,380
도달하는 단일 목표를 가지고 있을 때

1927
01:26:10,380 --> 01:26:12,060


1928
01:26:12,060 --> 01:26:13,920


1929
01:26:13,920 --> 01:26:15,000


1930
01:26:15,000 --> 01:26:17,100
음 그게 바로 이것이 일종의

1931
01:26:17,100 --> 01:26:19,080
캔입니다. 이것은

1932
01:26:19,080 --> 01:26:22,260
이 분해가 유지되는 조건 중 하나이므로

1933
01:26:22,260 --> 01:26:23,820


1934
01:26:23,820 --> 01:26:25,679
귀하에 대한 귀하의 질문에 대한 답변이 된 것 같습니다  암시적으로 제품

1935
01:26:25,679 --> 01:26:28,440
공간을 형성하는 상호 연결된 상태 공간의 일종의 네트워크에서 개별 상태 공간에 대한

1936
01:26:28,440 --> 01:26:31,139
로컬 계산을 수행하여 이를 극복해야

1937
01:26:31,139 --> 01:26:34,080


1938
01:26:34,080 --> 01:26:35,460


1939
01:26:35,460 --> 01:26:38,639


1940
01:26:38,639 --> 01:26:42,000
하지만

1941
01:26:42,000 --> 01:26:43,620
모든 표현을 계산해야 합니다.

1942
01:26:43,620 --> 01:26:45,840
이

1943
01:26:45,840 --> 01:26:48,480
상태 공간 네트워크에서 개별적으로 연속적인 정책 하에서

1944
01:26:48,480 --> 01:26:49,920
이 고차원 상태 공간을 돌아다닐 수

1945
01:26:49,920 --> 01:26:53,400


1946
01:26:53,400 --> 01:26:55,980


1947
01:26:55,980 --> 01:26:58,020
있고 이것이

1948
01:26:58,020 --> 01:26:59,280


1949
01:26:59,280 --> 01:27:01,560
고차원 상태 공간에서 포워드 샘플링을 처리할 수 있게 해주는 것입니다.

1950
01:27:01,560 --> 01:27:04,679


1951
01:27:04,679 --> 01:27:08,100


1952
01:27:08,100 --> 01:27:13,860
음 기억해 내 생각에 일종의 uh

1953
01:27:13,860 --> 01:27:17,100
프리젠테이션은 aval a-a-v-e-l이었다고 생각합니다.

1954
01:27:17,100 --> 01:27:19,760
예 예

1955
01:27:20,580 --> 01:27:23,460
Echo에게 그런 종류의

1956
01:27:23,460 --> 01:27:25,860
감정을

1957
01:27:25,860 --> 01:27:28,440
작성하는 경우

1958
01:27:28,440 --> 01:27:31,020
새로운 상태 공간을 생성하거나 구성하는 경우

1959
01:27:31,020 --> 01:27:34,500
컴퓨팅 정책이 아닙니다.  고정된 세계에서

1960
01:27:34,500 --> 01:27:36,360


1961
01:27:36,360 --> 01:27:39,780
음 당신은 사물을 함께 구성하고 있습니다

1962
01:27:39,780 --> 01:27:42,120
음 그것은 물론 시스템의

1963
01:27:42,120 --> 01:27:44,699
모든 상태 벡터의 암시적으로 제품 공간을 확장할 것이고

1964
01:27:44,699 --> 01:27:48,120


1965
01:27:48,120 --> 01:27:50,280
사물을 합성하거나 새로운 정보를 가져오는 행위는

1966
01:27:50,280 --> 01:27:53,400


1967
01:27:53,400 --> 01:27:56,340
당신이 있는 암시적 제품 공간을 확장하는 것입니다

1968
01:27:56,340 --> 01:28:00,780
따라서 RL 관점에서 볼 때

1969
01:28:00,780 --> 01:28:02,880


1970
01:28:02,880 --> 01:28:04,620
해당 제품 공간에 대한 보상 기능이 무엇인지 아는 것이 명확하지 않습니다.

1971
01:28:04,620 --> 01:28:06,840


1972
01:28:06,840 --> 01:28:08,880
누구도

1973
01:28:08,880 --> 01:28:12,360
그 질문에 답할 것이라고 생각하지 않지만 생성이

1974
01:28:12,360 --> 01:28:14,520
무엇인지 아는 것도 명확하지 않습니다.

1975
01:28:14,520 --> 01:28:17,699
모델은

1976
01:28:17,699 --> 01:28:20,000
그 제품 공간에서도 보여야 합니다. 적어도

1977
01:28:20,000 --> 01:28:23,520
유기체나 인간이 이론을 제안하는

1978
01:28:23,520 --> 01:28:27,780
이런 종류의 변증법적 과정에서 이것에 매우 능숙하다는 것을 알고 있다고 생각합니다.

1979
01:28:27,780 --> 01:28:31,199


1980
01:28:31,199 --> 01:28:35,460


1981
01:28:35,460 --> 01:28:38,760


1982
01:28:38,760 --> 01:28:41,580


1983
01:28:41,580 --> 01:28:43,860


1984
01:28:43,860 --> 01:28:47,820


1985
01:28:47,820 --> 01:28:49,739
세계의 구조가

1986
01:28:49,739 --> 01:28:52,920
특정한 방식으로 되어 있다는 것이 무엇을 의미하는지 알고 있는 심문에서 가치가 나온다고 생각합니다. 따라서 내가 세계

1987
01:28:52,920 --> 01:28:54,719
의 새로운 역학을 배우고

1988
01:28:54,719 --> 01:28:55,739


1989
01:28:55,739 --> 01:28:58,139
새로운 방식으로 역학을 제어하고 싶다면  공간은

1990
01:28:58,139 --> 01:29:01,080
다른 상태 공간에 영향을 미칠 수 있지만

1991
01:29:01,080 --> 01:29:03,239
규범적인 관점에서 알고 있습니다.

1992
01:29:03,239 --> 01:29:05,460
일단

1993
01:29:05,460 --> 01:29:07,920
무언가를 구성하고 암시

1994
01:29:07,920 --> 01:29:09,659
적 제품 공간을 확장할 때

1995
01:29:09,659 --> 01:29:12,540
어떤 종류의

1996
01:29:12,540 --> 01:29:14,580
규범성의 규범적 소스가

1997
01:29:14,580 --> 01:29:16,920
와야 하는지 명확하지 않습니다.  에서 하지만 제 생각에는

1998
01:29:16,920 --> 01:29:20,280
우리가 인간이 참여할 수 있는 유연한 인간 추론의 종류는

1999
01:29:20,280 --> 01:29:23,760


2000
01:29:23,760 --> 01:29:27,179
이런 종류의 구성 및 심문 체제에 있다고 생각합니다.

2001
01:29:27,179 --> 01:29:29,520


2002
01:29:29,520 --> 01:29:31,699


2003
01:29:31,699 --> 01:29:35,699
그런 다음 저는

2004
01:29:35,699 --> 01:29:37,620
이 상태 공간이

2005
01:29:37,620 --> 01:29:39,120
제가 예상하지 못한 방식으로 다른 상태 공간에 어떻게 영향을 미치는지 볼 수 있었습니다.

2006
01:29:39,120 --> 01:29:42,840
그래서

2007
01:29:42,840 --> 01:29:44,699
창의적인 방식의 규범성은 제어 가능성에서 비롯되어야 한다고 생각합니다.

2008
01:29:44,699 --> 01:29:46,199


2009
01:29:46,199 --> 01:29:49,759


2010
01:29:50,719 --> 01:29:52,679


2011
01:29:52,679 --> 01:29:56,699


2012
01:29:56,699 --> 01:29:59,340
강화 학습 RL에서 우리 동료들에게 먼저 지시하는 경우

2013
01:29:59,340 --> 01:30:00,920


2014
01:30:00,920 --> 01:30:04,620
논문은

2015
01:30:04,620 --> 01:30:09,239
보상이 필요하지 않으므로

2016
01:30:09,239 --> 01:30:11,820
보상이 충분하고

2017
01:30:11,820 --> 01:30:15,120
예,

2018
01:30:15,120 --> 01:30:17,900


2019
01:30:18,540 --> 01:30:21,900
좋은 질문인 것에 필요한 것은 보상이

2020
01:30:21,900 --> 01:30:25,260
충분하다는 점에서 도발적입니다.

2021
01:30:25,260 --> 01:30:29,699


2022
01:30:29,699 --> 01:30:30,960


2023
01:30:30,960 --> 01:30:34,500


2024
01:30:34,500 --> 01:30:36,659
일부 시청자에게 상기시켜주는 보상 충분 가설은

2025
01:30:36,659 --> 01:30:38,760
보상

2026
01:30:38,760 --> 01:30:40,440
극대화가

2027
01:30:40,440 --> 01:30:43,860
모든 종류의 인공

2028
01:30:43,860 --> 01:30:47,460
지능과 일종의 자연 지능을 설명할 수 있다는 가설입니다.

2029
01:30:47,460 --> 01:30:48,900


2030
01:30:48,900 --> 01:30:50,580


2031
01:30:50,580 --> 01:30:52,440


2032
01:30:52,440 --> 01:30:55,560
학습과 물건은 모든 종류의

2033
01:30:55,560 --> 01:30:58,620


2034
01:30:58,620 --> 01:31:01,679


2035
01:31:01,679 --> 01:31:03,960
보상을 극대화하는 일부 프로세스가 필요하고

2036
01:31:03,960 --> 01:31:06,060
내 관점에서 이것은

2037
01:31:06,060 --> 01:31:08,699
실망스러운 진술입니다. 왜냐하면

2038
01:31:08,699 --> 01:31:12,138
그것은

2039
01:31:12,239 --> 01:31:14,100


2040
01:31:14,100 --> 01:31:16,860


2041
01:31:16,860 --> 01:31:19,380
특정 보상에 대한 귀하의 선호도를 실제로 다루지 않기 때문입니다.

2042
01:31:19,380 --> 01:31:22,380
기능은 종이에서 나오며

2043
01:31:22,380 --> 01:31:24,239
그들이 잘 말할 것이라고

2044
01:31:24,239 --> 01:31:26,780
말할 것입니다. 우리는 당신이

2045
01:31:26,780 --> 01:31:30,060
보상의 여러 출처가 있을 수 있다는 것을 알고

2046
01:31:30,060 --> 01:31:33,420
있지만 당신이 주의해야 하거나 관심을 가져야 하는 보상을 결정하는 과정을 알고 있다는 것을 알고 있습니다.  관심을 가져야 할

2047
01:31:33,420 --> 01:31:35,760


2048
01:31:35,760 --> 01:31:39,120


2049
01:31:39,120 --> 01:31:42,600
신호를 결정하는 것은

2050
01:31:42,600 --> 01:31:45,000


2051
01:31:45,000 --> 01:31:48,000
지능 자체의 중요한 부분이며

2052
01:31:48,000 --> 01:31:50,580
보상은 충분한 가설이라고 생각합니다.

2053
01:31:50,580 --> 01:31:52,440
가설은

2054
01:31:52,440 --> 01:31:56,219
그 메커니즘이 그 관점에 어떤 것이든

2055
01:31:56,219 --> 01:31:58,739


2056
01:31:58,739 --> 01:32:01,380
당신이 알고 있는 보상을 최대화할 것이라는 점에서 일종의 제약이 있기 때문입니다.

2057
01:32:01,380 --> 01:32:05,360
패러다임과 따라서

2058
01:32:05,360 --> 01:32:08,120
그 메커니즘을 형성하는 것이 무엇이든지

2059
01:32:08,120 --> 01:32:10,860
에이전트가

2060
01:32:10,860 --> 01:32:13,320
이것에 주의를 기울여야 하거나 에이전트가

2061
01:32:13,320 --> 01:32:14,880
항상

2062
01:32:14,880 --> 01:32:17,100
신경쓰는 것에 주의를 기울이는 것을 멈추고 새로운

2063
01:32:17,100 --> 01:32:18,179
신호에 주의를 기울여야 한다는 것을

2064
01:32:18,179 --> 01:32:21,239
알고 있습니다.

2065
01:32:21,239 --> 01:32:24,780
그것은 당신이

2066
01:32:24,780 --> 01:32:27,540
알고 있는 입장을 취하도록 강요합니다. 메타

2067
01:32:27,540 --> 01:32:29,820
보상과 같은 메타 소스가 있을 수 있습니다. 메타 소스는

2068
01:32:29,820 --> 01:32:31,920
이 프로세스를 지시한다고 알려줍니다.

2069
01:32:31,920 --> 01:32:34,260


2070
01:32:34,260 --> 01:32:37,860


2071
01:32:37,860 --> 01:32:40,380


2072
01:32:40,380 --> 01:32:43,500
당신은

2073
01:32:43,500 --> 01:32:47,900
보상이 충분하다는 것을 알고 있습니다.

2074
01:32:47,900 --> 01:32:49,800
가설은

2075
01:32:49,800 --> 01:32:53,100
구체적이지 않습니다.

2076
01:32:53,100 --> 01:32:56,520
무엇을 계산해야 하는지 알려주지 않습니다. 단지

2077
01:32:56,520 --> 01:32:58,860


2078
01:32:58,860 --> 01:33:02,340
보상을 최대화하려고 하면

2079
01:33:02,340 --> 01:33:04,620
올바른

2080
01:33:04,620 --> 01:33:08,280
어 표현을 계산할 것이라고 말합니다.

2081
01:33:08,280 --> 01:33:09,659


2082
01:33:09,659 --> 01:33:10,739


2083
01:33:10,739 --> 01:33:13,620


2084
01:33:13,620 --> 01:33:16,500
유연한 인간적 방식으로 추론할 수 있는 데 필요한 것이 무엇인지에 대한 기본 사항이 많다고 생각하세요. 제가

2085
01:33:16,500 --> 01:33:18,239
여기서 연산자 Bellman 방정식과 함께 제안하는 것은

2086
01:33:18,239 --> 01:33:19,920


2087
01:33:19,920 --> 01:33:22,260
보상이 없는 Bowman 방정식이 있다는 것입니다.  보상이 없는 세상의

2088
01:33:22,260 --> 01:33:24,719
복잡성을 처리하는 데 도움이 되고

2089
01:33:24,719 --> 01:33:27,659


2090
01:33:27,659 --> 01:33:29,280
사례를 잘 만들 수 있습니다.

2091
01:33:29,280 --> 01:33:30,600
이러한 연산자 개발

2092
01:33:30,600 --> 01:33:32,940
방정식을 사용하여 보상이 있는 상태를 점유할 수

2093
01:33:32,940 --> 01:33:36,600
있지만

2094
01:33:36,600 --> 01:33:39,239
제품 공간 이후로 효과적인 제품

2095
01:33:39,239 --> 01:33:41,940
공간은 다음과 같다고 주장합니다.  우리 모두가 살고 있는 세상은 너무 방대하고

2096
01:33:41,940 --> 01:33:43,739


2097
01:33:43,739 --> 01:33:47,699
유연한 방식으로 추론합니다. RL이

2098
01:33:47,699 --> 01:33:49,860


2099
01:33:49,860 --> 01:33:53,100


2100
01:33:53,100 --> 01:33:56,520
인간이 할 수 있는 방식으로 실시간으로 동기를 정당화하고 질문에 도달할 수 있는 문제에 대처할 수 있을지 매우 의심스럽습니다.  내

2101
01:33:56,520 --> 01:34:00,000


2102
01:34:00,000 --> 01:34:02,460
직감은 아니오

2103
01:34:02,460 --> 01:34:05,219
보상이 충분하지 않다는 증거가 없다는 것을 좋아할 수 없지만

2104
01:34:05,219 --> 01:34:07,080


2105
01:34:07,080 --> 01:34:10,320


2106
01:34:10,320 --> 01:34:12,840
보상 기능이

2107
01:34:12,840 --> 01:34:16,260
좋은 것에 대해 전달해야 하는 정보도 있다고 생각합니다.  나는 그것이 고귀한 것이라고 생각하지 않거나

2108
01:34:16,260 --> 01:34:20,000


2109
01:34:20,000 --> 01:34:22,280
우리가 인간의 지능이 작업하는 것을 이해하는 시간 척도에서 계산할 수 있다고 생각하지 않습니다.

2110
01:34:22,280 --> 01:34:27,000


2111
01:34:27,000 --> 01:34:30,659
그래서

2112
01:34:30,659 --> 01:34:32,639
무엇이 필요한지에 대한 귀하의 질문에 답하기 위해

2113
01:34:32,639 --> 01:34:34,739


2114
01:34:34,739 --> 01:34:39,239
필요한 것이 무엇인지 모르겠습니다.  하지만 저는

2115
01:34:39,239 --> 01:34:39,960


2116
01:34:39,960 --> 01:34:42,000
제가 이미 언급한 점을 지적하고 싶습니다.

2117
01:34:42,000 --> 01:34:45,960
저는

2118
01:34:45,960 --> 01:34:47,659
우리가

2119
01:34:47,659 --> 01:34:51,000
제품 공간의 문제를 인정하고

2120
01:34:51,000 --> 01:34:54,179
제품 공간에서 변증법적으로 추론할 수 있는 지점에 도달해야 한다고 생각합니다.

2121
01:34:54,179 --> 01:34:57,840


2122
01:34:57,840 --> 01:35:01,560
uh를 명시적으로 나타내므로

2123
01:35:01,560 --> 01:35:04,920
필요한 것이 무엇인지 모르지만

2124
01:35:04,920 --> 01:35:07,100
간단한 자기 보존 에이전트에는 필요하지 않다고 말할 수 있습니다.

2125
01:35:07,100 --> 01:35:09,480


2126
01:35:09,480 --> 01:35:11,340


2127
01:35:11,340 --> 01:35:13,980


2128
01:35:13,980 --> 01:35:16,020


2129
01:35:16,020 --> 01:35:18,840


2130
01:35:18,840 --> 01:35:22,440
철학으로의 여행을 떠난

2131
01:35:22,440 --> 01:35:24,239
다음 이것을 여기에

2132
01:35:24,239 --> 01:35:25,500


2133
01:35:25,500 --> 01:35:27,719


2134
01:35:27,719 --> 01:35:29,760
제시한 모델

2135
01:35:29,760 --> 01:35:33,480
과 능동적 추론 사이의 잠재적인 관계에 다시 연결하고 아마도

2136
01:35:33,480 --> 01:35:34,620


2137
01:35:34,620 --> 01:35:36,420
하이브리드 모델의 절벽 가장자리까지 걸어가서

2138
01:35:36,420 --> 01:35:38,659


2139
01:35:38,659 --> 01:35:43,380
아리스토텔레스가 제안한 네 가지 원인

2140
01:35:43,380 --> 01:35:46,080
물질적 원인  변화의 원천인

2141
01:35:46,080 --> 01:35:48,840
능률적 원인으로 구성

2142
01:35:48,840 --> 01:35:50,159


2143
01:35:50,159 --> 01:35:53,219
형식적 원인은 본질이고

2144
01:35:53,219 --> 01:35:56,940
최종 원인은

2145
01:35:56,940 --> 01:36:01,139
목적론 대상의 최종 목표 그리고 귀하의

2146
01:36:01,139 --> 01:36:03,739
프레젠테이션은

2147
01:36:04,040 --> 01:36:06,719


2148
01:36:06,719 --> 01:36:10,020
이러한 다양한 형태의 목적론에 대한 디콘의 분석

2149
01:36:10,020 --> 01:36:11,520


2150
01:36:11,520 --> 01:36:12,900
과

2151
01:36:12,900 --> 01:36:15,420
실제로 제안된 권한 부여 모델 내에서

2152
01:36:15,420 --> 01:36:18,860


2153
01:36:18,860 --> 01:36:22,860
능동적 추론,

2154
01:36:23,460 --> 01:36:25,400


2155
01:36:25,400 --> 01:36:28,679


2156
01:36:28,679 --> 01:36:31,219
특히 연산자와 많은 유사점이 있는 예상 자유 에너지

2157
01:36:31,219 --> 01:36:34,080
기능과 병치할 때 자기 참조 목적론의 유형이었습니다.

2158
01:36:34,080 --> 01:36:36,780


2159
01:36:36,780 --> 01:36:38,460
다른 기능의 기능입니다.

2160
01:36:38,460 --> 01:36:39,719


2161
01:36:39,719 --> 01:36:41,000


2162
01:36:41,000 --> 01:36:43,980


2163
01:36:43,980 --> 01:36:47,880
예상되는

2164
01:36:47,880 --> 01:36:50,100
미래는

2165
01:36:50,100 --> 01:36:53,580
그들이 받는 감각에 대한 불확실성을 가장 많이 줄입니다. 이것이

2166
01:36:53,580 --> 01:36:56,400
능동적 추론을

2167
01:36:56,400 --> 01:36:58,760
지각 제어 이론과 밀접하게 연결하는 것입니다. 즉,

2168
01:36:58,760 --> 01:37:02,340
예상되는 자유 에너지는

2169
01:37:02,340 --> 01:37:05,940
궁극적으로

2170
01:37:05,940 --> 01:37:08,760
관찰에 대한 선호도

2171
01:37:08,760 --> 01:37:12,060
와 들어오는 관찰 사이의 차이를 보고 있다는 것입니다.

2172
01:37:12,060 --> 01:37:15,420
코인 관찰을 내 선호도에 맞출 수 있도록

2173
01:37:15,420 --> 01:37:19,260
게임에 머물고 싶은 것과 같습니다.

2174
01:37:19,260 --> 01:37:22,280


2175
01:37:22,280 --> 01:37:26,040


2176
01:37:26,040 --> 01:37:29,040
권한 부여가 게임의 액션 측면인지 궁금합니다.

2177
01:37:29,040 --> 01:37:31,280


2178
01:37:31,520 --> 01:37:35,280
예 반복적으로

2179
01:37:35,280 --> 01:37:37,679
자신이 굶주리지 않고

2180
01:37:37,679 --> 01:37:39,540
죽지 않는다는 것을 감지합니다.  갈증으로 인해 추위로 죽지 않고

2181
01:37:39,540 --> 01:37:43,380


2182
01:37:43,380 --> 01:37:48,719


2183
01:37:48,719 --> 01:37:51,480
권한 부여인 이 단일 값을 통해 기본 설정 벡터에 있게 될 것입니다.

2184
01:37:51,480 --> 01:37:53,219


2185
01:37:53,219 --> 01:37:55,800


2186
01:37:55,800 --> 01:37:57,420


2187
01:37:57,420 --> 01:38:00,659
하지만 먼저 선호도와 예상 관찰

2188
01:38:00,659 --> 01:38:02,940
사이의 차이를 줄이고 있는지 확인해야 합니다.

2189
01:38:02,940 --> 01:38:04,380


2190
01:38:04,380 --> 01:38:07,219


2191
01:38:11,040 --> 01:38:13,440
해당 지도에 대해 어떻게 생각하십니까? 또는

2192
01:38:13,440 --> 01:38:17,040
이러한 얽힌 모델을 잘 가져갈 수 있는 위치

2193
01:38:17,040 --> 01:38:19,320


2194
01:38:19,320 --> 01:38:22,860


2195
01:38:22,860 --> 01:38:25,679
사이에 인터페이스와 같은 것이 있을 수 있다고 생각합니다.

2196
01:38:25,679 --> 01:38:28,080
사물이 어떻게 작동하는지에 대한 모델이

2197
01:38:28,080 --> 01:38:31,679
어떻게 작동하는지에 대한 구성 모델처럼 생각한다면 두 가지 개념은

2198
01:38:31,679 --> 01:38:33,840


2199
01:38:33,840 --> 01:38:36,179


2200
01:38:36,179 --> 01:38:39,000
일종의

2201
01:38:39,000 --> 01:38:41,219
활성 추론 설정에서 사용하려는 특정 생성 모델을 유도할 수 있고 두 개념

2202
01:38:41,219 --> 01:38:45,000
사이에 존재하는 일종의 이중적 특성이 될 것입니다.  에이전트에

2203
01:38:45,000 --> 01:38:48,080


2204
01:38:48,080 --> 01:38:51,360


2205
01:38:51,360 --> 01:38:53,880
도움이 될 일종의 생성 모델의 제안 사이의 혼선

2206
01:38:53,880 --> 01:38:55,460


2207
01:38:55,460 --> 01:38:57,060
과

2208
01:38:57,060 --> 01:38:59,280
그것이 좋은 경우

2209
01:38:59,280 --> 01:39:01,260


2210
01:39:01,260 --> 01:39:04,620
제어 가능성 또는

2211
01:39:04,620 --> 01:39:07,320
권한 부여 및 이와 같은 것을 알고 피드백하는 좋은 상태 인코딩이 될 수 있습니다.  그래서 제 말은

2212
01:39:07,320 --> 01:39:09,120


2213
01:39:09,120 --> 01:39:11,340
이 주제에 대해 생각해야 할 것이 많다는 뜻입니다. 음, 음,

2214
01:39:11,340 --> 01:39:13,739


2215
01:39:13,739 --> 01:39:15,659


2216
01:39:15,659 --> 01:39:20,100


2217
01:39:20,100 --> 01:39:22,920


2218
01:39:22,920 --> 01:39:26,280
생성 모델이 어디에서 오는지 정당화할 필요가 있다는 식으로 표현하겠습니다. 어, 새로운 상황에서

2219
01:39:26,280 --> 01:39:28,260


2220
01:39:28,260 --> 01:39:30,060
사물이 작동하는 방식과 사물에 대한 새로운 이론에 대해  이와 같이

2221
01:39:30,060 --> 01:39:32,219


2222
01:39:32,219 --> 01:39:33,300


2223
01:39:33,300 --> 01:39:35,520
행동 측면과 내부

2224
01:39:35,520 --> 01:39:38,190
제어 가능성 측면이

2225
01:39:38,190 --> 01:39:39,480
[음악]

2226
01:39:39,480 --> 01:39:41,940
어떤 종류의 생성 모델을 지시하는 이중 프로세스가 있을 수 있다는 것을 알고 있습니다.

2227
01:39:41,940 --> 01:39:44,900


2228
01:39:47,280 --> 01:39:48,659


2229
01:39:48,659 --> 01:39:52,460


2230
01:39:52,460 --> 01:39:56,460


2231
01:39:56,460 --> 01:39:59,340
프로세스 이론은

2232
01:39:59,340 --> 01:40:02,340
효율적인 원인을 설명하는 것 같습니다.

2233
01:40:02,340 --> 01:40:03,540


2234
01:40:03,540 --> 01:40:06,780
특히

2235
01:40:06,780 --> 01:40:10,139


2236
01:40:10,139 --> 01:40:12,560
예상되는 자유 에너지의 실시간 버전인 변형 자유 에너지가 있는 것 같습니다.

2237
01:40:12,560 --> 01:40:16,920
한 번에 한 걸음 씩

2238
01:40:16,920 --> 01:40:20,159
내려가는 공과 같으므로 변형

2239
01:40:20,159 --> 01:40:23,600
추론은 증분 전개 최적화를 가능하게 합니다.

2240
01:40:23,600 --> 01:40:27,360
다시

2241
01:40:27,360 --> 01:40:30,000
그 감각 선호도

2242
01:40:30,000 --> 01:40:33,139
와 결과를 줄이는 데 중점을 두지만

2243
01:40:33,179 --> 01:40:35,280


2244
01:40:35,280 --> 01:40:38,219
모든 것을 수행하지만 어떤 의미에서 최종 원인을 지정합니다.

2245
01:40:38,219 --> 01:40:40,980


2246
01:40:40,980 --> 01:40:42,900


2247
01:40:42,900 --> 01:40:44,580
능동적 추론

2248
01:40:44,580 --> 01:40:47,100
생성 모델 내에 로컬 최종 원인이 있다고 말할 수 있습니다. 이는

2249
01:40:47,100 --> 01:40:49,020
선호도와 관찰 사이의 발산을 줄이는 것과 같지만

2250
01:40:49,020 --> 01:40:51,000


2251
01:40:51,000 --> 01:40:53,940


2252
01:40:53,940 --> 01:40:56,940


2253
01:40:56,940 --> 01:40:59,520


2254
01:40:59,520 --> 01:41:01,560
능동적 추론을 능동적 추론으로 만드는 행동 선택 측면의 생성 모델도

2255
01:41:01,560 --> 01:41:04,860


2256
01:41:04,860 --> 01:41:08,120


2257
01:41:08,219 --> 01:41:10,760


2258
01:41:10,760 --> 01:41:14,340
자기 참조 텔레다이나믹 방식의 최종 원인이 필요하므로

2259
01:41:14,340 --> 01:41:15,900


2260
01:41:15,900 --> 01:41:17,639


2261
01:41:17,639 --> 01:41:20,880


2262
01:41:20,880 --> 01:41:23,699


2263
01:41:23,699 --> 01:41:27,840
권한 부여가 바늘을 통해 이어지는 곳에서 능동적 추론이 선택되는 매우 흥미로운 아키텍처가 있을 수 있습니다.

2264
01:41:27,840 --> 01:41:30,199


2265
01:41:30,239 --> 01:41:33,360
그것은 원자가가 있는 아주 작은 표현

2266
01:41:33,360 --> 01:41:35,400


2267
01:41:35,400 --> 01:41:37,860
이고 다른 종류의 연결이거나

2268
01:41:37,860 --> 01:41:41,400
그들 사이의 매핑일 수 있기 때문에 우리는

2269
01:41:41,400 --> 01:41:45,420


2270
01:41:45,420 --> 01:41:49,320


2271
01:41:49,320 --> 01:41:53,880
원자가가

2272
01:41:53,880 --> 01:41:55,800
상황이

2273
01:41:55,800 --> 01:41:59,460
나아지고 있는지 여부와 광범위하게 연관되는 감정적 추론 작업과 같은 능동적 추론에서 원자가 모델을 본 적이 있습니다.  예상보다

2274
01:41:59,460 --> 01:42:02,880
불확실성을 줄이는 경우 통계적 불확실성 측면에서

2275
01:42:02,880 --> 01:42:04,739


2276
01:42:04,739 --> 01:42:06,360
예상보다 상황이 예상보다 잘 진행되고 있으며 그

2277
01:42:06,360 --> 01:42:10,380
반대의 경우도 마찬가지

2278
01:42:10,380 --> 01:42:14,900
이므로 매우

2279
01:42:14,900 --> 01:42:16,500
분산

2280
01:42:16,500 --> 01:42:19,500
지향적인

2281
01:42:19,800 --> 01:42:23,520
원자가입니다.

2282
01:42:23,580 --> 01:42:25,520
넓은

2283
01:42:25,520 --> 01:42:28,739
불확실성이

2284
01:42:28,739 --> 01:42:31,679
낮은 원자가와 관련되고 더 엄격한

2285
01:42:31,679 --> 01:42:33,360
불확실성이 연관되는 개념

2286
01:42:33,360 --> 01:42:35,159
긍정적인 원자가를 가지고 있고

2287
01:42:35,159 --> 01:42:36,659
그것이 실제로 얼마나 많은 일을 할 수 있는지에 대한 일종의 직교 원자가 개념과 같다는 것이 흥미롭습니다. 그것은

2288
01:42:36,659 --> 01:42:39,179


2289
01:42:39,179 --> 01:42:43,080


2290
01:42:43,080 --> 01:42:45,780
실행 가능한 원자가입니다.

2291
01:42:45,780 --> 01:42:49,739


2292
01:42:49,739 --> 01:42:51,300
아무 것도 할 수 없거나

2293
01:42:51,300 --> 01:42:54,719


2294
01:42:54,719 --> 01:42:58,560
할 수 있다는 것에 대한 높은 불확실성에 대해 높은 정밀도를 갖는 것이 좋습니다.  많거나 막대한

2295
01:42:58,560 --> 01:42:59,880
양

2296
01:42:59,880 --> 01:43:01,619
이므로 우리가 이

2297
01:43:01,619 --> 01:43:03,239
두 가지를 대조할 때

2298
01:43:03,239 --> 01:43:08,520
지배적인 방향은

2299
01:43:08,520 --> 01:43:11,820
최종 분석에서

2300
01:43:11,820 --> 01:43:15,119
권한을 부여할 수 있는 능력이 관찰 내용을 엄격하게 제어할 필요가 없다는 것입니다.

2301
01:43:15,119 --> 01:43:16,980


2302
01:43:16,980 --> 01:43:19,638


2303
01:43:20,100 --> 01:43:22,320
예

2304
01:43:22,320 --> 01:43:25,619
예 저는 많은 흥미로운 방법에 동의합니다.

2305
01:43:25,619 --> 01:43:29,179
하이브리드 이론은

2306
01:43:32,340 --> 01:43:34,699
매우

2307
01:43:34,699 --> 01:43:38,340
흥미로운 이야기입니다.

2308
01:43:38,340 --> 01:43:40,500
모델에 대한 질문을 하나 더 추측한 다음

2309
01:43:40,500 --> 01:43:42,000


2310
01:43:42,000 --> 01:43:44,219
수평선이

2311
01:43:44,219 --> 01:43:48,719
무한한 시간 지평선인지 또는

2312
01:43:48,719 --> 01:43:51,900
시간 처리가 무엇이며

2313
01:43:51,900 --> 01:43:53,699
시간이 연속적일 수 있는지 또는 시간이 항상

2314
01:43:53,699 --> 01:43:55,860
불연속적인지 닫을 것입니다.  그리고 그것은 유한한가 아니면 무한한

2315
01:43:55,860 --> 01:43:57,800
지평선입니까

2316
01:43:57,800 --> 01:44:00,179
그것은 어 그래서 연산자 Bellman

2317
01:44:00,179 --> 01:44:02,699
방정식은 유한한 지평선으로 공식화됩니다

2318
01:44:02,699 --> 01:44:03,960


2319
01:44:03,960 --> 01:44:06,060


2320
01:44:06,060 --> 01:44:09,719
무한 라이젠과 무한

2321
01:44:09,719 --> 01:44:11,940
음 또는 연속 시간으로 확장될 수 있다고 생각합니다 그것도

2322
01:44:11,940 --> 01:44:13,500
가능하다고 생각하지만

2323
01:44:13,500 --> 01:44:16,139
이제 공식화됨에 따라

2324
01:44:16,139 --> 01:44:19,320
이산적입니다  상태 불연속 시간 유한

2325
01:44:19,320 --> 01:44:21,540
Horizon

2326
01:44:21,540 --> 01:44:22,320
음

2327
01:44:22,320 --> 01:44:24,360
하지만 그래 내 말은 만들

2328
01:44:24,360 --> 01:44:27,179
수 있는 대안적 형식이 있다고 생각한다는 뜻이야

2329
01:44:27,179 --> 01:44:29,510


2330
01:44:29,510 --> 01:44:29,880
[음악] 음

2331
01:44:29,880 --> 01:44:31,800


2332
01:44:31,800 --> 01:44:33,960


2333
01:44:33,960 --> 01:44:37,280
기억이 나지 않는 또 다른 질문이 있었는지

2334
01:44:38,580 --> 01:44:42,000


2335
01:44:42,000 --> 01:44:45,420


2336
01:44:45,420 --> 01:44:49,560
연구의 다음 단계이며

2337
01:44:49,560 --> 01:44:54,000
작업 지속의 생태계를 어떻게 상상할 수 있습니까

2338
01:44:54,000 --> 01:44:56,219
예 저는 이

2339
01:44:56,219 --> 01:44:58,500
작업을

2340
01:44:58,500 --> 01:45:00,880
전산 신경 과학

2341
01:45:00,880 --> 01:45:01,380
[음악]에 도입하는 데 관심이 있습니다.

2342
01:45:01,380 --> 01:45:02,280


2343
01:45:02,280 --> 01:45:05,040
음 어 필요한 대안 모델이 많이 있기 때문입니다.

2344
01:45:05,040 --> 01:45:06,960


2345
01:45:06,960 --> 01:45:09,360
특히

2346
01:45:09,360 --> 01:45:12,179


2347
01:45:12,179 --> 01:45:14,340
제품 공간에서 해야 할 일을 정당화하는 측면에서 언급한 몇 가지 주제를 고려할 때

2348
01:45:14,340 --> 01:45:16,320


2349
01:45:16,320 --> 01:45:20,639
분산 시스템에서 제어를 어떻게 나타내는지 등이 있으므로

2350
01:45:20,639 --> 01:45:23,100


2351
01:45:23,100 --> 01:45:24,600
할 일이 많다고 생각합니다.

2352
01:45:24,600 --> 01:45:27,480
AI 측의 전산 신경 과학에서 저는

2353
01:45:27,480 --> 01:45:30,719
이것을 세계 모델에 넣고 싶습니다.

2354
01:45:30,719 --> 01:45:36,179
잘 알고 싶습니다 자동

2355
01:45:36,179 --> 01:45:38,699
인코더는 제가 첫 번째 슬라이드에서 했던 것과 같은 종류입니다.

2356
01:45:38,699 --> 01:45:40,440


2357
01:45:40,440 --> 01:45:42,960
고차원의 에이전트를 알고 있습니다.

2358
01:45:42,960 --> 01:45:45,119
멀티모달 세계는

2359
01:45:45,119 --> 01:45:47,040
어떻게 멋진 세계 모델을 가지고 있고

2360
01:45:47,040 --> 01:45:49,679
이것을 그런 식으로 입력합니까? 이것이

2361
01:45:49,679 --> 01:45:52,139
AI의 미래 방향입니다.

2362
01:45:52,139 --> 01:45:55,280
두 가지를 모두 수행하고 싶습니다.

2363
01:45:55,280 --> 01:45:58,440


2364
01:45:58,440 --> 01:46:01,199
나는 실시간 채팅의 댓글과

2365
01:46:01,199 --> 01:46:03,840
같은 더 많은 진술을 읽을 것이므로

2366
01:46:03,840 --> 01:46:06,119


2367
01:46:06,119 --> 01:46:08,100
활성 추론 저널에 포함되도록

2368
01:46:08,100 --> 01:46:11,340
Dave Douglas는

2369
01:46:11,340 --> 01:46:13,639
Deacon의 결과에 대해 썼습니다.

2370
01:46:13,639 --> 01:46:16,440
Galileo는 태양 중심 우주를 주장하여 문제가 덜 발생했을 수 있습니다.

2371
01:46:16,440 --> 01:46:18,179


2372
01:46:18,179 --> 01:46:19,800


2373
01:46:19,800 --> 01:46:22,080
목적 가치와 의미가

2374
01:46:22,080 --> 01:46:24,679
연결 설명 원리로서 과학에서 추방되어야 한다고 주장하는 것보다

2375
01:46:24,679 --> 01:46:26,940


2376
01:46:26,940 --> 01:46:29,460
갈릴레오가 허용한 나머지

2377
01:46:29,460 --> 01:46:32,340
연결 원리 인과 관계는 모든 훌륭한 설명 원리가 궁극적으로 호출에 의존해야 하는

2378
01:46:32,340 --> 01:46:34,139


2379
01:46:34,139 --> 01:46:37,440
뉴턴과 4년 사이에 설명력

2380
01:46:37,440 --> 01:46:38,760


2381
01:46:38,760 --> 01:46:41,100
의 한계에 도달했을 수 있습니다.

2382
01:46:41,100 --> 01:46:43,380


2383
01:46:43,380 --> 01:46:46,380
딱딱한 막대나

2384
01:46:46,380 --> 01:46:48,000
탄성 밴드에서

2385
01:46:48,000 --> 01:46:51,719
솔라 카사(Sola casa)의 갈릴리 계획은

2386
01:46:51,719 --> 01:46:54,179


2387
01:46:54,179 --> 01:46:56,000
의미 가치

2388
01:46:56,000 --> 01:46:59,040
반사실이 무의미한 것처럼

2389
01:46:59,040 --> 01:47:02,760
엄격하고 문자 그대로 판단되어야 한다는 카르납의 주장에서 부조리에 도달

2390
01:47:02,760 --> 01:47:05,159
했습니다. 우리는

2391
01:47:05,159 --> 01:47:07,739
갈릴레이 계획이 단순히

2392
01:47:07,739 --> 01:47:10,080
포기되고 의미 가치와  목적은 인과와

2393
01:47:10,080 --> 01:47:12,420


2394
01:47:12,420 --> 01:47:14,520


2395
01:47:14,520 --> 01:47:16,980
함께 환원 불가능한 설명 원리로 과학에 복원되어야 합니다.

2396
01:47:16,980 --> 01:47:20,040
저는 붐과

2397
01:47:20,040 --> 01:47:22,920
Heisenberg의 양자 완전성 및

2398
01:47:22,920 --> 01:47:26,159
Pauli와 Young의 동시성이

2399
01:47:26,159 --> 01:47:29,340
너무 모호해서 한 마디로 매우 유용하지 않다는 신비주의를 발견했습니다.

2400
01:47:29,340 --> 01:47:31,860
그것은 자금을 지원받는 과학의 전통이 되었습니다.

2401
01:47:31,860 --> 01:47:33,600


2402
01:47:33,600 --> 01:47:35,699
인과관계

2403
01:47:35,699 --> 01:47:39,119
만이 우리 엔터프라이즈를 묶어야 한다고 주장하는 것은 이것이 궁극 현실의

2404
01:47:39,119 --> 01:47:41,699
특징이 아닌 인간의 전통입니다.

2405
01:47:41,699 --> 01:47:44,340
의미와 가치도 그

2406
01:47:44,340 --> 01:47:48,800
자리를 차지합니다.

2407
01:47:51,420 --> 01:47:53,699


2408
01:47:53,699 --> 01:47:56,340


2409
01:47:56,340 --> 01:47:58,560
다시 오신 것을 환영합니다.

2410
01:47:58,560 --> 01:48:00,719


2411
01:48:00,719 --> 01:48:03,540
이 모든 것이 저를 어떻게 이어가는지 정말 기대하고 있습니다. 저를 초대해 주셔서

2412
01:48:03,540 --> 01:48:05,520
다시 한 번 감사드립니다.

2413
01:48:05,520 --> 01:48:07,199


2414
01:48:07,199 --> 01:48:09,780
Discord를 위해 얼마나 많은 일을 하시는지 매우 감명받았습니다.

2415
01:48:09,780 --> 01:48:11,699
훌륭한 커뮤니티입니다.

2416
01:48:11,699 --> 01:48:13,800
모두 매우 친절합니다.

2417
01:48:13,800 --> 01:48:16,380
열광적이어서 보고 싶었는데

2418
01:48:16,380 --> 01:48:18,360
우연히 우연히 발견해서

2419
01:48:18,360 --> 01:48:21,659
다행입니다 어

2420
01:48:21,659 --> 01:48:24,260
디스코드에 제 소개를 할 수 있어서 기쁩니다 감사합니다

2421
01:48:24,260 --> 01:48:27,060
훌륭합니다 다음 시간까지 좋습니다 감사합니다

2422
01:48:27,060 --> 01:48:31,100
훌륭합니다 감사합니다

