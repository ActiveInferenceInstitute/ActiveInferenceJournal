[
  {
    "start": 6.646,
    "end": 24.739,
    "text": " hello and welcome this is active model stream 15.0 with andrew peshea from abm to active inference inference based action selection so andrew thank you for joining looking forward to this presentation and overview so go for it",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 26.39,
    "end": 27.031,
    "text": " Awesome.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 27.052,
    "end": 28.034,
    "text": "Thank you so much, Daniel.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 28.976,
    "end": 30.439,
    "text": "Yeah, again, I'm Andrew Pesce.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 30.499,
    "end": 40.382,
    "text": "And I, I am a full time data analyst slash scientist slash engineer, many roles to fill when working in the nonprofit world.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 40.885,
    "end": 60.008,
    "text": " and so a couple months ago i gave a workshop like a full talk on constructing active inference agents using the pi mdp library as we'll be using here today and during that talk i described",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 60.41,
    "end": 70.832,
    "text": " how we might be able to employ active inference agents whenever putting together agent based models in the context of computational social science.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 70.952,
    "end": 78.688,
    "text": "And so you'll see some links in the description referring back to that tutorial that I gave, including my GitHub, which has all",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 79.073,
    "end": 89.888,
    "text": " tutorial materials on that page, as well as some in-browser Google Colab scripts that run Python code, and so you can actually follow along.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 90.75,
    "end": 107.173,
    "text": "A lot of these learning resources, including this talk I'm giving, are sort of part of a personal initiative I've taken to try and create and develop and then share open source learning resources for applying active inference.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 107.153,
    "end": 123.019,
    "text": " I see so much potential as someone coming from more of a social sciences, economics-oriented background for applying active inference agents in areas where maybe they haven't been employed too much before.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 122.999,
    "end": 149.37,
    "text": " And as active inference is beginning to be increasingly applied to social science research, such as, you know, attempting to study and simulate something like human behavior and decision making, I thought that that conference was a really ripe opportunity to try and make those kinds of connections for people and just kind of get those kinds of dialogues moving.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 150.151,
    "end": 151.673,
    "text": "And so,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 152.986,
    "end": 169.341,
    "text": " For me, as someone who came to active inference with that kind of background, but also a strong interest in cognition, I just really wanted to kind of do some from scratch sort of tutorials on how to construct agents.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 169.321,
    "end": 188.241,
    "text": " As someone who's been interning with Active Inference Institute for nearly a year now, and I'll also be giving a talk at our upcoming symposium, which itself will be a kind of extension of that tutorial I gave a couple months ago, as well as the talk I'll be giving now.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 188.221,
    "end": 218.008,
    "text": " yeah i would just like to uh really make it plain for people sort of the general mechanics that go into constructing an active inference agent i would also refer people back to the textbook that was published a couple of years ago by uh pazulo par and carl friston it's freely accessible you'll find links to it in my slides as well as in the collab scripts if you follow the github link a lot of material that i'm",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 217.988,
    "end": 221.794,
    "text": " using to construct these tutorials is actually coming from that textbook.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 221.994,
    "end": 232.591,
    "text": "So anyone involved with the Institute reading group where we cover the textbook will kind of feel hopefully a little at home whenever they follow these tutorials.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 234.474,
    "end": 235.255,
    "text": "So",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 235.707,
    "end": 237.129,
    "text": " We'll start off now.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 238.07,
    "end": 248.925,
    "text": "We'll be constructing the longer span of the tutorial is one, make the connection between active inference and agent-based modeling.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 249.506,
    "end": 254.172,
    "text": "Agent-based modeling is a very common paradigm in computational social science.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 254.506,
    "end": 268.301,
    "text": " That said, and this is not doing it justice, but I'm saying this just to keep it brief, in some ways it's very traditional in the kinds of assumptions that it makes more often than not about human behavior.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 269.442,
    "end": 281.475,
    "text": "Oftentimes people rely upon a kind of homo economicus or self-centered utility maximizer kind of description of what defines human decision making.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 281.455,
    "end": 293.233,
    "text": " And I think that that loses a lot of the sort of richness that we find in cognitive science, neuroscience and behavioral studies of how people might actually make decisions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 293.853,
    "end": 298.941,
    "text": "And active inference supplies us with, you know, a rather, you know,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 299.647,
    "end": 324.692,
    "text": " simple assumption it's a very complex assumption that being free energy minimization whenever you break it down but ultimately that's a core key assumption that we're making and we don't have to make a ton of additional assumptions beyond that whenever considering how to simulate uh a human behavior beyond how do we construct our model right or how do we construct our agent and so um",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 324.993,
    "end": 330.167,
    "text": " That's sort of the connection that I'm making here between agent-based modeling and active inference.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 330.187,
    "end": 335.34,
    "text": "Then after that, I describe how what I did with that tutorial was I recreated",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 335.624,
    "end": 344.879,
    "text": " This kind of paradigmatic simulation published back in 2007 by doctors Laser and Friedman.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 345.46,
    "end": 351.65,
    "text": "You'll see links to that paper as well at the GitHub site through the link.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 351.67,
    "end": 359.522,
    "text": "And what they do is that they set up what I would deem to be a so-called traditional social science agent-based model.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 360.059,
    "end": 366.613,
    "text": " where agents are basically pre-programmed to do particular things.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 366.734,
    "end": 367.96,
    "text": "They don't exhibit",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 368.581,
    "end": 374.77,
    "text": " autonomous decision-making, which is the promise of a lot of generative AI today.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 374.79,
    "end": 384.584,
    "text": "And I think that active inference especially emphasizes that autonomy in the sense that these are agents who are minimizing their own free energy.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 384.664,
    "end": 392.395,
    "text": "And then from there, predicting what should be the next action that they should take or set of actions, meaning a policy that they should take,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 392.375,
    "end": 419.378,
    "text": " And so they engage in all these kind of cognitive functions or mechanisms that we find humans to have related to planning and the idea of having habits that you build up over time and how those sort of compete with more deliberate decision making and the kind of executive functioning in the prefrontal cortex of the brain and finding those kinds of connections.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 419.999,
    "end": 424.666,
    "text": " without further ado, what we'll do now is simply create one agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 425.567,
    "end": 429.594,
    "text": "And we'll I'll go through the steps of how to do that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 430.415,
    "end": 443.294,
    "text": "And this is the agent that features in the laser Friedman model recreation that I do where I use active inference agents, as opposed to the kind of pre programmed agents that that they use.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 444.656,
    "end": 446.479,
    "text": "So",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 447.202,
    "end": 450.868,
    "text": " We'll start with saying, again, this is PyMDP.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 451.69,
    "end": 452.451,
    "text": "The link is there.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 452.872,
    "end": 454.234,
    "text": "We import some libraries.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 455.656,
    "end": 459.022,
    "text": "It's relatively not too many, and some of them are just for the plots.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 460.685,
    "end": 464.451,
    "text": "The main thing is you can pip install PyMDP",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 464.583,
    "end": 487.89,
    "text": " uh there will be mentions later but there have been many updates to that library over the past couple of years uh and a little bit more context on py mdp as far as i understand it from a couple conversations with the developers is that this package is uh directly inspired by and in certain ways trying to emulate the mechanics of uh the spm",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 488.292,
    "end": 498.524,
    "text": " package developed by Friston et al in MATLAB for constructing active inference agents and environments and processes.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 499.105,
    "end": 509.457,
    "text": "So it's sort of the exemplar Python library for doing active inference as far as I'm aware.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 509.825,
    "end": 519.348,
    "text": " That said, there's so much complexity whenever these libraries are constructed and a lot of dependencies between different sub libraries and so on.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 519.448,
    "end": 527.547,
    "text": "So it becomes really useful to find more focused sort of snapshots of how to construct, say, an agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 527.527,
    "end": 533.034,
    "text": " and understanding how those mechanics work without necessarily having to scavenge through the code.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 533.054,
    "end": 540.983,
    "text": "That said, there are some examples and example tutorials given at the PyMDP website that I've linked there on the screen.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 541.784,
    "end": 544.528,
    "text": "So please feel free to peruse those.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 545.188,
    "end": 548.252,
    "text": "And so moving on from there.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 549.262,
    "end": 555.909,
    "text": " For anyone familiar with the textbook, it's very useful to refer to chapters six and seven.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 556.67,
    "end": 566.28,
    "text": "Chapter six refers to kind of providing a general recipe for constructing agents and environments and running simulations.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 567.101,
    "end": 574.729,
    "text": "And then from there, chapter seven kind of expands upon those ideas by specifically creating",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 574.709,
    "end": 587.875,
    "text": " partially observable markup decision making policies processes or pomdps after which pi mdp kind of cleverly takes its name and um those are the kind of discrete",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 588.226,
    "end": 592.694,
    "text": " time discrete state space models that we'll be working with.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 592.754,
    "end": 602.51,
    "text": "That is, they play out in action perception loops, one time step at a time, as opposed to it being continuous time.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 602.63,
    "end": 610.183,
    "text": "So you could say, you know, at time step one, or t equals one, and then at time step two, this happens, time step three, this happens.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 610.163,
    "end": 633.623,
    "text": " and then discrete state spaces meaning that we're not looking at continuous variables from continuous distributions per se we're looking at uh probability mass functions and you know just more concrete like you know there's a hidden state uh factor called color and it has two levels red and blue you know these kind of definitive discrete uh factors and levels so",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 633.89,
    "end": 636.275,
    "text": " to construct an active inference agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 637.076,
    "end": 641.725,
    "text": "Probably this is the general outline all smashed into one slide.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 642.647,
    "end": 654.43,
    "text": "So the first three steps, defining states, defining observations, defining controls slash actions slash policies with the nuances for all three of those additional terms.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 654.848,
    "end": 658.636,
    "text": " So states, what are our agents uncertain about?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 659.318,
    "end": 666.994,
    "text": "What kind of sets of beliefs do they hold that they end up inferring and updating, potentially learning over time?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 667.636,
    "end": 673.228,
    "text": "And then defining observations, what do our agents observe from their environment?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 673.208,
    "end": 684.969,
    "text": " It's not enough to claim that you have an active inference agent and throw it into some ethereal space where it has no sensory receptors, no sensorium.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 685.069,
    "end": 692.342,
    "text": "You need to be able to define what are the senses, so to speak, that the agent has available.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 692.923,
    "end": 696.229,
    "text": "The technical phrasing being observation modalities.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 696.209,
    "end": 713.728,
    "text": " For example, an agent might have a visual observation modality where it can take in discrete levels, rain or no rain, meaning at any given moment it's observing if there's rain or no rain.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 713.708,
    "end": 719.156,
    "text": " through its visual observation modality or visual sensory receptor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 719.636,
    "end": 726.346,
    "text": "Being able to clearly define those kinds of connections almost as if we could view them on a graph, which we will do momentarily.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 727.107,
    "end": 730.672,
    "text": "And then defining controls slash actions slash policies.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 731.112,
    "end": 735.438,
    "text": "For all intents and purposes going forward, I'm going to be relying upon the word actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 736.42,
    "end": 743.209,
    "text": "That's because actions are simply, in this case, discrete actions an agent can take at a given time step.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 743.189,
    "end": 745.633,
    "text": " There's nothing more to it than that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 746.294,
    "end": 750.081,
    "text": "You can walk or you can run or you can sit.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 750.141,
    "end": 755.951,
    "text": "Those would be three actions that an agent could do at any given time step.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 756.032,
    "end": 763.645,
    "text": "They're not doing multiple of those in the same time step, and they're not doing them in any kind of deterministic way, so to speak.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 763.625,
    "end": 776.637,
    "text": " So with controls, that's a term that comes up very frequently in the literature, and it also relates to other ways of doing, say, reinforcement learning related to engineering problems or otherwise.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 777.137,
    "end": 793.632,
    "text": "But the idea of a control is that it's just an action with kind of an additional nuance to it that it relates to the idea of this is an action that can actually change or control something, that something being a hidden state or a hidden state factor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 793.612,
    "end": 814.371,
    "text": " So it's, you know, whenever kind of putting together the matrices involved in constructing POMDP agents, there are times where you'll need, let's say, and I'll clarify what some of these words mean for anyone who's still new to modeling here, but",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 814.705,
    "end": 842.822,
    "text": " so with controls like there might be it might be the case that you need some kind of sub array like a b matrix or sub matrix that um you know doesn't really do anything like it might be a in state for a rat in the teammates uh who you know they they know that they can control which location of the teammates they go to they could go to the left arm they could go to the right arm but they don't necessarily think that they can change",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 842.802,
    "end": 868.0,
    "text": " the location of the reward it's always either on the left or it's on the right and you don't know until you see it right so it's it's like the control there would be choosing the left or right arm and the left or right arm is the correct option being like a uh or rather the left or right arm in state where the rat infers if it's gone left or gone right like that is something it can",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 868.3,
    "end": 868.762,
    "text": " control.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 869.183,
    "end": 873.036,
    "text": "Moving on with policies, policies are sequences of actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 873.117,
    "end": 879.88,
    "text": "In this case, you could have, you know, in the teammates, you have a rat who can choose to go left,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 880.585,
    "end": 881.506,
    "text": " and then stay there.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 881.526,
    "end": 884.21,
    "text": "It can choose to go right and stay there.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 884.43,
    "end": 888.876,
    "text": "It could choose to go to the queue and then go left or otherwise.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 888.896,
    "end": 891.539,
    "text": "But the idea is it's just a sequence of actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 891.96,
    "end": 898.528,
    "text": "And so agents can have their own sort of hypotheses, so to speak, about individual policies.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 899.009,
    "end": 907.42,
    "text": "And that's very interesting to think about whenever considering active inference agents who you need to engage in kind of longer term planning horizons and",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 907.4,
    "end": 933.238,
    "text": " and who might be used for imagine for people who are into engineering or otherwise might be looking at like scheduling problems or inferring situations where you know that you're going to need to do a series of actions in a sequence that maybe need to have some kind of coherency with one another such that it's useful to refer to that specific set of actions that has a policy.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 933.893,
    "end": 937.679,
    "text": " Define states, define observations, define your actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 937.699,
    "end": 951.459,
    "text": "After that, we relate those three components of a model via a series of categorical probability distributions, which are in the A, B, C, D, and E matrices.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 952.12,
    "end": 954.384,
    "text": "Again, all of these feature in the textbook.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 955.125,
    "end": 959.952,
    "text": "And then those will comprise the beliefs of the agents.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 961.855,
    "end": 973.173,
    "text": " Then we define our environment, which here, we're not going to, for the sake of today, for this shorter talk, we're not going to get too far into defining an environment.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 974.074,
    "end": 984.15,
    "text": "I will say that common ways of defining environments, especially whenever you're just beginning the modeling process, is that oftentimes people will actually construct another",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 984.13,
    "end": 1006.678,
    "text": " POMDP, which itself represents the environment, because in that way it can take in its own observations, those being the actions of the agent, and then it can output its own actions, those actions being the observations for the agent that's forming, kind of squaring the circle on our action perception loop.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1006.895,
    "end": 1015.728,
    "text": " But for the sake of today, we'll just be looking at a fully deterministic environment where I manually have it take certain inputs, send out certain outputs.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1015.989,
    "end": 1017.01,
    "text": "It's still an environment.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1017.231,
    "end": 1019.855,
    "text": "It's just not a very complex one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1019.875,
    "end": 1032.514,
    "text": "And then after that, we just define the active inference loop, run it as a simulation, runs the full loop, agent receives observations in first states, it learns, there's policies, it commits an action.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1032.916,
    "end": 1045.916,
    "text": " Then after that, a good modeling practice, if you're actually trying to do something with what you're modeling and trying to model some real phenomena, is that you would look at the results of your simulation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1045.956,
    "end": 1048.64,
    "text": "You would look at what makes sense to you, what doesn't.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1049.08,
    "end": 1053.527,
    "text": "Maybe there are some parameters that don't quite make sense that you've set up for the agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1053.607,
    "end": 1057.573,
    "text": "Maybe it's missing an observation modality.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1057.553,
    "end": 1058.635,
    "text": " or otherwise.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1058.996,
    "end": 1072.339,
    "text": "Or if you're using these simulations in a more productive way to derive insights, then the idea is that you could tune things and you could modify the environment as if you're",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1072.657,
    "end": 1076.823,
    "text": " you know, introducing some kind of intervention.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1077.043,
    "end": 1078.906,
    "text": "And then you could see how things play out differently.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1079.287,
    "end": 1079.747,
    "text": "Right.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1079.767,
    "end": 1088.94,
    "text": "In the case of people who are maybe concerned with the policy design or we're kind of analyzing agent behavior under various kinds of conditions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1091.424,
    "end": 1100.537,
    "text": "The agent we'll be constructing today is an agent whose task is to find a good solution to a complex task or problem.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1100.872,
    "end": 1120.138,
    "text": " The idea is that the fuller idea is that they're trying to navigate what's called an NK landscape, which is, you know, you could visualize this as a broad set of solutions, and each of them has its own fitness values.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1120.238,
    "end": 1122.962,
    "text": "So we're looking now at a fitness landscape.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1122.982,
    "end": 1128.229,
    "text": "At any given point in time in the fuller simulation, which I'll cover in maybe future talks,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1128.597,
    "end": 1157.727,
    "text": " is that at any given time an agent has a solution currently it can for the sake of this talk i'll say it as simply as this the agent can either at each discrete time step during the action perception loop they can either explore meaning they try to find a new solution that's better than the one they currently have or they can exploit their neighbor which means they steal their neighbor's answer",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1158.483,
    "end": 1172.66,
    "text": " For more context, this is useful for understanding if you wanted to put agents into a network where they interact with one another, which is precisely what my multi-agent simulation from the tutorial does.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1173.24,
    "end": 1175.403,
    "text": "Again, review the GitHub.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1175.643,
    "end": 1177.445,
    "text": "All of the code is there for doing so.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1178.226,
    "end": 1184.794,
    "text": "The rest of the slides in this particular slide deck also get into that, but we're only focusing on these.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1185.415,
    "end": 1188.414,
    "text": " so that the agent can explore or exploit.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1188.656,
    "end": 1190.447,
    "text": "And a quick note as well,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1190.63,
    "end": 1200.665,
    "text": " Let's be cautious not to confuse the use of the words explore and exploit here with how they appear in a lot of the literature on the exploration versus exploitation problem.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1201.707,
    "end": 1205.873,
    "text": "Here, we're just going to say those are the names of the agent's actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1205.953,
    "end": 1209.819,
    "text": "They could be replaced with study or cheat, right?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1210.38,
    "end": 1213.645,
    "text": "But I'm just, I recreated the laser Freeman model.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1213.745,
    "end": 1215.128,
    "text": "They use explore, exploit.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1215.588,
    "end": 1216.99,
    "text": "It makes sense in a particular way.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1217.151,
    "end": 1218.713,
    "text": "And so we're going to stay with that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1218.693,
    "end": 1225.221,
    "text": " After that, the agent will infer an intention hidden state.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1226.583,
    "end": 1232.53,
    "text": "That is, they'll receive observations from their environment.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1232.69,
    "end": 1234.612,
    "text": "They chose to explore or exploit.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1235.233,
    "end": 1238.117,
    "text": "They receive observations as a response from their environment.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1238.917,
    "end": 1245.966,
    "text": "They'll infer a hidden state and then they'll learn, meaning they'll update the parameter values of",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1248.342,
    "end": 1251.751,
    "text": " Let me move to this.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1251.931,
    "end": 1254.137,
    "text": "This is much more representative of the process.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1254.798,
    "end": 1258.688,
    "text": "So we can start at the top, the agent explore or exploits.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1259.45,
    "end": 1261.896,
    "text": "Environment takes in those actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1262.315,
    "end": 1273.992,
    "text": " And then based upon whatever rules you set for it to have, or again, you could construct some kind of generative model that will kind of do it on its own.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1275.174,
    "end": 1282.685,
    "text": "You could add stochasticity or some kind of error term or something so that it's not entirely deterministic, however you like.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1284.007,
    "end": 1290.837,
    "text": "But it will generate observations at any time step the agent, after committing an action,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1294.31,
    "end": 1316.908,
    "text": " the environment will send back two observations to the agent um these upper two improvement or no improvement showing that oh the agent explored for example and then saw an improvement in its solution to the problem and then or no improvement you know and then uh",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1317.192,
    "end": 1323.105,
    "text": " The other observation is self or neighbor, which is a one-to-one mapping.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1323.205,
    "end": 1326.633,
    "text": "That is, if you explore, it's going to return self.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1327.174,
    "end": 1329.7,
    "text": "If you exploit, it's going to return neighbor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1330.102,
    "end": 1335.169,
    "text": " The idea is this agent has two observation modalities.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1335.189,
    "end": 1341.878,
    "text": "One of the first one relates to the quality of their solution and the outcome of their action.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1342.819,
    "end": 1353.173,
    "text": "And then the second observation modality simply is a kind of self-reflective observation, which is who did I attend to after that?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1353.794,
    "end": 1357.518,
    "text": " The agent will take those observations to infer hidden state.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1358.119,
    "end": 1365.907,
    "text": "It only has one hidden state factor that contains two levels, self and neighbor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1366.848,
    "end": 1370.712,
    "text": "There will be, again, a one-to-one mapping between self and neighbor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1371.193,
    "end": 1378.941,
    "text": "If you see the outcome you attended to yourself, then you're going to infer that you attended to yourself and vice versa for neighbor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1379.596,
    "end": 1404.878,
    "text": " Um, and then in addition to that inference learning occurs, uh, which, uh, modifies the, uh, categorical probability distribution describing, uh, the, the probability of those outcomes given state beliefs and the agent from there and, and for actions or policies you should take and carry them out and we proceed.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1407.524,
    "end": 1415.879,
    "text": " So this slide, and there will be times that I might zoom through particular slides, but in this case, this is one that's good to reflect on.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1416.921,
    "end": 1430.885,
    "text": "Something that I think a lot of people miss or maybe struggle with, having been involved with the Institute, the reading group for some time and having my own trials and errors in learning how these things work, is that there's a lot of nestedness.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1431.106,
    "end": 1432.468,
    "text": "We're working with a lot of",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1432.448,
    "end": 1454.153,
    "text": " uh matrices uh anyone who not only works with imdp but also matlab and spm is very familiar that it's crucial to be able to understand how to construct matrices how to construct matrices that represent categorical probability distributions i.e for the agent their beliefs um",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1454.133,
    "end": 1458.48,
    "text": " And so it's really important to wrap your head around that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1458.6,
    "end": 1461.004,
    "text": "And so I just really wanted to spell things out.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1461.024,
    "end": 1469.678,
    "text": "And there's an additional collab script that I'm currently writing that already has now a bunch of markdown cells so that you can not only run the code,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1469.658,
    "end": 1475.204,
    "text": " but you can see full descriptions on how these things work.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1475.244,
    "end": 1484.874,
    "text": "I'm basically adding more things to that script that weren't available to me, or I just didn't have time to include whenever I devised this initial tutorial.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1486.656,
    "end": 1497.167,
    "text": "But now that we've defined our hidden states, observations, and controls, we'll link them together through the A, B, C, D, and E.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1497.451,
    "end": 1498.152,
    "text": " matrices.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1498.973,
    "end": 1506.681,
    "text": "And so hidden states, a clarification on terminology, agents will have hidden state factors.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1507.562,
    "end": 1513.588,
    "text": "They're called hidden state factors, they'll have, you know, say, in hidden state factors.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1513.969,
    "end": 1524.64,
    "text": "And, and so our agent has only one is the attention hidden state factor containing two discrete levels, self and neighbor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1524.822,
    "end": 1534.217,
    "text": " You see the same exact kind of nestedness with observations and observation or sometimes referred to as outcome modalities.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1534.778,
    "end": 1537.923,
    "text": "So you'll have M observation modalities.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1538.064,
    "end": 1539.406,
    "text": "Our agent has two of them.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1539.506,
    "end": 1548.18,
    "text": "One of them is for outcomes, which the discrete levels of which are improvement and no improvement, as I showed before.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1548.278,
    "end": 1576.598,
    "text": " um this code actually includes a third one called unobserved uh it never comes up in any of the simulations that are run i thought it would be interesting though to include it if only because it shows that you know you can include uh additional dimensions in your model even if you don't know if they're going to come into play at any point the simulation uh it can potentially change things depending on how you set those initial values in the uh belief distributions but uh",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1576.679,
    "end": 1580.662,
    "text": " You know, for the time being, I just wanted to show that it's possible to do that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1581.923,
    "end": 1584.686,
    "text": "And finally, controls and control factors.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1585.406,
    "end": 1591.331,
    "text": "So actions, you know, again, as I mentioned earlier, an action is just a discrete thing an agent can do.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1591.832,
    "end": 1599.138,
    "text": "You could have similarly with nestedness, you could have a whole control factor of different actions an agent could take for the total control factors.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1599.198,
    "end": 1606.264,
    "text": "Our agent will only have one, and it will contain two discrete levels or discrete actions, explore and exploit.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1611.07,
    "end": 1622.021,
    "text": " As far as defining hidden state factors in states, observation modalities, observations, and then controls or actions, this is it.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1622.461,
    "end": 1624.443,
    "text": "This is all the code you need.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1624.743,
    "end": 1633.932,
    "text": "That's part of the, and I'm following a certain kind of nomenclature that PyMDP, the developers use in their tutorial website.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1634.253,
    "end": 1636.975,
    "text": "It's a very clever way of keeping track of things.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1638.257,
    "end": 1639.778,
    "text": "None of these,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1639.758,
    "end": 1665.428,
    "text": " string values like cell it's uh improvement none of them matter so to speak um they're just a good point of reference by uh including them in a list so this first list attention state names represents the hidden state factor uh for attention and it just it the list contains two discrete levels self or neighbor",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1665.408,
    "end": 1687.213,
    "text": " i included one in this simulation to denote you have one neighbor so neighbor one uh and then from there you just store uh the number of states uh for each in state factor uh this appears a little redundant because we only have one but i'm just you know this if you were to add like say multiple hidden state factors this would be more interesting um",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1687.852,
    "end": 1691.518,
    "text": " And then tracking the number of in state factors that you have.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1692.66,
    "end": 1703.919,
    "text": "For anyone unfamiliar with Python programming, the lane alien method allows you to just see what is the length of the object that you're inputting.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1704.58,
    "end": 1710.75,
    "text": "So we only have one in state factor, which leads us to one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1712.373,
    "end": 1712.914,
    "text": "The next",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1713.417,
    "end": 1715.945,
    "text": " Small code snippet, very similarly.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1716.226,
    "end": 1718.754,
    "text": "Now we define each observation modality.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1718.775,
    "end": 1722.527,
    "text": "The outcome observation modality has three discrete levels.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1722.707,
    "end": 1724.152,
    "text": "Improvement, no improvement.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1724.674,
    "end": 1726.279,
    "text": "As I mentioned earlier, unobserved.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1727.626,
    "end": 1733.392,
    "text": " the attention observation modality contains two discrete observations, self or neighbor one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1733.852,
    "end": 1739.759,
    "text": "So recall that in given time step, an agent is going to receive one of each of these.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1740.039,
    "end": 1751.691,
    "text": "So at time step four, the agent could receive improvement and neighbor one, or could receive no improvement and self or unobserved and self.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1752.111,
    "end": 1755.675,
    "text": "The point is that it will receive one of each, right?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1756.043,
    "end": 1762.509,
    "text": " Um, again, we track those using, uh, the length or LEN, uh, function.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1763.01,
    "end": 1768.975,
    "text": "And then once again, actions, uh, we put them, we only have two actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1769.015,
    "end": 1775.281,
    "text": "So I just referred to it as the action, uh, control factor, and we included our two actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1775.341,
    "end": 1777.723,
    "text": "You can explore, or you can exploit neighbor one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1778.604,
    "end": 1781.447,
    "text": "And we track that and the number of controls available to the agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1782.448,
    "end": 1782.608,
    "text": "Um,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1783.01,
    "end": 1784.172,
    "text": " Again, that's it.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1784.512,
    "end": 1808.933,
    "text": "And if you can determine this kind of design for your agent early on and then begin programming, as the authors of the textbook acknowledge, it's quite an iterative process whenever it comes to computational modeling of just about anything that includes active inference agents and running simulations.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1808.913,
    "end": 1809.734,
    "text": " and so on.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1809.754,
    "end": 1827.782,
    "text": "So this is a very crucial first step because it will inform a lot of what you do next, as well as what you might end up changing during that process of iteratively changing your model of your model.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1828.319,
    "end": 1832.384,
    "text": " The A matrix is the first step of linking these things.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1832.484,
    "end": 1840.775,
    "text": "The A matrix will link together the observation modalities and hidden state factors that we defined earlier.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1841.276,
    "end": 1846.222,
    "text": "We need one subarray for each outcome modality.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1846.643,
    "end": 1850.648,
    "text": "So I want to just draw attention to this upper right equation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1851.235,
    "end": 1863.29,
    "text": " Again, matrix operations are perhaps the main hurdle in learning how to construct PIMDP agents or any POMDP agents, including MATLAB.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1864.511,
    "end": 1875.505,
    "text": "So a useful rule of thumb is just remembering that whenever you construct a matrix to represent, say, the A matrix, the likelihood matrix,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1875.485,
    "end": 1896.16,
    "text": " uh you know that the probability of whatever outcome you're looking at whatever observation modality you're looking at we'll start with the outcome one which again uh includes improvement no improvement none observed the probability of any of those observations conditioned on",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1897.557,
    "end": 1906.149,
    "text": " every single one of your state factors, which nicely for us is as simple as the way it looks to the far left.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1906.63,
    "end": 1915.903,
    "text": "Probability, observation, modality, outcome conditioned on the hidden state factor for attention.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1916.221,
    "end": 1931.682,
    "text": " right so we're really just uh working with these these two dimensions um it would become three dimensional matrices if say we had two hidden state factors this would get expanded um so uh",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1932.067,
    "end": 1941.44,
    "text": " The typical way of doing this in PyMDP, PyMDP contains a sub library utils containing just different utility functions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1942.101,
    "end": 1955.34,
    "text": "And the sort of framework for constructing these kinds of beliefs in PyMDP is by using what are called object arrays, which are already available in the NumPy library.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1955.32,
    "end": 1978.56,
    "text": " uh it's effectively a numpy array that allows for uh data types aside from float values so it's kind of a more flexible version of a numpy array and that allows you to do things like say create an a matrix that's your representative of your overall",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1979.317,
    "end": 1984.356,
    "text": " likelihood matrix for everything, all observation modalities and state factors.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1984.376,
    "end": 1990.98,
    "text": "And then you can construct within it individual sub arrays, one for each observation modality.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1991.602,
    "end": 1997.049,
    "text": " And those subarrays can be of different dimensionalities from one another.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 1997.089,
    "end": 2001.655,
    "text": "And so it's just, again, wrapping your head around kind of the nestedness here.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2002.456,
    "end": 2007.662,
    "text": "And a lot of these things are better represented in the code I've written.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2007.682,
    "end": 2009.144,
    "text": "So I might touch on that if there's time.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2009.945,
    "end": 2019.297,
    "text": "Of course, this is code I wrote too, but the Colab script, which contains code that you can run, and it has different ways of expressing these different matrices.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2019.614,
    "end": 2030.849,
    "text": " But you can see the point is that now that we've defined our hidden states, our observations, our actions, we're going to start linking them to represent our agent's beliefs.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2031.55,
    "end": 2036.957,
    "text": "So for this situation, I print the outputs.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2040.161,
    "end": 2047.09,
    "text": "All code that you've seen so far with the gray shading that is, you know, at the beginning we imported libraries,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2047.407,
    "end": 2056.658,
    "text": " And then two slides ago, we looked at defining hidden state factors, observation modalities, actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2057.259,
    "end": 2058.941,
    "text": "Now this is our A matrix.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2060.382,
    "end": 2066.41,
    "text": "I'm not getting into the maths on this A matrix because it's easier to just look at the outcomes.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2067.371,
    "end": 2075.02,
    "text": "This is how we construct, like all this code that I've shown so far can just be run, like in the order that I've shown it thus far.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2075.34,
    "end": 2076.942,
    "text": "You'll see that in the Colab script.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2077.377,
    "end": 2093.327,
    "text": " Here, the first subarray, again, which is for the outcome observation modality, we'll notice for those who are familiar with probability theory, probability distribution sum to one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2094.286,
    "end": 2105.937,
    "text": " What's helpful is that the utils sub-library has an isNormalize function where you can put any object array into it, and it'll tell you if it's normalized or not.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2105.957,
    "end": 2110.441,
    "text": "It's a helpful rule of thumb to ensure that you've done everything right before you proceed further.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2111.302,
    "end": 2122.572,
    "text": "And so what this does is that it lets us see that if we sum these values, each outcome per hidden state level,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2123.024,
    "end": 2125.507,
    "text": " we can see that it's entirely uniform.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2125.748,
    "end": 2127.13,
    "text": "It's totally uncertain.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2127.65,
    "end": 2129.413,
    "text": "It's not useful to the agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2129.453,
    "end": 2134.76,
    "text": "There's a third probability that they'll see an improvement if they attended themselves.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2134.78,
    "end": 2139.767,
    "text": "Third probability of there being no improvement if they attended themselves.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2139.787,
    "end": 2145.174,
    "text": "There's a third probability of seeing an unobserved outcome if they attended themselves.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2145.274,
    "end": 2151.563,
    "text": "It's very common practice if you're attempting to model a more realistic phenomena",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2151.745,
    "end": 2156.055,
    "text": " or organism or human, and you have no idea what they would do.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2156.697,
    "end": 2159.383,
    "text": "It's common practice to initialize them with uniform priors.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2159.443,
    "end": 2164.134,
    "text": "Here, I'm just doing it for the sake of simplicity in a tutorial, right?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2164.414,
    "end": 2167.662,
    "text": "And so, meanwhile,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2168.08,
    "end": 2179.551,
    "text": " With the next subarray, as I said earlier, there's one-to-one mappings between the attention observation modality and the attention hidden state factor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2179.912,
    "end": 2191.844,
    "text": "So it's as if the agent has completely certain beliefs, like the polar opposite about who it's attending to.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2192.585,
    "end": 2195.067,
    "text": "So if it sees that it's attending to someone",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2195.587,
    "end": 2222.792,
    "text": " um attending to itself then it will refer it's into the attending to itself and vice versa for neighbor and that's it uh that's the a matrix and then we have the b matrix which i would say is equally complex and then things become immensely simpler from there the b matrix again equation top right um uh",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2223.194,
    "end": 2227.802,
    "text": " We need one subarray B matrix for each hidden state factor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2228.323,
    "end": 2229.204,
    "text": "This is very simple.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2229.284,
    "end": 2231.087,
    "text": "We only have one hidden state factor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2231.308,
    "end": 2233.191,
    "text": "It's the attention hidden state factor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2234.012,
    "end": 2245.472,
    "text": "And so our agent wants to be able to track if I'm currently attending to, let's say, myself, and I choose to explore,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2245.874,
    "end": 2275.662,
    "text": " what will the hidden state be at the next time step thus s tau plus one conditioned on s tau the hidden statement uh present uh combined with pi which is representative of the action or policy undertaken in the present um this is also going to be incredibly simple it's really going to be one to one so at any given point in time um",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2276.047,
    "end": 2289.804,
    "text": " the agent will believe that regardless of what state it is in currently, it will transition to self if it chooses explore, probability one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2290.244,
    "end": 2296.912,
    "text": "If the current state is neighbor, it'll transition to self with probability one if it chooses explore.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2297.974,
    "end": 2304.822,
    "text": "And similarly, it always believes that it'll transition to the neighbor in state if",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2305.78,
    "end": 2309.204,
    "text": " regardless of whatever state it currently believes it is in.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2309.905,
    "end": 2323.04,
    "text": "So a comment that might come up for anyone who is familiar with these things, this is not terribly different from just a standard Markov decision making process, right?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2323.18,
    "end": 2330.168,
    "text": "It's kind of like, well, if the agent has all these fully certain beliefs, why create a partially observable environment?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2330.148,
    "end": 2333.512,
    "text": " There's a certain reason for that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2333.953,
    "end": 2336.856,
    "text": "And then there's another just more direct reason for that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2336.896,
    "end": 2341.141,
    "text": "The direct one is that this is how PMDP works.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2341.642,
    "end": 2349.451,
    "text": "And then also the other reason is I think that partially observable environments are more representative of our reality.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2349.932,
    "end": 2355.919,
    "text": "I think it aligns with the idea that we do often have noisy sensory receptors",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2356.253,
    "end": 2362.45,
    "text": " know whether you have 20 20 vision or not uh it doesn't mean that you can uh you know see every",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2362.767,
    "end": 2365.631,
    "text": " color that's every, uh, ever existed.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2366.171,
    "end": 2369.015,
    "text": "And it doesn't mean that, you know, you can see perfectly anything.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2369.235,
    "end": 2383.394,
    "text": "Uh, and, and so the, the idea of just, just noise being there and the idea that you have to infer, you have to rely upon observations to infer beliefs and having those kinds of loops, you know, it all, um, kind of makes sense.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2383.854,
    "end": 2388.42,
    "text": "And then there's another aspect, uh, that will come up soon whenever we discuss learning.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2390.932,
    "end": 2407.716,
    "text": " For the C matrix, which is representative of preferences or priors over observations, this is basically denoting, it's as if we're saying, what are the outcomes the agent actually wants to see or observe?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2407.776,
    "end": 2415.066,
    "text": "What are the observations it wants to see happen as opposed to those that it doesn't?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2415.417,
    "end": 2427.79,
    "text": " right and so this is immensely uh easier to construct uh versus the the a matrix or the b matrix in that we're really just effectively creating these vectors",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2428.462,
    "end": 2434.972,
    "text": " So we need one subarray for each outcome modality or observation modality.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2434.992,
    "end": 2441.963,
    "text": "For the first one, the outcome modality, the way that we've defined this is take a list.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2443.225,
    "end": 2451.398,
    "text": "Each one of these values is indexed to the observation in the outcome",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2451.378,
    "end": 2479.36,
    "text": " observation modality as we saw before so recall in order the first one is improvement the second one is no improvement and the third one is unobserved these line up exactly in the same way and reiterating again the matrix operations and being able to grasp like how indexing goes here as long as everything lines up",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2479.981,
    "end": 2488.381,
    "text": " it'll be solvable, right, the free energy calculation will be able to be carried out as long as everything kind of is in its place.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2489.023,
    "end": 2489.163,
    "text": "Right.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2489.183,
    "end": 2496.681,
    "text": "So so it's do your best to never confuse, you know, which position each of these represents.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2497.403,
    "end": 2497.804,
    "text": "So",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2498.577,
    "end": 2520.172,
    "text": " The reason why these values don't sum to one common practice that I've seen a lot in previous MATLAB scripts and so on is people will actually use these like whole integers and even negative values because it's just kind of a more human friendly, human interpretable way of experimenting with an agent's preferences.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2521.394,
    "end": 2525.26,
    "text": "Whenever you run this through the softmax function,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2525.24,
    "end": 2528.005,
    "text": " which is also applied here.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2528.506,
    "end": 2539.888,
    "text": "This basically strongly amplifies the final probability distribution that arises and also turns it into a probability distribution that does sum to one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2541.05,
    "end": 2542.573,
    "text": "And then",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2542.942,
    "end": 2565.996,
    "text": " uh before we move on to see what that looks like for the second observation modality uh the attention observation modality we're going to make that entirely uniform as well what each of these really is saying is that the agent strongly prefers to see improvements in its solution it dis prefers seeing no improvement in its current solution",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2565.976,
    "end": 2572.668,
    "text": " And it is indifferent to the unobserved observation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2573.129,
    "end": 2578.84,
    "text": "It's not exactly how the math would play out because of the softmax function, but it's effectively something like that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2579.0,
    "end": 2583.428,
    "text": "And in any case, in this simulation, we won't be seeing the unobserved observation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2583.408,
    "end": 2607.559,
    "text": " um observation come up at all anyway uh and then for the second one uh fully uniform preferences uh that simply means that the agent has no particular preference towards um whether it's attending to itself or to its neighbor right so you could experiment with this you could see like what what happens whenever an agent actually prefers to",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2609.007,
    "end": 2615.857,
    "text": " its due diligence and primarily just explore and come up with its own answers to the solution.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2615.977,
    "end": 2622.306,
    "text": "Or what if you come up with an agent who more so prefers to steal or exploit their neighbor's answer.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2622.326,
    "end": 2630.618,
    "text": "In any case, here we'll stay totally agnostic to that and just say that the agent has uniform preferences.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2631.119,
    "end": 2632.521,
    "text": "So those end up looking like this.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2634.464,
    "end": 2638.71,
    "text": "Whenever we print them out, again, these are normalized.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2638.994,
    "end": 2644.65,
    "text": " We see how the softmax function strongly amplified",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2644.799,
    "end": 2654.73,
    "text": " where the preference for improvement was a five, it's now become a 0.9908 continuing probability.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2655.131,
    "end": 2658.394,
    "text": "And so this relates back to the idea that agents are self-evidencing.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2659.636,
    "end": 2674.452,
    "text": "Based on how particularly expected free energy is computed, where it includes C within the pragmatic value term, this is what will guide the agent towards, you know,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2675.191,
    "end": 2695.438,
    "text": " towards observations that it prefers as opposed to others, making this move beyond just, you know, an agent who's hyper reactive to what's going on in the present, instead of an agent who might prefer to see certain things and therefore act in a way to kind of realize what it prefers.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2695.999,
    "end": 2701.607,
    "text": "Again, here, preference really just meaning it being what you expect.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2702.428,
    "end": 2704.05,
    "text": "And then",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2704.25,
    "end": 2710.464,
    "text": " Again, uniform distribution for the second modality.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2710.604,
    "end": 2718.061,
    "text": "It has no particular preference towards observing itself or observing its neighbor as who it's attending to.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2718.081,
    "end": 2720.065,
    "text": "Then D.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2720.551,
    "end": 2722.834,
    "text": " Fortunately for us, we only have one hidden state factor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2723.135,
    "end": 2725.158,
    "text": "So this is the shortest description.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2725.698,
    "end": 2734.291,
    "text": "It's similarly to how C results in a probability distribution that describes the priors over observations.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2734.871,
    "end": 2737.275,
    "text": "The D matrix does the same thing, but for states.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2737.816,
    "end": 2738.877,
    "text": "And we only have one hidden state.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2738.897,
    "end": 2745.066,
    "text": "So we just have one subarray for the attention hidden state factor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2745.787,
    "end": 2749.292,
    "text": "And so again, we just...",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2749.812,
    "end": 2761.031,
    "text": " And I didn't mention this earlier, the NP dot ones is just generating a vector equivalent to the number of hidden state levels that you have.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2761.251,
    "end": 2766.841,
    "text": "So a vector of two ones, and then you're normalizing it using the utils library, right?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2766.861,
    "end": 2770.487,
    "text": "So take two ones, normalize them, you're going to end up with point 5.5.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2772.56,
    "end": 2774.524,
    "text": " The E-matrix are your habits.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2775.305,
    "end": 2781.778,
    "text": "You don't actually necessarily have to define these whenever you're constructing a PyMDP agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2782.48,
    "end": 2794.804,
    "text": "I find it to be very useful if either one, you actually want to run some kind of experiment where you think that the agent will actually have more of a sort of",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2794.784,
    "end": 2824.335,
    "text": " uh habit of doing one particular action over the other um it's also useful if say you're trying to set up a different kind of simulation that's more focused on uh policies in which case you know it might be the case that you know you only want uh the agent to have a strong prior belief for entire particular policy versus another uh and and use that as a way to to define the agent as having beliefs that you know a particular policy",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2824.636,
    "end": 2835.088,
    "text": " won't at all work versus one that will such as, you know, dry off and then jump in the pool as a kind of an odd thing to do.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2835.108,
    "end": 2841.475,
    "text": "Or, you know, it could come up with some better example on the fly, but I think the point comes across right.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2841.836,
    "end": 2848.163,
    "text": "So in any case, this is just basically your priors over your actions that get incorporated.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2848.328,
    "end": 2850.491,
    "text": " So what did we do?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2851.413,
    "end": 2854.157,
    "text": "We related states and observations in the A matrix.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2854.337,
    "end": 2859.205,
    "text": "We related states and actions in the B matrix.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2859.225,
    "end": 2868.379,
    "text": "And then C, D, and E are just the priors on states, excuse me, observations, states, and actions, respectively.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2868.359,
    "end": 2898.079,
    "text": " also recall uh from the from the textbook and elsewhere that the agent has a separation from its environment uh recall the notion of a markov blanket and so uh for the for the agent uh themselves like despite certain things occurring during three minute energy minimization to where uh observations and actions do in fact end up influencing one another vicariously uh we have not expressed a probability distribution",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2898.059,
    "end": 2901.885,
    "text": " that actually directly links observations and actions.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2901.965,
    "end": 2908.276,
    "text": "So it's kind of maintaining the blanket states of your active states and sensory states.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2908.496,
    "end": 2913.644,
    "text": "And you'll see that in the textbook reading the section about Markov blankets.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2913.705,
    "end": 2916.709,
    "text": "So it's just maintaining that kind of separation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2919.474,
    "end": 2920.776,
    "text": "Then",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2921.178,
    "end": 2923.581,
    "text": " I will go just a little bit longer than what I expected.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2925.062,
    "end": 2936.595,
    "text": "So now that we have our A, B, C, D and E, one additional thing that our agent will do is that it will learn the idea of learning and active inference.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2937.396,
    "end": 2950.83,
    "text": "There's plenty of literature on this, but it can relate to the idea of for the sake of a model, what we're doing is that we're assigning sort of these hyper parameters or priors to",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2951.063,
    "end": 2955.268,
    "text": " to the matrices that we just defined themselves.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2956.25,
    "end": 2974.894,
    "text": "So more specifically, what our agent will do is it will learn its A matrix, the likelihood matrix that we defined first out of those five things, A, B, C, D, and E. And it will just update it based on the new observations it receives and the state that it infers.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2975.65,
    "end": 2983.884,
    "text": " And it will also answer a question as to why did we set up hidden states and observations and actions in that way?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2984.445,
    "end": 2988.933,
    "text": "Why are we doing these identity mappings between particular things?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2990.375,
    "end": 2995.684,
    "text": "By learning the A matrix, that will allow our agent to learn",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 2996.12,
    "end": 3006.558,
    "text": " If it's the case that when it explores, it'll be more likely to see an improvement or no improvement, right?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3006.578,
    "end": 3013.15,
    "text": "This will allow our agent to, by accumulating observations over time in the action perception loop,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3013.13,
    "end": 3018.961,
    "text": " it will begin to better update its beliefs about which thing it should do.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3019.322,
    "end": 3031.105,
    "text": "And so even though previously we defined E as being uniform over those two actions to where the agent initially has no particular bias towards",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3031.287,
    "end": 3055.776,
    "text": " exploring or exploiting it will actually probably start to bias the agent towards one of those directions because it prefers to see improvements and that can only occur through learning without learning and modifying internal parameters of your model you're effectively you know sort of like a pre-programmed",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3055.756,
    "end": 3063.386,
    "text": " a thermos thermostat or something, right, you're not adaptive, you just act in the same way as you always do.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3063.546,
    "end": 3078.085,
    "text": "And so an agent who doesn't learn as the one if we define an agent like we just did, but it never learns and what it will do is more than likely just with 5050 chance to explore exploit, just keep going from",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3078.352,
    "end": 3087.417,
    "text": " there so um the way that we update the a matrix for the imdp agent here um",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3087.582,
    "end": 3111.733,
    "text": " is that we it is quite simple and this is it you don't even need all of this code you only need the code in the upper right but it's basically uh this uh small p capital a is the prior that we're creating uh what we're doing is that we're using that utils sub library this dearestly like function which basically you construct your a send it through the dearestly like function",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3111.713,
    "end": 3123.151,
    "text": " It'll convert it into what is a kind of exemplar conjugate distribution of a categorical probability distribution, that being a Dirichlet distribution.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3123.812,
    "end": 3127.999,
    "text": "Whenever you print it out, you see that we set scale to one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3128.62,
    "end": 3131.865,
    "text": "It looks exactly like our A matrix.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3132.487,
    "end": 3135.835,
    "text": " What that scale argument does is that it scales the values.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3136.256,
    "end": 3149.466,
    "text": "That's the special thing about the matrix Dirichlet distribution is that it's something like an accumulation of pseudo counts that will then weigh particular",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3150.037,
    "end": 3152.8,
    "text": " parts of the competition of free energy minimization.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3153.541,
    "end": 3158.486,
    "text": "For example, the agent might start to see more instances of improvement.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3159.186,
    "end": 3168.035,
    "text": "And so it might start to upweight the likelihood of improvement, given the association that it saw it with.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3169.116,
    "end": 3171.619,
    "text": "And so these don't actually have to sum to one.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3171.979,
    "end": 3174.402,
    "text": "They're just kind of like weighting our A matrix.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3174.542,
    "end": 3177.765,
    "text": "And they're very relatable to the notion of precision.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3178.032,
    "end": 3207.06,
    "text": " right like if the agent hardly has any previous experience uh with anything and it's and it's it's it's uh uh prior over a is highly scaled down meaning it has very few pseudo counts of any prior experience uh it's the agent is going to be less certain in its ability to make connections between uh exactly what the a matrix tries to model which is the relationship between observations and states so",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3207.631,
    "end": 3224.475,
    "text": " so these values and themselves you know be set differently and and you can set the precision differently and then they can impact the agent uh differently that way i have all of that this is it for constructing the agent",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3225.046,
    "end": 3227.512,
    "text": " It's basically just an agent class.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3227.853,
    "end": 3230.278,
    "text": "And so you just feed in the arguments.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3230.318,
    "end": 3234.989,
    "text": "There are actually many, many arguments that can go into the agent constructor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3235.029,
    "end": 3238.016,
    "text": "It might seem like a lot.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3238.117,
    "end": 3241.705,
    "text": "There are actually, I think, literally a couple dozen more.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3241.685,
    "end": 3248.814,
    "text": " but it very much mirrors the construction of the MATLAB SPM package for anyone familiar with that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3249.575,
    "end": 3261.41,
    "text": "There's a whole script, you know, that will run through and try and construct your Markov decision-making process, your agent, and it'll check to make sure that all of these, you know, boxes are correct.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3261.43,
    "end": 3263.372,
    "text": "Like, is the A normalized?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3263.953,
    "end": 3267.137,
    "text": "You know, how did you set gamma or some other such thing?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3267.157,
    "end": 3271.202,
    "text": "And so it's, you know, in spirit, this is very similar to that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3271.57,
    "end": 3288.994,
    "text": " What's nice is that the PyMDP package, it has different inference algorithms, not many, but as opposed to choosing sort of the standard one, I've chosen MNP, which is marginal message passing.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3289.554,
    "end": 3294.922,
    "text": "There's a nice paper on it that can be found in the speaker notes of the tutorial slides.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3295.442,
    "end": 3298.827,
    "text": "I make a brief reference to it here, par at all 2019.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3298.807,
    "end": 3317.772,
    "text": " And so marginal message passing basically being a kind of, in a certain way, it's a kind of compromise between overcoming intractability and achieving something like computational efficiency and approximation that you get with variational message passing.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3318.332,
    "end": 3326.603,
    "text": "But at the same time, it overcomes some of the issues of not having certain precision terms involved.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3326.583,
    "end": 3337.519,
    "text": " that leads to issues with variational message passing that it can lead to overconfident posteriors in the computation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3338.059,
    "end": 3346.531,
    "text": "Meanwhile, belief propagation is much more holistic, but more computationally expensive, sometimes tractable depending on the situation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3346.591,
    "end": 3356.185,
    "text": "So MMP is a nice way of striking the balance, trying to find that balance between complexity and accuracy as we are always trying to do.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3356.857,
    "end": 3376.587,
    "text": " So you'll notice that we plugged in everything that we defined so far, A, B, C, D, E, and then the priors over A, which was M and P. There's a little bit more explanation of what some of these other arguments are, but given the time and also simply the fact that, I mean,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3376.904,
    "end": 3379.952,
    "text": " We would have to go into a lot more to look at the other options available.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3379.972,
    "end": 3381.236,
    "text": "I would say this suffices.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3382.098,
    "end": 3386.21,
    "text": "If you want to play around with any of these, certainly go for it.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3386.23,
    "end": 3390.762,
    "text": "And I'd especially recommend looking at Inference Horizon and the policy link.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3391.332,
    "end": 3421.221,
    "text": " uh arguments um this agent is very simple in the sense that it makes no future planning steps for for constructing policies that go beyond just should i explore now or should i exploit now um it can make inferences uh one additional time step into the future though so it does in a certain way allow it to have this kind of forward-lookingness where it'll not just try to anticipate what will happen next but it'll try to",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3421.201,
    "end": 3442.399,
    "text": " anticipate what will happen next next so you know the next time step and the one following that um and uh yeah i also chose stochastic action selection you could choose deterministic instead there's a note on how that works um basically you know if uh if your posteriors over policies or that uh",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3443.172,
    "end": 3466.125,
    "text": " you know uh explorer has a value of 0.1 you'll choose that with probability 0.1 right so there's still stochasticity involved um but you're just going to be more likely to choose the option with the highest probability deterministic means you would automatically go for the the action that has the highest probability assigned in the posterior",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3469.565,
    "end": 3479.999,
    "text": " So all those things in mind, this is the general process that will be carried out during an active inference loop for our agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3480.179,
    "end": 3491.835,
    "text": "It'll infer states, which once we've constructed our agent, the agent, and this is common for other reinforcement learning paradigms as well.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3493.196,
    "end": 3498.964,
    "text": "You have an agent, and then that agent will have a series of attributes that you can access at any given time.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3499.433,
    "end": 3507.022,
    "text": " Our agents have an infer states method, which can then take in the observation.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3508.103,
    "end": 3519.497,
    "text": "And then after that, whenever it comes to learning, the pip install version of PIMDP has update A, B, and D matrices available.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3521.119,
    "end": 3528.968,
    "text": "To briefly harken back to this, there have been many updates to the PIMDP library over the past couple of years.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3529.623,
    "end": 3539.873,
    "text": " It's very exciting, but I didn't want to give anything too definitive because I think many things are still in progress, but right now they're actively developing means of doing model fitting, which are already there.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3540.714,
    "end": 3544.037,
    "text": "It's just, I can see that they're kind of cleaning some things up.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3544.337,
    "end": 3552.145,
    "text": "They've also, you know, there will be means of using the JAX backend to speed up a lot of the processes, which is very exciting.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3552.205,
    "end": 3558.111,
    "text": "And also they've implemented a sophisticated inference, which is another way of doing policy inference.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3558.85,
    "end": 3561.533,
    "text": " using a kind of optimizing a tree search.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3562.875,
    "end": 3576.072,
    "text": "But in addition to those updates, they'll also be updating the ability such that the agent could learn its preferences or its habits or other aspects.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3576.112,
    "end": 3580.718,
    "text": "These are just the pip install versions currently available methods.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3581.399,
    "end": 3588.047,
    "text": "Then agent will infer its policies and then it will sample its action.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3590.525,
    "end": 3595.185,
    "text": " So in state inference, again, we're using marginal message passing.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3595.537,
    "end": 3614.327,
    "text": " The interesting thing about PyMDP is that the only time that F, variational free energy, really comes up as far as the code goes is that F gets scored across policies rather than being the more general free energy of the overall system per se.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3614.567,
    "end": 3622.54,
    "text": "But in certain ways from looking at the raw code that carries that out, it appears that there are other aspects involved.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3622.52,
    "end": 3632.804,
    "text": " But for the sake of the tutorial, we'll just say what's interesting is that free energy is the same for both actions at any given point in time.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3633.245,
    "end": 3638.537,
    "text": "And I think that in part is due to the fact that the complexity term",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3639.007,
    "end": 3662.331,
    "text": " uh and uh very defining variational free energy for each um action or policy um it's dependent on this uh the posteriors over states versus uh your your prior which starts to look like your b matrix regarding uh state transitions and the agent has a fully uh",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3662.311,
    "end": 3684.471,
    "text": " predictable fully uh you know identity mapping one-to-one mapping and it's B transition matrices and I think that's what actually brings this complexity term uh down to uh virtually zero right uh it's like the the posteriors are basically matching what it it it knows what state it'll transition to",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3684.856,
    "end": 3696.829,
    "text": " And if it doesn't ever learn its B matrix and never has any opportunity otherwise to see something different from what it already believes, then it's as if the agent fully believes like, okay, you know, complexity is gone.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3697.289,
    "end": 3698.811,
    "text": "All it's left with is accuracy.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3699.231,
    "end": 3708.381,
    "text": "And so it's accuracy, actually the difference between observations and states, that's what's going to lead to the fluctuations in the variational free energies.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3708.662,
    "end": 3710.003,
    "text": "But this is all the code you need.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3710.607,
    "end": 3717.114,
    "text": " A really important part is the way that this OBS variable or object is defined.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3717.675,
    "end": 3720.518,
    "text": "Again, it's very important to keep track of your indices.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3721.238,
    "end": 3729.027,
    "text": "At any point in time, you could define an OBS object like this, which is a list.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3729.427,
    "end": 3736.615,
    "text": "The first element of OBS corresponds to the first observation modality, which for us was outcome.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3737.168,
    "end": 3742.777,
    "text": " And then the value itself refers to the index of the particular observation in question.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3743.438,
    "end": 3757.12,
    "text": "So what we're saying here is the first value representing the observation modality, outcome modality, that first value zero is index to improvement.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3757.14,
    "end": 3758.923,
    "text": "And you can see that same logic",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3759.477,
    "end": 3765.046,
    "text": " plays out for the second element in the ops list.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3765.606,
    "end": 3772.136,
    "text": "This is for the attention observation modality and zero representing self as what it's indexed to.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3772.497,
    "end": 3778.706,
    "text": "And so it's as if the agent just observed that it was attending to itself and it saw an improvement.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3780.109,
    "end": 3786.919,
    "text": "We simply run that through the agent.infirstStates method and plug into ops.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3787.287,
    "end": 3789.51,
    "text": " And then the agent will update.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3790.171,
    "end": 3794.016,
    "text": "It'll find QS, meaning its posteriors over in states.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3794.717,
    "end": 3799.204,
    "text": "And those will actually get stored in the agent as an attribute as well.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3799.684,
    "end": 3803.169,
    "text": "But the method returns the object.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3803.47,
    "end": 3806.794,
    "text": "And so we're keeping it here, QS.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3807.295,
    "end": 3809.918,
    "text": "And then you can look.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3810.419,
    "end": 3816.788,
    "text": "We didn't have to explicitly say anything about computing F. It's just this infer states.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3817.207,
    "end": 3828.718,
    "text": " run then led to an internal computation of F in the agent that we can now access print.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3829.171,
    "end": 3837.325,
    "text": " This starts getting into let's be through this a little bit, but because I already touched on various things, but this is another breakdown.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3837.345,
    "end": 3843.094,
    "text": "You know, it's very useful to look at the different breakdowns of variational free energy and expected free energy and so on.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3844.216,
    "end": 3850.707,
    "text": "But I'm going to move through this slide and come because we'll get back to policy inference shortly.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3853.319,
    "end": 3866.311,
    "text": " This is to show that Qs, the posteriors over hidden states, is rather complex whenever you use the marginal message passing algorithm.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3867.733,
    "end": 3879.664,
    "text": "But it's also very interesting in that the way it gets broken down, itself being a rather complex three-dimensional matrix, is that the first dimension refers to policy.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3880.015,
    "end": 3882.841,
    "text": " if we if we kind of open it up, as it were.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3884.344,
    "end": 3887.471,
    "text": "The second one where is the time step.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3887.491,
    "end": 3889.034,
    "text": "And the third is the hidden state factor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3889.395,
    "end": 3899.897,
    "text": "So what this is saying is that for the first entry, which relates to explore, and then the time step",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3900.35,
    "end": 3907.62,
    "text": " If you make the first entry of that now and then in state factor, we only have one of them.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3907.8,
    "end": 3911.585,
    "text": "So the first entry is the only entry of the attention in state factor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3911.886,
    "end": 3928.028,
    "text": "That effectively means if you print QS zero, zero, zero, it'll print out this first value representing this is what the agent believes to be the hidden state given the policy.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3928.008,
    "end": 3950.742,
    "text": " you know given the explorer policy and so we can actually extract that out whenever i have these slightly out of line we can extract that out and then the excuse me this line here agent.qs we can we can",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3951.211,
    "end": 3956.036,
    "text": " extracted out via QS action sampled ID zero.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3956.056,
    "end": 3965.166,
    "text": "All that means is we're grabbing the agent's posterior beliefs given the actual hidden state that it chose.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3966.368,
    "end": 3973.356,
    "text": "There's a little bit of complexity and it's much clearer in the Google Colab script that I've included.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3973.416,
    "end": 3975.598,
    "text": "So I advise having a look at that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3976.051,
    "end": 3981.757,
    "text": " But this is the code that allows the agent to update its A matrix.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3982.618,
    "end": 3996.153,
    "text": "The only reason why we need a couple extra lines of code is because of the complex structure of the QS that comes out of a marginal message passing agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 3999.677,
    "end": 4004.742,
    "text": "And then we'll look at",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4009.227,
    "end": 4037.884,
    "text": " um policy inference you saw that there are more slides than what i really need to explain it but um this is the final step of the action perception loop so for policy inference your posterior beliefs over your policies uh in this case are um your negative expected free energy times uh gamma which uh i have a better slide to represent that",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4040.463,
    "end": 4041.885,
    "text": " Here we are.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4042.906,
    "end": 4044.928,
    "text": "Gamma, which is your action precision.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4045.389,
    "end": 4062.189,
    "text": "So just as I mentioned, we can put these hyper priors or parameters on our A matrix to learn the A matrix and that scale argument kind of down tunes or up tunes the precision on the A matrix.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4062.59,
    "end": 4063.551,
    "text": "Similarly here,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4063.987,
    "end": 4071.159,
    "text": " we can down tune or up tune the precision over G, expected free energy.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4071.64,
    "end": 4081.877,
    "text": "And since expected free energy is what is directly involved in realizing one's preferences that I mentioned earlier with the C matrix, it's kind of like, whenever we look at this equation,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4082.701,
    "end": 4093.556,
    "text": " is that we're seeing a sort of balancing act between expected free energy related to sort of deliberate decision making to realize goals.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4093.836,
    "end": 4100.866,
    "text": "These are very contextual kind of beliefs and ways of computing free energy.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4101.246,
    "end": 4107.775,
    "text": "And then you have variational free energy, which is sort of like the free energy of the present.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4107.795,
    "end": 4109.738,
    "text": "And it doesn't necessarily take",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4109.718,
    "end": 4118.378,
    "text": " into account anything regarding preferences, the C matrix and what you say you want to see.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4119.18,
    "end": 4122.147,
    "text": "It's more about just kind of optimizing your model in the moment.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4122.668,
    "end": 4126.377,
    "text": "And then habits, which we already touched on earlier.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4126.357,
    "end": 4136.875,
    "text": " And then those we take the actually take the natural log of those so that they kind of fit similarly on the same scale with expected free energy and variational free energy.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4137.235,
    "end": 4141.783,
    "text": "So it's kind of like you have these three different, you know, you have your habits built up from the past.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4141.763,
    "end": 4166.303,
    "text": " you have your variational free energy of the present and then you have your expected free energy of the future all sort of contending with one another and then being run through this soft max function which as we saw earlier when we used it for the c matrix that converts it into something that sums to one and then acts as our categorical probability distribution",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4166.283,
    "end": 4172.891,
    "text": " And the number of entries will be equivalent to the number of actions you have available.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4173.412,
    "end": 4181.041,
    "text": "And so that will look like in the case of G alone, it'll look like this.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4181.321,
    "end": 4190.453,
    "text": "You'll have your free energy for the explore action and your free energy for the exploit action.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4191.234,
    "end": 4192.375,
    "text": "And recall that",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4193.148,
    "end": 4211.528,
    "text": " that we want to minimize this quantity so it's actually the the quantity with a smaller number that's uh better so to speak um and then these values will get plugged into the policy inference equation up top in addition to what we already saw earlier the variational free energy values we saw",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4211.913,
    "end": 4216.382,
    "text": " And then the habits which we programmed even earlier than that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4216.582,
    "end": 4227.745,
    "text": "So we have now all components for constructing an active inference agent, we have all the components needed for doing hidden state",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4227.725,
    "end": 4239.198,
    "text": " inference of having our agent receive observations that it uses to receive to infer hidden states and then to infer policies and to select an action.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4240.279,
    "end": 4244.784,
    "text": "That's what this slide represents is the ability to infer policies.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4246.466,
    "end": 4248.768,
    "text": "You can print out G and have a look at it.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4249.689,
    "end": 4257.698,
    "text": "And then with sample action, this just basically has the agent sample from its posteriors over policies.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4257.998,
    "end": 4268.277,
    "text": " And then this extra code here is simply because whenever you have the agent sample an action, it returns it within a list.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4268.918,
    "end": 4271.664,
    "text": "And so we need to extract that out of there.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4273.106,
    "end": 4273.527,
    "text": "And then",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4274.722,
    "end": 4291.296,
    "text": " these last two slides were to represent uh two example simulations that i ran um they're i'm sure they look rather busy as many of these other slides have it was just so much to kind of look at and",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4291.276,
    "end": 4291.977,
    "text": " and get into.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4293.018,
    "end": 4302.77,
    "text": "What this figure attempts to do is that you can read it from left to right, like over time steps, from the start of the simulation to the end.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4303.13,
    "end": 4305.333,
    "text": "In this case, it was 30 time steps long.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4306.534,
    "end": 4319.95,
    "text": "And then you can also read it from top to bottom, where the agent receives an observation, it computes variational free energy, it learns its A matrix,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4321.111,
    "end": 4327.864,
    "text": " It infers policies and the expected free energy of each action.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4328.08,
    "end": 4352.569,
    "text": " uh along with that that g then gets included along with f and habits to compute um posterior beliefs about policies and then uh finally the agent chooses an action that gets sent in so it's kind of like from left to right we're looking at each time step where a whole uh action perception loop is happening and then vertically we're looking at",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4352.549,
    "end": 4382.218,
    "text": " an entire uh action perception loop or you could flip that say perception action loop given the agent is getting an observation first right and so uh in this simulation i'll just stick with this one uh but uh you know in the in this simulation uh the agent um receives an initial observation uh it just forced it to say like self",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4382.738,
    "end": 4385.661,
    "text": " and improvement, which seems good.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4386.282,
    "end": 4391.228,
    "text": "Or excuse me, it gets initialized with improvement and neighbor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4391.829,
    "end": 4402.301,
    "text": "And then for the first half of the simulation, we're in what I'll call the neighbor context, where in that case, the simulation is, it's programmed in a loop.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4402.742,
    "end": 4411.412,
    "text": "So the agent will receive, it will always receive an improvement if they exploit.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4411.932,
    "end": 4415.837,
    "text": " and they'll always receive a no improvement if they explore.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4416.098,
    "end": 4427.273,
    "text": "So you can see this is a very deterministic and very extreme environment where choosing to explore always leads to a bad outcome for the agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4427.354,
    "end": 4431.499,
    "text": "Choosing to exploit always leads to a good outcome for the agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4432.02,
    "end": 4438.429,
    "text": "And so during the first couple steps, recall that our agent starts off with",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4438.628,
    "end": 4445.135,
    "text": " Um, you know, these uniform beliefs, uh, as far as its habits go of whether it should explore exploit.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4446.257,
    "end": 4455.027,
    "text": "Uh, and so that's where these red and blue lines and this probability, uh, sub graph here, subplot, uh, they line up with one another.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4455.047,
    "end": 4456.228,
    "text": "They're 0.5 0.5.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4456.288,
    "end": 4460.092,
    "text": "So effectively the agent is just kind of randomly choosing one of these two options.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4460.152,
    "end": 4467.741,
    "text": "And it just happened to choose to explore both times whenever it shows to explore both times.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4468.21,
    "end": 4473.515,
    "text": " for the next two time steps, it saw that there were no improvement like bad outcomes.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4475.097,
    "end": 4488.07,
    "text": "You know, given that, and the agents free variational free energy of the present kind of kind of got jerked the downward in a good way.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4488.09,
    "end": 4497.66,
    "text": "It's meaning that it's informative to the agent during those time steps to see that it's accumulating evidence that it's saying that it might be learning something in the meantime,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4498.062,
    "end": 4503.49,
    "text": " during the second time step, the agent learned it's a matrix, right?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4503.51,
    "end": 4512.743,
    "text": "So, um, that also means that there was a lot of updating in its internal model, uh, that has led to changes in its free energy as well.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4512.763,
    "end": 4517.229,
    "text": "And then over time, uh, things start to diverge.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4517.79,
    "end": 4522.416,
    "text": "The agent quickly realizes, oh, if I exploit, I",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4522.7,
    "end": 4526.865,
    "text": " receive this green improvement observation again and again.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4527.425,
    "end": 4532.11,
    "text": "So the agent proceeds to exploit, and it actually does it all the time.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4532.611,
    "end": 4538.397,
    "text": "As it's doing it, it's seeing that there's less and less expected free energy to just exploit.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4539.058,
    "end": 4552.453,
    "text": "And then similarly, in the final policy inference, it actually reaches a 1.0 probability that the agent should exploit to where the agent is effectively doing this deterministically.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4552.433,
    "end": 4555.697,
    "text": " practically, given that it keeps inferring that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4556.858,
    "end": 4559.841,
    "text": "And also this yellow line is especially interesting.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4560.222,
    "end": 4576.781,
    "text": "And part of why I wanted to do all this in the first place, what this yellow line is doing is that this is me extracting out from it the probability of the agent seeing an improvement given that it attended to its neighbor, which links up with exploiting.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4577.301,
    "end": 4582.187,
    "text": "So this is teaching the agent that it should",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4582.758,
    "end": 4583.579,
    "text": " Keep exploiting.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4584.681,
    "end": 4585.984,
    "text": "It'll see improvements.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4586.064,
    "end": 4586.965,
    "text": "It'll get what it wants.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4587.426,
    "end": 4589.069,
    "text": "It'll keep going that way.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4589.43,
    "end": 4596.482,
    "text": "His agent is adapting to an environment where that's exactly how this world works.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4596.883,
    "end": 4603.013,
    "text": "And then halfway through the simulation, everything is reversed.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4603.755,
    "end": 4607.922,
    "text": "So now we went from one environmental extreme to another.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4608.188,
    "end": 4612.752,
    "text": " In the first case, the agent saw improvements from attending to its neighbor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4613.333,
    "end": 4620.72,
    "text": "Now the agent will only see improvements from attending to itself and only see no improvements when attending to its neighbor.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4621.48,
    "end": 4635.934,
    "text": "And because there have been so many instances in its past experience of seeing beneficial outcomes when it exploits its neighbor, the agent now actually has to unlearn",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4636.117,
    "end": 4638.601,
    "text": " what it is learned, right.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4639.382,
    "end": 4642.586,
    "text": "And by the end of the simulation still hasn't fully done that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4643.327,
    "end": 4661.454,
    "text": "And we can see this reflected in the expected free energy, the it starts to rise again for exploit as the agent no longer sees any more improvements, even though it's continuing to exploit because that's what it expects.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4662.215,
    "end": 4662.495,
    "text": "So",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4663.184,
    "end": 4669.312,
    "text": " This is a toy simulation in that you might not have learning happen after every two time steps.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4669.473,
    "end": 4672.156,
    "text": "That's a very arbitrary thing that I've chosen to do.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4672.176,
    "end": 4676.582,
    "text": "And it's actually a rather rapid learning rate, all things considered.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4677.343,
    "end": 4691.082,
    "text": "More often than not, whenever setting up a simulation, you'll have an agent who might say, learn at the end of a trial where you run 10 trials of three time steps each or something along those lines, right?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4691.433,
    "end": 4696.422,
    "text": " It's less common to run trials over 30 time steps.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4696.903,
    "end": 4708.885,
    "text": "However, in more traditional agent-based modeling paradigms, because of their simplicity, you often do run a simulation over many, many time steps, right?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4708.865,
    "end": 4725.726,
    "text": " And so I wanted to make sure that this code is set up in a way that you could run this as long as you prefer to without too much complexity, because I wanted to show the value to computational social scientists as to what they might be able to do.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4725.706,
    "end": 4727.728,
    "text": " with active inference stages.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4728.289,
    "end": 4753.654,
    "text": "But now that we're significantly beyond, you know, where I wanted to wrap up, I'll just take one more minute to say, you know, there, again, there is, you can land at the GitHub website that I made, it's very short, to the point, and all the links here are available for",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4754.022,
    "end": 4758.007,
    "text": " The slides that I was just showing, there are many more slides.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4758.608,
    "end": 4765.617,
    "text": "I tried to be rather comprehensive, given how much material I'm trying to show.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4765.758,
    "end": 4776.672,
    "text": "And then the two Colab scripts, with this second one being a further development of the original code, but now I'm adding more explanatory Markov.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4777.327,
    "end": 4790.904,
    "text": " Markdown cells that kind of better describe things, including giving examples of how the A matrix works and the B matrix works.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4791.325,
    "end": 4792.348,
    "text": "And furthermore,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4792.328,
    "end": 4799.177,
    "text": " Again, I repeatedly emphasized being able to get your matrix construction and structuration down.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4799.578,
    "end": 4809.09,
    "text": "I actually provided code on here's how you create an A matrix and you can manually define the values.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4809.411,
    "end": 4811.974,
    "text": "It's a good idea to learn how to manually",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4812.443,
    "end": 4818.198,
    "text": " define the values of the A matrix or of the B matrix.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4819.22,
    "end": 4825.035,
    "text": "It looks rather tedious than it is, but to be able to do them one by one is a great sort of",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4825.606,
    "end": 4854.128,
    "text": " didactic means of like learning how to construct these including whenever we get into these more complex like ways of um you know representing probability distributions where you have three or more dimensions but once you're able to do that you might just at some point realize oh there's a loop i could write that could do this for me um but you don't quite know what that loop looks like until you kind of get a sense of what value should be there right so um",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4854.682,
    "end": 4861.728,
    "text": " Anyway, so the point is that there are just some additional tools and information that can be used here.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4861.849,
    "end": 4872.318,
    "text": "And then all the code is available for, say, printing out, like running the example simulations and then looking at the plots at the end.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4872.959,
    "end": 4877.683,
    "text": "Feel free to modify and adapt those as pleases you.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4877.703,
    "end": 4882.367,
    "text": "So that's all I have for today.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4882.527,
    "end": 4884.469,
    "text": "And I would love in future",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4884.787,
    "end": 4900.197,
    "text": " to give another talk and or prerecord something that goes into a lot of the other material and probably give some more kind of cursory overview of the rest, especially for people who would be interested in",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4900.598,
    "end": 4928.091,
    "text": " multi-agent simulations and um and especially kind of using leveraging packages like network x which will allow you to kind of connect agents and graphs and define like sort of like the relationships with one another and it gives clever ways of of giving them actions that are specific to only the agents in their network or other things like that so um yeah that uh concludes thanks",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4930.501,
    "end": 4955.057,
    "text": " nice great work um why or how would somebody use it other than to get a good handle on the pomdp how would you see it being used or adopted for research cool yeah yeah um so i think uh in scenario like this kind of provides a general agent who can like",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 4955.56,
    "end": 4963.545,
    "text": " do things that are defined as exploring or exploiting and so um",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4964.133,
    "end": 4975.328,
    "text": " What you could do is use it to create the NK landscape laser Friedman model that I mentioned earlier, and then tweak things from there.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4975.348,
    "end": 4987.946,
    "text": "Or you could use this as a more general template, like take out the idea that these are intention and outcome modalities and stuff, swap them out for whatever you want.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4988.266,
    "end": 4992.452,
    "text": "The template is here for including as many",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 4992.432,
    "end": 5003.956,
    "text": " observation modalities and state factors as you want, for example, just change the names and make sure you define the ABCDs, you know, to your liking.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5004.297,
    "end": 5007.203,
    "text": "And so that, that's really what I wanted to do.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5007.544,
    "end": 5011.572,
    "text": "Just like, here's, here's an example agent.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5011.923,
    "end": 5014.246,
    "text": " because we need to know what the final picture should look like.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5014.587,
    "end": 5024.44,
    "text": "But you know, from there, just just tear it apart and like, you know, to your heart's content and make it into to what you want to see.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5025.541,
    "end": 5041.643,
    "text": "These agents can be used to, you know, the idea of autonomous decision making that if there are any discrete number of things that you'd want to set up some kind of agent to do, and you know, what kind of data you want it to read,",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5042.062,
    "end": 5066.888,
    "text": " um you know and what what should be the impact of each of those discrete actions it has like you have this as a kind of like agent that you can plug into uh that that sort of design diagram right stuff big answer it's pretty abstract too sorry but yeah cool what will be coming up for the next several weeks",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5069.737,
    "end": 5097.432,
    "text": " yeah um so with the symposium i'm looking forward to giving a talk that's a little bit more uh to the script uh and less focused on coding and more on how these kinds of things might be applied in social science research uh including looking at uh you know some other research that has also been done uh just to try and give a sense that there is in fact a sort of subfield forming here and",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5097.85,
    "end": 5103.297,
    "text": " Of course, we have the course on social science done with the institute itself last year.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5103.317,
    "end": 5106.922,
    "text": "You know, different people making headway in that area.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5107.002,
    "end": 5109.966,
    "text": "So looking forward to that.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5110.867,
    "end": 5115.714,
    "text": "And who knows what else?",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5115.734,
    "end": 5127.79,
    "text": "I very much look forward to maybe presenting some other research where I'm using agents like this and having them interact in kind of interesting ways with, let's say, LLMs.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5128.04,
    "end": 5137.352,
    "text": " And you know, these become a kind of fun way of trying to imagine autonomous decision making whenever it comes to things like prompting.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5137.632,
    "end": 5138.914,
    "text": "So yeah.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5142.018,
    "end": 5142.358,
    "text": "Cool.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5143.5,
    "end": 5150.168,
    "text": "Well, the video description has the links and where things will be versions.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5151.63,
    "end": 5155.335,
    "text": "And it's a great demo.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5155.355,
    "end": 5155.936,
    "text": "So thank you.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5156.056,
    "end": 5157.878,
    "text": "Any other comments?",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5159.748,
    "end": 5179.172,
    "text": " Uh, not, not currently aside from, you know, uh, thanks to everyone who, uh, joined the textbook group and, uh, you know, over the recent reading, uh, we're currently talking through, uh, other ways that we might go about the textbook group going forward, but we had a really nice wrap up conversation yesterday.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5179.552,
    "end": 5181.795,
    "text": "So looking forward to future talks.",
    "speaker": "SPEAKER_01"
  },
  {
    "start": 5183.037,
    "end": 5183.297,
    "text": "Cool.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5183.878,
    "end": 5184.158,
    "text": "Okay.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5184.679,
    "end": 5187.342,
    "text": "Thank you again, Andrew, looking forward to the next.",
    "speaker": "SPEAKER_00"
  },
  {
    "start": 5188.942,
    "end": 5194.125,
    "text": " episodes in the series yeah fantastic thanks daniel thank you",
    "speaker": "SPEAKER_01"
  }
]