SPEAKER_03:
All right, welcome everyone.

We're in cohort seven, the second discussion on chapter eight.

So there's a few ways we can go.

We can look at chapter eight in the context of the book in terms of continuous time modeling, following up on chapter seven from discrete time modeling.

Also, after or just going to it, I can share some updates on continuous time modeling from this morning in the RxInfer group where we developed on the new example from the RxInfer team with the Lorenz attractor and an example with a neural network.

So we could talk about that and modify it.

in the context of continuous time modeling um first though let us just go to the chapter does anyone want to just share a section of chapter eight or any question or quote or or image or anything like that i have a question oh okay andrews then john


SPEAKER_00:
Yeah, so they talk about this attractor, like this point that things tend to, but they seem to talk about it on two different levels, like one in reality and then one in the maybe the generative model, I guess.

And so if you could clarify that distinction, how those work and what's their relation.


SPEAKER_03:
Yeah.

So when you specify the entire simulation,

you will have let's just say we're dealing with with some with temperature in the room we could have a situation where or just to get into this y is our observable x is going to be our latent state x dot is the rate the change landscape on the latent state so this is like the thermometer measurements coming in on y and the latent state on x and the change in the temperature um

you could have a room with a real attractor setting.

Like there's actually a variable V such that when the true latent state is exactly V, the rate of change is zero.

And when the room's temperature is higher, it drops back to the point attractor and vice versa for being lower.

Then you have the agent's model of the external process.

that could be built to be structurally identical.

Like they're both dealing with a point detractor in which point the agent's model will tend to converge pretty simply to the correct parameters.

But you could also have a situation where like the real room is on a limit cycle.

So it's just oscillating or it's bi-stable.

But the agent's belief is that there's a point detractor.

So to answer it, this is just one example of attractors.

There's point attractors, limit attractors, and so on.

And in practice, you end up specifying the actual generative process that gives rise to the agent's observations, and then you specify the agent's model of that process, and those can be structurally identical or not.


SPEAKER_00:
so so the attractor is basically a construct of the eight of the organism in the way that you're describing it like it's something it would wish for you know like which may not exactly even exist there but may be useful nonetheless is that


SPEAKER_03:
Yeah, I mean, on multiple levels, there's the modeler making the temperature model of the room and possibly just choosing to use an attractor style dynamical model just as a map.

And then there's the agent within the simulation using heuristics or constrained families to do variational inference in.

And that could be simplified on up to any point.


SPEAKER_00:
But the crucial thing is the attractor in the agent's mind, that there's something there they're chasing, like they're trying to tune into.

And for me, that's very relevant because I'm trying to do this like two-mind thing.

uh dialogue where like you'll have a a continuous mind that's having some kind of affordance or ability and then the attractor would be like a concept and then that could feed into this like discrete mind let's say uh that you know has connections between concepts let's say but so it seems like an attractor can serve as what i would call a concept

And the process of approaching that would be like some kind of skill or ability or affordance


SPEAKER_03:
Well, yeah, I mean, in figure eight, six, this is like a classic hierarchical architecture where the lower level is a continuous time, continuous state space model and the higher levels of discrete time, discrete state space model.

So it could be like you have some sort of continuous time dynamic, whether it's Lorenz attractor or just some sort of oscillator.

And then it's like there's a discretization, let's just say, into quadrants.

So then even though there's this continuous two-dimensional state space at a lower level, it gets discretized into just a four-state discrete state space model.

That's basically digitization.

So this corresponds to a variety of settings.

It's really convenient for taking analog sensors and then discretizing the information.

It's been applied to folk psychology.

in terms of like embodied and interoceptive processes, which are continuous in their nature, leading to discretization and action selection.


SPEAKER_00:
Okay, good.

So that it has been done.

That's okay.


SPEAKER_03:
Cool.

John, and then yeah, we can just go to any part on eight, or when we get to Lorenz, we'll look at kind of Lorenz 2025.


SPEAKER_02:
well this is what i wanted to talk about actually because what i learned about the lorenza tractor or the lorenz system i should say i i learned that it was a very simple system that isn't even very good for modeling the weather uh and so i'm wondering how you could use this system in like all sorts of other uh other circumstances when it's not even that good at modeling the weather which is what it was made for


SPEAKER_03:
Yeah, great, great point.

So I'm not sure if it was actually meant to be like the best possible weather forecasting model, though it was a meteorologist.


SPEAKER_02:
But the point was the simple around it was just it was just meant to be a simple model that captured certain aspects of the system.


SPEAKER_03:
Right.

And kind of the breakthrough was that this deterministic dynamical model in continuous time exhibited chaotic behavior.

So that showed that really simple models can have complex, chaotic.


SPEAKER_02:
I don't think that was a breakthrough because, for example, Poig-Curie looked at systems like that around the turn of the 20th century.

uh i think i think this though might have been the first use of the idea of an attractor but my question is if it's if it's not useful for what it was built for how can it be used to model even other things like um yeah yeah agreed lorenz definitely is building on different attractor concepts from point correct so let me just share a little bit from rx and fur


SPEAKER_03:
um this were some some updates that that I pushed this morning but based upon um examples that they brought in just a couple hours ago so six hours ago um so yeah it's not that the Lorenz uh model has just a few parameters

just here.

So if you wanted performance, you might not necessarily use this exact model.


SPEAKER_02:
But conceptually, I bet made a weird problem with zoom.

I like I only see like by my window, like in the main screen, I can't see what you're sharing.

And someone helped me with this.

Maybe like right click on.


SPEAKER_03:
Can you see the shared window at all?


SPEAKER_02:
I see something.

It says Daniel Friedman screen, but I click on it and it's very small and I can't read it.

You don't see it at all?

No, I do see it, but it's very small and I can't read it.

Maybe do a pin, right click and pin it.

I'm right clicking, but it's not doing anything.

Okay.


SPEAKER_03:
try to figure this out yeah yeah it's all good but just it is there so it has these several parameters and and it's a it's a sort of proof of concept showing how with several parameters you can get this dynamical chaotic behavior so what this rx infer example did today so it's in rx infer examples dot jl in the advanced examples integrating neural networks with flux jail

So they uploaded this six hours ago as a notebook, which is really useful for web-based viewing.

And then I modified it into a script and made some modifications.

So what this script does, we'll just look at it in the context of this notebook.

And then we can go over to Cursor and play around with it.

So first, they define the Lorenz.

system this is going to be the underlying generative process so in in uh terms of chapter eight which will kind of go back and forth between chapter eight and this more recent work the underlying process is the x y are going to be the observations that are sampled from the lorenz system a data set is created with noisy samples coming from this lorenz system

So here's this image.

This is kind of like the GÃ¶del-Escher book cover.

We have a three-dimensional continuous time dynamical system with Lorenz dynamic.

And then here are three of the projections onto each of the pairwise axes.

So it's like we have some insect flying around in a three-dimensional room, and these are the projections with a shadow on three of the walls.

We're using this because the noisiness and the underlying chaotic nature of Lorentz system make it hard to find a convergent parametric estimate of the transition dynamics.

So it's emblematic of complex adaptive systems like weather or biological systems that might dwell in a region and then have some kind of switching into another regime.

Again, showing how that comes out from just a couple of equations which are deterministic, but the sampling from them is not.


SPEAKER_02:
Any chaotic system is going to be like that, right?

So why Lorentz?


SPEAKER_03:
yeah because it's classic and there are other ones this is one with very very few parameters so like there's the double pendulum there's a variety of chaotic systems to study like empirically and analytically more of a metaphor no we're actually studying this model what do you mean well


SPEAKER_02:
If you have a chaotic system and you're representing it with the Lorentz system, that wouldn't be good unless it actually is modeled by the Lorentz system, right?


SPEAKER_00:
Well, you can have a toy model, right?

You can study a toy model just for lots of reasons.


SPEAKER_03:
Yeah, there's the pure pedagogical element, which is like, if you don't have this Lego block in your grammar,

you won't have a key piece of understanding how it works in this case and then if there's a different model that fits the data better when you're in like a data fitting situation like chapter nine right you might use a different model so is the reason you use lorenz because it data fits is that the is that the answer no because it's like

has a long history it's simple and it gives us an intuition on these chaotic switching Dynamics with a lot of um like Rich behaviors from a simple underlying just a couple equations which we can define in a few lines of code okay but so then there's like a world of active inference that works with chaotic models besides Lorenz and Lorenz is just in the textbook is that is that the thing

Yeah.

If you put a different model here, the rest of the notebook, you could just, this is just an example.

So if you have a different model or you want to change how, you can put a different model here.

Just wait to understand what's happening in this notebook.


SPEAKER_00:
A simple model just keeps things short and easier to, like Daniel said, if it's classic, then people understand that it's easier to communicate.


SPEAKER_03:
yeah there's so and it is one of the simplest i mean it's just these three dimensions and three updates okay so here's noisy samples coming from lorenz attractor now we want to infer the latent state given the ob the observations so flipping to chapter eight

we are getting observables and we want to infer neural states or latent states like in spm statistical parametric mapping so kind of the precedent to fep and active inference you'd have like neural imaging data as your observables and you have underlying neural activity as latent states okay however

The hidden dynamics of Lorenz system exhibit nonlinearities and cannot be solved in a closed form.

One manner of solving the problem is introducing a neural network to approximate the transition matrix of the Lorenz system.

So note that the notation is different in this example than it is from the textbook.

So in this example, A is gonna be the transition operator and B is gonna be like the ambiguity operator that maps between the latent states and the observations.

Whereas in the textbook, it's like the other way around.

B is the transition states in the latent space and A is the observation map.

Okay.

Flux.jl is used as a neural network.

package in julia here's the rx infer probabilistic model we can return more of this or or people can learn more about rx infer or get involved in the project but this is a very simple state space model with just five variables um first the probabilistic model is used to extract parameters from the untrained neural network

and basically it does terribly like the untrained neural network doesn't predict the data at all um so it was just randomly initialized and so the probabilistic state space model also just this green line it has nothing to do with the data then the neural network is trained using a free energy objective which is how neural networks are trained um here's just neural network training code then

get here which is showing that we can use the probabilistic model the state space model like the explicitly defined rx infer model to recapitulate the parameters of the neural network and so i took that several steps further

It's super, super exciting because this is showing a really critical design pattern, which is about fusing the complementary strengths and functionalities of the empirical data fitting, highly parameterized nature of like machine learning and neural networks with explicitly defined and constrained probabilistic models like in Rx and Furr.

So basically they have complimentary strengths.

Neural networks are universal function approximators.

They can interpolate any given function, given enough training and size and all of that.

However, they have high computational resources.

They have challenges with interpretability and so on.

They don't have genuine uncertainty estimators, all of these different kinds of limitations.

Here's showing a way in which the parameters of the Lorenz can be inferred with a neural network and trained on the data, just like anything else in machine learning or just sort of computer science today.

And then we can infer transition parameters within a very, very tightly defined probabilistic model

which is small enough to be defined within this at model block in RxInfer.

So this is kind of, it's, you know, things have happened since 2022.

This is one of them from just a couple hours ago.

And it's just really exciting because it shows, like, you can do pure end-to-end probabilistic programming on Bayes graphs.

to directly fit parameters of distributions from data.

And that may be adequate.

That might be direct and awesome.

But this is a super interesting pattern that can be added into a lot of extant machine learning pipelines, or language model pipelines, where you have some kind of reinforcement learning or neural network system.

And then you use explicit probabilistic modeling on top of that to gain interpretability, genuine uncertainty estimators and other kinds of benefits like lower compute resources for these probabilistic models.


SPEAKER_02:
John.

So are you or is anyone familiar with Stephen Wolfram's concept of computational irreducibility?

Yeah.

So.

You said that the AI model can match any function.

Does that work with computational irreducibility, or are we rejecting computational irreducibility?

I didn't say match.


SPEAKER_03:
I said interpolator or approximator.

Whatever the actual ontological computational irreducibility is of the weather,

you can train a linear model to approximate it.

It might be a terrible approximator, your startup might fail, you might pick the wrong weather, you know, etc, etc, etc.

But you can approximate with a model.

So those blobs of irreducibility in nature can be approximated

using statistical models.

So like to take this into sort of like the halting problem, like you can't know whether a computer script is gonna, like what its output is gonna be for some kinds of scripts.

But you could have a statistical estimator that says, I think there's an 80% chance this script is gonna halt without running it.

or human behavior could have these elements of computation or irreducibility, but that doesn't mean you couldn't make a statistical model as a behavioral scientist.

So it's kind of like map territory, like irreducibility is about the territory, but you can always make statistical approximators.


SPEAKER_02:
Does it create a limit on how good the approximation can be?


SPEAKER_03:
Right, like if the approximator becomes perfect,

then functionally there was computational reducibility because you could reduce the underlying process to something simpler but to the extent that the approximation is not perfect then that computation has not been reduced now whether it's in principle irreducible or just the modeler hasn't tried hard enough is a second question

But like, here's an example of the advantages that you get from building this probabilistic model.

So here is like on a given dimension.

So just for the X value or something of the Lorenz attractor, we get a moving posterior distribution with a mean and a variance, but the neural network won't give us a mean and a variance.

It's just giving us its best prediction of the location at the next step.

Whereas this gives us like a moving Bayesian credible interval.

So these kinds of methods are complimentary.

And I mean, just again, within the last hours, this has greatly expanded our toolkit.

because it gives us access to building probabilistic models on top of trained machine learning models, rather than needing to do end to end training only through the probabilistic model.


SPEAKER_00:
So could you maybe expand on that point, like where you said with the mean and the variance that I guess you're getting this data coming in from a neural network and then you're able to use said, I think, statistically approximate that from the other end, like from top down or.


SPEAKER_03:
Yeah.

Yeah.

So, like, let's just say that that we have a language model and we're going to ask it.

how many people live in X place?

And it is going to do this forward pass through billions of parameters.

And then it's going to say like 11 million, 10.5 million, 13 million, 17 million.

Like it just, it's outputting these numbers, which represents in that run with that temperature,

the likeliest outcome.

That's how it works with sampling the likeliest outcome, given some, some noise that's added back in.

We could take that sequence of observations and then fit a model that just fits a mean and a variance from the language models outputs.

So we kind of infer like the true value for its belief about the population of that region from sampling its outputs.

So it still could be wrong relative to the real reality.

Like let's just say all of its training data suggested that there was this amount, but then more people are there.

So this isn't to say that it's veridical in some future moments, but inferring the latent state and having an uncertainty estimator on the latent state is always gonna be more accurate than any given single measurements.

It's like the measurements of, you know, if we have the mean and the variance of the height of the children in the classroom, that's always a better number to work off of than just one measurement.


SPEAKER_00:
And I think that's a nice example of what this whole setup is that the statistics kind of makes this presumption that there's something meaningful that we call the mean and the variance.

But the reality might be that this neural network is just all over the place.

And that's just, there's no really, I mean, that means nothing.

But from a statistical point of view, in terms of corralling or shepherding, or like just trying to

you know get get your hand our hands around this it's very useful and it is practically useful even though it from a meaning point of view it might not actually mean anything but it suggests what a meaningful meaning would be like that if it was if this is a meaning you're supposing hey like is this what you're talking about like is this what you mean the machine would say i don't know what you're talking about but that's how i'm thinking about it


SPEAKER_03:
So MB, you mentioned balance.

Let's just see if Cursor will bless us today.

What's kind of a question that we could ask about balance and see if we could be dealing with almost this two minds paradigm of like a neural network that's fitting noisy proprioceptive data from a continuous date space and then like a conscious

explicit mean and variance estimation from there but like mb what's an example of a setting like that or what would be a question that that relates to the vestibular cochlear yeah um could you help me understand that a bit better as i i'm yeah trying to follow uh


SPEAKER_01:
And yeah, you can just call me Mark.

Okay, okay.

Yeah.

MB's cool for Markov Blanket too.

Oh yeah, sorry.

I didn't say that my screen name is that.


SPEAKER_00:
Me, Markov Blanket.


SPEAKER_03:
um yeah so basically like using um cursor as sort of this this um augmented coding setup just it it may not work within you know the the 30 minutes we have here but just just to see possibly um that's what these examples are great for is like starting with this structure

and then modifying tweaking the example like the neural network could be flipped out for a more sophisticated neural network or here in this situation let's see if we could adapt it to study some question of interest with like a vestibular cochlear balance question yeah so are we sorry um


SPEAKER_01:
Specifically, so we're trying to put data into this model, is that right?

We're trying to build a model using this program, is that right?

Correct.


SPEAKER_03:
Yeah.

Yeah.

Modify this, just the, the architecture of this model where we get noisy data from a continuous state space, you know, chapter eight, and then we're going to infer the, we're going to use a neural network to train on the parameters from this noisy state space.

That could be likened to our subconscious, you know, embodied predictive networks and then infer parameters from

from a probabilistic model put on top of that neural network.


SPEAKER_01:
Okay, so if we're looking at some kind of data like, and tell me if I'm understanding this correctly, like postural sway, would that be one of the data that we're looking at?

Okay.


SPEAKER_03:
Okay, the noisy data are coming from proprioceptive continuous state spaces

related to postural sway.

And that could be like modeled as Lorenz attractor with chaotic transitions between qualitatively different postures.

Like a three dimensional state space could be the three angles of your finger.

So then there's like a zone within that state space that the finger,

fingers biomechanics are related so it's like and this again to kind of get to this like what's what's the distinction with active inference and these other neural network or other kinds of models what would be the approach to making biomechanically realistic finger movements

Well, one approach would be we get hundreds of hours of movement of fingers and try and do end-to-end learning based upon recapitulating realistic looking videos of hands, for example.

But obviously, even with billions of hours of video, making images with realistic hands is still challenging.

Whereas this complimentary approach would be, you actually have this explicit parametrically defined model of the biomechanics of the hand.

And then you understand, well, here's the zones of state space within that defined model that the hand can be in.

And then we'll generate images of the hand from these biomechanically realistic postures versus just trying to recapitulate the appearance from


SPEAKER_01:
real video and so so okay and then what what what kinds of question would we want to address with that kind of model so are you i mean i i could say something like you know one's uh conscious perception of threat you know some something like that would would that be

is it fair to so this is all new to me right but but taking someone's uh you know conscious perceptions um and looking at the effect on on the other end of the you know entropic dimensions of their postural sway characteristics you know some something like that that would be i don't know if that's the the right kind of question to

to ask for this type of exercise, but that would be an example of something that would be of interest.


SPEAKER_00:
I'd like to add a related example.

I learned about when I went with my friend to his son's Aikido practice yesterday.

And there was a, he told me about Baguan Zhan.

So there's this martial arts, it's all about these different hand movements.

And he's like eight different ones.

So like they just cycle through them.

And so you can, so it's very much like these attractors.

Like you can think, okay, my hand's going to be grasping.

or my hand's going to be blocking, let's say, or my hand's going to be striking.

And so in each case, I kind of picture, I think they even kind of suggest that, like if your hand's grasping, you have a particular attractor that you're projecting.

And so as you move your hand, this attractor is guiding the grasping.

so that in that context you would you would be imagining this grasping and and you would be centered on that and it'll all work out but then in this kung in this school based on the iching eight trigrams then you might go to let's say striking you see and then you might go to let's say blocking so the context keeps changing for what you what is an attractor and you're just cycling through all these attractors it's it looks like bot periodicity i talk to daniel sometimes about but


SPEAKER_03:
that i thought that was kind of curious that wonder if like that could be connected here yeah like um this was uh it it relates to chapter chapter eight like in this page on uh this is we we did a book stream with thomas parr a couple years ago and uh this part right here relates to basically recurrent attractors and the continuous state space model

so initially the active inference models were more like generalized filtering then people wanted these sequential dynamics so that's like dealt with in chapter eight like cursive so then it was like there was models where it was like the limit attractor was like a cursive letter s so it's just kind of like drawing a cursive letter s and the continuous dynamics were basically like the arms joint mechanics on the table um but planning

on digital computers is much easier with discrete state space models.

And so that is what led to these hybrid architectures where there are mixed continuous and discrete state spaces because planning is more easily considered in the discretized setting like a chess planner.

um so it's like with eight hand postures um it's like that there's eight discrete options at this higher level and then action selection you know context switching attention which is modeled as internal or covert action meaning it's not observable from the outside attentional regime shifts within this discrete state space um

issue a descending motor contact switch such that the body engages in a different limit attractor so like raise your leg now put your leg down now raise your leg now put your leg down so it's like there's a biomechanical continuous attractor in that case it would be basically like that would be the example from here

move move your point okay point at the top corner of the room now point at the bottom corner of the room now point you know point over there then there's this transient dynamic a new set point is established and then um error error reduction with proprioceptive feedback no touch your right wrist and then well

Once you do that, the proprioceptive error is zero when you're doing that.

The top-down attentional regime, I should be expecting proprioceptive feedback reflecting that I'm touching my wrist, and the ascending proprioceptive data have no error term, and that's a fixed point.

Or the fixed point could be oscillatory, like wave your arm like this.

So that's like an oscillatory attractor.


SPEAKER_01:
One thing I've come to understand is that as we, so, so use the example of moving your arm to a point in order to initiate, or actually to plan and conduct that movement, there has to be sensory assuming that's proprioceptive attenuation.

Is that right?

So how do you then use the proprioceptive input to understand the movement in the model when I think what we do is, and you can absolutely correct me, is we turn the precision down as we attenuate the sensory input in order to overcome the evidence, right, that I'm not moving to use that.


SPEAKER_03:
example is does that make sense yeah sensory attenuation comes up in five chapter five as well but yeah exactly like modulating attention so what are the two ways to to reduce free energy there's change your mind and change the world you know

updating beliefs that's changing the mind through learning and inference or updating action to to modify the world okay and what is going to control whether the agent engages in passively updating its parameters now parameter updating is its own kind of action but not gross action you know or changing through through action

and that relates to the attention that's paid to the ascending predictions basically so that is is empirically observed in postural settings as well as like saccades which is like kind of like a micro postural I mean it's it's ocular postural um that basically in order to enable a move

if you kept high precision, like for example, on my proprioceptive is that I'm seated in a chair.

So how is it that I can get out of the chair

When it's like, no, and in reinforcement or reward learning, actions are selected based upon their expected reward.

Whereas in active inference, we're doing direct policy inference on the likelihood of action.

So it's not that standing up would be more rewarding for me.

It's I expect myself to be standing up.

So it's the fulfillment of likelihood rather than the maximization of reward.

But how could it be when it's an obvious counterfactual, how could it be likely for me to be standing up?

How could I be the kind of guy who's standing up when my veridical proprioception is that I'm not?

And the answer is transient sensory attenuation makes it suppressing the proprioceptive input

enabling there to be more ambiguity of which position I'm actually in, which creates a kind of like postural liminality, which then a top-down belief, no, actually I am standing up or I'm on the path to standing up, can sort of get the ball rolling over a critical threshold that then action fulfillment can take all the way.

That's been modeled in like situations with like hyper or hypo dopaminergic cases where like somebody may have challenges initiating movements, but once movement is initiated, it continues or they can initiate, but not complete a movement.


SPEAKER_01:
So it's just that transient suppression.

I think that was, that's the key is that it would to initiate and then you're on to.

at some level processing that proprioceptive feedback to help with the movement itself, right?

When the movement's in process, there can't be this continuous suppression.

It has to be just, I picture it just kind of as a flicker, and then you're on to the movement.


SPEAKER_00:
Or as a gradient, a gradient of suppression.


SPEAKER_01:
Yeah, well said.


SPEAKER_00:
You become more and more demanding and more certain and more precise.


SPEAKER_03:
Yeah, or it's like driving on a windy road and it's like on a straight part, you want to accelerate, but then you relax off in order to update your vector.

So it's like when your gaze is fixed, you want to be having high attention to the visual input.

But then during volitional or sub-volitional eye movement, visual attenuation occurs, which is why we don't get motor, you know, don't get nauseous outside of like vertigo type settings.

with eye movements because when we look away like we get this attentional blink we're actually not accepting or paying attention to the visual input even though photons hit the retina at the same rate during the movement of the eyes so that's like kind of like it's like depressing the clutch on attention shifting into a different spot and then we re-engage the precision and now we're like getting information from over here


SPEAKER_01:
So I'd say there's good evidence for folks who go on to have something like persistent dizziness is that there is not good sensory attenuation with movement.

In fact, there's this excessive precision that seems to be a theme among a variety of conditions.


SPEAKER_03:
yeah that like that is sort of like that is what precision psychiatry and all these kinds of approaches get towards which is like sometimes it's that there's a um it can be an uncertainty estimator that's too precise or not precise enough that leads to different behaviors so it's not a question of just like moving a variable up or down


SPEAKER_01:
If I was to refine that question that you kindly asked me to try to formulate, I would say something like, what are the effects of excessive tension to postural sway?

Which would be the same thing that would probably occur during a perception of threat.

But what are the effects on the natural sway parameters?

So, this just becomes this ongoing loop, and that would be something like to use the, you know, vestibular phraseology, like malady department, which is just like an excessive duration of something like sea legs.

Yeah, I don't know if that's something we could put into a model like this.


SPEAKER_03:
like it's that's kind of that that is the exploratory modeling and inquiry is like okay so we have

this model that's getting trained on proprioceptive data so you know in progress but then we could say something like well but let's just say somebody is acting based upon their parametric estimators of posture what would happen if their if the precision was low so let's just reduce let's have it let's have the the best fitting model and then let's simulate movement from someone whose precision is three times higher or three times lower

And then that, you know... Yeah, Andrews, did you have a...


SPEAKER_00:
yeah i wanted to jump in with an idea that may actually be related to this but that i've been having in this situation where let's say you have this task that you're given a triangle and you're going to put in uh and you're kind of blind but you're gonna put in a little circle and you try to expand the circle until its maximum size you can never be perfect at that but you try what you get so you're given some triangle so

In the beginning, when you do a task like that, you're going to be bumping into sides or whatever.

You don't know how to guess what would be the right amount to increase the radius, etc.

But at a certain point, you'll get the answer or something rather satisfactory.

And then I imagine there's like a replay, let's say, in your mind.

You say, look, okay, this is what it took for me to do this task.

but now that i know what the answer is where the center is i'm interested to learn from that by saying okay now that i know where i end up i would replay it in my mind to do that as efficiently as possible like i'd make the right guesses all along the way and so if you do the replay for the cases you've done before

um you get much more efficient algorithms that you're developing so let's say you're getting you're given a whole bunch of different triangles and so they're different conditions and whatever but i think this notion of and i think it goes like to the statistical um interfacing that you were doing daniel saying okay

It's not a particular answer, but you're going to get a statistical mean and a variance for what's optimal behavior.

What's optimal presumptions?

Where is this center of the triangle probably most likely going to be if I'm thrown into some kind of triangle?

Yeah.

This notion of replay, that you would want to replay and get your optimal strategy, and then you'd want to go into a new problem with that optimal strategy and keep improving it.


SPEAKER_03:
yeah so like live stream 51 series with isomura at all this is a really critical paper that shows that there's a monotonic relationship between the loss function used in neural network fitting and the variational gradient descent on the semantics of the base graph across the blanket and they use this postdictive learning strategy where basically at each time point

you you minimize so that factor graph with fictive causality of factors so decision making to minimize the future risk so we want to minimize future risk for the unoccurred event and the way that's going to happen is by remembering our past sequence of actions and observations

then reassessing what would have been the least regretful updated risk assessments given all that we've seen till now or given within this sliding window of what we've seen till now so then it's fictive causality is propagating backwards in time


SPEAKER_00:
the sense of the the agent is saying if i would have done that given what i know about this now this is how i think it would have occurred and using those re-entries to reduce upcoming risk and it can be happening like very rapidly after the final solution so like with posture i can just imagine like let's say you feel wobbly and you kind of like regain your balance but you just say wait wait wait like i had it all wrong like this is what

i should have been having in my mind so because so and if you don't have that you're going to be wobbling all the time and you're going to fall down but if you're wobbling a little bit you're able to re-parametrize well what is the my proprioceptric situation then you'll be you'll feel stable that was just a momentary thing somebody said something about about what


SPEAKER_01:
I was just saying you could you could also do that on a false inference, right?

Like like an over attribution of something like let's say you have a really and we see this in the clinic, you have a really kind of fluky circumstances around a fall, you know, that you couldn't possibly, you know, recreate a sort of a one off experience that somebody has.

And then they go through the process of it sounds like mitigating

the likelihood that that will happen again.

And they do that to a level that is excessive, right?

So then their subsequent movements become very constrained.


SPEAKER_00:
Like shuffling their feet or something.


SPEAKER_01:
Yeah, for example, or they have a very tight, I guess you'd say, excursion of their postural sway.

So those kinds of things.

And at the same time, there's a greater


SPEAKER_03:
conscious and this is what I'm interested in is like you know the the conscious overtuning of precision yeah like I mean that is is definitely where nested models would come into play like an injury occurs and then there's increased attention

to the pain or there's modification.

And that sets up a new attention with descending and proprioception ascending.

And those can result in a new attractor with reduced mobility or whatever it may be.


SPEAKER_01:
And that can generalize to other postures and even probably other circumstances.


SPEAKER_03:
yeah like again that's sort of the toolkit and that's where the textbook gets us it's just like hey with with single layer models this is the there's already these richness of cognitive patterns to explore and that's what chapter seven and chapter eight are about so you know chapter six is the recipe these are the questions to consider like going through these is is qualitative initially

And then chapter seven goes into the discrete time models.

Chapter eight goes into continuous time models.

Chapter nine goes into data fitting.

But it's like that, that kind of is one structure of the process.

And then it's maybe you want the single best performing model for your deployment or, or for your paper.

Or there's also a lot of value in building these portfolios of models and looking how different features like modify, explain different components of the variants, especially if it's gonna be something involving people where there's like intersections of complex psychological phenomena.

So it may not be just a single layer model.

but this is some of the toolkit and knowing what what a single layer model can do helps give give some of the um motifs kind of like the rudiments for building more sophisticated models and I just it's an exciting day because the applicability of these probabilistic models to do parametric inference from neural network models which are just everywhere

has increased markedly in the last like eight hours, which is pretty fun.


SPEAKER_00:
to jump in like to think of these two minds one continuous and one discrete and i think of like the continuous mind you know you want to extract the critical points so it could be like the peaks or the troughs or it could be like you know going up you're tensing your muscle you know and then going down you're relaxing it and so you have these different modes that then can become discrete and i guess what i learned today from you was that in the other direction it's like projecting these statistical

presumptions like oh there's got to be a mean let's say there's got to be a variance that's attracting even if they don't actually you know exist in any real physical sense but they exist in a sense of trying to get a grip on what's what you you know getting a handle


SPEAKER_03:
yeah i mean and and and this this like to the earlier questions like the structure of the generative model assumed by the agent does not have to be the same as the environments the environment could be like a bathtub probability distribution like it's either like dwelling low or dwelling high but then the agent could be trying to infer a gaussian

So then they could having all these pathologies where first it's super tight low, and then it's super tight high, and then it's in the middle and it's super blurry and it's swapping between them or it's staying in one.

So it's like they're fitting ultra well when it's on the low with their high precision low estimate, but then they're completely confused when it flips to the high state.

So it's like, those are the kinds of diagnostics that you want to look at to understand whether you're dealing with the wrong family of variational distributions.


SPEAKER_00:
And it's like you could be walking uphill for a ways and then walking downhill for the ways like your posture is complete.

Like there's no average that it's a non-concept to say there's some kind of average there because it depends on where you're walking and you don't know where you're going to be walking.

But the idea that you have some kind of momentary balancing, you know, parameters that you're kind of guessing like that's they don't have to be real, but they could be meaningful, I think.


SPEAKER_03:
Yeah, and it comes back again to the precision modulation and attention, which is just over the papers in the years is always returned to as sort of a hallmark of intelligence.

You know, you want to be precise when it's good to be precise and to be open when it's good to be open.

But when to do that is the question.

that's that's like a third mind type of thing balancing those two minds i think exactly agreed with that um yeah just in our last minutes let's see how that um what this what it will do for its second output but anyone have any last comments or questions i have a question but it's not about chapter eight


SPEAKER_02:
Is it possible to change your generative model?

Like, are there models that change models?


SPEAKER_03:
Yeah.

Yeah, that's called structure learning, is when the topology of the model, the structure of the model, is itself modeled.

So, yes.

So, any other...


SPEAKER_00:
I'm glad, John, Mark, Daniel, to hear from everybody.

It was very helpful today.

Thank you.


SPEAKER_01:
Cool.

Thank you for allowing me to participate and learn.

This is great.


SPEAKER_03:
Cool.

Yeah, I'm also just really curious to see where this last training step will get us in the outputs.

I mean, it's not all about code, but starting with examples

and modifying them and kind of staying on a ridge of functionality is super powerful right now like you can also this rx and for your active in this or um it's an open source project we have a product we meet weekly okay you are in this i mean it's lazy dynamics and uh reactive bays are the developers but like there's a lot of participants in the institute who also contribute and so and we're partnered with them

But it's just using cursor or similar methods.

Again, so it isn't all about code.

It's not all about reducing it to code.

But I hope this shows a little bit.

And there's other places to see it as well.

With one prompt, you can get pretty far.

But modifying what's already functional is ridiculously powerful.


SPEAKER_01:
So that's one thing that's... Oh, sorry.

Yeah, go ahead.

I was just saying it's becoming a bit demystified as far as that was the one question I had coming in is like okay, how do you take something that's conceptual.

And then take real numbers and run it and it sounds like it's it's kind of like well you you just start with.

Something and then you say Okay, what if I increase the precision here or I changed the model there right that's kind of what we're getting at is you start to apply.

numbers in a in a relative sense is that right if the and if even better if there are real data but I don't know how you would give um you know Consciousness you know how you would give that numbers you know like like attention you just were playing with that zero to one as far as the precision of within the model is that what you're doing yeah I think like


SPEAKER_03:
Obviously, consciousness, especially if it's defined as unobservable, is a perennial measurement issue in question.

Doing attentional modeling and more of these like just cognitive variables that aren't necessarily related to self-awareness or consciousness, those are more tractable.

Self-report is a classic.

So yeah, consciousness related modeling is often tried and very fraught.


SPEAKER_00:
But this is, I don't mind it being fraught.

So this distinction between the continuous and the discrete, and then realizing, like you were saying, Mark, that sometimes you shouldn't overthink it, right?

Like you should be doing, you know, your continuous movement.

Sometimes you should, it's just like your lucky mind, when everything's going well, just keep walking.

But you have the unlucky mind, like, hey, there's a hole, like, don't fall in, right?

So

So do you use your lucky mind or your unlucky mind?

That is what consciousness is all about, like to make sure they have the same information and then deciding, yeah, but here I shouldn't overthink it, but oh no, here I should be careful.

So I think and see to the things we're learning, like the relation between those two minds.

One is that like, oh, let go of the break in terms of certainty and pretend you don't know.

And then tighten, tighten, tighten, tighten.

So that shows you that process shows you the direction of those two minds that you're going from the continuous one that needs to be moving to the discrete one that needs to kind of like focus on some attractor.

so those types of things are indicators of um the consciousness in play i would say let's see if it will output the stick figure as requested but but you know these functions are only a couple uh


SPEAKER_03:
So this could be like, this is pointing and like you're having your hand waver and point at something.

And then like, for example, blood sugar is related to the precision of the ability to point.

If somebody is having a blood sugar crisis, they're gonna have different precision of their movements.

That's something that's more empirically observable.

And then you could differentially parameterize

more overt elements let's see if it if it did it absolutely hilarious oh these are stick figures yeah true posture proprioceptive perceived posture so that gets super interesting right like there's the real body

then there's like these ghosts of like what we predict and what is and then you just say okay now modify it so that it's taking in this data instead of the simulated lorenz data so which what are the three the true the posture is the red one the proprioceptive signals are these noisier gray ones

And then the perceived posture is the blue one.


SPEAKER_01:
That's exactly what people describe.

At some point, okay, I realize my postural sway is normal.

And that almost takes some convincing.

But it feels like I'm doing this.

And you've probably had that experience.

Coming off a boat.

Or even sometimes transiently coming off an elevator.

You perceive that experience.

excess and for some people there seems to be a difficulty attenuating that and and uh you know returning and to use your uh example you're walking up a hill and then you're walking flat but like when you made that transition you're still in a sense like running the program as if you're walking up the hill and now you have this this conflict yeah

That's fascinating.

Looking at that, that's really exciting.

Yeah.


SPEAKER_03:
A really great way to model it.

Yeah.

It's open source.

Take it and run slash walk with it.


SPEAKER_00:
Not too fast.


SPEAKER_03:
Or stand and sway.

Yeah.

It's epic.

Okay.

Thank you all.

See you later.

Bye.

Thanks so much.

Great.


SPEAKER_00:
Bye-bye.