start	end	startTime	summary	headline	gist
330	58894	00:00	 workshop on sophisticated inference in pymdp. Can be up to 90 minutes or it's totally okay if it's less. Please bear with me. Maybe I'll share my screen and start.	Daniel: Looking forward to your workshop on sophisticated inference in pymdp	Solitary Inference in Pymdp
59092	108218	00:59	Ashwin Paul: We are on the process of adding sophisticated inference to the pymtp module. I'm going to mainly talk about the code that I have developed to kind of add that functionality. I work with active inference models and try to understand how to use them as an explainable model.	Session on sophisticated inference in pymdp is hosted by Ashwin Paul	Sophistication in Pymdp
108314	687270	01:48	An agent is always trying to minimize the entropy of its observations. This can be interpreted as the belief that the agent is maintaining about the hidden state in its generative model. In classical active inference, usually decision making is defined in terms of policies. But this formulation becomes intractable quickly.	An agent is always trying to minimize the entropy of its observations	Free Energy Principle in Active Inference
687420	775860	11:27	In this workshop, what I am focusing on is how to kind of define a generative model and given an environment. We are going to talk about how to build up a model for this grid that can be used in the sophisticated inference in the PMDP module.	This workshop focuses on generative model for sophisticated inference in PMDP module	In the world of sophisticated Inference: generative models
779370	1163110	12:59	We are trying to merge sophisticated inference into the original Pymdp module. In the parent folder there is also an example folder for sophisticated inference demo. And what I am going to do today is to walk you through this tutorial of sophisticated inference.	Today I'm going to walk you through a tutorial of sophisticated inference	Pymdp: Smarter Inference (2018)
1163960	1493446	19:23	So now it's time that we define a generative model for the sophisticated inference agent. Let's define the structure of the model that we want the agent to have in its mind. And then we have a method to kind of add values which is the preference for every state.	Let's define a generative model for the sophisticated inference agent	John Dewey's generative model for the sophisticated inference agent
1493628	1798442	24:53	In this demo we are going to try and reproduce this behavioral result from the original sophisticated inference paper. What we are trying to do is give the agent a generative model. And what basically it does is it will return an action which is to be taken at this point of time and the environment can basically use that action.	We have the generative model and then we have the agent class	Inverse inference with the generative model
1798496	2550794	29:58	The sophisticated inference agent uses the existing Pymdp agent for some functionalities. It reorganizes the generative model structure for any number of hidden state modalities. Once it has done planning, it can take decision using the sample action function in PymDP and basically return that action.	We are using the existing Pymdp agent for some functionalities	Inferring from Pymdp with Softmax
2550912	3178442	42:30	The idea of implementing tree search. And why this is powerful? It is because you can go as deep as you want. Once you evaluate the expected free energy for all available actions, given the present state, you can basically compute the action distribution. And then you can use this action distribution to sample actions in the agent environment loop.	Tree search algorithm allows you to go as deep as you want	Learning the Probability of Actions
3178576	3227290	52:58	With sufficient planning depth, it's able to navigate and reach the goal. For lower planning depths, which is not sufficient, the agent ends up in local maximas or local minimas of expected free energy. But it's worth playing and it's important, right?	With sufficient planning depth, the agent can navigate and reach goal	Planning depth for the Hopeful Search
3227950	3472940	53:47	Why is it important to have a threshold in evaluating sophisticated inference? A search threshold of zero means that you will consider all consequences. The more deep you plan, the more time it takes. But if you have a very small search threshold, you have that computational time that makes sense in real world.	Search threshold significantly reduces the computational complexity of sophisticated inference algorithms	Why is a search threshold important for sophisticated Inference?
3473790	3629660	57:53	I wanted to explain the Agent class, the environment class, and the particular demo. You can also play around with learning in the sense that while defining the Agent step, you can add a flag that says learning equal to true. I hope people can start using this module to simulate sophisticated inference experiments.	I hope people get to play with this code and implement generative models	Inverse Inferring Pimdp 2.8
3630590	3759460	1:00:30	Dave asks, how do you think about the neural implementation of recursion? Brains don't seem to implement computer hardware style recursion deeper than a stack depth of one. How do we reconcile this with the biological basis of multiscale planning?	Dave asks a few questions about the neural implementation of recursion	Neuroscience: Recursion and the Brain
3760870	4006290	1:02:40	In the maze, how does the moves that are possible, how is that reflected? Does it need to know what things could or couldn't happen in the future? There is an important distinction between the generative process and the Generative model. If anyone else has questions in the live chat, just go for it.	There is a distinction between generative process and the generative model	Maze 2, The generative process
4006660	4388750	1:06:46	The general structure is very familiar to somebody who does things like this in reinforcement learning. Once you define that generative model, which you have to do, you can't run from it. Everything is kind of automated. But definitely you should play around with steps that may not be mandatory.	You can either define a very sparse generative model, which the agent can learn	Pymdp: Inclusion with generative modeling
4390560	4513090	1:13:10	Pi MDP module will enable people who want to try out sophisticated inference experiments in their particular domain. What I'm very excited to see is people using this module for variety of experiments, just like how people started using Pymdp and sophisticated inference is taking off.	This module will enable people to try out sophisticated inference experiments in their domain	Pymdp: More sophisticated Inference with the MPD
4514840	4767860	1:15:14	OpenAI Gym was designed for that, to compare different algorithms. In my PhD. I am actually looking at optimizing computations in sophisticated inference algorithms that lets you scale up to tasks. The right potential or the potential I see in sophisticated. inference is modeling intelligent behavior.	Active inference from its inception has faced problems of scaling to tasks	Inferring with sophisticated Inference
4769880	4810410	1:19:29	I hope I was clear explaining the code. Maybe it was too complicated or simple, depending upon your level. I hope it is useful to at least one person who would start using this. Thank you for joining. Till next time.	Aswin: I hope I was clear explaining the code	Code Explained in 60 Seconds
