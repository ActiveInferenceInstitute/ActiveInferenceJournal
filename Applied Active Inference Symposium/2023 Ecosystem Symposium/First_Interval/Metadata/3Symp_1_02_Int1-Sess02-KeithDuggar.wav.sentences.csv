start	end	sentNum	speaker	confidence	text
1290	7630	1	A	0.75593	All right, next up is going to be Keith Duggar, who has submitted a pre recorded video.
7780	10922	2	A	1	The pre recorded video is called active inference.
10986	15920	3	A	0.51	And the actor model So I will bring that up right now.
29430	37660	4	A	0.76	Okay, here comes Keith's pre recorded video on active inference and the Actor model.
44240	46956	5	B	0.88008	Active inference and the actor model.
47138	47580	6	B	0.99325	Hello.
47650	48076	7	B	0.77179	Hello.
48178	48732	8	B	0.99655	I'm Dr. Keith 
48786	54012	9	B	0.99307	Duggar, platform CTO at X Ray, an extended reality AI
54076	58880	10	B	0.99998	Company, and co host of Machine Learning Street Talk podcast.
59780	72320	11	B	0.89	Now, as we all work to build an ecosystem based on active inference, software will obviously play a foundational role to make the most of active inference.
72400	81928	12	B	0.72455	We'll need to use software engineering paradigms that align with the principles of active inference, and I think there is one tailor made for our needs.
82094	83770	13	B	0.99987	It's called the actor model.
85100	90750	14	B	0.9957	Active Inference and the Actor Model are two deeply connected understandings of the world.
91280	104160	15	B	0.99999	They provide foundational frameworks for dealing with the dynamics of complex systems, with a focus on autonomous agents that interact in an ecology of nested systems.
105220	117300	16	B	0.81591	I'd like to explore some of their key connections, including the role of agents concurrency, autonomy, uncertainty, and behavior adaptation.
118680	138680	17	B	0.99997	We will see that active inference and the Active model are both paradigm shifts away from a deterministic, centralized, step by step thinking to a decentralized network concurrent perspective of both computation and cognition.
139920	142430	18	B	0.99914	Just a little bit of history about the Actor model.
142960	166020	19	B	0.99999	Back in 1973, Karl Hewitt, Peter Bishop, and Richard Steiger were all working at the Massachusetts Institute of Technology AI lab to Fundamentalize, a concept of concurrent computation that included both structure as well as adaptable algorithm execution.
167480	173140	20	B	0.29585	Conventional methods at the time lacked robustness and secure mathematical foundations.
173960	178490	21	B	0.99861	Their collaborative effort ultimately led to the creation of the Actor model.
179180	189660	22	B	0.72	At the time, it was viewed as revolutionary due to its characteristics of both increased error tolerance and distributed computation abilities.
190320	206480	23	B	0.98207	Throughout the 1980s and the 1990s, the Actor model became a basis for numerous research projects as well as practical projects, gaining popularity for its flexibility and intuitive approach to concurrent computation.
208020	213084	24	B	0.98817	It was primarily used in artificial intelligence and multi agent systems.
213212	214400	25	B	0.99725	Sound familiar?
215880	232810	26	B	1	New Actor based languages like Actor, Saulson and Erlang contributed to the refinement of the model, shaping it into a more robust and flexible approach to concurrent computing, and it remains alive and well in computer science today.
233580	247310	27	B	1	More recently, the Actor model has gained renewed interest, mainly due to the growing need for distributed systems, cloud computing and edge computing, fueling the Internet of Things and Web 30.
248480	268710	28	B	0.99998	These computer tasks are ideally suited to take advantage of the ACA model's architecture, which is designed exactly for modeling concurrent handling of both large volumes of data on the one hand, and fine grained disparate autonomous systems on the other hand.
269640	287108	29	B	0.73003	This application of the Actor model has had profound effects on major companies that have utilized its principles to handle big data problems such as Twitter, Facebook, LinkedIn, so what does this have to do with active inference?
287284	290908	30	B	0.99125	I'm guessing you've already heard some of the parallels in the intro.
291074	299420	31	B	0.71179	But let's start by looking at a few core principles of the actor model and how they relate to the principles of active inference.
300000	302480	32	B	0.99962	Let's start with the concept of isolation.
303540	311280	33	B	0.37632	Isolation means that an actor in the actor model does not share its state with any other actor.
312100	315670	34	B	0.99999	It can only be affected by receiving a message.
316040	324100	35	B	1	And it can only affect change in the state of other actors by sending a finite number of messages in response.
324840	344910	36	B	1	From a software engineering point of view, this isolation principle limits potential side effects of an operation to a single actor, thus improving the system's overall predictability reliability, and most importantly, if embraced fully, can actually simplify the design.
346560	357040	37	B	0.99997	Looking at the diagram, we see an ecosystem of actors sending messages to a particular actor, which in turn sends back messages to other actors.
358340	359916	38	B	0.99999	Where is active inference?
360028	374630	39	B	0.99959	Well, let's recast receiving and sending messages to a perception action cycle and denote external, internal, sensory and active states.
375480	382600	40	B	1	And we now clearly have the necessary foundation of active inference a Markov blanket.
383660	389660	41	B	1	The actors of the actor model map directly to the agents of active inference.
390480	401150	42	B	0.99999	In addition, the finiteness, the fact that an actor can only send a finite number of messages in response is also an important shared property.
401940	409852	43	B	0.99704	Because active inference models reality, it necessarily respects the resource constraints of real systems.
409996	414390	44	B	1	And this is nicely bathed into the foundation of the active model.
415320	419860	45	B	0.64785	Let's look at another core principle asynchronous message passing.
420840	424100	46	B	0.9999	Communication between actors is asynchronous.
424440	429064	47	B	0.9098	This means an actor doesn't wait for a response after sending a message.
429262	433210	48	B	0.99987	It continues working, it continues living, as it were.
433820	449660	49	B	0.99941	This is critical as it decouples the actors, leading to a system that can continue functioning, living and making progress even when parts of the system are slow or even temporarily unavailable.
450800	461490	50	B	0.97963	Professor Friston has said that the free energy principle is the ultimate existential question if things exist, what must they do?
462660	467350	51	B	0.98708	Well, the actor model claims they must not wait on others.
468360	477528	52	B	1	Of course, an actor can choose to wait on others, but it must not be forced to do so in the model.
477614	479770	53	B	0.99999	It must be free to choose.
481820	487640	54	B	0.92489	This leads us to another critical principle that both models share autonomy.
488860	496620	55	B	1	The free energy principle is a model of physical reality and our reality is, after all, concurrent.
497360	505196	56	B	0.99999	All throughout infinite space, systems are evolving simultaneously according to their local dynamics.
505388	510560	57	B	0.99	And therefore this is reflected at the heart of the free energy principle.
510980	516560	58	B	0.99	Of course, a model of computation need not constrain itself to physics.
516720	518068	59	B	0.55322	But Hewitt et al.
518154	524560	60	B	0.81014	Were seeking to develop a model that did model the reality of distributed concurrent systems.
524720	538040	61	B	0.9	And luckily for us, the actor model embraces both concurrency, seen from the principle of isolation and actor autonomy, making it compatible with active inference.
539200	541820	62	B	0.58257	Next we come to nesting.
542640	558240	63	B	1	The actor model allows for an actor to not only receive and send a finite number of messages to perceive and act, it also allows as an action the creation of a finite number of new actors.
559220	568864	64	B	0.99998	These actors can either be nested within the parent, say, the parts of an animal cell, or it can be released into the environment as independent actors.
568912	577960	65	B	0.99999	From then on this principle, the model fits nicely with the beautiful concepts of multiscale nesting and active inference.
578940	587290	66	B	0.99999	This allows for actors to contain ecosystems of actors both all the way down and all the way up.
589200	597020	67	B	0.9999	Last, I want to cover two more actor model design principles behavior change and persistence.
599040	604450	68	B	0.9995	Actors have the ability to change their behavior in response to a message.
605140	614130	69	B	0.53001	This adaptability allows for the construction of complex stateful entities that can evolve over time.
614760	622660	70	B	1	And indeed, it allows for entire ecosystems to evolve new emergent behaviors.
624040	631800	71	B	0.99998	When used for software engineering, this adds a powerful tool for managing complex dynamic systems.
632700	636920	72	B	0.7366	Active inference, of course, embraces this to the extreme.
638220	654240	73	B	0.99	The very essence of thingness is the ongoing attempt to predict and adapt to an environment and thereby continue to exist to maintain one's Markov blanket in a broiling sea of activity.
656180	659920	74	B	1	Along with this also comes the concept of persistence.
660660	671300	75	B	0.42598	Persistence allows actors to sade their state and to restore or modify it later a feature that embodies the principle of memory.
671800	676180	76	B	0.94257	Memory is a prerequisite for learning and adaptation.
676700	688360	77	B	0.99769	An agent's ability to predict depends on its ability to remember past experiences and thus minimize the surprise associated with unexpectedness.
688880	701470	78	B	1	The vital role of memory is also emphasized when we assume that agents have inductive priors, either from experience or inheritance, contributing to their world model.
702340	714240	79	B	0.99979	This world model both guides their current behavior and it is continuously updated based on new experiences contributing to their ongoing adaptation and existence.
716600	717492	80	B	0.87	Okay, great.
717546	723940	81	B	0.99842	You say there are clear and deep connections between the actor model and active inference.
724280	729370	82	B	0.98464	But how does this help us in the active inference community?
730620	736520	83	B	0.99113	Well, firstly, in my opinion, it is a software engineering paradigm we should embrace.
736860	759120	84	B	0.99	And if we do, there are of course, actor model libraries and frameworks that we can use such as ACA, Orleans, thespian Actix Protoactor and many more, which we can immediately use when building active inference software modules and applications.
759860	775444	85	B	0.78994	There are also libraries, languages and even language features that align very well with the actor model principles such as Zero, MQ, tokyo and Rust, Erlang, Async, Await and C.
775482	777480	86	B	0.90898	Sharp, et cetera.
778380	792940	87	B	0.6137	But more important than the tools available to us today is the software design mindset that will guide our creation of the active inference software of tomorrow.
793680	805280	88	B	1	The actor model provides a paradigm of software design and engineering that is the most perfect match that we have for active inference.
806900	819990	89	B	0.99957	This is evident not only from the alignment of the core principles we previously discussed, but also from the insights that active inference in the actor model bring to each other.
821000	824870	90	B	0.99979	For example, consider what is now called Hewitt's Law.
825880	849310	91	B	0.95154	Informally stated as everything is everywhere, this law signifies the idea that in a truly asynchronous distributed system, it can take an arbitrary amount of time for a message to go from one place to another, and any actor must be prepared for that event.
850000	862000	92	B	1	There is simply no such thing as instantaneous in such a system, and no component can make an assumption about the timing of another component's actions.
862580	868260	93	B	0.99999	In fact, one must act as if a message may never arrive.
869560	871860	94	B	0.99999	This has important implications.
872760	888410	95	B	0.99996	It suggests that it is impossible to accurately and consistently determine the state of the entire system at any given time, because the information just may not have even propagated across the system.
889760	898780	96	B	0.97	And also attempts to implement global synchronization will inevitably introduce bottlenecks and reduce efficiency.
899920	919460	97	B	0.84013	Hewitt's Law emphasizes the need for systems to be designed in a way that they can effectively handle these unavoidable delays and uncertainties, highlighting the importance of robust nonblocking communication mechanisms and local decision making abilities.
920200	926020	98	B	0.99981	In short, Hector model systems are by nature nondeterministic.
927180	928760	99	B	0.99986	Does this sound familiar?
929340	937720	100	B	0.99984	What other paradigm highlights operation under uncertainty and the autonomy to continue despite the environment?
938940	941720	101	B	0.99654	Active Inference and the free energy principle?
942640	949660	102	B	0.9913	Active inference reflects the reality of an unpredictable world in which our software systems operate.
950080	959250	103	B	1	Different outcomes may result from the same initial conditions due to the occurrence of events in a random, unpredictable order.
960260	973060	104	B	1	This is the concept of surprise that we all know well, where an agent updates its beliefs about the world when the sensory input it receives does not match its predictions.
973720	979560	105	B	1	Both the actor model and active inference acknowledge that the world is unpredictable.
980780	989530	106	B	1	Even more than acknowledge it, the models accept this uncertainty as a given and not something to be managed away.
990780	1001020	107	B	0.99999	Indeed, as we know in the free energy principle, the uncertainty that we maintain in our models is what gives us the flexibility to adapt.
1003540	1024100	108	B	0.77621	Perhaps this is just my personal flight of fancy, but I imagine a future where software modules guided by active inference do away with hard coded error handling and swap in probabilistic learning algorithms that optimize themselves as the error landscape evolves.
1025320	1041660	109	B	0.99573	Modules that are robust and self healing distributed systems with no single points of failure that focus on predictive disaster avoidance rather than reactive disaster recovery.
1043040	1055570	110	B	0.99995	Looking towards the future, we as a community have the potential to push the boundary of both active imprints theory and practical implementations of the actor model.
1056020	1069620	111	B	0.99992	By leveraging the strengths of these two paradigms together, we can create software systems that are robust, adaptive and more aligned to the physical world in which they actually operate.
1071080	1085370	112	B	0.99992	Imagine a future where software components using active inference in the actor model can anticipate potential issues, learn from past mistakes, and adapt in real time to environmental changes.
1086620	1092780	113	B	0.99997	With this approach, we can build systems that are fundamentally more resilient and more efficient.
1093360	1113010	114	B	0.99998	In my opinion, this can bring a step change in software reliability and performance and scalability, and heralds a new era of computing, weaving principles of biology and cognition into the fabric of our software systems, bringing them closer to life in the process.
1115080	1126820	115	B	0.92689	In conclusion, the coupling of active inference to the actor model provides a powerful new lens through which we can look at software design and engineering.
1127180	1139400	116	B	0.99998	Whether we leverage existing languages and libraries aligned with active inference or invent new ones, we are standing on the brink of an exciting frontier.
1140480	1151980	117	B	0.98709	So let's seize the day, have a look at the actor model and its relationship to active inference, and let's shape the future of intelligent distributed computing.
1153040	1154460	118	B	0.99979	Thank you for listening.
1157790	1158540	119	A	0.99845	Awesome.
1159950	1161734	120	A	0.99994	Great talk by Keith.
1161862	1163978	121	A	0.99984	Thank you, Keith, for sending that in.
1164144	1166690	122	A	0.99723	There were some comments in the chat.
1167030	1173950	123	A	0.99736	So, Keith, potentially if you want to join for A-Q-A some future time, but really cool presentation.
