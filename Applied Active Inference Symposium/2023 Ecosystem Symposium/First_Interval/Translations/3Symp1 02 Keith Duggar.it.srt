1
00:00:01,290 --> 00:00:04,494
Va bene, il prossimo sarà

2
00:00:04,532 --> 00:00:06,606
Keith Dugger, che ha inviato un

3
00:00:06,628 --> 00:00:09,118
video preregistrato.  Il video preregistrato

4
00:00:09,204 --> 00:00:11,694
è chiamato inferenza attiva.  E il

5
00:00:11,732 --> 00:00:14,765
modello dell'attore. Quindi ne parlerò

6
00:00:14,788 --> 00:00:15,920
adesso.

7
00:00:29,430 --> 00:00:32,958
Ok, ecco il

8
00:00:33,134 --> 00:00:35,910
video preregistrato di Keith sull'inferenza attiva

9
00:00:35,990 --> 00:00:37,660
e il modello dell'attore.

10
00:00:44,240 --> 00:00:46,956
Inferenza attiva e modello dell'attore.

11
00:00:47,138 --> 00:00:49,608
Ciao.  Ciao.  Sono il dottor Keith Thugger,

12
00:00:49,704 --> 00:00:52,684
CTO della piattaforma presso X Ray,

13
00:00:52,732 --> 00:00:56,464
un'intelligenza artificiale per la realtà estesa.  Azienda e co-conduttore del

14
00:00:56,502 --> 00:00:58,880
podcast Machine Learning Street Talk.

15
00:00:59,780 --> 00:01:02,624
Ora, mentre lavoriamo tutti per costruire un

16
00:01:02,662 --> 00:01:05,536
ecosistema basato sull’inferenza attiva, il

17
00:01:05,728 --> 00:01:08,324
software svolgerà ovviamente un

18
00:01:08,362 --> 00:01:11,363
ruolo fondamentale per sfruttare al meglio l’

19
00:01:11,402 --> 00:01:13,204
inferenza attiva.  Dovremo utilizzare

20
00:01:13,242 --> 00:01:15,524
paradigmi di ingegneria del software che siano

21
00:01:15,562 --> 00:01:17,636
in linea con i principi dell'inferenza attiva

22
00:01:17,668 --> 00:01:20,136
e penso che ce ne sia uno fatto su

23
00:01:20,238 --> 00:01:22,664
misura per le nostre esigenze.  Si chiama

24
00:01:22,702 --> 00:01:26,084
modello dell'attore.  L’inferenza attiva

25
00:01:26,132 --> 00:01:28,356
e il modello dell’attore sono due

26
00:01:28,388 --> 00:01:30,750
comprensioni del mondo profondamente connesse.

27
00:01:31,280 --> 00:01:34,204
Forniscono quadri fondamentali per

28
00:01:34,242 --> 00:01:36,280
affrontare la dinamica dei

29
00:01:36,360 --> 00:01:39,624
sistemi complessi, con particolare attenzione agli

30
00:01:39,672 --> 00:01:42,672
agenti autonomi che interagiscono in un'ecologia di

31
00:01:42,726 --> 00:01:46,283
sistemi nidificati.  Mi piacerebbe esplorare

32
00:01:46,332 --> 00:01:47,916
alcune delle loro connessioni chiave,

33
00:01:48,108 --> 00:01:50,050
incluso il ruolo della

34
00:01:50,500 --> 00:01:53,040
concorrenza, dell'autonomia,

35
00:01:53,380 --> 00:01:57,300
dell'incertezza e dell'adattamento del comportamento degli agenti.

36
00:01:58,680 --> 00:02:00,596
Vedremo che l'inferenza attiva e

37
00:02:00,618 --> 00:02:03,184
il modello attivo sono entrambi

38
00:02:03,232 --> 00:02:06,300
cambiamenti di paradigma da un pensiero deterministico,

39
00:02:06,480 --> 00:02:10,392
centralizzato, passo dopo passo, a

40
00:02:10,446 --> 00:02:14,004
una prospettiva simultanea di rete decentralizzata

41
00:02:14,052 --> 00:02:17,751
sia di calcolo che di

42
00:02:17,806 --> 00:02:21,052
cognizione.  Solo un po' di storia

43
00:02:21,106 --> 00:02:25,100
del modello Actor.  Nel 1973,

44
00:02:25,250 --> 00:02:28,504
Karl Hewitt, Peter Bishop e Richard

45
00:02:28,552 --> 00:02:30,555
Steiger lavoravano tutti presso il laboratorio di

46
00:02:30,578 --> 00:02:33,676
intelligenza artificiale del Massachusetts Institute of Technology

47
00:02:33,708 --> 00:02:37,804
per Fondamentalizzare, un concetto

48
00:02:37,852 --> 00:02:40,972
di calcolo simultaneo che includeva sia la

49
00:02:41,036 --> 00:02:44,304
struttura che

50
00:02:44,352 --> 00:02:46,020
l'esecuzione di algoritmi adattabili.  I

51
00:02:47,480 --> 00:02:49,744
metodi convenzionali all’epoca mancavano di

52
00:02:49,792 --> 00:02:52,224
robustezza e di basi matematiche sicure

53
00:02:52,272 --> 00:02:55,263
.  Il loro sforzo collaborativo

54
00:02:55,312 --> 00:02:57,576
alla fine ha portato alla creazione del

55
00:02:57,598 --> 00:03:01,076
modello dell’attore.  All'epoca, era considerato

56
00:03:01,108 --> 00:03:03,224
rivoluzionario per le sue

57
00:03:03,262 --> 00:03:05,764
caratteristiche di maggiore

58
00:03:05,812 --> 00:03:08,784
tolleranza agli errori e capacità di calcolo distribuito

59
00:03:08,852 --> 00:03:12,236
.  Nel corso degli anni '80 e

60
00:03:12,258 --> 00:03:15,388
'90, il modello dell'attore è diventato la

61
00:03:15,394 --> 00:03:18,476
base per numerosi progetti di ricerca

62
00:03:18,498 --> 00:03:20,856
e progetti pratici, guadagnando

63
00:03:20,888 --> 00:03:23,184
popolarità per la sua flessibilità e l'

64
00:03:23,222 --> 00:03:25,516
approccio intuitivo al

65
00:03:25,548 --> 00:03:29,648
calcolo simultaneo.  È stato utilizzato principalmente

66
00:03:29,734 --> 00:03:32,240
nell'intelligenza artificiale e

67
00:03:32,310 --> 00:03:34,400
nei sistemi multi-agente.  Suona familiare?

68
00:03:35,880 --> 00:03:38,784
Nuovi linguaggi basati su Actor come Actor,

69
00:03:38,912 --> 00:03:42,116
Saulson ed Erlang hanno contribuito

70
00:03:42,138 --> 00:03:44,356
al perfezionamento del modello, modellandolo

71
00:03:44,378 --> 00:03:47,203
in un approccio più robusto e flessibile

72
00:03:47,332 --> 00:03:50,148
al calcolo simultaneo, e rimane

73
00:03:50,244 --> 00:03:52,164
vivo e vegeto nell'informatica

74
00:03:52,212 --> 00:03:55,272
oggi.  Più recentemente, il modello dell'attore

75
00:03:55,326 --> 00:03:57,796
ha guadagnato un rinnovato interesse, principalmente a causa

76
00:03:57,828 --> 00:03:59,944
della crescente necessità di

77
00:03:59,992 --> 00:04:02,904
sistemi distribuiti, cloud computing ed edge

78
00:04:02,952 --> 00:04:05,036
computing, alimentando l'Internet delle

79
00:04:05,058 --> 00:04:07,310
cose e il Web 30.

80
00:04:08,480 --> 00:04:11,351
Queste attività informatiche sono ideali

81
00:04:11,416 --> 00:04:13,436
per sfruttare l'architettura del modello ACA

82
00:04:13,468 --> 00:04:16,800
, che è progettato esattamente

83
00:04:16,950 --> 00:04:20,368
per modellare la gestione simultanea di

84
00:04:20,534 --> 00:04:23,409
grandi volumi di dati da un lato

85
00:04:23,800 --> 00:04:26,752
e di sistemi autonomi disparati a grana fine

86
00:04:26,816 --> 00:04:28,710
dall'altro.

87
00:04:29,640 --> 00:04:32,003
Questa applicazione del modello dell'attore ha

88
00:04:32,042 --> 00:04:34,436
avuto effetti profondi sulle principali aziende

89
00:04:34,538 --> 00:04:36,904
che hanno utilizzato i suoi principi per

90
00:04:36,942 --> 00:04:38,936
gestire problemi di big data come

91
00:04:38,958 --> 00:04:41,348
Twitter, Facebook,

92
00:04:41,524 --> 00:04:45,256
LinkedIn, quindi cosa c'entra questo

93
00:04:45,278 --> 00:04:47,636
con l'inferenza attiva?

94
00:04:47,668 --> 00:04:49,368
Immagino che tu abbia già sentito alcuni

95
00:04:49,374 --> 00:04:51,656
paralleli nell'introduzione.  Ma

96
00:04:51,688 --> 00:04:53,656
cominciamo esaminando alcuni

97
00:04:53,688 --> 00:04:56,396
principi fondamentali del modello dell'attore e il modo in cui

98
00:04:56,418 --> 00:04:58,568
si collegano ai principi dell'inferenza attiva

99
00:04:58,584 --> 00:05:01,236
.  Partiamo dal concetto

100
00:05:01,288 --> 00:05:04,832
di isolamento.  Isolamento significa

101
00:05:04,886 --> 00:05:07,664
che un attore nel modello attoriale

102
00:05:07,702 --> 00:05:10,464
non condivide il suo stato con nessun altro

103
00:05:10,502 --> 00:05:14,212
attore.  Può essere influenzato solo dalla

104
00:05:14,266 --> 00:05:17,060
ricezione di un messaggio.  E può

105
00:05:17,130 --> 00:05:19,524
influenzare il cambiamento dello stato degli altri

106
00:05:19,562 --> 00:05:22,164
attori solo inviando in risposta un numero finito di

107
00:05:22,202 --> 00:05:25,776
messaggi.  Da un

108
00:05:25,808 --> 00:05:27,512
punto di vista dell'ingegneria del software, questo

109
00:05:27,566 --> 00:05:30,051
principio di isolamento limita i potenziali

110
00:05:30,116 --> 00:05:33,111
effetti collaterali di un'operazione a un singolo

111
00:05:33,166 --> 00:05:35,924
attore, migliorando così l'

112
00:05:35,972 --> 00:05:39,072
affidabilità complessiva della prevedibilità del sistema

113
00:05:39,236 --> 00:05:42,104
e, cosa più importante, se abbracciato pienamente,

114
00:05:42,232 --> 00:05:44,910
può effettivamente semplificare la progettazione.

115
00:05:46,560 --> 00:05:48,636
Osservando il diagramma, vediamo un

116
00:05:48,658 --> 00:05:51,616
ecosistema di attori che inviano messaggi a

117
00:05:51,638 --> 00:05:54,635
un particolare attore, che a sua volta invia

118
00:05:54,668 --> 00:05:57,040
messaggi ad altri attori.

119
00:05:58,340 --> 00:06:00,690
Dov'è l'inferenza attiva?  Bene,

120
00:06:01,300 --> 00:06:03,816
riformuliamo la ricezione e l'invio di

121
00:06:03,868 --> 00:06:07,392
messaggi in un ciclo di azione percettiva

122
00:06:07,536 --> 00:06:09,620
e denotiamo stati esterni,

123
00:06:10,200 --> 00:06:13,539
interni, sensoriali e

124
00:06:13,610 --> 00:06:17,112
attivi.  E ora abbiamo chiaramente

125
00:06:17,166 --> 00:06:19,956
le basi necessarie per l'

126
00:06:19,988 --> 00:06:22,600
inferenza attiva, una coperta di Markov.

127
00:06:23,660 --> 00:06:26,436
Gli attori del modello attoriale si associano

128
00:06:26,468 --> 00:06:28,848
direttamente agli agenti dell'inferenza attiva

129
00:06:28,884 --> 00:06:32,840
.  Inoltre, anche la finitezza,

130
00:06:33,000 --> 00:06:35,676
il fatto che un attore può inviare solo un

131
00:06:35,698 --> 00:06:39,003
numero finito di messaggi in risposta, è

132
00:06:39,042 --> 00:06:41,150
un'importante proprietà condivisa.

133
00:06:41,940 --> 00:06:44,780
Poiché l’inferenza attiva modella la realtà,

134
00:06:44,940 --> 00:06:47,452
rispetta necessariamente i

135
00:06:47,516 --> 00:06:50,704
vincoli di risorse dei sistemi reali.  E questo è

136
00:06:50,742 --> 00:06:53,376
ben integrato nelle fondamenta del

137
00:06:53,398 --> 00:06:56,496
modello attivo.  Diamo un'occhiata a un altro

138
00:06:56,528 --> 00:06:59,860
principio fondamentale, il passaggio asincrono dei messaggi.

139
00:07:00,840 --> 00:07:03,012
La comunicazione tra gli attori è

140
00:07:03,066 --> 00:07:05,936
asincrona.  Ciò significa che un attore

141
00:07:05,968 --> 00:07:07,832
non attende una risposta dopo

142
00:07:07,886 --> 00:07:10,680
aver inviato un messaggio.  Continua a lavorare,

143
00:07:10,830 --> 00:07:13,210
continua a vivere, per così dire.

144
00:07:13,820 --> 00:07:17,256
Questo è fondamentale in quanto disaccoppia gli

145
00:07:17,278 --> 00:07:20,284
attori, portando a un sistema che può

146
00:07:20,322 --> 00:07:23,020
continuare a funzionare, vivere e fare

147
00:07:23,090 --> 00:07:25,948
progressi anche quando parti del sistema

148
00:07:26,034 --> 00:07:28,551
sono lente o addirittura temporaneamente

149
00:07:28,616 --> 00:07:31,964
non disponibili.  Il professor Friston

150
00:07:32,012 --> 00:07:34,028
ha affermato che il principio dell’energia libera

151
00:07:34,124 --> 00:07:38,240
è la domanda esistenziale ultima: se le

152
00:07:38,310 --> 00:07:41,490
cose esistono, cosa devono fare?

153
00:07:42,660 --> 00:07:45,412
Bene, il modello dell'attore afferma che

154
00:07:45,466 --> 00:07:47,350
non devono aspettare gli altri.

155
00:07:48,360 --> 00:07:51,572
Naturalmente, un attore può scegliere di servire gli

156
00:07:51,626 --> 00:07:55,284
altri, ma non deve essere costretto a

157
00:07:55,322 --> 00:07:58,808
farlo nel modello.  Deve essere libero

158
00:07:58,894 --> 00:07:59,770
di scegliere.

159
00:08:01,820 --> 00:08:04,004
Questo ci porta a un altro

160
00:08:04,052 --> 00:08:06,456
principio fondamentale secondo cui entrambi i modelli condividono

161
00:08:06,558 --> 00:08:09,719
l’autonomia.  Il principio dell’energia libera

162
00:08:09,790 --> 00:08:12,860
è un modello della realtà fisica

163
00:08:13,280 --> 00:08:15,547
e la nostra realtà è, dopo tutto,

164
00:08:15,634 --> 00:08:18,904
simultanea.  In tutto lo

165
00:08:18,952 --> 00:08:21,572
spazio infinito, i sistemi si evolvono

166
00:08:21,656 --> 00:08:24,048
simultaneamente secondo le loro

167
00:08:24,134 --> 00:08:27,696
dinamiche locali.  E quindi questo si

168
00:08:27,718 --> 00:08:29,344
riflette nel cuore del

169
00:08:29,382 --> 00:08:33,024
principio dell’energia libera.  Naturalmente, un modello di

170
00:08:33,062 --> 00:08:35,796
calcolo non ha bisogno di limitarsi alla

171
00:08:35,818 --> 00:08:38,784
fisica.  Ma Hewitt et al.  Stiamo cercando

172
00:08:38,832 --> 00:08:41,395
di sviluppare un modello che modelli la

173
00:08:41,418 --> 00:08:43,664
realtà dei sistemi concorrenti distribuiti

174
00:08:43,712 --> 00:08:47,056
.  E fortunatamente per noi, il

175
00:08:47,088 --> 00:08:50,824
modello dell’attore abbraccia sia la concorrenza, vista

176
00:08:50,862 --> 00:08:53,352
dal principio di isolamento, sia l’

177
00:08:53,486 --> 00:08:56,500
autonomia dell’attore, rendendolo compatibile

178
00:08:56,580 --> 00:08:58,040
con l’inferenza attiva.

179
00:08:59,200 --> 00:09:01,820
Successivamente arriviamo alla nidificazione.

180
00:09:02,640 --> 00:09:05,532
Il modello dell'attore consente a un attore

181
00:09:05,586 --> 00:09:08,552
non solo di ricevere e inviare un

182
00:09:08,616 --> 00:09:11,984
numero finito di messaggi per percepire e agire, ma

183
00:09:12,182 --> 00:09:15,292
consente anche come azione la creazione

184
00:09:15,356 --> 00:09:18,240
di un numero finito di nuovi attori.

185
00:09:19,220 --> 00:09:21,504
Questi attori possono essere annidati all'interno

186
00:09:21,542 --> 00:09:24,336
del genitore, ad esempio nelle parti di una

187
00:09:24,368 --> 00:09:26,564
cellula animale, oppure possono essere rilasciati

188
00:09:26,602 --> 00:09:29,076
nell'ambiente come attori indipendenti.  Da

189
00:09:29,098 --> 00:09:32,336
allora in poi, il modello si adatta

190
00:09:32,368 --> 00:09:34,628
perfettamente ai bellissimi concetti di

191
00:09:34,714 --> 00:09:37,960
annidamento multiscala e inferenza attiva.

192
00:09:38,940 --> 00:09:41,460
Ciò consente agli attori di contenere

193
00:09:41,540 --> 00:09:44,791
ecosistemi di attori sia dal

194
00:09:44,846 --> 00:09:47,290
basso che dall'alto.

195
00:09:49,200 --> 00:09:51,976
Infine, voglio trattare altri due

196
00:09:52,008 --> 00:09:55,436
principi di progettazione del modello di attore, cambiamento del comportamento

197
00:09:55,618 --> 00:09:57,020
e persistenza.  Gli

198
00:09:59,040 --> 00:10:01,664
attori hanno la capacità di modificare il proprio

199
00:10:01,702 --> 00:10:04,450
comportamento in risposta a un messaggio.

200
00:10:05,140 --> 00:10:08,192
Questa adattabilità consente la

201
00:10:08,246 --> 00:10:10,924
costruzione di entità con stato complesse

202
00:10:10,972 --> 00:10:14,130
che possono evolversi nel tempo.

203
00:10:14,760 --> 00:10:17,492
E in effetti, consente a interi

204
00:10:17,626 --> 00:10:21,584
ecosistemi di evolvere nuovi

205
00:10:21,632 --> 00:10:25,263
comportamenti emergenti.  Se utilizzato per

206
00:10:25,312 --> 00:10:28,264
l'ingegneria del software, aggiunge un potente strumento

207
00:10:28,382 --> 00:10:31,800
per la gestione di sistemi dinamici complessi.

208
00:10:32,700 --> 00:10:35,412
L’inferenza attiva, ovviamente, abbraccia

209
00:10:35,476 --> 00:10:39,304
questo concetto all’estremo.  L'essenza stessa

210
00:10:39,352 --> 00:10:42,363
della cosa è il tentativo continuo di

211
00:10:42,402 --> 00:10:45,324
prevedere e adattarsi a un ambiente e

212
00:10:45,362 --> 00:10:48,439
quindi continuare a esistere per mantenere la

213
00:10:48,520 --> 00:10:52,828
propria coperta di Markov in un mare ribollente

214
00:10:53,004 --> 00:10:56,736
di attività.  Insieme a

215
00:10:56,758 --> 00:10:58,912
questo arriva anche il concetto di

216
00:10:58,966 --> 00:11:02,444
persistenza.  La persistenza consente agli attori

217
00:11:02,492 --> 00:11:05,524
di modificare il proprio stato e di ripristinarlo o

218
00:11:05,562 --> 00:11:08,640
modificarlo successivamente, una caratteristica

219
00:11:08,720 --> 00:11:11,300
che incarna il principio della memoria.

220
00:11:11,800 --> 00:11:14,675
La memoria è un prerequisito per l’apprendimento

221
00:11:14,778 --> 00:11:18,504
e l’adattamento.  La capacità di previsione di un agente

222
00:11:18,622 --> 00:11:21,640
dipende dalla sua capacità di

223
00:11:21,710 --> 00:11:24,356
ricordare le esperienze passate e quindi

224
00:11:24,388 --> 00:11:27,176
ridurre al minimo la sorpresa associata

225
00:11:27,198 --> 00:11:30,520
all'imprevisto.  Il ruolo vitale della memoria

226
00:11:30,600 --> 00:11:34,056
viene enfatizzato anche quando assumiamo

227
00:11:34,088 --> 00:11:36,199
che gli agenti abbiano precedenti induttivi,

228
00:11:36,280 --> 00:11:39,100
sia per esperienza che per eredità, che

229
00:11:39,440 --> 00:11:41,470
contribuiscono al loro modello mondiale.

230
00:11:42,340 --> 00:11:44,464
Questo modello mondiale guida il loro

231
00:11:44,502 --> 00:11:47,291
comportamento attuale ed è continuamente

232
00:11:47,356 --> 00:11:50,028
aggiornato sulla base di nuove esperienze che

233
00:11:50,204 --> 00:11:52,939
contribuiscono al loro continuo adattamento

234
00:11:53,020 --> 00:11:54,240
ed esistenza.

235
00:11:56,600 --> 00:11:59,684
Ok, fantastico.  Dici che ci sono connessioni chiare e

236
00:11:59,722 --> 00:12:02,308
profonde tra il modello dell'attore

237
00:12:02,394 --> 00:12:06,424
e l'inferenza attiva.  Ma come

238
00:12:06,462 --> 00:12:08,756
ci aiuta questo nella comunità dell’inferenza attiva

239
00:12:08,788 --> 00:12:11,988
?  Beh, in primo luogo,

240
00:12:12,084 --> 00:12:14,084
secondo me, è un

241
00:12:14,132 --> 00:12:16,520
paradigma di ingegneria del software che dovremmo abbracciare.

242
00:12:16,860 --> 00:12:19,340
E se lo facciamo, ci sono ovviamente

243
00:12:19,410 --> 00:12:21,815
librerie e framework di modelli di attori

244
00:12:21,848 --> 00:12:25,448
che possiamo utilizzare come ACA,

245
00:12:25,624 --> 00:12:29,752
Orleans, thespian Actix

246
00:12:29,896 --> 00:12:33,055
Protoactor e molti altri, che possiamo

247
00:12:33,078 --> 00:12:35,516
utilizzare immediatamente quando creiamo

248
00:12:35,548 --> 00:12:37,872
moduli e applicazioni software di inferenza attiva

249
00:12:37,926 --> 00:12:41,596
.  Ci sono anche librerie,

250
00:12:41,708 --> 00:12:43,944
lingue e persino caratteristiche linguistiche

251
00:12:44,012 --> 00:12:46,016
che si allineano molto bene con i

252
00:12:46,048 --> 00:12:49,380
principi del modello ad attori come Zero,

253
00:12:49,450 --> 00:12:52,640
MQ, Tokyo e Rust,

254
00:12:52,800 --> 00:12:56,284
Erlang, Async, Await e C. Sharp,

255
00:12:56,432 --> 00:13:00,104
eccetera.  Ma più importante

256
00:13:00,142 --> 00:13:04,712
degli strumenti a nostra disposizione oggi è

257
00:13:04,766 --> 00:13:07,544
la mentalità di progettazione del software che

258
00:13:07,582 --> 00:13:10,136
guiderà la nostra creazione del

259
00:13:10,168 --> 00:13:13,996
software di inferenza attiva di domani.  Il

260
00:13:14,018 --> 00:13:16,764
modello dell'attore fornisce un paradigma di

261
00:13:16,802 --> 00:13:20,588
progettazione e ingegneria del software che è

262
00:13:20,754 --> 00:13:24,064
la corrispondenza più perfetta che abbiamo per l'

263
00:13:24,102 --> 00:13:28,160
inferenza attiva.  Ciò è evidente

264
00:13:28,580 --> 00:13:30,876
non solo dall’allineamento dei

265
00:13:30,908 --> 00:13:34,084
principi fondamentali di cui abbiamo discusso in precedenza, ma

266
00:13:34,122 --> 00:13:37,055
anche dalle intuizioni che l’

267
00:13:37,088 --> 00:13:39,156
inferenza attiva nel modello dell’attore apporta

268
00:13:39,178 --> 00:13:42,916
reciprocamente.  Consideriamo ad esempio quella che

269
00:13:42,938 --> 00:13:46,604
oggi viene chiamata Legge di Hewitt.

270
00:13:46,672 --> 00:13:49,800
Dichiarata informalmente che tutto è ovunque,

271
00:13:51,260 --> 00:13:54,824
questa legge esprime l’idea che

272
00:13:54,942 --> 00:13:57,844
in un sistema distribuito veramente asincrono

273
00:13:57,892 --> 00:14:00,652
, può essere necessaria una quantità arbitraria

274
00:14:00,706 --> 00:14:03,532
di tempo affinché un messaggio vada da un

275
00:14:03,586 --> 00:14:07,032
luogo a un altro, e qualsiasi attore

276
00:14:07,096 --> 00:14:10,364
deve essere preparato per quell’evento.

277
00:14:10,402 --> 00:14:13,900
Semplicemente non esiste qualcosa di istantaneo

278
00:14:13,980 --> 00:14:17,888
in un sistema del genere e nessun componente può

279
00:14:17,974 --> 00:14:20,384
fare ipotesi sulla tempistica delle

280
00:14:20,422 --> 00:14:23,548
azioni di un altro componente.

281
00:14:23,734 --> 00:14:26,980
Bisogna infatti comportarsi come se un messaggio potesse

282
00:14:27,050 --> 00:14:30,819
non arrivare mai.  Ciò ha

283
00:14:30,890 --> 00:14:34,644
implicazioni importanti.  Ciò suggerisce che è

284
00:14:34,682 --> 00:14:36,744
impossibile determinare in modo accurato e

285
00:14:36,782 --> 00:14:39,176
coerente lo stato

286
00:14:39,198 --> 00:14:42,569
dell’intero sistema in un dato momento,

287
00:14:43,260 --> 00:14:45,464
perché le informazioni potrebbero non

288
00:14:45,502 --> 00:14:48,410
essersi nemmeno propagate attraverso il sistema.

289
00:14:49,760 --> 00:14:52,904
E anche i tentativi di implementare la sincronizzazione globale

290
00:14:52,952 --> 00:14:55,400


291
00:14:55,480 --> 00:14:57,864
introdurranno inevitabilmente colli di bottiglia e ridurranno l’

292
00:14:57,912 --> 00:15:01,844
efficienza.  La legge di Hewitt sottolinea

293
00:15:01,912 --> 00:15:04,976
la necessità che i sistemi siano progettati in

294
00:15:04,998 --> 00:15:07,580
modo tale da poter gestire efficacemente

295
00:15:07,660 --> 00:15:09,504
questi inevitabili ritardi e

296
00:15:09,542 --> 00:15:11,776
incertezze, evidenziando l'

297
00:15:11,798 --> 00:15:14,424
importanza di robusti

298
00:15:14,492 --> 00:15:17,540
meccanismi di comunicazione non bloccanti e di

299
00:15:17,690 --> 00:15:21,284
capacità decisionali locali.  In breve, i

300
00:15:21,482 --> 00:15:24,240
sistemi modello Hector sono per natura

301
00:15:24,400 --> 00:15:27,944
non deterministici.  Ti suona

302
00:15:27,982 --> 00:15:31,800
familiare?  Quale altro paradigma evidenzia il

303
00:15:32,140 --> 00:15:34,616
funzionamento in condizioni di incertezza e l’

304
00:15:34,638 --> 00:15:36,904
autonomia di continuare nonostante l’

305
00:15:36,942 --> 00:15:40,328
ambiente?  Inferenza attiva e

306
00:15:40,334 --> 00:15:43,767
principio dell'energia libera?  L'inferenza attiva

307
00:15:43,864 --> 00:15:46,552
riflette la realtà di un

308
00:15:46,616 --> 00:15:48,792
mondo imprevedibile in cui operano i nostri sistemi software

309
00:15:48,856 --> 00:15:51,920
.

310
00:15:51,990 --> 00:15:55,136
Dalle stesse condizioni iniziali possono derivare risultati diversi a causa

311
00:15:55,158 --> 00:15:57,756
del verificarsi di eventi in un

312
00:15:57,868 --> 00:16:01,644
ordine casuale e imprevedibile.  Questo è il concetto

313
00:16:01,692 --> 00:16:04,310
di sorpresa che tutti conosciamo bene,

314
00:16:05,000 --> 00:16:07,572
secondo cui un agente aggiorna le sue convinzioni sul

315
00:16:07,626 --> 00:16:10,404
mondo quando l'input sensoriale che

316
00:16:10,442 --> 00:16:13,060
riceve non corrisponde alle sue previsioni.

317
00:16:13,720 --> 00:16:15,856
Sia il modello dell’attore che l’

318
00:16:15,888 --> 00:16:18,328
inferenza attiva riconoscono che il mondo è

319
00:16:18,414 --> 00:16:21,624
imprevedibile.  Ancor più che

320
00:16:21,662 --> 00:16:24,632
riconoscerlo, i modelli accettano questa

321
00:16:24,686 --> 00:16:27,688
incertezza come un dato di fatto e non come qualcosa

322
00:16:27,774 --> 00:16:29,530
da gestire.

323
00:16:30,780 --> 00:16:33,752
Infatti, come sappiamo nel principio dell’energia libera

324
00:16:33,806 --> 00:16:36,204
, l’incertezza che

325
00:16:36,242 --> 00:16:38,459
manteniamo nei nostri modelli è ciò che ci dà

326
00:16:38,530 --> 00:16:41,020
la flessibilità per adattarci.

327
00:16:43,540 --> 00:16:46,555
Forse questo è solo il mio personale volo

328
00:16:46,588 --> 00:16:49,199
di fantasia, ma immagino un futuro in cui i

329
00:16:49,270 --> 00:16:51,596
moduli software guidati dall'inferenza attiva

330
00:16:51,628 --> 00:16:54,976
elimineranno la gestione degli errori codificata

331
00:16:55,008 --> 00:16:57,792
e sostituiranno

332
00:16:57,856 --> 00:17:00,672
algoritmi di apprendimento probabilistico che

333
00:17:00,736 --> 00:17:03,200
si ottimizzano man mano che il panorama degli errori

334
00:17:03,280 --> 00:17:07,316
si evolve.  Moduli che sono

335
00:17:07,428 --> 00:17:11,268
sistemi distribuiti robusti e autoriparanti

336
00:17:11,364 --> 00:17:13,672
senza singoli punti di guasto che si

337
00:17:13,726 --> 00:17:17,716
concentrano sulla prevenzione predittiva dei disastri

338
00:17:17,907 --> 00:17:21,659
piuttosto che sul ripristino di emergenza reattivo.

339
00:17:23,040 --> 00:17:25,308
Guardando al futuro, noi come

340
00:17:25,314 --> 00:17:28,044
comunità abbiamo il potenziale per ampliare i

341
00:17:28,082 --> 00:17:31,700
confini sia della teoria delle impronte attive

342
00:17:31,880 --> 00:17:34,576
che delle implementazioni pratiche del

343
00:17:34,598 --> 00:17:37,611
modello dell’attore.  Sfruttando insieme i punti di forza

344
00:17:37,676 --> 00:17:40,096
di questi due paradigmi, possiamo

345
00:17:40,118 --> 00:17:42,860
creare sistemi software robusti,

346
00:17:43,020 --> 00:17:45,876
adattivi e più allineati al

347
00:17:45,898 --> 00:17:48,500
mondo fisico in cui operano effettivamente

348
00:17:48,650 --> 00:17:52,100
.  Immagina un futuro in

349
00:17:52,170 --> 00:17:54,976
cui i componenti software che utilizzano l’

350
00:17:55,008 --> 00:17:57,112
inferenza attiva nel modello dell’attore possono

351
00:17:57,166 --> 00:18:00,344
anticipare potenziali problemi, imparare dagli

352
00:18:00,382 --> 00:18:04,024
errori del passato e adattarsi in tempo reale ai

353
00:18:04,062 --> 00:18:07,144
cambiamenti ambientali.  Con questo

354
00:18:07,182 --> 00:18:09,212
approccio, possiamo costruire sistemi che sono

355
00:18:09,266 --> 00:18:11,996
fondamentalmente più resilienti e più

356
00:18:12,018 --> 00:18:15,084
efficienti.  A mio parere, ciò può portare

357
00:18:15,122 --> 00:18:17,784
un cambiamento radicale nell’affidabilità, nelle

358
00:18:17,912 --> 00:18:21,052
prestazioni e nella scalabilità del software e

359
00:18:21,106 --> 00:18:24,044
annuncia una nuova era dell’informatica, intrecciando

360
00:18:24,092 --> 00:18:27,264
principi di biologia e cognizione

361
00:18:27,302 --> 00:18:30,060
nella struttura dei nostri sistemi software,

362
00:18:30,220 --> 00:18:32,416
avvicinandoli alla vita nel

363
00:18:32,438 --> 00:18:36,420
processo.  In conclusione,

364
00:18:37,160 --> 00:18:39,636
l’accoppiamento dell’inferenza attiva al

365
00:18:39,658 --> 00:18:42,803
modello dell’attore fornisce una nuova potente

366
00:18:42,842 --> 00:18:44,564
lente attraverso la quale possiamo guardare alla

367
00:18:44,602 --> 00:18:46,820
progettazione e all’ingegneria del software.

368
00:18:47,180 --> 00:18:49,412
Sia che sfruttiamo linguaggi

369
00:18:49,476 --> 00:18:51,476
e librerie esistenti allineati con l’

370
00:18:51,508 --> 00:18:54,728
inferenza attiva o ne inventiamo di nuovi,

371
00:18:54,894 --> 00:18:58,056
siamo sull’orlo di una

372
00:18:58,078 --> 00:19:01,944
frontiera entusiasmante.  Quindi cogliamo

373
00:19:01,992 --> 00:19:05,068
l'attimo, diamo uno sguardo al modello dell'attore

374
00:19:05,154 --> 00:19:06,776
e alla sua relazione con l'

375
00:19:06,808 --> 00:19:09,484
inferenza attiva, e diamo forma al futuro del

376
00:19:09,522 --> 00:19:11,980
calcolo distribuito intelligente.

377
00:19:13,040 --> 00:19:14,460
Grazie per l'attenzione.

378
00:19:17,790 --> 00:19:21,050
Eccezionale.  Bellissimo discorso di

379
00:19:21,120 --> 00:19:23,126
Keith.  Grazie, Keith, per avercelo inviato

380
00:19:23,158 --> 00:19:25,985
. C'erano alcuni commenti nella

381
00:19:26,008 --> 00:19:28,978
chat.  Quindi, Keith, potenzialmente se vuoi

382
00:19:28,984 --> 00:19:32,641
unirti per A-Q-A in futuro, ma una

383
00:19:32,696 --> 00:19:33,949
presentazione davvero interessante.

