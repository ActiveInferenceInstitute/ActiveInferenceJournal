1
00:00:00,840 --> 00:00:02,820
voortbouwend op dat werk en voor het

2
00:00:02,820 --> 00:00:05,880
delen met ons vanavond, dus

3
00:00:05,880 --> 00:00:07,859
heel erg bedankt voor het ontvangen van mij tot de

4
00:00:07,859 --> 00:00:09,900
volgende keer tot ziens,

5
00:00:09,900 --> 00:00:12,179
bedankt, tot ziens,

6
00:00:12,179 --> 00:00:14,480


7
00:00:16,800 --> 00:00:19,440


8
00:00:19,440 --> 00:00:20,699
goed, goed

9
00:00:20,699 --> 00:00:23,640
gepraat, dit kopen en nu

10
00:00:23,640 --> 00:00:25,980
welkom Ashwin,

11
00:00:25,980 --> 00:00:27,359
hoe gaat het met je? Hallo

12
00:00:27,359 --> 00:00:29,820
Daniel, met mij gaat het goed  voor jou,

13
00:00:29,820 --> 00:00:31,260


14
00:00:31,260 --> 00:00:33,320
eh

15
00:00:33,559 --> 00:00:37,559
ja ja klinkt goed en eh ja ik kijk

16
00:00:37,559 --> 00:00:39,719
uit naar je workshop over

17
00:00:39,719 --> 00:00:42,420
geavanceerde inferentie in pi mdp,

18
00:00:42,420 --> 00:00:46,440
dus het kan tot 90 minuten duren, of het is

19
00:00:46,440 --> 00:00:48,239
helemaal oké als het minder is en we

20
00:00:48,239 --> 00:00:51,420
een korte pauze kunnen nemen, maar alsjeblieft,

21
00:00:51,420 --> 00:00:53,100
neem  het weg en laat het me weten,

22
00:00:53,100 --> 00:00:54,600
maar ik kan je wel helpen,

23
00:00:54,600 --> 00:00:55,739


24
00:00:55,739 --> 00:00:57,480
bedankt,

25
00:00:57,480 --> 00:01:00,539
misschien zal ik mijn scherm delen en beginnen,

26
00:01:00,539 --> 00:01:02,280
dus

27
00:01:02,280 --> 00:01:04,860
met betrekking tot de structuur van wat we

28
00:01:04,860 --> 00:01:05,820
hier doen,

29
00:01:05,820 --> 00:01:08,760
eh, ik neem aan dat mensen die dit

30
00:01:08,760 --> 00:01:11,040
later zien het misschien willen proberen  Hands-on

31
00:01:11,040 --> 00:01:13,080
samen met de tutorial of zoiets, dus

32
00:01:13,080 --> 00:01:15,780
dat is de structuur die ik in gedachten heb gehouden en

33
00:01:15,780 --> 00:01:19,380
dus ga ik langzaam aan. Uh, wees geduldig, eh,

34
00:01:19,380 --> 00:01:21,180
welkom jullie allemaal bij deze

35
00:01:21,180 --> 00:01:23,340
sessie over geavanceerde gevolgtrekkingen in

36
00:01:23,340 --> 00:01:26,640
IMDb, dus hier gaan we  probeer

37
00:01:26,640 --> 00:01:28,920
een aantal geavanceerde gevolgtrekkingssimulaties te modelleren,

38
00:01:28,920 --> 00:01:31,080
vooral die in het

39
00:01:31,080 --> 00:01:33,960
originele artikel, met behulp van de prime DP-module

40
00:01:33,960 --> 00:01:36,299
en hoe deze op dit moment geen deel uitmaakt van mijn mdp,

41
00:01:36,299 --> 00:01:38,700
maar we zijn bezig met het toevoegen van

42
00:01:38,700 --> 00:01:40,560
geavanceerde gevolgtrekkingen aan de prime DB-

43
00:01:40,560 --> 00:01:43,320
module en ik ben  Ik ga het vooral hebben

44
00:01:43,320 --> 00:01:46,340
over de code die ik heb ontwikkeld

45
00:01:46,340 --> 00:01:49,079
om die functionaliteit een beetje toe te voegen,

46
00:01:49,079 --> 00:01:52,920
dus ik ben Ashwin Paul. Ik ben eindelijk een PhD-

47
00:01:52,920 --> 00:01:56,040
kandidaat aan de Monash University en

48
00:01:56,040 --> 00:01:58,259
ik werk meestal met actieve

49
00:01:58,259 --> 00:02:00,360
inferentiemodellen en probeer te begrijpen

50
00:02:00,360 --> 00:02:03,840
hoe ik ze moet gebruiken  als een verklaarbaar model

51
00:02:03,840 --> 00:02:05,240
om de

52
00:02:05,240 --> 00:02:07,380
opkomst van

53
00:02:07,380 --> 00:02:10,020
intelligent gedrag fundamenteel te begrijpen, dus laten we

54
00:02:10,020 --> 00:02:12,360
in het materiaal duiken

55
00:02:12,360 --> 00:02:16,140
dat ik doe om een ​​introductie te geven over het vrije-

56
00:02:16,140 --> 00:02:18,180
energieprincipe. Ik weet zeker dat jullie

57
00:02:18,180 --> 00:02:20,280
nu allemaal begrijpen wat

58
00:02:20,280 --> 00:02:23,220
het is, maar de centrale  Het idee is dat een

59
00:02:23,220 --> 00:02:26,700
agent altijd probeert

60
00:02:26,700 --> 00:02:28,920
de entropie van zijn waarnemingen te minimaliseren, dus

61
00:02:28,920 --> 00:02:31,800
als een waarneming een heel lage

62
00:02:31,800 --> 00:02:34,680
waarschijnlijkheid heeft, in je hoofd en

63
00:02:34,680 --> 00:02:36,720
dat gebeurt, dan ben je waarschijnlijk

64
00:02:36,720 --> 00:02:39,660
verrast en omgekeerd, dus en

65
00:02:39,660 --> 00:02:41,940
de entropie hier  wordt gedefinieerd

66
00:02:41,940 --> 00:02:44,420
als de informatietheoretische entropie

67
00:02:44,420 --> 00:02:47,400
waarbij, als je een lage waarschijnlijkheid hebt,

68
00:02:47,400 --> 00:02:49,260
dit automatisch een hoge verrassing of een

69
00:02:49,260 --> 00:02:51,000
hoge entropische observatie is

70
00:02:51,000 --> 00:02:53,700
en zoals we allemaal weten geeft actieve gevolgtrekking

71
00:02:53,700 --> 00:02:56,580
ons ook een methodologie om te definiëren

72
00:02:56,580 --> 00:02:58,980
wat we een agentomgeving noemen. Loop

73
00:02:58,980 --> 00:03:02,040
en dit laat  ons Definieer wat de

74
00:03:02,040 --> 00:03:04,140
agent is waar we naar kijken en wat het

75
00:03:04,140 --> 00:03:08,180
gedrag van de agent is, gezien de

76
00:03:08,180 --> 00:03:11,099
omgeving eromheen, enzovoort, dus

77
00:03:11,099 --> 00:03:12,959
je bent ook bekend met het idee van

78
00:03:12,959 --> 00:03:15,300
Marco-deken en dit is belangrijk

79
00:03:15,300 --> 00:03:18,000
omdat we dit altijd moeten onthouden  Ik bedoel, we moeten

80
00:03:18,000 --> 00:03:20,040
het verschil onthouden tussen

81
00:03:20,040 --> 00:03:21,599
het generatieve proces en het

82
00:03:21,599 --> 00:03:25,260
generatieve model, wat een behoorlijk

83
00:03:25,260 --> 00:03:27,599
bekend punt van verwarring is in de

84
00:03:27,599 --> 00:03:29,280
literatuur over inactieve baby's en voor de mensen

85
00:03:29,280 --> 00:03:31,080
die het in het begin proberen te begrijpen,

86
00:03:31,080 --> 00:03:33,540
dus de centrale

87
00:03:33,540 --> 00:03:35,580
vraag is: hoe werkt het?  een agent

88
00:03:35,580 --> 00:03:37,800
minimaliseert entropie, want

89
00:03:37,800 --> 00:03:39,900
hoe weet een agent welke waarneming

90
00:03:39,900 --> 00:03:42,420
langzaam of hoog probabilistisch is,

91
00:03:42,420 --> 00:03:44,519
dus dat is door een generatief

92
00:03:44,519 --> 00:03:46,920
model te handhaven en het generatieve model zal

93
00:03:46,920 --> 00:03:49,319
u vertellen welke een hoge probabilistische

94
00:03:49,319 --> 00:03:51,360
waarneming is en welke een lage

95
00:03:51,360 --> 00:03:53,519
probabilistische waarneming is, dus  het idee is

96
00:03:53,519 --> 00:03:56,459
dat het enige waar de agent toegang toe heeft een

97
00:03:56,459 --> 00:03:58,799
observatie is die voortkomt uit een

98
00:03:58,799 --> 00:04:00,599
generatief proces dat de agent niet

99
00:04:00,599 --> 00:04:03,299
direct kan waarnemen en een

100
00:04:03,299 --> 00:04:05,459
intelligente agent zal proberen een

101
00:04:05,459 --> 00:04:08,220
generatief model in zijn geest op te bouwen, dat

102
00:04:08,220 --> 00:04:09,060
een

103
00:04:09,060 --> 00:04:11,640
model is van het Verborgene  Staten en de

104
00:04:11,640 --> 00:04:14,340
observatie waartoe het toegang heeft en het kan

105
00:04:14,340 --> 00:04:16,260
hopen waarschijnlijkheden te berekenen

106
00:04:16,260 --> 00:04:18,660
met behulp van dit generatieve model, maar

107
00:04:18,660 --> 00:04:21,060
er is een probleem dat het in het algemeen

108
00:04:21,060 --> 00:04:23,460
een hardnekkig probleem is om

109
00:04:23,460 --> 00:04:25,320
de waarschijnlijkheid van

110
00:04:25,320 --> 00:04:26,880
observaties uit het generatieve model min of meer te marginaliseren

111
00:04:26,880 --> 00:04:29,100
en dat  is de reden waarom we een bovengrens moeten definiëren

112
00:04:29,100 --> 00:04:31,620
voor de verrassing die de

113
00:04:31,620 --> 00:04:33,720
agent probeert te minimaliseren en er

114
00:04:33,720 --> 00:04:35,400
komt het idee van vrije energie, dus

115
00:04:35,400 --> 00:04:37,620
deze bovengrens die de agent zogenaamd

116
00:04:37,620 --> 00:04:40,560
minimaliseert is de vrije energie en

117
00:04:40,560 --> 00:04:42,840
daarom is het het vrije energieprincipe  en

118
00:04:42,840 --> 00:04:44,880
hier hebben we een nieuwe term genaamd Capital

119
00:04:44,880 --> 00:04:48,000
Qs die kan worden geïnterpreteerd als de

120
00:04:48,000 --> 00:04:49,740
overtuiging die de agent handhaaft

121
00:04:49,740 --> 00:04:51,900
over de verborgen stappen in zijn generatieve

122
00:04:51,900 --> 00:04:54,840
model en deze hoeveelheid is de vrije

123
00:04:54,840 --> 00:04:57,479
energie en traditioneel zien we dat deze

124
00:04:57,479 --> 00:04:59,100
variabele vrije energie wordt

125
00:04:59,100 --> 00:05:00,660
geïnterpreteerd als

126
00:05:00,660 --> 00:05:02,880
uh in  meestal op de manier van machinaal leren,

127
00:05:02,880 --> 00:05:05,040
waarbij het een balans is tussen complexiteit

128
00:05:05,040 --> 00:05:07,259
en nauwkeurigheid van het model, dus bij het

129
00:05:07,259 --> 00:05:09,300
minimaliseren van de vrije energie probeert de agent

130
00:05:09,300 --> 00:05:11,520
een enkel model te bedenken,

131
00:05:11,520 --> 00:05:13,320
maar tegelijkertijd een nauwkeurig model,

132
00:05:13,320 --> 00:05:15,419
omdat hier een minteken staat met

133
00:05:15,419 --> 00:05:16,860
nauwkeurigheid goed, het kan ook

134
00:05:16,860 --> 00:05:19,919
op een natuurkundige manier worden geïnterpreteerd, waarbij de

135
00:05:19,919 --> 00:05:23,039
agent altijd probeert de

136
00:05:23,039 --> 00:05:25,979
energie van het model te minimaliseren, maar tegelijkertijd

137
00:05:25,979 --> 00:05:27,720
de entropie van het model maximaliseert,

138
00:05:27,720 --> 00:05:29,580
wat samengaat met het

139
00:05:29,580 --> 00:05:32,280
maximale entropieprincipe, enzovoort van

140
00:05:32,280 --> 00:05:35,340
het klassieke  literatuur, dus gezien het feit dat

141
00:05:35,340 --> 00:05:37,740
dit idee van een generatief model zo belangrijk is

142
00:05:37,740 --> 00:05:38,820


143
00:05:38,820 --> 00:05:41,220
vanuit softwareoogpunt, is dat

144
00:05:41,220 --> 00:05:42,840
het eerste dat je misschien

145
00:05:42,840 --> 00:05:44,580
goed zou willen doen om een ​​generatief model te definiëren

146
00:05:44,580 --> 00:05:46,440
voor de agent,

147
00:05:46,440 --> 00:05:47,100


148
00:05:47,100 --> 00:05:49,259
die wel of niet geïnformeerd is,

149
00:05:49,259 --> 00:05:51,720
afhankelijk van de  experiment dat

150
00:05:51,720 --> 00:05:53,460
je probeert te modelleren Dus bij klassieke

151
00:05:53,460 --> 00:05:56,060
actieve gevolgtrekking wordt besluitvorming meestal

152
00:05:56,060 --> 00:05:58,979
gedefinieerd in termen van beleid, dus als

153
00:05:58,979 --> 00:06:02,220
je bijvoorbeeld een agent bent in deze

154
00:06:02,220 --> 00:06:04,620
omgeving, is Mario in het Mario-spel

155
00:06:04,620 --> 00:06:06,720
de agent en al het andere

156
00:06:06,720 --> 00:06:09,240
is de omgeving en

157
00:06:09,240 --> 00:06:11,100
Mario heeft

158
00:06:11,100 --> 00:06:13,740
drie beschikbare acties,

159
00:06:13,740 --> 00:06:16,139
rennen, springen of in deze omgeving blijven

160
00:06:16,139 --> 00:06:19,199
en de klassieke definitie van beleid is

161
00:06:19,199 --> 00:06:21,360
dat het een opeenvolging van acties in de tijd is,

162
00:06:21,360 --> 00:06:24,060
dus als je een tijdhorizon van kapitaal

163
00:06:24,060 --> 00:06:27,120
T hebt, dan is beleid niets anders dan een reeks

164
00:06:27,120 --> 00:06:29,220
acties  je zou kunnen nemen, dus rennen rennen,

165
00:06:29,220 --> 00:06:33,300
springen enzovoort in de tijd, dus dit is het

166
00:06:33,300 --> 00:06:36,419
superscript is de actie, dus hier is het

167
00:06:36,419 --> 00:06:39,000
Jump, rennen enzovoort en het subscript is

168
00:06:39,000 --> 00:06:41,400
de tijd, en

169
00:06:41,400 --> 00:06:44,100
wat je dan kunt hebben is een beleidsruimte

170
00:06:44,100 --> 00:06:45,720
die een verzameling is  van veel van dergelijke

171
00:06:45,720 --> 00:06:46,940
kwaliteiten

172
00:06:46,940 --> 00:06:50,520
een kleinere stapel en wat u in essentie

173
00:06:50,520 --> 00:06:52,020
doet om beslissingen te nemen in actieve

174
00:06:52,020 --> 00:06:55,199
gevolgtrekkingen, bereken niet optimaliseer,

175
00:06:55,199 --> 00:06:58,139
bereken de verwachte vrije energie van

176
00:06:58,139 --> 00:07:01,680
elk beleid in uw beleidsruimte en

177
00:07:01,680 --> 00:07:04,199
dat kan in principe worden geïnterpreteerd als een

178
00:07:04,199 --> 00:07:07,860
balans tussen risico en ambiguïteit

179
00:07:07,860 --> 00:07:10,560
en eh

180
00:07:10,560 --> 00:07:12,840
ja, dus als je deze

181
00:07:12,840 --> 00:07:14,580
verwachte vrije energie berekent, probeer je

182
00:07:14,580 --> 00:07:18,600
het risico te minimaliseren, uh,

183
00:07:18,600 --> 00:07:21,720
zo verschillend is jouw overtuiging over

184
00:07:21,720 --> 00:07:24,300
de observatie, uh, van je eerdere

185
00:07:24,300 --> 00:07:27,240
voorkeuren, uh Hoofdletter C, dus dit maakt ook

186
00:07:27,240 --> 00:07:28,800
deel uit van de generatieve  model wanneer u

187
00:07:28,800 --> 00:07:30,900
controle probeert te modelleren en

188
00:07:30,900 --> 00:07:32,280
tegelijkertijd probeert u de

189
00:07:32,280 --> 00:07:34,440
dubbelzinnigheid te minimaliseren wanneer u een

190
00:07:34,440 --> 00:07:36,419
beleid kiest dat het minimaal verwachte

191
00:07:36,419 --> 00:07:38,699
recht op vrije energie heeft, maar deze formulering

192
00:07:38,699 --> 00:07:40,860
heeft het probleem dat een beleidsruimte

193
00:07:40,860 --> 00:07:43,259
snel onhandelbaar wordt  dat er

194
00:07:43,259 --> 00:07:47,460
een enorm aantal kleine pi's

195
00:07:47,460 --> 00:07:49,319
of beleidsmaatregelen in uw beleidsruimte kunnen zijn en

196
00:07:49,319 --> 00:07:51,000
zitten en het berekenen van de verwachte vrije

197
00:07:51,000 --> 00:07:53,580
energie voor al dergelijk beleid, zelfs voor een

198
00:07:53,580 --> 00:07:57,860
korte tijd. Horizon is niet mogelijk, maar

199
00:07:57,860 --> 00:08:00,240
uh, dit is de klassieke structuur die

200
00:08:00,240 --> 00:08:02,639
is geïmplementeerd in IMDb  niettemin,

201
00:08:02,639 --> 00:08:06,360
waar we verschillende modules in pi

202
00:08:06,360 --> 00:08:10,020
mdp hebben die bedoeld zijn om

203
00:08:10,020 --> 00:08:11,880
verschillende aspecten van

204
00:08:11,880 --> 00:08:15,000
gedrag te implementeren, dus bijvoorbeeld voor gevolgtrekking

205
00:08:15,000 --> 00:08:17,160
of perceptie hebben we geloof

206
00:08:17,160 --> 00:08:19,039
voortplanting vast punt iteratie

207
00:08:19,039 --> 00:08:23,180
marginale berichtdoorgifte en dat alles

208
00:08:23,180 --> 00:08:26,099
geïmplementeerd in de inferentiemodule in

209
00:08:26,099 --> 00:08:29,819
de controlemodule  we hebben verschillende

210
00:08:29,819 --> 00:08:32,099
methoden om de verwachte vrije energie

211
00:08:32,099 --> 00:08:34,140
voor beleid te evalueren, de ene is afhankelijk van het

212
00:08:34,140 --> 00:08:36,299
verwachte nut, de andere is

213
00:08:36,299 --> 00:08:38,760
afhankelijk van de

214
00:08:38,760 --> 00:08:41,399
klassieke methode die ik zojuist heb uitgelegd,

215
00:08:41,399 --> 00:08:44,459
dan hebben we een module om te leren, zodat we

216
00:08:44,459 --> 00:08:46,680
de parameters in de pom DP leren, zoals

217
00:08:46,680 --> 00:08:49,019
kapitaal a  hoofdletter B dus

218
00:08:49,019 --> 00:08:51,240
waarschijnlijkheidsovergang Dynamics enzovoort en dan

219
00:08:51,240 --> 00:08:53,540
hebben we

220
00:08:53,540 --> 00:08:56,279
algoritmen om dit allemaal te implementeren in

221
00:08:56,279 --> 00:08:59,519
de algoritmenmodule en dan

222
00:08:59,519 --> 00:09:01,620
is het krachtigste in pi mdp op dit moment

223
00:09:01,620 --> 00:09:04,080
de Aziatische klasse waar het voor u gemakkelijk is om

224
00:09:04,080 --> 00:09:06,540
de agentomgeving te definiëren

225
00:09:06,540 --> 00:09:08,760
Loop en

226
00:09:08,760 --> 00:09:11,459
we proberen op te bouwen, dus vandaag

227
00:09:11,459 --> 00:09:12,959
ga ik het hebben over een agentklasse

228
00:09:12,959 --> 00:09:15,140
die geavanceerde gevolgtrekking implementeert

229
00:09:15,140 --> 00:09:17,279
in plaats van de klassieke actieve

230
00:09:17,279 --> 00:09:20,519
gevolgtrekking die we zojuist zagen,

231
00:09:20,519 --> 00:09:21,660
dus

232
00:09:21,660 --> 00:09:24,060
zoals ik al zei, hoeveel geldig

233
00:09:24,060 --> 00:09:26,100
beleid kan worden gedefinieerd, zeg maar voor  een

234
00:09:26,100 --> 00:09:28,140
tijdshorizon van 15 in klassieke actieve

235
00:09:28,140 --> 00:09:29,519
invloed,

236
00:09:29,519 --> 00:09:31,800
dus het eerste beleid is natuurlijk

237
00:09:31,800 --> 00:09:34,279
de reeks van eerste acties die Jump is,

238
00:09:34,279 --> 00:09:37,380
dan kun je de laatste oproep, de laatste

239
00:09:37,380 --> 00:09:39,660
actie, wijzigen en je kunt al

240
00:09:39,660 --> 00:09:41,880
zien dat er n kan zijn  aantal

241
00:09:41,880 --> 00:09:44,880
combinaties en voor dit eenvoudige geval

242
00:09:44,880 --> 00:09:47,220
is de beleidsruimte zo groot als 10 tot de

243
00:09:47,220 --> 00:09:49,200
macht 13 en in een stochastische

244
00:09:49,200 --> 00:09:52,080
probleemsetting is er geen manier om

245
00:09:52,080 --> 00:09:54,120
een ​​kleine subset van deze

246
00:09:54,120 --> 00:09:56,519
beleidsruimte te bedenken, zodat je  pak dit

247
00:09:56,519 --> 00:09:59,339
probleem van computationele complexiteit aan,

248
00:09:59,339 --> 00:10:01,500
en ja, zoals ik al zei in een stochastische

249
00:10:01,500 --> 00:10:03,360
probleemsetting, het is een hardnekkige

250
00:10:03,360 --> 00:10:06,120
beleidsruimte voor omvang. Er komt het

251
00:10:06,120 --> 00:10:09,300
idee van geavanceerde gevolgtrekking waarbij we erover

252
00:10:09,300 --> 00:10:11,940
nadenken om dit voorbeeld

253
00:10:11,940 --> 00:10:13,500
op een andere manier te nemen, in plaats van

254
00:10:13,500 --> 00:10:15,420
erover na te denken  opeenvolging van acties in de

255
00:10:15,420 --> 00:10:17,820
tijd kunnen we direct bedenken wat we moeten doen

256
00:10:17,820 --> 00:10:20,100
als we iets zien, afhankelijk van

257
00:10:20,100 --> 00:10:21,959
onze overtuigingen over de huidige staat en

258
00:10:21,959 --> 00:10:23,880
overtuigingen over de toekomst, dus als ik

259
00:10:23,880 --> 00:10:25,680
mezelf in een huidige situatie zie, wat

260
00:10:25,680 --> 00:10:28,080
moet ik dan doen en dat is meer een

261
00:10:28,080 --> 00:10:30,480
eenvoudig nadenken over

262
00:10:30,480 --> 00:10:33,420
hoe we actie moeten ondernemen en hier is de

263
00:10:33,420 --> 00:10:35,459
verwachte vrije energie, de structuur van

264
00:10:35,459 --> 00:10:37,980
de verwachte vrije energie is hetzelfde, maar

265
00:10:37,980 --> 00:10:40,320
we evalueren niet de verwachte vrije

266
00:10:40,320 --> 00:10:43,440
energie van uh-beleid, maar de verwachte

267
00:10:43,440 --> 00:10:45,540
vrije energie van uh observatie-

268
00:10:45,540 --> 00:10:48,060
actiecombinaties, dus als ik het zie  iets en

269
00:10:48,060 --> 00:10:49,860
als ik dit doe, wat is dan de verwachte vrije

270
00:10:49,860 --> 00:10:51,600
energie en dat is wat ik probeer te

271
00:10:51,600 --> 00:10:56,220
minimaliseren, uh dat is wat ik probeer te

272
00:10:56,220 --> 00:10:58,860
optimaliseren, uh in deze setting, dus

273
00:10:58,860 --> 00:11:01,500
hier hebben we weer de risicoterm waarin

274
00:11:01,500 --> 00:11:03,300
we proberen te minimaliseren  de afwijking

275
00:11:03,300 --> 00:11:05,040
tussen de overtuiging en de eerdere

276
00:11:05,040 --> 00:11:07,320
voorkeuren, we hebben ook de

277
00:11:07,320 --> 00:11:10,560
dubbelzinnigheidsterm uh en dit vormt samen de

278
00:11:10,560 --> 00:11:13,079
verwachte vrije energie van uh dit tijdstip

279
00:11:13,079 --> 00:11:16,019
op tijdstip T, maar we hebben ook een

280
00:11:16,019 --> 00:11:18,360
verwachting over wat de verwachte

281
00:11:18,360 --> 00:11:20,760
vrije energie is in de volgende tijdstap  en

282
00:11:20,760 --> 00:11:22,680
om de verwachte vrije energie

283
00:11:22,680 --> 00:11:24,660
van de volgende tijdstap te evalueren, zul je

284
00:11:24,660 --> 00:11:27,360
deze vergelijking opnieuw moeten berekenen met OT plus twee

285
00:11:27,360 --> 00:11:29,220
en daarvoor zul je

286
00:11:29,220 --> 00:11:32,160
deze vergelijking opnieuw moeten berekenen, uh met OT plus 3

287
00:11:32,160 --> 00:11:34,200
enzovoort, en dit wordt automatisch

288
00:11:34,200 --> 00:11:36,779
bij onderzoek  vanwege de recursieve manier waarop

289
00:11:36,779 --> 00:11:39,779
deze vergelijking is gedefinieerd en het brengt

290
00:11:39,779 --> 00:11:41,220
zijn eigen problemen met zich mee, maar er zijn

291
00:11:41,220 --> 00:11:44,160
slimme manieren om ze te omzeilen en dat

292
00:11:44,160 --> 00:11:46,500
gaan we

293
00:11:46,500 --> 00:11:48,899
vandaag in de code bespreken, dus gezien deze structuur

294
00:11:48,899 --> 00:11:51,600
van geavanceerde gevolgtrekking hier zoals ik

295
00:11:51,600 --> 00:11:54,060
het onderzoek noemde  vervang de

296
00:11:54,060 --> 00:11:56,160
beleidsruimte die we zagen voor de

297
00:11:56,160 --> 00:11:58,620
extra actieve invloed die we gebruiken,

298
00:11:58,620 --> 00:12:00,779
dus in deze

299
00:12:00,779 --> 00:12:04,019
workshop concentreer ik me op hoe je

300
00:12:04,019 --> 00:12:07,740
een generatief model kunt definiëren

301
00:12:07,740 --> 00:12:10,980
en gegeven een omgeving, dus

302
00:12:10,980 --> 00:12:13,440
dit is bijvoorbeeld het raster dat wordt

303
00:12:13,440 --> 00:12:16,200
gestimuleerd uh  gesimuleerd in het originele

304
00:12:16,200 --> 00:12:19,140
artikel en we gaan het hebben over hoe we

305
00:12:19,140 --> 00:12:21,240
een generatief model voor dit

306
00:12:21,240 --> 00:12:22,740
raster kunnen opbouwen dat kan worden gebruikt bij de

307
00:12:22,740 --> 00:12:24,660
geavanceerde gevolgtrekking in de Prime

308
00:12:24,660 --> 00:12:27,600
DP-module. Waar

309
00:12:27,600 --> 00:12:29,279
ik dus eigenlijk over probeer te praten

310
00:12:29,279 --> 00:12:31,740
is dat de  de omgeving zal

311
00:12:31,740 --> 00:12:34,320
een stapfunctie hebben die een actie

312
00:12:34,320 --> 00:12:37,680
van de agent in pi MDB uitvoert en de agent

313
00:12:37,680 --> 00:12:40,019
zal een observatie uit die

314
00:12:40,019 --> 00:12:42,180
actie halen en we zullen het hebben over deze

315
00:12:42,180 --> 00:12:44,579
specifieke functie. agent dot step en

316
00:12:44,579 --> 00:12:46,860
agent dot stappen zullen stap nemen

317
00:12:46,860 --> 00:12:49,320
een observatie en probeer op te geven bedenk

318
00:12:49,320 --> 00:12:50,760
een actie voor de volgende keer stap

319
00:12:50,760 --> 00:12:55,079
goed en dit creëert een lus en door

320
00:12:55,079 --> 00:12:58,200
deze lus slim te ontwerpen, kun

321
00:12:58,200 --> 00:13:00,240
je de opkomst van doelgericht gedrag zien

322
00:13:00,240 --> 00:13:02,820
in de geavanceerde printomgeving, dus

323
00:13:02,820 --> 00:13:05,339
bijvoorbeeld in dit specifieke raster met

324
00:13:05,339 --> 00:13:06,839
voldoende planning Horizon, je zult kunnen

325
00:13:06,839 --> 00:13:08,639
zien dat de agent

326
00:13:08,639 --> 00:13:10,740
in dit raster kan navigeren, enzovoort.

327
00:13:10,740 --> 00:13:12,540
Dit is het voorbeeld waar ik me

328
00:13:12,540 --> 00:13:16,440
vandaag in deze lezing op ga concentreren,

329
00:13:16,440 --> 00:13:18,000
dus

330
00:13:18,000 --> 00:13:22,339
ik wil me excuseren.

331
00:13:25,380 --> 00:13:29,180
Ik wil het meteen doen  spring in de code

332
00:13:29,180 --> 00:13:32,459
zodat we

333
00:13:32,459 --> 00:13:36,360
het pi mdp-huis hebben waarvan ik hoop dat

334
00:13:36,360 --> 00:13:38,639
je ermee bekend bent, dus we hebben deze

335
00:13:38,639 --> 00:13:41,399
GitHub-repository waar we de pi

336
00:13:41,399 --> 00:13:43,079
MTP-module hebben

337
00:13:43,079 --> 00:13:46,320
en binnen de tijd DP-module hebben we er

338
00:13:46,320 --> 00:13:48,480
verschillende uh-

339
00:13:48,480 --> 00:13:50,820
onderdelen voor, dus hier  we hebben de agent

340
00:13:50,820 --> 00:13:52,980
in de originele Prime DP-module die

341
00:13:52,980 --> 00:13:55,019
de zogenaamde klassieke

342
00:13:55,019 --> 00:13:57,200
actieve gevolgtrekking implementeert. We hebben verschillende

343
00:13:57,200 --> 00:13:59,760
omgevingen en we hebben

344
00:13:59,760 --> 00:14:02,399
helperfuncties zoals leren in huidige kaarten enzovoort, dus

345
00:14:02,399 --> 00:14:05,160
dit is de module van tijd-

346
00:14:05,160 --> 00:14:09,120
DP, maar dan in de bovenliggende map  we hebben ook

347
00:14:09,120 --> 00:14:11,459
voorbeelden met

348
00:14:11,459 --> 00:14:14,700
tutorials over hoe je de

349
00:14:14,700 --> 00:14:17,220
engine-klasse kunt gebruiken, hoe je met

350
00:14:17,220 --> 00:14:20,220
de omgevingen moet omgaan enzovoort, dus als je

351
00:14:20,220 --> 00:14:22,620
naar de pull-verzoeken kijkt,

352
00:14:22,620 --> 00:14:25,500
proberen we nu geavanceerde gevolgtrekkingen samen te voegen

353
00:14:25,500 --> 00:14:27,720
in de originele Prime DP-

354
00:14:27,720 --> 00:14:29,579
module  en vandaag ga ik het hebben

355
00:14:29,579 --> 00:14:31,500
over de code in dit volledige verzoek, dus

356
00:14:31,500 --> 00:14:34,320
als je dit wilt proberen, uh

357
00:14:34,320 --> 00:14:36,839
Hands-On, wil je misschien naar deze

358
00:14:36,839 --> 00:14:39,959
pagina gaan waar dit pull-verzoek staat

359
00:14:39,959 --> 00:14:41,760
en

360
00:14:41,760 --> 00:14:44,940
het heeft dezelfde tijdsstructuur  DB,

361
00:14:44,940 --> 00:14:48,420
het is in principe ontworpen met behulp van piondp en

362
00:14:48,420 --> 00:14:50,699
wat we hier bovendien hebben is een

363
00:14:50,699 --> 00:14:53,639
agent SI, een geavanceerde

364
00:14:53,639 --> 00:14:55,740
Enterprise-agent die alles doet,

365
00:14:55,740 --> 00:14:58,320
en ook planning en besluitvorming op

366
00:14:58,320 --> 00:15:00,480
de geavanceerde manier van inferentie, en in

367
00:15:00,480 --> 00:15:02,399
de bovenliggende map is er ook een

368
00:15:02,399 --> 00:15:04,860
voorbeeldmap voor geavanceerde

369
00:15:04,860 --> 00:15:07,620
demo van inferentie en wat ik vandaag ga doen

370
00:15:07,620 --> 00:15:09,540
is je door deze

371
00:15:09,540 --> 00:15:12,300
tutorial over gesubstitueerde inferentie leiden en

372
00:15:12,300 --> 00:15:14,519
onderweg ga ik bespreken

373
00:15:14,519 --> 00:15:18,320
en op punten waar ik naar

374
00:15:18,320 --> 00:15:21,060
de helpercodes verwijs, ga ik naar

375
00:15:21,060 --> 00:15:22,740
die code en probeer  om uit te leggen wat er

376
00:15:22,740 --> 00:15:24,540
feitelijk gebeurt en hoe we

377
00:15:24,540 --> 00:15:27,360
die agentenomgeving voltooien. Loop waar we

378
00:15:27,360 --> 00:15:31,860
dat doelgerichte gedrag goed kunnen zien, dus

379
00:15:31,860 --> 00:15:35,040
ja, dus dat is het belangrijkste DP-thuis, dan heb ik

380
00:15:35,040 --> 00:15:37,560
het ook gehad over het pull-verzoek, dus

381
00:15:37,560 --> 00:15:40,199
laten we meteen naar het Jupiter-

382
00:15:40,199 --> 00:15:43,680
notebook gaan, dus dit is mijn  lokale kopie van

383
00:15:43,680 --> 00:15:46,320
deze repository, zodat het gemakkelijker voor mij is om

384
00:15:46,320 --> 00:15:47,880
het uit te voeren en op mijn pc weer te geven,

385
00:15:47,880 --> 00:15:50,339
dus dit is de patroonmap

386
00:15:50,339 --> 00:15:53,279
met pi mdp en voorbeelden en in de

387
00:15:53,279 --> 00:15:55,440
binnenvoorbeelden heb ik een demohouder voor

388
00:15:55,440 --> 00:15:57,120
geavanceerde gevolgtrekking en dit is The

389
00:15:57,120 --> 00:15:59,480
Notebook I'  Ik heb het hier over waar, dus

390
00:15:59,480 --> 00:16:02,579
in dit voorbeeld proberen we

391
00:16:02,579 --> 00:16:04,760


392
00:16:04,800 --> 00:16:06,480
deze specifieke

393
00:16:06,480 --> 00:16:08,699
rastertaak uit het originele, verfijnde

394
00:16:08,699 --> 00:16:12,480
gevolgtrekkingspapier af te handelen en deze agent te maken of

395
00:16:12,480 --> 00:16:14,880
deze agent in staat te stellen naar deze

396
00:16:14,880 --> 00:16:17,339
rode stip te navigeren die zogenaamd de gouden

397
00:16:17,339 --> 00:16:19,860
staat is in  deze specifieke taak gegeven onze

398
00:16:19,860 --> 00:16:21,720
eerdere voorkeur zoals dit recht, dus deze

399
00:16:21,720 --> 00:16:24,240
hoge voorkeur is behoorlijk informatief in

400
00:16:24,240 --> 00:16:26,760
de zin dat we schrijven dat we kunnen zien dat

401
00:16:26,760 --> 00:16:28,560
dit de staat met de meeste voorkeur is. De

402
00:16:28,560 --> 00:16:30,420
witte kleur en de omliggende staten

403
00:16:30,420 --> 00:16:33,360
hebben minder de voorkeur, maar hebben meer

404
00:16:33,360 --> 00:16:35,459
de voorkeur dan de  ver weg,

405
00:16:35,459 --> 00:16:37,920
dus dit is de rasterwereldtaak die we

406
00:16:37,920 --> 00:16:39,120
proberen te gebruiken,

407
00:16:39,120 --> 00:16:42,199
dus de eerste cel

408
00:16:42,199 --> 00:16:45,139
importeert alle benodigde bibliotheken

409
00:16:45,139 --> 00:16:48,779
en enkele nuttige bibliotheken zoals numpy en

410
00:16:48,779 --> 00:16:51,839
matplotlib en de belangrijkste is

411
00:16:51,839 --> 00:16:55,259
prime DB, dus ik ben ik  eigenlijk roep ik nu

412
00:16:55,259 --> 00:16:57,360
de lokale kopie van mijn Prime DB aan met de

413
00:16:57,360 --> 00:16:58,800
geavanceerde gevolgtrekkingsimplementatie,

414
00:16:58,800 --> 00:17:01,740
niet de originele die nog niet is samengevoegd

415
00:17:01,740 --> 00:17:04,439
en het eerste waar ik het over wil hebben

416
00:17:04,439 --> 00:17:06,720
is de omgeving zelf goed, dus

417
00:17:06,720 --> 00:17:09,839
de omgeving punt stap deel waar als ik

418
00:17:09,839 --> 00:17:11,880
wat actie krijg  hoe werkt de omgeving

419
00:17:11,880 --> 00:17:13,740
en

420
00:17:13,740 --> 00:17:16,859
daarvoor heb ik in deze map en ik

421
00:17:16,859 --> 00:17:18,839
heb een bestand met een geweldige omgeving,

422
00:17:18,839 --> 00:17:23,280
uh SI Dot py en dit is in feite een

423
00:17:23,280 --> 00:17:25,319
omgevingsklasse, dus maak je geen zorgen over

424
00:17:25,319 --> 00:17:27,299
hoe deze omgeving feitelijk wordt

425
00:17:27,299 --> 00:17:29,340
geïmplementeerd. Het enige waar je je zorgen over hoeft te maken

426
00:17:29,340 --> 00:17:31,380
over is

427
00:17:31,380 --> 00:17:32,340


428
00:17:32,340 --> 00:17:34,919
deze functie die we gaan gebruiken,

429
00:17:34,919 --> 00:17:38,760
namelijk de omgevingspuntstap, dus deze

430
00:17:38,760 --> 00:17:41,520
functie zal er een actie in ondernemen en

431
00:17:41,520 --> 00:17:43,919
afhankelijk van de huidige toestand van de

432
00:17:43,919 --> 00:17:45,840
omgeving zal het berekenen wat

433
00:17:45,840 --> 00:17:48,900
de meest waarschijnlijke volgende toestand is gegeven deze

434
00:17:48,900 --> 00:17:51,360
actie van de agent  dus dat is het idee

435
00:17:51,360 --> 00:17:53,880
en dan zal het ook een beloning

436
00:17:53,880 --> 00:17:57,960
van sommigen met een verwaarloosbare negatieve waarde berekenen als

437
00:17:57,960 --> 00:18:00,179
het niet de doelstaat is en als het

438
00:18:00,179 --> 00:18:02,220
de doelstaat is,

439
00:18:02,220 --> 00:18:04,320
zal het een beloning van 10 geven en

440
00:18:04,320 --> 00:18:06,900
zo is de omgeving ontworpen en

441
00:18:06,900 --> 00:18:08,700
zal deze worden bijgewerkt  de huidige staat naar de nieuwe

442
00:18:08,700 --> 00:18:10,500
staat en wat het in feite zal retourneren

443
00:18:10,500 --> 00:18:13,080
is een nieuwe staat, afhankelijk van je

444
00:18:13,080 --> 00:18:14,220
actie,

445
00:18:14,220 --> 00:18:16,080
de beloning voor die actie en

446
00:18:16,080 --> 00:18:17,940
of het het einde van de aflevering is,

447
00:18:17,940 --> 00:18:20,700
enzovoort, dus deze implementatie is de

448
00:18:20,700 --> 00:18:22,500
standaard implementatie van een openai-omgeving

449
00:18:22,500 --> 00:18:24,660
en dit  is de

450
00:18:24,660 --> 00:18:26,520
omgeving.stap-functie goed, dus in

451
00:18:26,520 --> 00:18:28,440
dit raster,

452
00:18:28,440 --> 00:18:31,320
bijvoorbeeld als ik nu in deze

453
00:18:31,320 --> 00:18:34,140
staat ben en als ik een actie omhoog voer,

454
00:18:34,140 --> 00:18:36,120
heb ik vier beschikbare acties

455
00:18:36,120 --> 00:18:38,460
um noord-zuid-oost en west, dus als ik

456
00:18:38,460 --> 00:18:41,100
op Noord ga, dan is de omgevingspunt  stap

457
00:18:41,100 --> 00:18:43,620
zal ervoor zorgen dat ik in de staat ben

458
00:18:43,620 --> 00:18:46,620
die ongeveer de staat is en als ik naar het oosten

459
00:18:46,620 --> 00:18:48,960
of westen ga, dan blijf ik hier of naar het zuiden en

460
00:18:48,960 --> 00:18:52,679
blijf hier, dus dat is het idee en ja,

461
00:18:52,679 --> 00:18:54,780
en er is een limiet voor de lengte van afleveringen

462
00:18:54,780 --> 00:18:57,960
die hier acht is  dat betekent dat ik

463
00:18:57,960 --> 00:19:00,179
de

464
00:19:00,179 --> 00:19:01,140


465
00:19:01,140 --> 00:19:03,179
lengte van elke aflevering beperk tot acht,

466
00:19:03,179 --> 00:19:05,039
wat de ideale lengte is om

467
00:19:05,039 --> 00:19:06,840
deze gouden staat te bereiken, alleen maar om verwarring te voorkomen,

468
00:19:06,840 --> 00:19:09,179
dus in deze omgeving

469
00:19:09,179 --> 00:19:11,059
zal de omgeving na acht acties eindigen

470
00:19:11,059 --> 00:19:13,740
en als je deze regel een beetje moet bereiken

471
00:19:13,740 --> 00:19:16,380
geef het optimale tijdstip aan, dus

472
00:19:16,380 --> 00:19:18,480
dat is het idee hoe de omgeving wordt

473
00:19:18,480 --> 00:19:23,100
geïmplementeerd, oké, ik hoop dat dat duidelijk is

474
00:19:23,100 --> 00:19:25,799
en er zijn veel nuttige functies in

475
00:19:25,799 --> 00:19:27,780
deze omgeving, zoals

476
00:19:27,780 --> 00:19:29,220


477
00:19:29,220 --> 00:19:32,100
een weergave, de omgeving geeft

478
00:19:32,100 --> 00:19:33,660
een voorafgaande voorkeur Matrix in deze

479
00:19:33,660 --> 00:19:34,860
omgeving, dus als je ontwerpt  Een

480
00:19:34,860 --> 00:19:36,679
prioriteitsvriend, deze omgeving kan

481
00:19:36,679 --> 00:19:39,720
dat op een picturale manier laten zien hoe uw

482
00:19:39,720 --> 00:19:41,940
eerdere voorkeuren uh dat u

483
00:19:41,940 --> 00:19:44,039
in het onderstaande notitieboekje zult zien,

484
00:19:44,039 --> 00:19:46,440
dus nu is het tijd dat we een

485
00:19:46,440 --> 00:19:48,120
generatief model definiëren voor de geavanceerde

486
00:19:48,120 --> 00:19:50,340
inferentieagent,

487
00:19:50,340 --> 00:19:51,179


488
00:19:51,179 --> 00:19:54,020


489
00:19:54,720 --> 00:19:56,580
laten we daarvoor eerst de structuur definiëren van  het

490
00:19:56,580 --> 00:19:58,200
generatieve model dat we willen dat de agent

491
00:19:58,200 --> 00:19:59,940
in gedachten heeft en

492
00:19:59,940 --> 00:20:01,919
dat op maat is gemaakt voor deze specifieke

493
00:20:01,919 --> 00:20:05,120
omgeving, dus hier in dit

494
00:20:05,120 --> 00:20:08,580
specifieke raster Wereldtaak hebben we 25

495
00:20:08,580 --> 00:20:10,559
geldige staten,

496
00:20:10,559 --> 00:20:12,480
beginnend bij deze staat, zijn al deze

497
00:20:12,480 --> 00:20:16,320
zwarte staten op dit pad geldige

498
00:20:16,320 --> 00:20:18,960
staten  er zijn dus 25 geldige staten en

499
00:20:18,960 --> 00:20:20,700
dan zijn er vier beschikbare acties

500
00:20:20,700 --> 00:20:23,580
voor de agent noord-zuid-oost en west,

501
00:20:23,580 --> 00:20:25,799
dus dit maakt deel uit van ons generatieve model

502
00:20:25,799 --> 00:20:30,120
dit komt ook overeen met de

503
00:20:30,120 --> 00:20:32,700
realiteit van het raster, maar dit gaat over

504
00:20:32,700 --> 00:20:34,620
wat de agent erin heeft  het heeft gelijk

505
00:20:34,620 --> 00:20:38,160
en dan is de observatie alleen maar de

506
00:20:38,160 --> 00:20:41,460
toestandsruimte, de agent is het, het

507
00:20:41,460 --> 00:20:43,200
probleem is volledig waarneembaar, dus er is

508
00:20:43,200 --> 00:20:46,020
daar geen dubbelzinnigheid. Dan

509
00:20:46,020 --> 00:20:49,620
definiëren we in principe het aantal buitenlandse staten,

510
00:20:49,620 --> 00:20:51,918


511
00:20:54,980 --> 00:20:58,080
in feite het aantal staten, wat

512
00:20:58,080 --> 00:21:00,840
een lijst is van je toestandsruimte  aantal

513
00:21:00,840 --> 00:21:03,660
factoren, dat is nu één, omdat je

514
00:21:03,660 --> 00:21:05,340
hier maar één warmte- en toestandsactor hebt, en

515
00:21:05,340 --> 00:21:07,740
vervolgens het aantal controles, dat

516
00:21:07,740 --> 00:21:10,260
wordt vier, dat is voor beschikbare

517
00:21:10,260 --> 00:21:13,440
acties en je observatieruimte zo,

518
00:21:13,440 --> 00:21:15,179
dus dit is de structuur van je

519
00:21:15,179 --> 00:21:18,299
generatieve model en laten we  kijk naar de

520
00:21:18,299 --> 00:21:21,840
structuur van de parameters nu in een

521
00:21:21,840 --> 00:21:24,780
pomdb, dus de eerste is de waarschijnlijkheidsfunctie

522
00:21:24,780 --> 00:21:27,120


523
00:21:27,120 --> 00:21:31,380
die vaak wordt aangegeven met hoofdletter A en

524
00:21:31,380 --> 00:21:33,240
hier is het een functie van hoeveel

525
00:21:33,240 --> 00:21:35,340
observatiemodaliteiten ik heb en

526
00:21:35,340 --> 00:21:37,799
hoeveel toestandsmodaliteiten ik heb, dus als

527
00:21:37,799 --> 00:21:41,340
ik  voer deze cel uit ja, ik moet de oudercellen uitvoeren

528
00:21:41,340 --> 00:21:43,140


529
00:21:43,140 --> 00:21:45,600
om er zeker van te zijn dat alles werkt,

530
00:21:45,600 --> 00:21:48,900
dus ik voer een vuile omgeving uit,

531
00:21:48,900 --> 00:21:50,280
de structuur van het generatieve model

532
00:21:50,280 --> 00:21:53,280
en hier heb ik de hoofdletter A Matrix

533
00:21:53,280 --> 00:21:56,400
die een structuur heeft van 25 25, dat betekent

534
00:21:56,400 --> 00:21:58,799
dat ik 25 staten heb en  25 van enquêtes

535
00:21:58,799 --> 00:22:01,860
en hier omdat het volledig waarneembaar is,

536
00:22:01,860 --> 00:22:04,020
initialiseer ik het als een identiteitsmatrix

537
00:22:04,020 --> 00:22:07,200
van grootte 25, dus

538
00:22:07,200 --> 00:22:10,500
dat is mijn waarschijnlijkheidsmatrix die ik

539
00:22:10,500 --> 00:22:13,260
initialiseer voor deze specifieke

540
00:22:13,260 --> 00:22:16,559
gridtaak, dan is het tweede element de

541
00:22:16,559 --> 00:22:18,900
transitiematrix, dus daar, dus houd er

542
00:22:18,900 --> 00:22:21,240
rekening mee dat ik  Ik gebruik alle bestaande

543
00:22:21,240 --> 00:22:24,299
tijd-DB-functionaliteiten om een

544
00:22:24,299 --> 00:22:25,679
willekeurige matrix te definiëren

545
00:22:25,679 --> 00:22:28,919
en vervolgens een identiteitsmatrix te gebruiken, uh

546
00:22:28,919 --> 00:22:32,460
daarbovenop, dus ja, ik doe

547
00:22:32,460 --> 00:22:35,400
hier niets nieuws, het is de bestaande

548
00:22:35,400 --> 00:22:38,220
tijd-DB-functionaliteit, wat ik nu kan doen

549
00:22:38,220 --> 00:22:41,580
is  Definieer de B-matrix, ook wel

550
00:22:41,580 --> 00:22:43,500
transitiematrix genoemd, zodat de

551
00:22:43,500 --> 00:22:45,960
transitiematrix overgangen codeert,

552
00:22:45,960 --> 00:22:48,000
zoals waar ik in de

553
00:22:48,000 --> 00:22:49,799
toekomst zal eindigen als ik vanuit een bepaalde

554
00:22:49,799 --> 00:22:52,440
staat begin en een actie onderneem, dus dat is het

555
00:22:52,440 --> 00:22:55,320
idee waarbij het afhangt van het aantal

556
00:22:55,320 --> 00:22:56,640
staten, wat de verborgen

557
00:22:56,640 --> 00:22:59,640
staatsmodaliteit en het aantal controles is, dus het

558
00:22:59,640 --> 00:23:02,159
heeft de structuur van een staatsactiestaat,

559
00:23:02,159 --> 00:23:04,320
waarbij als ik een actie onderneem vanuit een

560
00:23:04,320 --> 00:23:05,640
bepaalde staat waar ik terecht zal komen,

561
00:23:05,640 --> 00:23:08,340
dus dat is ook een toekomstig staatsrecht,

562
00:23:08,340 --> 00:23:09,780
dus

563
00:23:09,780 --> 00:23:12,980
ik ben  Ik ga het initialiseren als de echte

564
00:23:12,980 --> 00:23:15,480
omgevingsstatus, dus nu dit deel uitmaakt van

565
00:23:15,480 --> 00:23:17,039
de omgeving die ik heb gebouwd, zal het

566
00:23:17,039 --> 00:23:19,380
de b-matrix opleveren,

567
00:23:19,380 --> 00:23:21,179
het kan de moeite waard zijn om naar de

568
00:23:21,179 --> 00:23:24,740
structuur van deze B-matrix te kijken,

569
00:23:25,380 --> 00:23:29,340
dus hier hebben we 25  25 4 dus dat betekent

570
00:23:29,340 --> 00:23:32,820
dat als ik een actie onderneem vanuit een

571
00:23:32,820 --> 00:23:34,500
bepaalde staat waar ik zal

572
00:23:34,500 --> 00:23:38,220
eindigen en we de echte uh-

573
00:23:38,220 --> 00:23:40,140
overgangsdynamiek voor dit specifieke raster van

574
00:23:40,140 --> 00:23:42,840
Design hebben, dus er is een functie genaamd 'get

575
00:23:42,840 --> 00:23:46,020
ruby' en die geeft  ons de echte B van

576
00:23:46,020 --> 00:23:47,700
het systeem dat de agent kan

577
00:23:47,700 --> 00:23:51,000
gebruiken, oké, dus idealiter zouden we willen dat de

578
00:23:51,000 --> 00:23:52,919
agent dit leert, maar voor het doel

579
00:23:52,919 --> 00:23:55,620
van deze demo gaan we ervan uit dat de

580
00:23:55,620 --> 00:23:57,900
agent de structuur al kent

581
00:23:57,900 --> 00:24:00,960
en dan komen de eerdere voetafdrukken,

582
00:24:00,960 --> 00:24:03,840
dat is  uh interessant hier in de

583
00:24:03,840 --> 00:24:05,039
zin dat

584
00:24:05,039 --> 00:24:08,280
het wordt gedefinieerd als hoe dichter je bij

585
00:24:08,280 --> 00:24:10,200
de doelstaat bent, dus als je in de gouden

586
00:24:10,200 --> 00:24:12,720
staat bent, dan is dat duidelijk de meest

587
00:24:12,720 --> 00:24:15,539
gewilde staat waar je het

588
00:24:15,539 --> 00:24:18,840
meest de voorkeur aan geeft en hoe geef je de voorkeur aan de

589
00:24:18,840 --> 00:24:20,220
aangrenzende staat  staat goed, dus dat is

590
00:24:20,220 --> 00:24:23,220
afhankelijk van de vierkantswortel van de

591
00:24:23,220 --> 00:24:25,200
afstand of feitelijk de afstand tot

592
00:24:25,200 --> 00:24:27,960
die specifieke doeltoestand,

593
00:24:27,960 --> 00:24:30,860
dus je definieert een raster

594
00:24:30,860 --> 00:24:34,679
dat 8 kruisen 8 is, even groot als deze

595
00:24:34,679 --> 00:24:39,419
specifieke rastertaak en dan hebben we

596
00:24:39,419 --> 00:24:43,440
een methode om iets toe te voegen  waarden, wat

597
00:24:43,440 --> 00:24:45,059
de voorkeur is die je hebt voor elke staat

598
00:24:45,059 --> 00:24:48,240
en als je de specifieke C-

599
00:24:48,240 --> 00:24:49,919
matrix weergeeft, kun je de structuur zien die

600
00:24:49,919 --> 00:24:53,039
hetzelfde is, waarbij deze gouden staat

601
00:24:53,039 --> 00:24:55,140
meer de voorkeur heeft en de omringende

602
00:24:55,140 --> 00:24:57,780
staten minder voorbereid

603
00:24:57,780 --> 00:25:00,539
enzovoort. Nu hebben we de C-matrix  ook gedefinieerd

604
00:25:00,539 --> 00:25:03,419
op de klassieke tijd-DP-manier

605
00:25:03,419 --> 00:25:06,840
en dan initialiseer ik die c-matrix als

606
00:25:06,840 --> 00:25:09,299
de C-matrix die we in de

607
00:25:09,299 --> 00:25:11,940
vorige cel hebben geëvalueerd, wat een kleine C is op deze

608
00:25:11,940 --> 00:25:13,740
specifieke C-matrix, oké

609
00:25:13,740 --> 00:25:16,799
en ten slotte hebben we voor het generatieve model

610
00:25:16,799 --> 00:25:19,140
hoofdletter D, wat jouw prioriteit is

611
00:25:19,140 --> 00:25:21,000
over verborgen staten en daarvoor

612
00:25:21,000 --> 00:25:23,640
gebruik ik een uniforme objectarray, dus dat

613
00:25:23,640 --> 00:25:26,039
betekent dat ik geen prior heb van waar

614
00:25:26,039 --> 00:25:29,700
ik begin, dus laat me de cellen in behandeling uitvoeren,

615
00:25:29,700 --> 00:25:32,120


616
00:25:32,700 --> 00:25:35,100
dus hier is de D-matrix een uniforme

617
00:25:35,100 --> 00:25:37,140
verdeling over verborgen staten.  ik

618
00:25:37,140 --> 00:25:38,460
weet niet waar ik de simulaties ga starten

619
00:25:38,460 --> 00:25:41,460
en dus dit is de

620
00:25:41,460 --> 00:25:43,679
basisstructuur van het generatieve model en

621
00:25:43,679 --> 00:25:46,799
dan hebben we de agentklasse die ik

622
00:25:46,799 --> 00:25:48,500
afzonderlijk wil bespreken,

623
00:25:48,500 --> 00:25:51,659
zoals de omgeving, dus gegeven

624
00:25:51,659 --> 00:25:54,600
deze omgevingsparameters, hoe zou

625
00:25:54,600 --> 00:25:57,419
je verwachten  de agentklasse om te werken, dus

626
00:25:57,419 --> 00:25:59,880
waar is de agentklasse in deze

627
00:25:59,880 --> 00:26:01,260
mapstructuur

628
00:26:01,260 --> 00:26:05,100
uh in de pmdp-modulemap

629
00:26:05,100 --> 00:26:07,940
hebben we een agent SI dot p y

630
00:26:07,940 --> 00:26:12,179
die in feite weer een klasse is

631
00:26:12,179 --> 00:26:14,419
en vergelijkbaar met de omgevingsklasse.

632
00:26:14,419 --> 00:26:17,880
Hier hebben we ook een stapfunctie waarin

633
00:26:17,880 --> 00:26:21,900
dit  zal daarin een observatie naar

634
00:26:21,900 --> 00:26:25,500
de functie opnemen en ook een vlag of

635
00:26:25,500 --> 00:26:28,020
de omgeving al dan niet moet worden geleerd, wat

636
00:26:28,020 --> 00:26:30,840
optioneel is, dus als u het uitschakelt, zal het

637
00:26:30,840 --> 00:26:33,419
het generatieve model niet leren. Als

638
00:26:33,419 --> 00:26:35,400
u het inschakelt, zal het de

639
00:26:35,400 --> 00:26:37,500
parameters van de  generatief model en

640
00:26:37,500 --> 00:26:39,240
wat het feitelijk doet is dat het

641
00:26:39,240 --> 00:26:42,299
een actie retourneert die op dit

642
00:26:42,299 --> 00:26:44,880
moment moet worden uitgevoerd en de omgeving kan

643
00:26:44,880 --> 00:26:47,400
die actie in principe goed gebruiken, dus in

644
00:26:47,400 --> 00:26:49,080
dit bestand hebben we de agentklasse die

645
00:26:49,080 --> 00:26:51,960
ik in detail zal uitleggen,

646
00:26:51,960 --> 00:26:54,960
dus ik ben  in feite importeren we die

647
00:26:54,960 --> 00:26:57,740
agentklasse in deze cel

648
00:26:57,740 --> 00:27:00,539
en dan gaan we proberen

649
00:27:00,539 --> 00:27:03,000
dit gedragsresultaat uit het

650
00:27:03,000 --> 00:27:05,820
toegangspapier van The Originals of State te reproduceren,

651
00:27:05,820 --> 00:27:09,659
oké en

652
00:27:09,659 --> 00:27:12,480
daarom verwachten we dat, gegeven deze

653
00:27:12,480 --> 00:27:14,760
voorafgaande voorkeursstructuur, er

654
00:27:14,760 --> 00:27:16,919
lokale Maxima's zijn in deze eerdere uitvoering

655
00:27:16,919 --> 00:27:18,539
structuur, dus als je vanaf dit

656
00:27:18,539 --> 00:27:21,419
specifieke punt begint en je niet diep

657
00:27:21,419 --> 00:27:24,419
genoeg plant, zul je eindigen in een van

658
00:27:24,419 --> 00:27:26,640
deze lokale Maxima's waar je niet ziet

659
00:27:26,640 --> 00:27:28,919
dat er een zeer geprefereerde

660
00:27:28,919 --> 00:27:31,200
observatie is, zeg vier stappen verderop,

661
00:27:31,200 --> 00:27:34,080
dus als je  bent in deze specifieke staat,

662
00:27:34,080 --> 00:27:36,539
wat je zult zien is deze lokale Maxima

663
00:27:36,539 --> 00:27:38,340
en je zult daar gaan zitten omdat

664
00:27:38,340 --> 00:27:39,779
de buurstaten minder de

665
00:27:39,779 --> 00:27:42,059
voorkeur hebben en deze staat die meer de

666
00:27:42,059 --> 00:27:43,980
voorkeur heeft, niet toegankelijk is vanwege

667
00:27:43,980 --> 00:27:47,279
de wereld of de muurstructuur, dus je

668
00:27:47,279 --> 00:27:49,320
moet nemen  een bocht en ga door

669
00:27:49,320 --> 00:27:51,840
minder geprefereerde staten en je hebt een diepgaande

670
00:27:51,840 --> 00:27:54,059
planning nodig om de agent in staat te stellen dat te doen.

671
00:27:54,059 --> 00:27:56,220
De agent zou in staat moeten zijn om

672
00:27:56,220 --> 00:27:57,779


673
00:27:57,779 --> 00:28:00,360
een ​​soort van vier tijdstappen vooruit in de tijd te simuleren om te zien

674
00:28:00,360 --> 00:28:02,880
dat er een zeer lonende

675
00:28:02,880 --> 00:28:06,080
observatie aankomt  doe dat soort

676
00:28:06,080 --> 00:28:08,700
acties, dus dat is het punt dat we

677
00:28:08,700 --> 00:28:09,720
proberen te

678
00:28:09,720 --> 00:28:13,919
zien in deze specifieke demo, dus voor een

679
00:28:13,919 --> 00:28:17,220
lage planningsdiepte zal het in principe

680
00:28:17,220 --> 00:28:19,559
vastlopen in een van de lokale Maxima's, maar

681
00:28:19,559 --> 00:28:21,179
met voldoende planningsdiepte zal het

682
00:28:21,179 --> 00:28:23,520
naar de gouden staat navigeren, dus  dat is

683
00:28:23,520 --> 00:28:25,919
wat we goed proberen te zien, dus we

684
00:28:25,919 --> 00:28:28,440
hebben verschillende planningshorizons

685
00:28:28,440 --> 00:28:31,440
en wat we feitelijk doen is

686
00:28:31,440 --> 00:28:34,440
de agent een generatief model geven

687
00:28:34,440 --> 00:28:37,020
dat we nu hebben gedefinieerd, de matrix

688
00:28:37,020 --> 00:28:39,960
B Matrix C Matrix V Matrix, dan hebben we

689
00:28:39,960 --> 00:28:42,480
de planningshorizon van kapitaal N  dus

690
00:28:42,480 --> 00:28:44,940
hier herhaal ik de

691
00:28:44,940 --> 00:28:48,000
planningsdiepte, dus n zal 1, 3 en 4 zijn voor de

692
00:28:48,000 --> 00:28:50,580
lus, dan hebben we actieprecisie die

693
00:28:50,580 --> 00:28:53,100
vaak wordt aangegeven door Alpha in

694
00:28:53,100 --> 00:28:55,320
literatuur over actieve invloed, dus dat bepaalt

695
00:28:55,320 --> 00:28:58,080
welke actie moet worden ondernomen, dus een zeer

696
00:28:58,080 --> 00:29:01,200
nauwkeurige actieprocessie  betekent dat het

697
00:29:01,200 --> 00:29:03,620
zich zal houden aan de actie met de laagst

698
00:29:03,620 --> 00:29:07,080
verwachte vrije energie, maar met een actie met een lager accent.

699
00:29:07,080 --> 00:29:08,400
Precisie is nogal

700
00:29:08,400 --> 00:29:10,320
probabilistisch, waarbij het ook

701
00:29:10,320 --> 00:29:12,480
andere acties in overweging zal nemen. Dan hebben we een

702
00:29:12,480 --> 00:29:14,159
planningsprecisie die deel uitmaakt van de

703
00:29:14,159 --> 00:29:16,620
planningsfunctie die we zullen bespreken en die

704
00:29:16,620 --> 00:29:18,120
vaak is  in de literatuur aangeduid als

705
00:29:18,120 --> 00:29:20,159
gamma, dan hebben we ook een

706
00:29:20,159 --> 00:29:21,960
zoekdrempel die uiterst belangrijk is

707
00:29:21,960 --> 00:29:24,600
voor geavanceerde gevolgtrekkingen, omdat, zoals

708
00:29:24,600 --> 00:29:26,880
we zagen, geavanceerde gevolgtrekkingen bij

709
00:29:26,880 --> 00:29:28,559


710
00:29:28,559 --> 00:29:32,399
onderzoek slecht zijn in de zin dat er

711
00:29:32,399 --> 00:29:34,740
veel berekeningen voor nodig zijn, maar je

712
00:29:34,740 --> 00:29:36,480
moet een drempel definiëren  om

713
00:29:36,480 --> 00:29:39,179
veel mogelijkheden te negeren om het te laten

714
00:29:39,179 --> 00:29:41,159
werken en dat is het idee dat we

715
00:29:41,159 --> 00:29:44,340
ook zullen bespreken, oké, dus even een voorproefje

716
00:29:44,340 --> 00:29:47,820
voordat we naar de agentklasse gaan.

717
00:29:47,820 --> 00:29:51,480
Wat we proberen te doen is in een

718
00:29:51,480 --> 00:29:55,200
lus, we gaan de agent-dot-

719
00:29:55,200 --> 00:29:57,240
stap noemen  en de omgevingspunt stap in serie

720
00:29:57,240 --> 00:30:00,179
zodat de agent een observatie ziet, hij

721
00:30:00,179 --> 00:30:01,559
een actie zal ondernemen,

722
00:30:01,559 --> 00:30:03,960
die actie zal naar de omgeving gaan,

723
00:30:03,960 --> 00:30:06,419
de omgeving zal hem nieuwe

724
00:30:06,419 --> 00:30:08,940
observaties teruggeven en deze lus gaat door en

725
00:30:08,940 --> 00:30:11,600
we willen in de loop van de tijd zien hoe deze lus

726
00:30:11,600 --> 00:30:14,820
evolueert naar een  doelgericht gedrag en

727
00:30:14,820 --> 00:30:18,419
en als de agent

728
00:30:18,419 --> 00:30:20,720
daar überhaupt toe in staat is, laten we, voordat ik de resultaten bekendmaak,

729
00:30:20,720 --> 00:30:24,480
de agentklasse bespreken, dus

730
00:30:24,480 --> 00:30:27,360
om een ​​actie te ondernemen wanneer een

731
00:30:27,360 --> 00:30:30,179
observatie wordt gegeven, moet de agent

732
00:30:30,179 --> 00:30:33,120
de planning hebben enzovoort, dus

733
00:30:33,120 --> 00:30:35,700
hier is de  agent de geavanceerde

734
00:30:35,700 --> 00:30:38,340
gevolgtrekkingsagent

735
00:30:38,340 --> 00:30:40,799
eh daar gebruiken we eigenlijk de

736
00:30:40,799 --> 00:30:43,320
bestaande Prime DB-agent voor sommige

737
00:30:43,320 --> 00:30:46,320
functionaliteiten, dus in Pym DP hebben we al

738
00:30:46,320 --> 00:30:50,580
heel goed geschreven functies

739
00:30:50,580 --> 00:30:52,200
eh voor perceptie

740
00:30:52,200 --> 00:30:55,200
eh en leren, dus het enige dat we

741
00:30:55,200 --> 00:30:57,600
willen vervangen is hoe de  agent

742
00:30:57,600 --> 00:30:59,640
doet planning en hoe de agent

743
00:30:59,640 --> 00:31:03,360
beslissingen neemt over beleid, dus

744
00:31:03,360 --> 00:31:05,600


745
00:31:05,779 --> 00:31:09,419
hier gebruiken we die bovenliggende

746
00:31:09,419 --> 00:31:11,640
agentklasse, dus

747
00:31:11,640 --> 00:31:14,340
vanaf tijd dp.agent importeren we die

748
00:31:14,340 --> 00:31:15,620
agentklasse

749
00:31:15,620 --> 00:31:19,500
die naast de SI-agent zit

750
00:31:19,500 --> 00:31:21,960
die we nu bespreken

751
00:31:21,960 --> 00:31:23,279
en

752
00:31:23,279 --> 00:31:25,919
in principe nemen we

753
00:31:25,919 --> 00:31:28,679
de generatieve modelstructuur over van het

754
00:31:28,679 --> 00:31:30,480
hoofdprogramma voor deze klasse om te werken,

755
00:31:30,480 --> 00:31:33,299
namelijk a b c en d en alle

756
00:31:33,299 --> 00:31:35,460
precisies en drempelparameters die ik

757
00:31:35,460 --> 00:31:36,480
noemde,

758
00:31:36,480 --> 00:31:39,140
dan is het een soort

759
00:31:39,140 --> 00:31:41,880
normalisatie van de eerdere conferentie die we

760
00:31:41,880 --> 00:31:45,240
in het hoofdprogramma noemden, dus hier

761
00:31:45,240 --> 00:31:50,220
als ik kijk naar hoe C is,

762
00:31:50,220 --> 00:31:52,620
wordt de structuur van C gedefinieerd in termen

763
00:31:52,620 --> 00:31:55,320
van getallen en wordt de voorafgaande voorkeur

764
00:31:55,320 --> 00:31:56,940
vaak geïnterpreteerd of zou het een

765
00:31:56,940 --> 00:31:58,679
probabilistische verdeling moeten zijn om de

766
00:31:58,679 --> 00:32:01,020
berekeningen goed te laten werken, dus

767
00:32:01,020 --> 00:32:02,580
we gaan het normaliseren als een

768
00:32:02,580 --> 00:32:05,460
waarschijnlijkheidsverdeling

769
00:32:05,460 --> 00:32:06,779
dan dat we

770
00:32:06,779 --> 00:32:09,059
getallen hebben die niet

771
00:32:09,059 --> 00:32:11,340
optellen tot één, dus dat is wat er gebeurt.

772
00:32:11,340 --> 00:32:13,620
Hier gebruiken we softmax om dat te doen. Wat

773
00:32:13,620 --> 00:32:15,600
we dan doen is

774
00:32:15,600 --> 00:32:16,860


775
00:32:16,860 --> 00:32:20,159
de bestaande tijd-DB-agent initialiseren met deze

776
00:32:20,159 --> 00:32:23,220
generatieve modelparameters en wat we

777
00:32:23,220 --> 00:32:27,240
zijn  wat ik van plan ben te doen is het schrijven van een

778
00:32:27,240 --> 00:32:28,860
planningsfunctie voor een gegeven planningshorizon

779
00:32:28,860 --> 00:32:32,039
en een gegeven um-drempel gedurende drie

780
00:32:32,039 --> 00:32:35,399
seconden. Oké, dus er zijn drie

781
00:32:35,399 --> 00:32:37,740
functies in deze agentklasse.

782
00:32:37,740 --> 00:32:39,720
Eén is een helperfunctie voor planning

783
00:32:39,720 --> 00:32:42,240
die we nu zullen bespreken, en dan is er

784
00:32:42,240 --> 00:32:45,120
zelf een planningsfunctie  dat gaat

785
00:32:45,120 --> 00:32:48,179
planning doen met behulp van onderzoek en

786
00:32:48,179 --> 00:32:50,220
omdat het een recursief onderzoek is,

787
00:32:50,220 --> 00:32:52,260
hebben we een extra

788
00:32:52,260 --> 00:32:54,980
functie nodig die die recursieve

789
00:32:54,980 --> 00:32:58,559
evaluatie implementeert, waarbij we

790
00:32:58,559 --> 00:33:00,799
deze functie gaan noemen, genaamd voorwaarts zoeken

791
00:33:00,799 --> 00:33:04,200
binnen de functie zelf, dus we

792
00:33:04,200 --> 00:33:05,700
noemen deze functie  binnen deze

793
00:33:05,700 --> 00:33:07,740
functie, dus dat is om de

794
00:33:07,740 --> 00:33:09,240
verwachte vrije energie voor de volgende stap te berekenen

795
00:33:09,240 --> 00:33:11,279
en het zal het opnieuw oproepen voor de volgende

796
00:33:11,279 --> 00:33:13,740
stap totdat we onze planning Horizon bereiken,

797
00:33:13,740 --> 00:33:16,940
dus dat is het idee van recursieve lus

798
00:33:16,940 --> 00:33:20,460
en uiteindelijk zal het de verwachte

799
00:33:20,460 --> 00:33:23,460
vrije energie voor alle acties retourneren  uh gegeven en

800
00:33:23,460 --> 00:33:25,679
observaties en dan implementeren we gewoon

801
00:33:25,679 --> 00:33:28,080
de stapfunctie waarin

802
00:33:28,080 --> 00:33:29,640
opeenvolgend wordt geschreven wat we moeten doen, gegeven

803
00:33:29,640 --> 00:33:32,460
aankondiging oké,

804
00:33:32,460 --> 00:33:37,519
dus als we teruggaan naar de demo

805
00:33:38,279 --> 00:33:43,500
hier hebben we dit eerste idee waar je

806
00:33:43,500 --> 00:33:46,799
een observatie krijgt en deze geeft een

807
00:33:46,799 --> 00:33:49,860
actie weer, dus laten we naar  de agent dot stap-

808
00:33:49,860 --> 00:33:52,260
functie en stel je voor wat er gebeurt,

809
00:33:52,260 --> 00:33:56,039
dus als het uh tijd t gelijk is aan 0 of aan

810
00:33:56,039 --> 00:33:59,460
het begin van het experiment uh wat

811
00:33:59,460 --> 00:34:01,019
het idealiter zou moeten doen in de

812
00:34:01,019 --> 00:34:03,779
eerste plaats is in die staat met behulp van

813
00:34:03,779 --> 00:34:06,600
zijn observatie, dus wat we zijn  het geven ervan

814
00:34:06,600 --> 00:34:09,899
is een observatie en het gebruiken van de modules

815
00:34:09,899 --> 00:34:12,899
voor toegang zal het

816
00:34:12,899 --> 00:34:16,619
een overtuiging Qs bedenken, wat een

817
00:34:16,619 --> 00:34:19,560
overtuiging is over staten, oké, dus zelfpunt Qs

818
00:34:19,560 --> 00:34:23,159
is het geloof in de agent en

819
00:34:23,159 --> 00:34:25,500
zodra het een overtuiging heeft over waar het  is op

820
00:34:25,500 --> 00:34:28,379
dit moment, het kan plan-dot-

821
00:34:28,379 --> 00:34:31,080
onderzoek implementeren, wat op dit moment een planning is voor

822
00:34:31,080 --> 00:34:33,839
dit specifieke geloof in een verborgen staat

823
00:34:33,839 --> 00:34:36,359
en zodra het klaar is met plannen,

824
00:34:36,359 --> 00:34:39,239
kan het een beslissing nemen met behulp van de

825
00:34:39,239 --> 00:34:42,239
voorbeeldactiefunctie in IMDb en het in principe

826
00:34:42,239 --> 00:34:45,540
retourneren, geef die actie terug en als

827
00:34:45,540 --> 00:34:48,000
het en voor elke andere keer

828
00:34:48,000 --> 00:34:50,580
blijft de volgorde hetzelfde, maar het

829
00:34:50,580 --> 00:34:52,139
leert ook over de structuur als je het

830
00:34:52,139 --> 00:34:55,080
leren inschakelt in je horizonklasse,

831
00:34:55,080 --> 00:34:56,639


832
00:34:56,639 --> 00:35:01,260
dus dat is de stapfunctie, maar om te

833
00:35:01,260 --> 00:35:04,859
plannen wat het doet, wordt het een

834
00:35:04,859 --> 00:35:06,599
beetje gereorganiseerd  de generatieve

835
00:35:06,599 --> 00:35:08,880
modelstructuur voor een willekeurig aantal warmte- en

836
00:35:08,880 --> 00:35:10,680
toestandsmodaliteiten en een willekeurig aantal

837
00:35:10,680 --> 00:35:12,240
observatiemodaliteiten,

838
00:35:12,240 --> 00:35:16,320
dus om te bespreken hoe smelten werkt, zou ik het

839
00:35:16,320 --> 00:35:17,760
willen hebben over

840
00:35:17,760 --> 00:35:20,640
de nieuwe a-matrices en B-matrices die

841
00:35:20,640 --> 00:35:22,920
het evalueert voor het implementeren van die

842
00:35:22,920 --> 00:35:24,720
planning en

843
00:35:24,720 --> 00:35:27,780
laten we dat

844
00:35:27,780 --> 00:35:31,380
zo begrijpen  laten we teruggaan naar de oorspronkelijke,

845
00:35:31,380 --> 00:35:31,980


846
00:35:31,980 --> 00:35:34,440
verborgen staatsfactoren, dus hier hebben we maar

847
00:35:34,440 --> 00:35:36,780
één verborgen staatsfactor,

848
00:35:36,780 --> 00:35:39,599
dus daarom is het d0 goed en B1

849
00:35:39,599 --> 00:35:43,200
bestaat niet omdat we maar één

850
00:35:43,200 --> 00:35:45,660
verborgen staatsfactor hebben, maar stel je voor dat als

851
00:35:45,660 --> 00:35:47,880
ik twee verborgen staatsactoren heb

852
00:35:47,880 --> 00:35:50,880
met dezelfde grootte

853
00:35:50,880 --> 00:35:53,460
misschien, dus hier kan het een locatie zijn en

854
00:35:53,460 --> 00:35:56,880
misschien iets anders in de geest van de agent

855
00:35:56,880 --> 00:35:57,660


856
00:35:57,660 --> 00:36:00,780
en we zouden ook controles moeten hebben voor

857
00:36:00,780 --> 00:36:05,180
deze twee verborgen toestandsfactoren, net zoals

858
00:36:05,220 --> 00:36:06,300
eh,

859
00:36:06,300 --> 00:36:08,700
dus er zou controle moeten zijn voor elke

860
00:36:08,700 --> 00:36:10,920
hitte- en toestandsfactor als je '  Ik ben bekend

861
00:36:10,920 --> 00:36:13,859
met het idee van actieve inferentie

862
00:36:13,859 --> 00:36:17,040
en misschien observeren de observatieruimten

863
00:36:17,040 --> 00:36:18,540


864
00:36:18,540 --> 00:36:20,640
deze twee stralingssnelheidsfactoren misschien ook direct,

865
00:36:20,640 --> 00:36:21,900


866
00:36:21,900 --> 00:36:24,420
oké, dus dit is een nieuwe generatieve

867
00:36:24,420 --> 00:36:26,040
modelstructuur met meerdere verborgen toestanden

868
00:36:26,040 --> 00:36:29,579
en meerdere observatiemodaliteiten en

869
00:36:29,579 --> 00:36:32,040
je kunt meteen zien dat de

870
00:36:32,040 --> 00:36:33,660
dimensionaliteit van je parameters

871
00:36:33,660 --> 00:36:37,500
verandert  je hebt 25 observaties afkomstig

872
00:36:37,500 --> 00:36:39,300
uit

873
00:36:39,300 --> 00:36:43,320
25 keer 25 verborgen staten en als je

874
00:36:43,320 --> 00:36:44,520
naar de structuur van de eerste

875
00:36:44,520 --> 00:36:47,220
observatiemodaliteit kijkt, is het hetzelfde, maar

876
00:36:47,220 --> 00:36:49,920
wat we willen is een nieuwe matrix waar het

877
00:36:49,920 --> 00:36:54,240
25 uh zal zijn met uh niet twee verborgen

878
00:36:54,240 --> 00:36:55,920
staten maar slechts één  tussen State is het

879
00:36:55,920 --> 00:36:58,320
slechts een reorganisatie van

880
00:36:58,320 --> 00:37:01,440
het generatieve model, maar

881
00:37:01,440 --> 00:37:03,660
berekeningen blijven in wezen hetzelfde,

882
00:37:03,660 --> 00:37:04,380


883
00:37:04,380 --> 00:37:06,900
dus dat is

884
00:37:06,900 --> 00:37:09,180
wat deze helperfunctie

885
00:37:09,180 --> 00:37:11,940
probeert te doen, wat de zaken

886
00:37:11,940 --> 00:37:13,800
gemakkelijker voor ons zal maken als we meerdere

887
00:37:13,800 --> 00:37:15,720
verborgen statusmodaliteiten hebben,

888
00:37:15,720 --> 00:37:18,180
dus

889
00:37:18,180 --> 00:37:19,859
eh als je meerdere verborgen statusmodaliteiten hebt

890
00:37:19,859 --> 00:37:21,060


891
00:37:21,060 --> 00:37:23,280
we gaan berekenen hoeveel totale

892
00:37:23,280 --> 00:37:25,320
staten je hebt, wat de

893
00:37:25,320 --> 00:37:27,720
vermenigvuldiging is van het aantal geschreven

894
00:37:27,720 --> 00:37:29,760
staten in elke modaliteit, oké, dus als je

895
00:37:29,760 --> 00:37:32,280
25 verborgen staten in de ene modaliteit hebt

896
00:37:32,280 --> 00:37:33,960
en 25 verborgen staten in de andere

897
00:37:33,960 --> 00:37:37,380
modaliteit, krijg je in totaal 625

898
00:37:37,380 --> 00:37:40,079
aantal schalen en als je

899
00:37:40,079 --> 00:37:43,020
elk vier acties hebt in elke modaliteit, dan

900
00:37:43,020 --> 00:37:45,660
heb je in totaal 16 acties, wat

901
00:37:45,660 --> 00:37:47,700
niets anders is dan de combinatie van deze

902
00:37:47,700 --> 00:37:51,119
vier acties elk in de modaliteiten. Dus

903
00:37:51,119 --> 00:37:53,220
je krijgt 4 keer 4 16

904
00:37:53,220 --> 00:37:55,560
acties als je  hebben twee modaliteiten en

905
00:37:55,560 --> 00:37:57,599
het gaat in principe

906
00:37:57,599 --> 00:38:00,140
een generatief model bouwen

907
00:38:00,140 --> 00:38:03,300
met dezelfde

908
00:38:03,300 --> 00:38:05,640
modelparameters, maar alleen met de

909
00:38:05,640 --> 00:38:07,380
andere dimensiestructuur, zodat

910
00:38:07,380 --> 00:38:09,240
het gemakkelijker voor ons is om het verwachte te berekenen, dus

911
00:38:09,240 --> 00:38:10,260


912
00:38:10,260 --> 00:38:14,640
nu hebben we een nieuwe a en een nieuwe B

913
00:38:14,640 --> 00:38:17,520
en een nieuwe overtuiging  dat is niets anders dan een

914
00:38:17,520 --> 00:38:20,880
tensorproduct, dus bestaande parameters

915
00:38:20,880 --> 00:38:23,460
en overtuigingen, dus het is niets anders dan een nieuwe

916
00:38:23,460 --> 00:38:27,359
grote matrix en niets anders. Oké, het is

917
00:38:27,359 --> 00:38:29,820
geen overdracht, het is geen verandering, het is

918
00:38:29,820 --> 00:38:32,579
gewoon een transformatie van structuur en

919
00:38:32,579 --> 00:38:36,420
gegeven dit a b en Q gaan we

920
00:38:36,420 --> 00:38:38,520
voorspellen wat er gaat gebeuren  wat in de

921
00:38:38,520 --> 00:38:41,520
toekomst zal gebeuren en de verwachte

922
00:38:41,520 --> 00:38:43,680
betaalenergieën ervoor evalueren, dus

923
00:38:43,680 --> 00:38:46,440
om planning te maken, dus dat is de

924
00:38:46,440 --> 00:38:48,060
tweede functie. Wat we gaan doen

925
00:38:48,060 --> 00:38:50,760
is eerst de eerste functie aanroepen die

926
00:38:50,760 --> 00:38:52,800
het smelten voor ons zal doen en

927
00:38:52,800 --> 00:38:55,380
het generatieve model opzetten  in goede

928
00:38:55,380 --> 00:38:59,040
dimensie cc om te berekenen, dan hebben we de

929
00:38:59,040 --> 00:39:01,500
verwachte vrije energie zelf voor alle

930
00:39:01,500 --> 00:39:02,579
acties

931
00:39:02,579 --> 00:39:07,040
en dan hebben we de waarschijnlijkheid die

932
00:39:07,040 --> 00:39:09,300
afhangt van deze verwachte vrije energie

933
00:39:09,300 --> 00:39:11,579
voor deze acties, dus waarom zijn het alleen de

934
00:39:11,579 --> 00:39:13,680
acties en niet de observaties, want

935
00:39:13,680 --> 00:39:16,619
hier gaan we heen  om de verwachte

936
00:39:16,619 --> 00:39:18,960
vrije energie van acties te evalueren,

937
00:39:18,960 --> 00:39:22,140
uh voor de gegeven observaties, dus

938
00:39:22,140 --> 00:39:23,460
laat me

939
00:39:23,460 --> 00:39:26,280
teruggaan naar de

940
00:39:26,280 --> 00:39:29,240
dia's en dit

941
00:39:29,240 --> 00:39:31,920
picturaal bespreken om de dingen gemakkelijker te maken, dus

942
00:39:31,920 --> 00:39:33,960
hier hebben we het raster en we hebben de

943
00:39:33,960 --> 00:39:36,119
hogere voetafdrukken en wat we proberen

944
00:39:36,119 --> 00:39:38,640
te implementeren  is dat als je een

945
00:39:38,640 --> 00:39:41,700
observatie waarneemt op tijdstip T, je

946
00:39:41,700 --> 00:39:44,460
de gevolgen van je

947
00:39:44,460 --> 00:39:47,640
acties op basis van die observatie gaat overwegen, omdat

948
00:39:47,640 --> 00:39:49,980
je kunt voorspellen wat er gaat gebeuren,

949
00:39:49,980 --> 00:39:51,599
omdat je in je generatieve model

950
00:39:51,599 --> 00:39:53,700
de overgangsdynamiek hebt die

951
00:39:53,700 --> 00:39:57,000
je, gegeven deze toestand, zal vertellen of  Ik onderneem deze

952
00:39:57,000 --> 00:39:58,380
actie waar ik terecht zal komen,

953
00:39:58,380 --> 00:40:00,359
dus dat is in feite voorspellen wat er

954
00:40:00,359 --> 00:40:03,180
in de toekomst gaat gebeuren en je

955
00:40:03,180 --> 00:40:05,760
overweegt nu de gevolgen van

956
00:40:05,760 --> 00:40:09,839
de beschikbare acties in Jouw arsenaal en

957
00:40:09,839 --> 00:40:12,540
als je dan een actie onderneemt, dan kun je dat doen

958
00:40:12,540 --> 00:40:14,280
voorspellen wat er gaat gebeuren in de

959
00:40:14,280 --> 00:40:16,440
volgende tijdstap als een nieuwe waarneming,

960
00:40:16,440 --> 00:40:18,960
dus je hebt een

961
00:40:18,960 --> 00:40:20,760
kansverdeling die je vertelt dat

962
00:40:20,760 --> 00:40:23,460
deze waarneming het meest waarschijnlijk is,

963
00:40:23,460 --> 00:40:25,320
en de andere waarnemingen zijn niet

964
00:40:25,320 --> 00:40:27,839
echt waarschijnlijk. Wat je dan gaat doen,

965
00:40:27,839 --> 00:40:30,359
is doen  dit overweeg je opnieuw de

966
00:40:30,359 --> 00:40:32,220
consequentie van het doen van je acties vanuit

967
00:40:32,220 --> 00:40:34,740
die specifieke observatie en dit

968
00:40:34,740 --> 00:40:37,440
gaat door in je planningsdiepte, dus

969
00:40:37,440 --> 00:40:39,780
dit kan worden gezien als misschien wil je

970
00:40:39,780 --> 00:40:42,480
naar de sportschool, dan ga je

971
00:40:42,480 --> 00:40:44,460
alle gevolgen overwegen, wat

972
00:40:44,460 --> 00:40:46,740
zal gebeuren als ik mijn schoenen draag als ik

973
00:40:46,740 --> 00:40:49,800
mijn schoenen niet draag, uh als ik in mijn auto ga

974
00:40:49,800 --> 00:40:52,140
als ik niet in mijn auto ga, dan besef je

975
00:40:52,140 --> 00:40:54,300
dat oké, ik moet mijn schoenen dragen, dan

976
00:40:54,300 --> 00:40:56,700
overweeg je de consequentie dat

977
00:40:56,700 --> 00:40:59,520
ik'  Ik ben nu klaar om naar de sportschool te gaan en als ik naar

978
00:40:59,520 --> 00:41:01,680
de sportschool ga, zal ik uiteindelijk in

979
00:41:01,680 --> 00:41:03,660
de sportschool zijn, dus dat is het idee, alsof je

980
00:41:03,660 --> 00:41:05,760
de consequenties overweegt van waar je

981
00:41:05,760 --> 00:41:08,760
nu bent en je kunt zoveel gaan als

982
00:41:08,760 --> 00:41:10,740
je wilt, toch kun je voorspellen  dus bij een

983
00:41:10,740 --> 00:41:12,420
schaakspel kun je je in een

984
00:41:12,420 --> 00:41:14,220
bepaalde staat bevinden, je houdt rekening met de

985
00:41:14,220 --> 00:41:16,440
consequenties, je ziet de toekomst, je

986
00:41:16,440 --> 00:41:18,480
overweegt de gevolgen van die toekomst

987
00:41:18,480 --> 00:41:21,660
en je kunt zo diep gaan als je wilt, eh,

988
00:41:21,660 --> 00:41:23,099


989
00:41:23,099 --> 00:41:23,700


990
00:41:23,700 --> 00:41:25,920
afhankelijk van je

991
00:41:25,920 --> 00:41:27,839
computervaardigheden, dus dat is wat je bent

992
00:41:27,839 --> 00:41:31,740
proberen te implementeren in deze agentklasse

993
00:41:31,740 --> 00:41:36,500
waar we de consequenties overwegen,

994
00:41:36,780 --> 00:41:38,880
uh ja,

995
00:41:38,880 --> 00:41:40,200
dus

996
00:41:40,200 --> 00:41:42,240
voor elke modaliteit gaan we

997
00:41:42,240 --> 00:41:44,460
de verwachte vrije energie voor

998
00:41:44,460 --> 00:41:46,859
acties overwegen en

999
00:41:46,859 --> 00:41:49,260
dit zal in feite de volgende

1000
00:41:49,260 --> 00:41:51,420
functie noemen, namelijk voorwaarts zoeken, dus

1001
00:41:51,420 --> 00:41:53,579
voorwaarts zoeken implementeert datgene

1002
00:41:53,579 --> 00:41:55,560
dat ik

1003
00:41:55,560 --> 00:41:58,440
Ik heb zojuist de consequenties genoemd en bij

1004
00:41:58,440 --> 00:42:00,000
voorwaarts zoeken is wat je eigenlijk

1005
00:42:00,000 --> 00:42:04,020
doet voor elke actie, dus in regel 149

1006
00:42:04,020 --> 00:42:06,119
heb ik een lus die over elke actie gaat,

1007
00:42:06,119 --> 00:42:07,140


1008
00:42:07,140 --> 00:42:08,760
dan ga ik de

1009
00:42:08,760 --> 00:42:11,640
achterkant of de gevolgen van al

1010
00:42:11,640 --> 00:42:14,400
die acties overwegen. Ik gebruik mijn

1011
00:42:14,400 --> 00:42:16,619
overgangskansen om die gevolgen te evalueren,

1012
00:42:16,619 --> 00:42:17,880


1013
00:42:17,880 --> 00:42:19,260
dan ga ik de

1014
00:42:19,260 --> 00:42:21,000
waarnemingen voorspellen omdat mijn eerdere

1015
00:42:21,000 --> 00:42:23,520
voorkeuren zijn gedefinieerd in termen van

1016
00:42:23,520 --> 00:42:25,980
waarnemingen. Ik ga mijn

1017
00:42:25,980 --> 00:42:28,260
waarnemingen voorspellen en vervolgens de

1018
00:42:28,260 --> 00:42:29,720
verwachte vrije energie evalueren,

1019
00:42:29,720 --> 00:42:33,960
wat de som is van risico en ambiguïteit,

1020
00:42:33,960 --> 00:42:37,320
oké, ik hoop  dat is logisch, alsof

1021
00:42:37,320 --> 00:42:39,540
je hier hebt nagedacht over de

1022
00:42:39,540 --> 00:42:41,040
consequentie

1023
00:42:41,040 --> 00:42:43,320
die een gevolg is van de toekomst die

1024
00:42:43,320 --> 00:42:45,180
post- of posterieur is

1025
00:42:45,180 --> 00:42:47,280
en je evalueert in feite hoe goed

1026
00:42:47,280 --> 00:42:49,800
dat posterieure is, afhankelijk van je

1027
00:42:49,800 --> 00:42:52,140
verwachte bereik en dat wordt de

1028
00:42:52,140 --> 00:42:53,880
verwachte vrije energie voor dat specifieke

1029
00:42:53,880 --> 00:42:56,160
ongeval en  je doet dit voor alle

1030
00:42:56,160 --> 00:42:57,359
actie,

1031
00:42:57,359 --> 00:43:01,260
oké en waarom dit krachtig is, is dat

1032
00:43:01,260 --> 00:43:03,540
omdat je zo diep kunt gaan als je wilt,

1033
00:43:03,540 --> 00:43:07,020
dus hier in de volgende stap ga je naar deze

1034
00:43:07,020 --> 00:43:07,980
buit

1035
00:43:07,980 --> 00:43:11,819
waar je zult controleren of ik mijn

1036
00:43:11,819 --> 00:43:14,520
diepe planning overschrijd of de diepte van  plannen

1037
00:43:14,520 --> 00:43:16,380
en dan doe je in principe

1038
00:43:16,380 --> 00:43:18,780
hetzelfde, gegeven dat posterior,

1039
00:43:18,780 --> 00:43:20,520
wat is de consequentie van de

1040
00:43:20,520 --> 00:43:22,500
acties van die specifieke posterior, dus

1041
00:43:22,500 --> 00:43:23,339
hier om te

1042
00:43:23,339 --> 00:43:24,900
bedenken dat we

1043
00:43:24,900 --> 00:43:28,020
um opnieuw de ouderfunctie noemen, dus

1044
00:43:28,020 --> 00:43:30,599
zoek dezelfde functie vooruit om de

1045
00:43:30,599 --> 00:43:33,180
gevolgen van die combinaties te overwegen en

1046
00:43:33,180 --> 00:43:34,980
het zal in principe terugkomen en optellen

1047
00:43:34,980 --> 00:43:37,380
bij je verwachte vrije energie, dus wat er

1048
00:43:37,380 --> 00:43:40,140
in deze reeks gebeurt, is dat je

1049
00:43:40,140 --> 00:43:43,319
een aantal of alle toekomstige gevolgen in overweging neemt

1050
00:43:43,319 --> 00:43:46,579
en dan zullen al die waarden door

1051
00:43:46,579 --> 00:43:48,720


1052
00:43:48,720 --> 00:43:51,420
je boom druppelen en je die som van de

1053
00:43:51,420 --> 00:43:53,400
verwachte vrije energie zal je vertellen  welke

1054
00:43:53,400 --> 00:43:55,140
actie is goed of welke actie is slecht,

1055
00:43:55,140 --> 00:43:56,940
waar je

1056
00:43:56,940 --> 00:43:58,980
rekening mee kunt houden om je favoriete observaties te zien,

1057
00:43:58,980 --> 00:44:00,240


1058
00:44:00,240 --> 00:44:02,520
dus dat is het idee van het implementeren van

1059
00:44:02,520 --> 00:44:05,819
onderzoek en ik zal hier ook praten over het

1060
00:44:05,819 --> 00:44:09,180
belang van deze drempel,

1061
00:44:09,180 --> 00:44:11,819
wat is wat dit maakt

1062
00:44:11,819 --> 00:44:13,980
algoritme mogelijk, dus zonder deze

1063
00:44:13,980 --> 00:44:16,140
drempel zal dit algoritme niet

1064
00:44:16,140 --> 00:44:19,200
werken. Ik zal expliciet vertellen waarom

1065
00:44:19,200 --> 00:44:21,960
dat het geval is en als

1066
00:44:21,960 --> 00:44:23,819
je dan, zodra je de verwachte vrije

1067
00:44:23,819 --> 00:44:26,460
energie voor alle beschikbare acties, gegeven

1068
00:44:26,460 --> 00:44:28,800
de huidige staat, hebt geëvalueerd, kun je in principe

1069
00:44:28,800 --> 00:44:30,420
berekenen

1070
00:44:30,420 --> 00:44:32,420
wat je de actieverdeling noemt

1071
00:44:32,420 --> 00:44:36,240
dat is hoe waarschijnlijk is mijn actie of hoe

1072
00:44:36,240 --> 00:44:37,800
ik mijn actie zou moeten ondernemen,

1073
00:44:37,800 --> 00:44:40,740
dus dat is en we hebben ook deze actie

1074
00:44:40,740 --> 00:44:43,560
Precisieparameter Alpha, dus als Alpha

1075
00:44:43,560 --> 00:44:46,740
erg hoog is, dan is het in feite een

1076
00:44:46,740 --> 00:44:48,839
zeer scheve verdeling waarbij je

1077
00:44:48,839 --> 00:44:50,099
altijd de actie kiest die de

1078
00:44:50,099 --> 00:44:52,920
verwachte minimaliseert  vrije energie als Alpha

1079
00:44:52,920 --> 00:44:55,800
echt laag is, dan zal het een

1080
00:44:55,800 --> 00:44:56,700
meer

1081
00:44:56,700 --> 00:44:59,400
schaarse of verspreide distributie zijn en

1082
00:44:59,400 --> 00:45:00,599
dan kun je deze actiedistributie gebruiken

1083
00:45:00,599 --> 00:45:02,339


1084
00:45:02,339 --> 00:45:07,200
om acties te bemonsteren en dus in de Aziatische

1085
00:45:07,200 --> 00:45:09,720
omgeving. Loop we zijn net klaar met het

1086
00:45:09,720 --> 00:45:12,180
plannen en berekenen van die

1087
00:45:12,180 --> 00:45:14,460
actiedistributie  Vervolgens kunt u met behulp van die

1088
00:45:14,460 --> 00:45:16,980
actieverdeling een actie

1089
00:45:16,980 --> 00:45:19,440
uit uw beleidsruimte bemonsteren, dus laten we naar

1090
00:45:19,440 --> 00:45:21,060
de beleidsruimte in dit generatieve

1091
00:45:21,060 --> 00:45:23,040
model kijken,

1092
00:45:23,040 --> 00:45:25,619
dus ik schakel terug naar het oorspronkelijke

1093
00:45:25,619 --> 00:45:27,480
generatieve model met één verborgen statusfactor

1094
00:45:27,480 --> 00:45:28,760


1095
00:45:28,760 --> 00:45:30,660
en

1096
00:45:30,660 --> 00:45:33,720
laten we gaan plannen

1097
00:45:33,720 --> 00:45:35,599
en misschien

1098
00:45:35,599 --> 00:45:38,819
deze agent initialiseren

1099
00:45:38,819 --> 00:45:41,400
Ik wil deze agent gewoon initialiseren om te

1100
00:45:41,400 --> 00:45:44,460
zien dat de beleidsruimte geen waarde heeft,

1101
00:45:44,460 --> 00:45:47,000
dus

1102
00:45:49,800 --> 00:45:52,440
initialiseer ik deze agent, zeg voor de

1103
00:45:52,440 --> 00:45:56,099
planningsdiepte van één en als ik naar

1104
00:45:56,099 --> 00:45:59,300
agent Dot-

1105
00:46:04,079 --> 00:46:05,520
beleid kijk,

1106
00:46:05,520 --> 00:46:07,920
kan ik zeggen dat ik in principe vier

1107
00:46:07,920 --> 00:46:10,800
beschikbare acties heb, wat niet

1108
00:46:10,800 --> 00:46:13,560
Zuidoost is en  West en als ik een

1109
00:46:13,560 --> 00:46:15,780
actieverdeling heb, zal het me vertellen

1110
00:46:15,780 --> 00:46:18,060
hoe waarschijnlijk het is om die actie te ondernemen, dus

1111
00:46:18,060 --> 00:46:19,260
als ik naar

1112
00:46:19,260 --> 00:46:22,040
agent

1113
00:46:23,339 --> 00:46:27,420
naar Pi kijk, dus oké, dus dit is niet gedefinieerd

1114
00:46:27,420 --> 00:46:30,540
omdat ik de planning nog niet heb gedaan, maar ik

1115
00:46:30,540 --> 00:46:32,160
kan wel plannen en dan zal het gebeuren  worden

1116
00:46:32,160 --> 00:46:34,578
gedefinieerd

1117
00:46:38,700 --> 00:46:41,460
ja, dus ik heb planning geïmplementeerd met

1118
00:46:41,460 --> 00:46:43,079
onderzoek en nu heb ik een

1119
00:46:43,079 --> 00:46:45,119
actieverdeling, dus voor dit specifieke

1120
00:46:45,119 --> 00:46:47,339
scenario ga ik mijn derde

1121
00:46:47,339 --> 00:46:48,900
actie het meest uitvoeren,

1122
00:46:48,900 --> 00:46:52,200
wat 0,99 is. Eigenlijk is dat de

1123
00:46:52,200 --> 00:46:54,300
waarschijnlijkheid die

1124
00:46:54,300 --> 00:46:56,099
in dit specifieke geval noord-zuid en oost is.  Ik

1125
00:46:56,099 --> 00:46:58,400
wilde

1126
00:46:58,400 --> 00:47:01,800
je gewoon een beetje vertrouwd maken met de matrices, maar we

1127
00:47:01,800 --> 00:47:03,359
gaan nu

1128
00:47:03,359 --> 00:47:05,760
de agentomgeving zien Loop in actie

1129
00:47:05,760 --> 00:47:07,500
en

1130
00:47:07,500 --> 00:47:09,000
ja, dus

1131
00:47:09,000 --> 00:47:12,359
nu kun je een actie uit de

1132
00:47:12,359 --> 00:47:15,180
voorbeeldactiefunctie samplen en vervolgens het

1133
00:47:15,180 --> 00:47:17,099
leren implementeren dat de

1134
00:47:17,099 --> 00:47:19,560
standaard Pym DP-manier gebruikt  waar ik

1135
00:47:19,560 --> 00:47:21,720
mijn transitiedynamiek zal bijwerken en zoals gelijke

1136
00:47:21,720 --> 00:47:23,880
dynamiek, afhankelijk van wat ik zie en wat

1137
00:47:23,880 --> 00:47:26,099
mijn overtuiging is, enzovoort, dus mijn

1138
00:47:26,099 --> 00:47:31,280
nadruk ligt op het besluitvormingsgedeelte,

1139
00:47:38,220 --> 00:47:40,980
dus als je eenmaal een actie hebt bemonsterd,

1140
00:47:40,980 --> 00:47:43,520
gaat die actie in principe terug naar de

1141
00:47:43,520 --> 00:47:46,940
omgeving, oké dus nu  laten we

1142
00:47:46,940 --> 00:47:49,800
dit implementeren voor een planningsdiepte van

1143
00:47:49,800 --> 00:47:53,099
één en kijken hoe de agent zich gedraagt.

1144
00:47:53,099 --> 00:47:55,920
Als het hier een planningsdiepte van één is,

1145
00:47:55,920 --> 00:47:57,960
betekent dit dat de agent alleen

1146
00:47:57,960 --> 00:47:59,760
de gevolgen in overweging neemt van een eenmalige

1147
00:47:59,760 --> 00:48:01,920
stap vooruit, alleen maar de onmiddellijke

1148
00:48:01,920 --> 00:48:05,040
toekomst zien voor het maken van planning  Oké, dus ik

1149
00:48:05,040 --> 00:48:08,040
geef de planningsdiepte van één,

1150
00:48:08,040 --> 00:48:09,900
ik reset de omgeving waar

1151
00:48:09,900 --> 00:48:11,700
de agent gaat starten vanaf die

1152
00:48:11,700 --> 00:48:14,099
initiële startstatus

1153
00:48:14,099 --> 00:48:16,260


1154
00:48:16,260 --> 00:48:18,900
en in de loop gaat het om

1155
00:48:18,900 --> 00:48:20,960


1156
00:48:22,079 --> 00:48:24,359
die observatie te krijgen,

1157
00:48:24,359 --> 00:48:27,300
die actie te ondernemen, een actie terug te geven en

1158
00:48:27,300 --> 00:48:29,060
we zullen kijken naar de actiekansen

1159
00:48:29,060 --> 00:48:31,920
en we zullen die actie ook teruggeven

1160
00:48:31,920 --> 00:48:33,119
aan de omgeving, de

1161
00:48:33,119 --> 00:48:35,040
observatie terugkrijgen en deze lus gaat door totdat

1162
00:48:35,040 --> 00:48:37,740
de aflevering is beëindigd en ik heb

1163
00:48:37,740 --> 00:48:39,780
de lengte van de aflevering ingesteld op acht, alleen maar om

1164
00:48:39,780 --> 00:48:42,900
de uitkomst van een belasting te zien,

1165
00:48:42,900 --> 00:48:46,920
dus  wanneer we deze lus uitvoeren, zijn deze matrices

1166
00:48:46,920 --> 00:48:48,780
niets anders dan de actieverdelingen

1167
00:48:48,780 --> 00:48:51,900
van Hoe waarschijnlijk het is dat elke actie wordt ondernomen

1168
00:48:51,900 --> 00:48:54,960
en dit is waar de agent in

1169
00:48:54,960 --> 00:48:58,020
de laatste tekst terechtkomt, oké, dus laten we

1170
00:48:58,020 --> 00:49:00,900
dit misschien ook een omgeving of

1171
00:49:00,900 --> 00:49:03,839
render inschakelen die zal laten zien  ons waar de agent zich

1172
00:49:03,839 --> 00:49:06,000
bij elke tijdstap bevindt,

1173
00:49:06,000 --> 00:49:08,880
dus aanvankelijk was de agent op deze

1174
00:49:08,880 --> 00:49:11,400
locatie en we hebben

1175
00:49:11,400 --> 00:49:14,400
hier een actieverdeling hiervan, dus niet

1176
00:49:14,400 --> 00:49:16,440
zuidoost en west, zodat de agent weet dat deze naar het

1177
00:49:16,440 --> 00:49:19,260
noorden moet gaan, waarom, want als ik naar

1178
00:49:19,260 --> 00:49:21,720
de eerdere voorkeur kijk

1179
00:49:21,720 --> 00:49:23,940
Eh deze toestand heeft meer de voorkeur dan

1180
00:49:23,940 --> 00:49:25,800
dit staatsrecht, dus de agent heeft met

1181
00:49:25,800 --> 00:49:27,720
succes de verwachte

1182
00:49:27,720 --> 00:49:30,540
vrije energie berekend en geconcludeerd dat oké, ik

1183
00:49:30,540 --> 00:49:33,480
moet naar deze staat gaan en niet in

1184
00:49:33,480 --> 00:49:35,220
deze staat blijven en omdat het het

1185
00:49:35,220 --> 00:49:36,780
generatieve model van transities

1186
00:49:36,780 --> 00:49:39,060
beschikbaar heeft, kan het concluderen dat ik  zou

1187
00:49:39,060 --> 00:49:41,640
die actie naar het noorden moeten ondernemen om naar de staat te gaan,

1188
00:49:41,640 --> 00:49:42,540


1189
00:49:42,540 --> 00:49:45,540
dus dat is goed en de agent gaat naar het

1190
00:49:45,540 --> 00:49:47,880
noorden en bij deze specifieke staat

1191
00:49:47,880 --> 00:49:49,920
concludeert de agent dat hij naar het noordoosten moet gaan,

1192
00:49:49,920 --> 00:49:52,800
dus hij zal een actie naar het oosten ondernemen,

1193
00:49:52,800 --> 00:49:53,819


1194
00:49:53,819 --> 00:49:56,460
uh en hij zal hier en op gaan  dit

1195
00:49:56,460 --> 00:49:59,520
tijdstip uh ik wil uw aandacht waar

1196
00:49:59,520 --> 00:50:01,200
de actieverdeling even

1197
00:50:01,200 --> 00:50:04,260
waarschijnlijk is voor noord en oost, waarom is dat

1198
00:50:04,260 --> 00:50:06,599
omdat de agent alleen naar de

1199
00:50:06,599 --> 00:50:08,640
onmiddellijke toekomst kijkt, dus laten we teruggaan

1200
00:50:08,640 --> 00:50:09,839
naar de

1201
00:50:09,839 --> 00:50:12,599
eerdere voorkeur waar de agent

1202
00:50:12,599 --> 00:50:15,420
nu hier is

1203
00:50:15,420 --> 00:50:18,240
of  is het hier ja, het is nu hier

1204
00:50:18,240 --> 00:50:20,700
in deze specifieke staat en als de

1205
00:50:20,700 --> 00:50:22,260
agent de onmiddellijke

1206
00:50:22,260 --> 00:50:25,020
gevolgen van slechts één actie overweegt, dan

1207
00:50:25,020 --> 00:50:27,900
zijn deze twee staten even goed om

1208
00:50:27,900 --> 00:50:30,599
in de volgende stap te zijn, dus er is geen

1209
00:50:30,599 --> 00:50:33,240
onderscheid tussen deze twee staten als

1210
00:50:33,240 --> 00:50:34,680
het kijkt alleen naar de onmiddellijke

1211
00:50:34,680 --> 00:50:37,260
toekomst, dus dat betekent dat de verwachte

1212
00:50:37,260 --> 00:50:39,660
vrije energieën zullen concluderen dat ik

1213
00:50:39,660 --> 00:50:41,460
naar het noorden of het oosten moet gaan. Het maakt niet

1214
00:50:41,460 --> 00:50:43,800
uit of ik maar één keer kijk.

1215
00:50:43,800 --> 00:50:47,760
Stap vooruit, oké, dat is het idee

1216
00:50:47,760 --> 00:50:53,040
en niet waarschijnlijk  het gaat hierheen, het

1217
00:50:53,040 --> 00:50:56,640
nam de actie naar het oosten en vanuit deze

1218
00:50:56,640 --> 00:50:57,420


1219
00:50:57,420 --> 00:50:59,220
staat, wanneer het gevolgtrekking doet,

1220
00:50:59,220 --> 00:51:01,740
concludeert het dat deze staat beter is en

1221
00:51:01,740 --> 00:51:03,780
in feite eindigt het in deze

1222
00:51:03,780 --> 00:51:06,960
lokale Maxima-staat,

1223
00:51:06,960 --> 00:51:10,740
wat deze specifieke staat is waar de

1224
00:51:10,740 --> 00:51:12,599
buurstaten minder voorbereid zijn en

1225
00:51:12,599 --> 00:51:14,940
dit is een muur en dat kan, je kunt daar niet heen

1226
00:51:14,940 --> 00:51:16,980
omdat het door de structuur verboden is voor de

1227
00:51:16,980 --> 00:51:19,440
agent, dus het zal daar in principe voor

1228
00:51:19,440 --> 00:51:21,839
altijd blijven zitten waar het alleen

1229
00:51:21,839 --> 00:51:25,619
die lokale Maxima van prioriteit ziet

1230
00:51:25,619 --> 00:51:27,300
en

1231
00:51:27,300 --> 00:51:30,960
laten we eens kijken wat er zou kunnen gebeuren als je een

1232
00:51:30,960 --> 00:51:33,839
hogere planning hebt  diepte dus als ik naar

1233
00:51:33,839 --> 00:51:37,800
de planningsdiepte van drie

1234
00:51:37,800 --> 00:51:39,480
um ga, betekent dit dat

1235
00:51:39,480 --> 00:51:42,240
de agent daadwerkelijk de gouden

1236
00:51:42,240 --> 00:51:45,599
staat bereikt bij de laatste tijdstap, maar nog steeds op

1237
00:51:45,599 --> 00:51:46,980
het derde tijdstip

1238
00:51:46,980 --> 00:51:49,859
had hij

1239
00:51:49,859 --> 00:51:53,520
twee probabilistische acties noch pianist, dus

1240
00:51:53,520 --> 00:51:56,700
hier vanuit deze specifieke staat

1241
00:51:56,700 --> 00:51:59,880
waarschijnlijk heeft het de actie Noord genomen, maar

1242
00:51:59,880 --> 00:52:01,980
het kan niet evengoed de actie Oost ondernemen

1243
00:52:01,980 --> 00:52:04,200
en in dit lokale Maxima eindigen, dus laten we

1244
00:52:04,200 --> 00:52:06,780
opnieuw rennen en waarschijnlijk zal het in

1245
00:52:06,780 --> 00:52:10,260
dit lokale maximum eindigen, oké en

1246
00:52:10,260 --> 00:52:12,300
alleen voor de planningsdiepte van vier,

1247
00:52:12,300 --> 00:52:15,119
wat voldoende is uh  wat

1248
00:52:15,119 --> 00:52:18,900
nodig is voor dit specifieke raster,

1249
00:52:18,900 --> 00:52:21,599
de agent is er op elk tijdstip volledig zeker van wat hij moet doen,

1250
00:52:21,599 --> 00:52:24,540
hij is er volledig zeker

1251
00:52:24,540 --> 00:52:28,140
van wat hij moet doen, uh dat hij naar het noorden moet gaan,

1252
00:52:28,140 --> 00:52:31,559
dan naar het oosten, noord-noordoost-oost en

1253
00:52:31,559 --> 00:52:34,500
zuid, om deze specifieke staat te bereiken  dus

1254
00:52:34,500 --> 00:52:36,119
alleen voor tijdstap

1255
00:52:36,119 --> 00:52:39,300
um of planningsdiepte n gelijk aan 4 kan het met

1256
00:52:39,300 --> 00:52:41,819
succes door dit raster navigeren,

1257
00:52:41,819 --> 00:52:44,599


1258
00:52:44,599 --> 00:52:47,339
dus dat is het idee, dat is

1259
00:52:47,339 --> 00:52:50,160
de implementatie die ik hoop dat

1260
00:52:50,160 --> 00:52:51,059
je hebt,

1261
00:52:51,059 --> 00:52:53,400
dus er is ook dit idee van

1262
00:52:53,400 --> 00:52:55,319
actieprecisie, dus hier is het een hoge

1263
00:52:55,319 --> 00:52:58,319
actieprecisie die is  waarom het de

1264
00:52:58,319 --> 00:53:01,319
acties onderneemt die afkomstig zijn van de waarschijnlijkheid, als

1265
00:53:01,319 --> 00:53:03,180
het een lage actie is. Precisie,

1266
00:53:03,180 --> 00:53:05,460
eh, dan

1267
00:53:05,460 --> 00:53:09,780
zijn de goede acties waarschijnlijker, maar

1268
00:53:09,780 --> 00:53:12,540
dat betekent niet dat het

1269
00:53:12,540 --> 00:53:16,800
hier door geluk zal worden ondernomen, het onderneemt de

1270
00:53:16,800 --> 00:53:19,079
juiste acties en  het bereiken van de staat, maar

1271
00:53:19,079 --> 00:53:21,000
hier zijn de kansen het meest gepasseerd, maar

1272
00:53:21,000 --> 00:53:23,700
je zult ook soort verkenning zien.

1273
00:53:23,700 --> 00:53:27,059
Gedrag Uh in een groter aantal proeven als

1274
00:53:27,059 --> 00:53:29,520
je dit actieproces beheert, dus ik heb

1275
00:53:29,520 --> 00:53:31,859
het op een hoge waarde ingesteld om ervoor te zorgen dat de

1276
00:53:31,859 --> 00:53:33,780
agent het doel bereikt,

1277
00:53:33,780 --> 00:53:36,180
voor dit specifieke  probleem, maar het is de

1278
00:53:36,180 --> 00:53:38,760
moeite waard om te spelen en het is belangrijk,

1279
00:53:38,760 --> 00:53:40,500


1280
00:53:40,500 --> 00:53:42,180
oké,

1281
00:53:42,180 --> 00:53:42,720


1282
00:53:42,720 --> 00:53:45,480
ja, dus voor verschillende plannings-

1283
00:53:45,480 --> 00:53:47,760
um-dieptes zoals één drie en vier in

1284
00:53:47,760 --> 00:53:49,980
dit probleem is dit het gedrag dat

1285
00:53:49,980 --> 00:53:52,740
je verwacht voor lagere planningsdieptes,

1286
00:53:52,740 --> 00:53:54,660
wat niet voldoende is, de agent belandt

1287
00:53:54,660 --> 00:53:58,140
in de lokale Maximus en

1288
00:53:58,140 --> 00:54:00,420
of  lokale minima's van verwachte vrije energie

1289
00:54:00,420 --> 00:54:03,420
of lokale maxima's van gefrituurde blauwdrukken, maar

1290
00:54:03,420 --> 00:54:05,280
met voldoende planning zodat het kan

1291
00:54:05,280 --> 00:54:08,099
navigeren en het doel kan bereiken,

1292
00:54:08,099 --> 00:54:12,180
dus dat brengt ons bij het laatste punt in

1293
00:54:12,180 --> 00:54:14,160
deze tutorial

1294
00:54:14,160 --> 00:54:15,420
waar

1295
00:54:15,420 --> 00:54:19,880
waarom het belangrijk is om een ​​drempel te hebben

1296
00:54:19,880 --> 00:54:22,640
bij

1297
00:54:22,640 --> 00:54:26,400
het evalueren van geavanceerde gevolgtrekkingen, dus

1298
00:54:26,400 --> 00:54:29,339
met drempel bedoelen we dat we

1299
00:54:29,339 --> 00:54:31,859
toekomstige mogelijkheden op twee

1300
00:54:31,859 --> 00:54:34,200
niveaus kunnen negeren. Je kunt in dit onderzoek

1301
00:54:34,200 --> 00:54:36,900
niet waarschijnlijke acties of niet waarschijnlijke

1302
00:54:36,900 --> 00:54:39,300
observaties negeren, maar als je

1303
00:54:39,300 --> 00:54:41,300
de gevolgen

1304
00:54:41,300 --> 00:54:44,220
van alle acties en observaties in ogenschouw neemt,

1305
00:54:44,220 --> 00:54:46,020
betekent dit dat je rekening moet houden met  vier

1306
00:54:46,020 --> 00:54:48,240
gevolgen in de eerste plaats, dan

1307
00:54:48,240 --> 00:54:50,040
zul je vier keer de

1308
00:54:50,040 --> 00:54:52,559
actietoestanden in de volgende tijdstap moeten overwegen

1309
00:54:52,559 --> 00:54:55,140
voor de volgende tijdstap, en dat alles

1310
00:54:55,140 --> 00:54:56,760
vermenigvuldigd met het aantal acties

1311
00:54:56,760 --> 00:54:59,579
en dit onderzoek wordt hardnekkig

1312
00:54:59,579 --> 00:55:02,400
totdat het ontploft en het is zelfs erger dan

1313
00:55:02,400 --> 00:55:04,079
de  Klassiek actief

1314
00:55:04,079 --> 00:55:07,140
inferentiebeleidsruimteprobleem, maar door een

1315
00:55:07,140 --> 00:55:10,260
drempel van zelfs een kleine waarde te definiëren,

1316
00:55:10,260 --> 00:55:12,000
negeren we de mogelijkheden,

1317
00:55:12,000 --> 00:55:15,420
dus waar wordt dat geïmplementeerd

1318
00:55:15,420 --> 00:55:18,540
in de voorwaartse zoektocht en het algoritme,

1319
00:55:18,540 --> 00:55:21,900
we overwegen acties met

1320
00:55:21,900 --> 00:55:23,760
alleen actiekansen die groter zijn dan

1321
00:55:23,760 --> 00:55:26,339
de specifieke drempel hier.  ik

1322
00:55:26,339 --> 00:55:29,280
definieer het als 1 bij 16. uh, ook in het

1323
00:55:29,280 --> 00:55:33,119
bovenliggende document is het 1 bij 16.

1324
00:55:33,119 --> 00:55:36,240
de actiewaarschijnlijkheid

1325
00:55:36,240 --> 00:55:39,839
oké, dus als het 0 is, betekent dit dat

1326
00:55:39,839 --> 00:55:42,180
het alle gevolgen van de toekomst in overweging neemt

1327
00:55:42,180 --> 00:55:46,200
en dat is interactief, zodat je

1328
00:55:46,200 --> 00:55:48,540
acties kunt negeren die  is niet waarschijnlijk

1329
00:55:48,540 --> 00:55:52,440
en negeert ook toestanden die minder

1330
00:55:52,440 --> 00:55:56,040
waarschijnlijk zijn, of beschouwt alleen toestanden met een

1331
00:55:56,040 --> 00:55:57,780
waarschijnlijkheid die groter is dan deze specifieke

1332
00:55:57,780 --> 00:56:00,240
drempelwaarde en die

1333
00:56:00,240 --> 00:56:02,099
de rekencomplexiteit aanzienlijk vermindert,

1334
00:56:02,099 --> 00:56:03,720
waarbij je alleen combinaties in overweging neemt

1335
00:56:03,720 --> 00:56:06,119
die waarschijnlijk in de

1336
00:56:06,119 --> 00:56:09,540
toekomstige uh-boom voorkomen en waarmee je  ga

1337
00:56:09,540 --> 00:56:12,900
dieper in je planning Horizon,

1338
00:56:12,900 --> 00:56:16,020
dat is hier een belangrijk punt en als

1339
00:56:16,020 --> 00:56:17,400
je

1340
00:56:17,400 --> 00:56:18,359


1341
00:56:18,359 --> 00:56:21,619
de tijd vergelijkt die nodig is voor diepere planningen

1342
00:56:21,619 --> 00:56:24,980
voor een zoekdrempel van nul,

1343
00:56:24,980 --> 00:56:28,619
dus een zoekdrempel van 0,0

1344
00:56:28,619 --> 00:56:30,780
betekent dat je alle gevolgen zult overwegen

1345
00:56:30,780 --> 00:56:33,300
en

1346
00:56:33,300 --> 00:56:35,880
hoe dieper  je plant

1347
00:56:35,880 --> 00:56:38,640
hoe meer tijd het kost en als je ziet dat je

1348
00:56:38,640 --> 00:56:42,480
alleen de eerste toekomst of

1349
00:56:42,480 --> 00:56:44,579
de onmiddellijke toekomst moet overwegen, duurt het 0,01

1350
00:56:44,579 --> 00:56:45,900
seconden,

1351
00:56:45,900 --> 00:56:48,720
of als je drie mogelijkheden in

1352
00:56:48,720 --> 00:56:50,880
de toekomst overweegt, duurt het drie seconden en

1353
00:56:50,880 --> 00:56:53,099
voor vier duurt het 300 seconden en

1354
00:56:53,099 --> 00:56:54,960
dat kun je zien  de rekentijd

1355
00:56:54,960 --> 00:56:59,579
groeit exponentieel, maar als je een

1356
00:56:59,579 --> 00:57:02,819
heel kleine zoekdrempel hebt,

1357
00:57:02,819 --> 00:57:08,280
dan heb je die rekentijd die

1358
00:57:08,280 --> 00:57:11,940
logisch is voor implementatie in de

1359
00:57:11,940 --> 00:57:15,420
echte wereld, dus hier voor n gelijk aan

1360
00:57:15,420 --> 00:57:17,880
4 is dat vier tijdstappen in de

1361
00:57:17,880 --> 00:57:20,640
toekomst, het is alleen  het duurt 0,1 seconde en

1362
00:57:20,640 --> 00:57:22,440
dat is oké, ik kan nog steeds

1363
00:57:22,440 --> 00:57:25,440
simulaties doen met deze complexiteit, maar

1364
00:57:25,440 --> 00:57:28,079
ik kan op geen enkele manier praten over hoe dit

1365
00:57:28,079 --> 00:57:29,400
is,

1366
00:57:29,400 --> 00:57:31,020
hoe minder de computationele

1367
00:57:31,020 --> 00:57:34,020
complexiteit waar het echt van afhangt, de

1368
00:57:34,020 --> 00:57:35,700
aard van je eerdere voorkeuren en de

1369
00:57:35,700 --> 00:57:37,980
omgeving in actie, maar deze zoektocht

1370
00:57:37,980 --> 00:57:40,619
drempel werkt eigenlijk in het echte leven

1371
00:57:40,619 --> 00:57:43,140
en we zagen net dat het in onze simulaties

1372
00:57:43,140 --> 00:57:46,559
voor n gelijk aan 4 slechts

1373
00:57:46,559 --> 00:57:50,040
0,3 seconden duurde in onze simulaties, maar als

1374
00:57:50,040 --> 00:57:53,220
je de zoekdrempel instelt op nul

1375
00:57:53,220 --> 00:57:55,559
um, is het al 300 seconden voor het uitvoeren van een

1376
00:57:55,559 --> 00:57:58,880
volledige stapplanning  en als ik de

1377
00:57:58,880 --> 00:58:01,800
planningsdiepte van vijf instel, zal het

1378
00:58:01,800 --> 00:58:04,200
in principe Run Forever zijn, misschien weer. Ik

1379
00:58:04,200 --> 00:58:06,960
zal niet in staat zijn om maatschappijleer te doen,

1380
00:58:06,960 --> 00:58:10,619
dus dat is het idee van de zoekdrempel,

1381
00:58:10,619 --> 00:58:13,440
dus eigenlijk is dat het,

1382
00:58:13,440 --> 00:58:16,260
ik wilde de

1383
00:58:16,260 --> 00:58:18,300
agentklasse,

1384
00:58:18,300 --> 00:58:20,520
de omgevingsklasse en de uitleggen  bepaalde

1385
00:58:20,520 --> 00:58:24,420
demo en ja, misschien is het een goed moment voor

1386
00:58:24,420 --> 00:58:27,180
vragen als iemand aan het luisteren was, uh

1387
00:58:27,180 --> 00:58:29,760
en ik hoop dat mensen

1388
00:58:29,760 --> 00:58:33,359
met deze code gaan spelen

1389
00:58:33,359 --> 00:58:35,819
en naar de tutorial kijken en

1390
00:58:35,819 --> 00:58:38,280
dit implementeren en generatieve

1391
00:58:38,280 --> 00:58:40,260
modellen zoals deze bouwen, dus dit specifieke

1392
00:58:40,260 --> 00:58:41,640
voorbeeld is

1393
00:58:41,640 --> 00:58:43,920
hoe  bouw je een generatief model voor

1394
00:58:43,920 --> 00:58:45,359
deze gridtaak

1395
00:58:45,359 --> 00:58:47,640
en zie je hoe de agent

1396
00:58:47,640 --> 00:58:51,839
betekenisvolle acties kan ondernemen, maar hier hebben we het

1397
00:58:51,839 --> 00:58:54,299
de ware structuur van de omgeving gegeven in

1398
00:58:54,299 --> 00:58:57,000
de B-matrix en een matrix enzovoort, maar

1399
00:58:57,000 --> 00:59:00,299
je kunt ook spelen met

1400
00:59:00,299 --> 00:59:03,480
leren  in de zin dat je bij het

1401
00:59:03,480 --> 00:59:04,740
definiëren van de

1402
00:59:04,740 --> 00:59:09,380
puntstap van de agent een vlag kunt toevoegen

1403
00:59:09,380 --> 00:59:14,420
die zegt dat leren gelijk is aan waar

1404
00:59:14,420 --> 00:59:18,059
en als je begint met een niet-geïnformeerde a b

1405
00:59:18,059 --> 00:59:20,520
enzovoort, kun je experimenteren met hoe de

1406
00:59:20,520 --> 00:59:22,380
agent die omgeving leert. Hier

1407
00:59:22,380 --> 00:59:24,420
kun je kijken naar de  B-matrix In het

1408
00:59:24,420 --> 00:59:26,099
begin kun je na bijvoorbeeld 10 pogingen naar de B-matrix kijken

1409
00:59:26,099 --> 00:59:28,559
en zien hoe het

1410
00:59:28,559 --> 00:59:31,140
leren hier plaatsvindt. Het maakt niet

1411
00:59:31,140 --> 00:59:33,059
uit, omdat de agent de

1412
00:59:33,059 --> 00:59:35,760
structuur kent en hij zal niet veel leren, maar als

1413
00:59:35,760 --> 00:59:37,260
hij begint met een

1414
00:59:37,260 --> 00:59:39,660
onbekende structuur  dan is er

1415
00:59:39,660 --> 00:59:42,180
ook leerruimte die moet worden geïmplementeerd en het is

1416
00:59:42,180 --> 00:59:44,640
al geïmplementeerd omdat

1417
00:59:44,640 --> 00:59:47,700
we de bestaande tijd-DP-

1418
00:59:47,700 --> 00:59:50,520
functionaliteiten gebruiken voor het leren van A en B

1419
00:59:50,520 --> 00:59:51,960
en het maakt al deel uit van de stapfunctie,

1420
00:59:51,960 --> 00:59:52,980


1421
00:59:52,980 --> 00:59:54,780
dus ik hoop dat de

1422
00:59:54,780 --> 00:59:57,000
stapfunctie duidelijk is,

1423
00:59:57,000 --> 00:59:58,500
wat het enige is  je moet

1424
00:59:58,500 --> 00:59:59,819
weten of je

1425
00:59:59,819 --> 01:00:02,040
geavanceerde gevolgtrekkingen probeert te implementeren en alleen de

1426
01:00:02,040 --> 01:00:03,839
namen van deze matrices als je

1427
01:00:03,839 --> 01:00:07,380
ze wilt onderzoeken en ernaar wilt kijken en ja, ik

1428
01:00:07,380 --> 01:00:10,880
hoop dat de sessie nuttig was, dus ik bedank

1429
01:00:10,880 --> 01:00:13,460
mijn medewerkers en

1430
01:00:13,460 --> 01:00:16,140
Corner die 5mdp onderhoudt en ook

1431
01:00:16,140 --> 01:00:18,540
Brandon  die de belangrijkste DP Fellowship beheert

1432
01:00:18,540 --> 01:00:21,720
waar ik deel van uitmaakte en daar heb ik

1433
01:00:21,720 --> 01:00:23,579
gewerkt aan de implementatie van Source ticket

1434
01:00:23,579 --> 01:00:26,599
inference in IMDb en het zal binnenkort deel uitmaken van

1435
01:00:26,599 --> 01:00:30,299
de originele Pi mdp-module en ik

1436
01:00:30,299 --> 01:00:32,760
hoop dat mensen deze module kunnen gaan gebruiken

1437
01:00:32,760 --> 01:00:34,500
om Associated inference-

1438
01:00:34,500 --> 01:00:37,680
experimenten te simuleren en  dit wordt in feite

1439
01:00:37,680 --> 01:00:39,420
zo, misschien is het een goed moment om

1440
01:00:39,420 --> 01:00:41,579
vragen of verduidelijkingen over de code te bespreken,

1441
01:00:41,579 --> 01:00:43,559
of misschien is het een goed moment om een

1442
01:00:43,559 --> 01:00:46,280
pauze te nemen, want ja,

1443
01:00:47,880 --> 01:00:50,640
bedankt, dat was geweldig. Nou,

1444
01:00:50,640 --> 01:00:52,799
ik heb een paar verschillende vragen

1445
01:00:52,799 --> 01:00:55,500
en ik zal er een paar voorlezen

1446
01:00:55,500 --> 01:00:58,380
uit de  livechat, dus ik ga eerst gewoon

1447
01:00:58,380 --> 01:01:00,660
naar de livechat en

1448
01:01:00,660 --> 01:01:02,579
stel die dan en stel dan een paar andere

1449
01:01:02,579 --> 01:01:04,980
vragen, dus Dave vraagt:

1450
01:01:04,980 --> 01:01:06,960
hoe denk je over de neurale

1451
01:01:06,960 --> 01:01:09,839
implementatie van recursie? Hersenen

1452
01:01:09,839 --> 01:01:11,579
lijken

1453
01:01:11,579 --> 01:01:13,559
recursie in computerhardwarestijl niet dieper te implementeren dan  een

1454
01:01:13,559 --> 01:01:15,660
standaarddiepte van één, afgezien van zwaar

1455
01:01:15,660 --> 01:01:18,299
overgeleerde taken, kunnen we

1456
01:01:18,299 --> 01:01:20,220
ons beperken tot vragen over recursie met als

1457
01:01:20,220 --> 01:01:22,619
doel het verkennen van gematigde

1458
01:01:22,619 --> 01:01:24,780
diepe staatsruimten, vooruitkijkend in

1459
01:01:24,780 --> 01:01:27,119
de tijd, dus hoe kunnen we

1460
01:01:27,119 --> 01:01:30,359
dit echt mooie, elegante en

1461
01:01:30,359 --> 01:01:32,579
computationeel efficiënte

1462
01:01:32,579 --> 01:01:36,839
diepgaande onderzoek met elkaar verzoenen  met de biologische

1463
01:01:36,839 --> 01:01:41,099
basis van planning op meerdere schaal,

1464
01:01:41,099 --> 01:01:42,540
ja,

1465
01:01:42,540 --> 01:01:43,260


1466
01:01:43,260 --> 01:01:45,660
dus ik ben geen expert in neurale

1467
01:01:45,660 --> 01:01:48,420
berekeningen, maar het antwoord daarop zou

1468
01:01:48,420 --> 01:01:49,559
zijn:

1469
01:01:49,559 --> 01:01:50,460


1470
01:01:50,460 --> 01:01:52,319
eigenlijk doe je maar één

1471
01:01:52,319 --> 01:01:55,619
wedstrijd tegelijk en je

1472
01:01:55,619 --> 01:01:58,140
hebt of alles wat je nodig hebt is  wat geheugen

1473
01:01:58,140 --> 01:02:01,740
om je overtuigingen op te slaan en die

1474
01:02:01,740 --> 01:02:03,540
overtuigingen te gebruiken om dezelfde

1475
01:02:03,540 --> 01:02:06,059
berekening opnieuw uit te voeren, dus

1476
01:02:06,059 --> 01:02:08,940
we hebben het niet over uh neuraal. Ik

1477
01:02:08,940 --> 01:02:11,160
bedoel deze hardcore recursieve

1478
01:02:11,160 --> 01:02:13,380
implementatie, we doen alleen lokale

1479
01:02:13,380 --> 01:02:15,780
berekeningen tegelijk en alleen vanwege

1480
01:02:15,780 --> 01:02:17,700
de structuur van  het generatieve model

1481
01:02:17,700 --> 01:02:21,660
en wij en omdat we geheugen hebben,

1482
01:02:21,660 --> 01:02:23,819
dit kan worden gedaan en ik

1483
01:02:23,819 --> 01:02:27,599
begrijp niet waarom de hersenen het niet kunnen, ook al

1484
01:02:27,599 --> 01:02:29,520
kunnen individuele neuronen het misschien niet.

1485
01:02:29,520 --> 01:02:32,099
het hoofdbrein heeft geheugen, de

1486
01:02:32,099 --> 01:02:34,319
hersenen hebben  het vermogen om geheugen op te slaan

1487
01:02:34,319 --> 01:02:36,420
en het vermogen om te dromen het vermogen om te

1488
01:02:36,420 --> 01:02:39,240
simuleren uh het kent de gevolgen van

1489
01:02:39,240 --> 01:02:41,819
acties en je doet dit op een dagelijkse basis

1490
01:02:41,819 --> 01:02:43,500
waarbij

1491
01:02:43,500 --> 01:02:46,140
je je toekomst plant en beslist wat je

1492
01:02:46,140 --> 01:02:48,960
goed moet doen, dus op een enkel neuronniveau

1493
01:02:48,960 --> 01:02:50,460
ben ik  Ik weet niet echt zeker

1494
01:02:50,460 --> 01:02:52,559
hoe ik die vraag moet beantwoorden, maar ik

1495
01:02:52,559 --> 01:02:54,359
begrijp niet echt waarom de hersenen het als organisme niet kunnen doen. Oké,

1496
01:02:54,359 --> 01:02:57,859


1497
01:02:58,740 --> 01:03:00,839


1498
01:03:00,839 --> 01:03:03,480
oké met de code. Ik denk dat ik een paar

1499
01:03:03,480 --> 01:03:05,700
vragen heb. Laten we teruggaan naar het

1500
01:03:05,700 --> 01:03:08,058
doolhof

1501
01:03:10,740 --> 01:03:13,020
en van  Natuurlijk, als iemand anders

1502
01:03:13,020 --> 01:03:16,920
vragen heeft in de livechat, ga er dan gewoon voor,

1503
01:03:16,920 --> 01:03:17,640


1504
01:03:17,640 --> 01:03:21,839
dus in het doolhof, hoe hoe werken de uh

1505
01:03:21,839 --> 01:03:24,900
de bewegingen die mogelijk zijn,

1506
01:03:24,900 --> 01:03:28,200
hoe wordt dat weerspiegeld, in welk stadium is het

1507
01:03:28,200 --> 01:03:31,380
bijgewerkt, wat bijvoorbeeld dat het in

1508
01:03:31,380 --> 01:03:33,480
eerste instantie weet dat het kan  alleen naar boven gaan

1509
01:03:33,480 --> 01:03:36,000
en dan kan ik alleen naar rechts of naar beneden gaan,

1510
01:03:36,000 --> 01:03:38,160
waar wordt dat weerspiegeld met het bijwerken

1511
01:03:38,160 --> 01:03:40,680
van wat het in een soort

1512
01:03:40,680 --> 01:03:43,260
relationele aspect van de mogelijkheden is, wat

1513
01:03:43,260 --> 01:03:45,059
zelfs mogelijk is om te doen

1514
01:03:45,059 --> 01:03:47,760
en hoe evalueert het dan in een diepe

1515
01:03:47,760 --> 01:03:49,680
boomzoekopdracht

1516
01:03:49,680 --> 01:03:53,819
wanneer het  moet het weten welke

1517
01:03:53,819 --> 01:03:56,460
dingen wel of niet kunnen gebeuren in de

1518
01:03:56,460 --> 01:03:58,640
toekomst,

1519
01:03:59,819 --> 01:04:01,140
dus als ik de vragen goed begrijp, er

1520
01:04:01,140 --> 01:04:02,339


1521
01:04:02,339 --> 01:04:03,000


1522
01:04:03,000 --> 01:04:05,099
is een import, er is een belangrijk

1523
01:04:05,099 --> 01:04:06,420
onderscheid tussen het generatieve

1524
01:04:06,420 --> 01:04:08,880
proces en het generatieve model,

1525
01:04:08,880 --> 01:04:11,579
dus in de grote wereld, eh,

1526
01:04:11,579 --> 01:04:15,119
die  is het generatieve proces,

1527
01:04:15,119 --> 01:04:17,160
we hebben dat allemaal

1528
01:04:17,160 --> 01:04:19,619
handmatig geïmplementeerd, waar we deze transitie hebben.

1529
01:04:19,619 --> 01:04:21,540
Dynamiek,

1530
01:04:21,540 --> 01:04:22,680
die

1531
01:04:22,680 --> 01:04:25,380
al weet wat er zal gebeuren als je

1532
01:04:25,380 --> 01:04:27,660
een actie onderneemt vanuit een staat, dus het is als

1533
01:04:27,660 --> 01:04:30,599
een omgeving die weet hoe te werken,

1534
01:04:30,599 --> 01:04:32,700
dus het is als een realiteit waar  er

1535
01:04:32,700 --> 01:04:34,380
zijn gevolgen van acties en die zijn

1536
01:04:34,380 --> 01:04:37,619
er al, maar deze informatie is

1537
01:04:37,619 --> 01:04:40,680
beschikbaar voor de agent, om deel uit te maken van

1538
01:04:40,680 --> 01:04:43,440
zijn generatieve model, en in het

1539
01:04:43,440 --> 01:04:45,240
generatieve model gebruikt hij in feite

1540
01:04:45,240 --> 01:04:48,119
die transitiedynamiek die wordt

1541
01:04:48,119 --> 01:04:51,119
gegeven of geleerd om te simuleren wat er zou kunnen

1542
01:04:51,119 --> 01:04:54,299
gebeuren in  de toekomst oké, dus zodra ik

1543
01:04:54,299 --> 01:04:56,460
die overgangsdynamiek heb,

1544
01:04:56,460 --> 01:04:58,200
eh, als ik naar de

1545
01:04:58,200 --> 01:05:00,359
sorry ga

1546
01:05:00,359 --> 01:05:02,700
als ik naar dat onderzoek ga, wat het

1547
01:05:02,700 --> 01:05:05,160
in wezen doet, is het evalueren van het

1548
01:05:05,160 --> 01:05:08,640
posterieure gegeven een bepaalde staat en

1549
01:05:08,640 --> 01:05:11,700
een actie-gen, dus vanuit mijn generatieve

1550
01:05:11,700 --> 01:05:14,520
model weet ik dat als ik  begin vanuit deze

1551
01:05:14,520 --> 01:05:16,799
staat en als ik deze actie onderneem, ga ik naar

1552
01:05:16,799 --> 01:05:19,680
deze postgebieden en overweeg ik alle

1553
01:05:19,680 --> 01:05:22,319
gevolgen en als

1554
01:05:22,319 --> 01:05:24,540
het in het generatieve model onwaarschijnlijk is

1555
01:05:24,540 --> 01:05:27,119
dat als ik naar het oosten ga, ik daar niet heen ga,

1556
01:05:27,119 --> 01:05:29,220
enzovoort, dan is het in feite

1557
01:05:29,220 --> 01:05:31,920
automatisch  weerspiegeld in de verwachte

1558
01:05:31,920 --> 01:05:33,780
vrije energie,

1559
01:05:33,780 --> 01:05:34,319


1560
01:05:34,319 --> 01:05:37,140
dus ik hoop dat dit de vraag beantwoordt, dus

1561
01:05:37,140 --> 01:05:39,980
hier,

1562
01:05:40,020 --> 01:05:42,000
als ik de actie Precisie op hoog zet

1563
01:05:42,000 --> 01:05:42,960


1564
01:05:42,960 --> 01:05:44,400
en

1565
01:05:44,400 --> 01:05:48,000
ook het milieu inschakel,

1566
01:05:48,000 --> 01:05:50,599


1567
01:05:50,960 --> 01:05:53,579
dus in eerste instantie ben ik in deze specifieke

1568
01:05:53,579 --> 01:05:56,700
staat en wij met betrekking tot de

1569
01:05:56,700 --> 01:05:58,559
verwachte vrije energie wat ik  wat ik doe is dat

1570
01:05:58,559 --> 01:06:00,960
ik mijn generatieve model gebruik om te voorspellen

1571
01:06:00,960 --> 01:06:03,599
wat er zal gebeuren als ik vier acties onderneem

1572
01:06:03,599 --> 01:06:06,180
en mijn voorspellingen zullen zeggen dat als ik

1573
01:06:06,180 --> 01:06:08,460
naar het noorden ga, ik hierheen zal gaan en als ik

1574
01:06:08,460 --> 01:06:10,740
alle andere acties onderneem, blijf ik hier en

1575
01:06:10,740 --> 01:06:12,839
omdat in mijn  voorafgaande voorkeur Noord heeft

1576
01:06:12,839 --> 01:06:15,480
meer de voorkeur. Ik kan hieruit concluderen dat ik niet alleen voor

1577
01:06:15,480 --> 01:06:16,680
de

1578
01:06:16,680 --> 01:06:19,619
uh-actie moet gaan, dus dat is het

1579
01:06:19,619 --> 01:06:20,640
idee, dus

1580
01:06:20,640 --> 01:06:22,920
hier wordt de rasterstructuur aan

1581
01:06:22,920 --> 01:06:24,240
de agent gegeven en het kan een beetje

1582
01:06:24,240 --> 01:06:26,039
verwarrend zijn, maar de agent kan ook

1583
01:06:26,039 --> 01:06:27,780
de scriptstructuur leren en  als dit zal

1584
01:06:27,780 --> 01:06:30,059
werken, dus als ik eenmaal de rasterstructuur

1585
01:06:30,059 --> 01:06:32,339
als agent ken, kan ik de toekomst simuleren

1586
01:06:32,339 --> 01:06:34,920
en de gevolgen van actie goed overwegen,

1587
01:06:34,920 --> 01:06:36,000


1588
01:06:36,000 --> 01:06:39,000
dus dat is wat er gebeurt en als ik eenmaal

1589
01:06:39,000 --> 01:06:40,319
in de staat ben, zal ik de

1590
01:06:40,319 --> 01:06:42,780
gevolgen van alle vier de acties overwegen en ik

1591
01:06:42,780 --> 01:06:44,640
zal hieruit afleiden  dat oké, naar het

1592
01:06:44,640 --> 01:06:46,380
oosten gaan is beter, want dat

1593
01:06:46,380 --> 01:06:48,480
zal me in deze staat brengen,

1594
01:06:48,480 --> 01:06:50,460
dus er is altijd een verschil tussen

1595
01:06:50,460 --> 01:06:52,319
of je moet in gedachten houden hoe

1596
01:06:52,319 --> 01:06:54,059
generatief model en generatief proces

1597
01:06:54,059 --> 01:06:55,619
twee verschillende dingen zijn

1598
01:06:55,619 --> 01:06:58,559
en wat de agent weet is misschien niet

1599
01:06:58,559 --> 01:07:00,240
de realiteit of zou kunnen zijn  de realiteit

1600
01:07:00,240 --> 01:07:03,660
hangt af van wat je eraan geeft,

1601
01:07:03,660 --> 01:07:05,579
eh,

1602
01:07:05,579 --> 01:07:08,099
cool, dus

1603
01:07:08,099 --> 01:07:10,740
als je

1604
01:07:10,740 --> 01:07:13,380
een nieuwe

1605
01:07:13,380 --> 01:07:15,059
situatie zou gaan maken waarvoor je generatieve modellering wilde doen, heb

1606
01:07:15,059 --> 01:07:16,920


1607
01:07:16,920 --> 01:07:20,400
je de neiging om te beginnen met een bestaand

1608
01:07:20,400 --> 01:07:23,280
werkend Pi mdp-notebook en te beginnen met

1609
01:07:23,280 --> 01:07:26,220
het aanpassen van statusruimten of teken je?  het

1610
01:07:26,220 --> 01:07:28,380
op een canvas, zoals: hoe zou je

1611
01:07:28,380 --> 01:07:30,000
iemand anders aanbevelen dan het

1612
01:07:30,000 --> 01:07:32,819
repliceren van wat hier wordt getoond? Laten we

1613
01:07:32,819 --> 01:07:34,079
zeggen dat we geïnteresseerd zijn in iets

1614
01:07:34,079 --> 01:07:37,079
dat niet bepaald een doolhof is. Wat moeten

1615
01:07:37,079 --> 01:07:42,660
we doen om erachter te komen

1616
01:07:42,660 --> 01:07:44,880
hoe we verder moeten gaan?

1617
01:07:44,880 --> 01:07:46,140
Ja,

1618
01:07:46,140 --> 01:07:49,260
goede vraag dus  als je

1619
01:07:49,260 --> 01:07:52,859
bijvoorbeeld een nieuwe omgeving probeert te simuleren, moet je

1620
01:07:52,859 --> 01:07:55,680
het zware werk doen, namelijk het

1621
01:07:55,680 --> 01:07:57,720
definiëren van het generatieve model voor de

1622
01:07:57,720 --> 01:07:59,280
agent,

1623
01:07:59,280 --> 01:08:01,260
je kunt ofwel een generatief model met verschillende onderdelen definiëren

1624
01:08:01,260 --> 01:08:02,819
dat de agent kan

1625
01:08:02,819 --> 01:08:05,039
leren, maar je moet de

1626
01:08:05,039 --> 01:08:06,980
structuur definiëren die  structuur zou er moeten zijn

1627
01:08:06,980 --> 01:08:10,140
en alleen door de structuur te gebruiken kan de agent

1628
01:08:10,140 --> 01:08:13,260
het generatieve model leren, dus hier

1629
01:08:13,260 --> 01:08:15,780
kun je deze codecel gebruiken

1630
01:08:15,780 --> 01:08:17,880
om te begrijpen hoe ik de structuur

1631
01:08:17,880 --> 01:08:19,080
van het raster definieer,

1632
01:08:19,080 --> 01:08:21,719
oké, dus ik definieer er een structuur voor

1633
01:08:21,719 --> 01:08:24,060
de agent voor  om er gebruik van te maken,

1634
01:08:24,060 --> 01:08:26,460
zeg ik dat er 25 geldige staten zijn

1635
01:08:26,460 --> 01:08:29,339
en dat er vier beschikbare acties zijn en

1636
01:08:29,339 --> 01:08:31,920
dit is de standaardmanier om de

1637
01:08:31,920 --> 01:08:33,000
toestandsruimte

1638
01:08:33,000 --> 01:08:36,540
in tijd DB te definiëren en je moet ook

1639
01:08:36,540 --> 01:08:40,020
de centrale parameters a b c en d

1640
01:08:40,020 --> 01:08:42,779
voor de agent definiëren  stimulaties, dus hier definieer ik een

1641
01:08:42,779 --> 01:08:43,859


1642
01:08:43,859 --> 01:08:46,380
um met behulp van mijn toestandsruimte en

1643
01:08:46,380 --> 01:08:49,560
observatieruimte, maar deze stap van

1644
01:08:49,560 --> 01:08:52,439
het geven of vertellen dat het een

1645
01:08:52,439 --> 01:08:55,198
identiteitsmatrix is, is mijn beslissingskeuze in

1646
01:08:55,198 --> 01:08:58,259
mijn modellering. Ik hoef dit niet te doen voor

1647
01:08:58,259 --> 01:09:01,620
simulaties. Ik kan zien of  de agent

1648
01:09:01,620 --> 01:09:04,920
leert het van een willekeurige matrix of

1649
01:09:04,920 --> 01:09:06,420
wanneer het begint met een willekeurige beeldmatrix

1650
01:09:06,420 --> 01:09:07,198


1651
01:09:07,198 --> 01:09:10,679
en op dezelfde manier is voor deze B-matrix deze

1652
01:09:10,679 --> 01:09:12,060
structuur

1653
01:09:12,060 --> 01:09:15,540
gedefinieerd en er zijn dergelijke functies

1654
01:09:15,540 --> 01:09:17,040
die je een willekeurige B-matrix kunnen geven,

1655
01:09:17,040 --> 01:09:19,080
maar dit is een modelleringskeuze

1656
01:09:19,080 --> 01:09:21,600
waarbij  als ik het de rasterstructuur wil geven

1657
01:09:21,600 --> 01:09:22,979
of niet,

1658
01:09:22,979 --> 01:09:25,259
kan ik beginnen met een willekeurige B-

1659
01:09:25,259 --> 01:09:27,420
matrix, de agent laten leren en naar

1660
01:09:27,420 --> 01:09:29,759
die geleerde straal kijken, alleen voor het

1661
01:09:29,759 --> 01:09:31,799
doel van de demo. Ik heb het de

1662
01:09:31,799 --> 01:09:33,660
beste structuur gegeven om mogelijk te maken  het is om

1663
01:09:33,660 --> 01:09:36,540
de acties uit te voeren, maar het is niet verplicht,

1664
01:09:36,540 --> 01:09:38,880
dus dit notitieboekje is nuttig in de

1665
01:09:38,880 --> 01:09:40,679
zin dat je weet wat je moet doen, maar

1666
01:09:40,679 --> 01:09:42,299
je moet zeker spelen met

1667
01:09:42,299 --> 01:09:46,198
stappen die misschien niet verplicht zijn, dus

1668
01:09:46,198 --> 01:09:49,140
als ik vooraf een voorkeur geef voor deze

1669
01:09:49,140 --> 01:09:51,299
staat  als het maximum is, dan kun je

1670
01:09:51,299 --> 01:09:53,520
gedrag zien dat de agent zal proberen daarheen te gaan,

1671
01:09:53,520 --> 01:09:55,320


1672
01:09:55,320 --> 01:09:58,860
dus deze eerdere voorkeur wordt gedefinieerd in

1673
01:09:58,860 --> 01:10:00,660
combinatie met het feit dat dit de doeltoestand is,

1674
01:10:00,660 --> 01:10:03,060
maar dit hoeft niet de koude staat te zijn en

1675
01:10:03,060 --> 01:10:05,040
in een andere taak

1676
01:10:05,040 --> 01:10:06,780
betekent voorafgaande voorkeur  verschillend afhankelijk

1677
01:10:06,780 --> 01:10:08,760
van de omgeving,

1678
01:10:08,760 --> 01:10:11,100
dus dat is er ook en je

1679
01:10:11,100 --> 01:10:13,199
eerdere, dus als je eenmaal dat generatieve

1680
01:10:13,199 --> 01:10:15,900
model hebt gedefinieerd dat je moet doen,

1681
01:10:15,900 --> 01:10:18,840
kun je er niet voor weglopen, dan is alles een

1682
01:10:18,840 --> 01:10:21,540
beetje geautomatiseerd. De agent

1683
01:10:21,540 --> 01:10:22,260


1684
01:10:22,260 --> 01:10:26,699
hoeft alleen maar de agent-punt te gebruiken  stap geef

1685
01:10:26,699 --> 01:10:28,860
het de observatie vanuit de omgeving,

1686
01:10:28,860 --> 01:10:31,080
de agent weet hoe hij actie moet ondernemen en

1687
01:10:31,080 --> 01:10:33,600
dan alles wat er binnen de

1688
01:10:33,600 --> 01:10:36,000
agent gebeurt, hoef je je niet echt zorgen te maken, eh

1689
01:10:36,000 --> 01:10:37,500
ja,

1690
01:10:37,500 --> 01:10:39,900
dus deze structuur zal ongetwijfeld

1691
01:10:39,900 --> 01:10:42,420
nuttig zijn voor jouw specifieke taak

1692
01:10:42,420 --> 01:10:47,300
die jij bent  proberen te modelleren in je

1693
01:10:47,460 --> 01:10:49,760
hmm

1694
01:10:51,540 --> 01:10:54,659
ja, heel interessant en hoe zou je

1695
01:10:54,659 --> 01:10:57,900
dat contrasteren of wijzen op

1696
01:10:57,900 --> 01:10:59,580
overeenkomsten of verschillen met hoe

1697
01:10:59,580 --> 01:11:01,560
dit zou worden nagestreefd buiten actieve

1698
01:11:01,560 --> 01:11:03,780
gevolgtrekking, zoals wanneer iemand gewoon een

1699
01:11:03,780 --> 01:11:06,360
ander soort diepgaande

1700
01:11:06,360 --> 01:11:09,360
beleidsagent in het doolhof zou gaan gebruiken  voorbeeld,

1701
01:11:09,360 --> 01:11:11,340
welke delen van het proces zouden bekend zijn

1702
01:11:11,340 --> 01:11:12,600


1703
01:11:12,600 --> 01:11:15,480
en welke delen zouden veel

1704
01:11:15,480 --> 01:11:17,340
werk zijn dat niet werd verwacht, of het

1705
01:11:17,340 --> 01:11:18,780
overslaan van delen die veel werk waren,

1706
01:11:18,780 --> 01:11:20,040
anders ja,

1707
01:11:20,040 --> 01:11:21,780


1708
01:11:21,780 --> 01:11:24,360
dus de algemene structuur is heel

1709
01:11:24,360 --> 01:11:26,640
bekend voor iemand die dingen doet

1710
01:11:26,640 --> 01:11:30,780
zoals dit bij het leren van versterking, dus

1711
01:11:30,780 --> 01:11:33,179
het idee dat het een agent-dot-stap

1712
01:11:33,179 --> 01:11:35,699
en omgeving-dot-stap is, dus dit is de

1713
01:11:35,699 --> 01:11:38,340
standaard open AI Jim-

1714
01:11:38,340 --> 01:11:41,280
manier om een ​​omgeving te schrijven en een

1715
01:11:41,280 --> 01:11:43,800
standaard open AI-manier om een ​​agent te schrijven,

1716
01:11:43,800 --> 01:11:46,380
oké, dus als je een wachtrij hebt leren  uh

1717
01:11:46,380 --> 01:11:48,780
agent die hetzelfde doet terwijl hij probeert te

1718
01:11:48,780 --> 01:11:51,480
navigeren, dan is de manier waarop je

1719
01:11:51,480 --> 01:11:54,600
de Q-matrix moet definiëren het zware werk,

1720
01:11:54,600 --> 01:11:58,320
het is gewoon een staatsactie in kaart brengen en in

1721
01:11:58,320 --> 01:12:00,719
tegenstelling tot dat, moet je bij actieve gevolgtrekking

1722
01:12:00,719 --> 01:12:02,280
een generatief model bedenken

1723
01:12:02,280 --> 01:12:04,440
dat je wilt  om het zo te zien bij actieve

1724
01:12:04,440 --> 01:12:06,360
gevolgtrekking is het generatieve model het

1725
01:12:06,360 --> 01:12:08,520
centrale punt, zonder dat

1726
01:12:08,520 --> 01:12:10,760
er zonder een generatief model geen betekenis is

1727
01:12:10,760 --> 01:12:13,739
van doelgericht gedrag bij actieve

1728
01:12:13,739 --> 01:12:17,460
beïnvloeding, dus het enige onbekende deel

1729
01:12:17,460 --> 01:12:20,159
voor iemand die afkomstig is van, zeg maar, een

1730
01:12:20,159 --> 01:12:21,780
veld als versterkend leren is het

1731
01:12:21,780 --> 01:12:23,760
structuur van het genererende model, maar

1732
01:12:23,760 --> 01:12:25,320
er is geen andere manier dan

1733
01:12:25,320 --> 01:12:29,100
eraan te wennen, waarbij de vorm DP-structuur

1734
01:12:29,100 --> 01:12:31,020
domineert, maar als je diepgaande

1735
01:12:31,020 --> 01:12:33,659
actieve gevolgtrekkingen doet, zullen dit allemaal

1736
01:12:33,659 --> 01:12:36,300
neurale netwerken zijn en palm DPS zijn ook

1737
01:12:36,300 --> 01:12:38,400
niet actief in  drukt de

1738
01:12:38,400 --> 01:12:40,800
dingen goed af, het is een industriële

1739
01:12:40,800 --> 01:12:43,380
techniek, dus pom DPS moet

1740
01:12:43,380 --> 01:12:45,000
ook bekend zijn voor mensen met

1741
01:12:45,000 --> 01:12:46,020
een computerwetenschappelijke

1742
01:12:46,020 --> 01:12:49,739
achtergrond, alleen het idee dat wat er

1743
01:12:49,739 --> 01:12:52,140
werkelijk gebeurt in de agent het

1744
01:12:52,140 --> 01:12:54,179
actieve gevolgtrekkingsgedeelte is waar we

1745
01:12:54,179 --> 01:12:55,980
vrije energie en variatie verwachten

1746
01:12:55,980 --> 01:12:57,960
vrije energieën en als je daarover wilt leren,

1747
01:12:57,960 --> 01:13:00,540
dan moet je naar de

1748
01:13:00,540 --> 01:13:03,060
agenten gaan en zien hoe het werkt, kijk numeriek naar de

1749
01:13:03,060 --> 01:13:04,620
matrices, kijk wat er

1750
01:13:04,620 --> 01:13:07,440
gebeurt, maar ik kom niet op een niveau

1751
01:13:07,440 --> 01:13:09,239
waar je aan de slag wilt. Ik niet

1752
01:13:09,239 --> 01:13:12,120
zie een probleem dit is allemaal

1753
01:13:12,120 --> 01:13:14,179
eh

1754
01:13:15,440 --> 01:13:18,600
en openai gym-omgevingen agent-

1755
01:13:18,600 --> 01:13:21,199
omgeving Loop dit alles wordt zeer

1756
01:13:21,199 --> 01:13:23,219
diep besproken in de computerwetenschappen

1757
01:13:23,219 --> 01:13:26,239
het is niet

1758
01:13:27,300 --> 01:13:30,300
cool

1759
01:13:30,780 --> 01:13:34,219
eh dus wat voor andere um-

1760
01:13:34,219 --> 01:13:37,140
motieven of cognitieve verschijnselen ben je

1761
01:13:37,140 --> 01:13:40,260
enthousiast of hoe zie je het pi mdp-

1762
01:13:40,260 --> 01:13:44,219
ontwikkelingstraject  doorgaan nadat

1763
01:13:44,219 --> 01:13:46,260
je geavanceerde gevolgtrekking is

1764
01:13:46,260 --> 01:13:47,520
binnengehaald,

1765
01:13:47,520 --> 01:13:49,140
ja,

1766
01:13:49,140 --> 01:13:50,040


1767
01:13:50,040 --> 01:13:51,780
dus de Pym DP had de originele

1768
01:13:51,780 --> 01:13:53,960
functionaliteit en

1769
01:13:53,960 --> 01:13:56,280
de functionaliteit om

1770
01:13:56,280 --> 01:13:58,980
algemene actieve gevolgtrekkingsagenten te implementeren of te simuleren

1771
01:13:58,980 --> 01:14:00,960
met de beleidsruimte enzovoort, en dat

1772
01:14:00,960 --> 01:14:03,860
stelde veel mensen in de gemeenschap in staat

1773
01:14:03,860 --> 01:14:08,219
die dat wel zijn  niet wie niet

1774
01:14:08,219 --> 01:14:08,760


1775
01:14:08,760 --> 01:14:10,760
bekend is met

1776
01:14:10,760 --> 01:14:13,500
ingewikkelde codering enzovoort, wie mensen

1777
01:14:13,500 --> 01:14:17,219
die psychologie doen, psychiatrie en alle

1778
01:14:17,219 --> 01:14:19,199
dingen goed, dus iedereen die wil komen

1779
01:14:19,199 --> 01:14:22,560
en het proberen Implementeer actieve inferentie door

1780
01:14:22,560 --> 01:14:26,280
mdp heeft dat mogelijk gemaakt en ik hoop dat

1781
01:14:26,280 --> 01:14:28,500
deze module zal mensen in staat stellen om het

1782
01:14:28,500 --> 01:14:30,620
uit te proberen, dus plak het in de

1783
01:14:30,620 --> 01:14:32,820
experimenten van vrienden in hun specifieke domein,

1784
01:14:32,820 --> 01:14:35,820
dus als je wat tijd doorbrengt en

1785
01:14:35,820 --> 01:14:37,560
jezelf vertrouwd raakt met de structuur

1786
01:14:37,560 --> 01:14:40,800
van hoe Prime DP werkt, dan is al het

1787
01:14:40,800 --> 01:14:43,920
andere gewoon het schrijven van een Jupiter-notitieboekje

1788
01:14:43,920 --> 01:14:46,800
met minimale  codeer goed om dit te simuleren,

1789
01:14:46,800 --> 01:14:49,980
dus als je een bepaalde taak in je

1790
01:14:49,980 --> 01:14:53,100
domein hebt, zie ik geen probleem voor een

1791
01:14:53,100 --> 01:14:55,920
beginner om het te proberen en te coderen en

1792
01:14:55,920 --> 01:14:58,199
wat ik erg enthousiast vind om te zien is dat mensen

1793
01:14:58,199 --> 01:15:01,080
deze module gebruiken voor verschillende

1794
01:15:01,080 --> 01:15:03,480
experimenten  net zoals hoe mensen

1795
01:15:03,480 --> 01:15:05,699
pi mdp begonnen te gebruiken en hoe geavanceerde

1796
01:15:05,699 --> 01:15:08,659
gevolgtrekkingen een vlucht namen en er nu

1797
01:15:08,659 --> 01:15:12,840
veel over gesproken wordt over hoe het

1798
01:15:12,840 --> 01:15:15,719
de manier is om actieve gevolgtrekkingen uit te voeren

1799
01:15:15,719 --> 01:15:17,820
en ik hoop echt dat

1800
01:15:17,820 --> 01:15:20,340
mensen in verschillende domeinen

1801
01:15:20,340 --> 01:15:22,320
deze module gaan gebruiken en hun  experimenten

1802
01:15:22,320 --> 01:15:24,480
en ik kijk uit naar de voeding,

1803
01:15:24,480 --> 01:15:27,540
ja dus wat IMDb twee jaar geleden deed, ik

1804
01:15:27,540 --> 01:15:29,460
hoop dat deze module zal doen voor mensen die

1805
01:15:29,460 --> 01:15:32,580
actieve input in de soepstatus proberen te modelleren,

1806
01:15:32,580 --> 01:15:34,940


1807
01:15:34,980 --> 01:15:39,179
dus je noemde de open AI-sportschool en het

1808
01:15:39,179 --> 01:15:41,520
gestandaardiseerde formaat en en  welke

1809
01:15:41,520 --> 01:15:45,420
benchmarks gebruik je of wat ben je,

1810
01:15:45,420 --> 01:15:47,640
wat voor soort testsuites ben je aan

1811
01:15:47,640 --> 01:15:49,140
het vergelijken

1812
01:15:49,140 --> 01:15:51,900
en hoe weten we echt wanneer we

1813
01:15:51,900 --> 01:15:54,960
een generatief model hebben gemaakt dat

1814
01:15:54,960 --> 01:15:58,739
echt overtreft of uitblinkt op een manier die

1815
01:15:58,739 --> 01:16:00,239
andere

1816
01:16:00,239 --> 01:16:03,540
um-technieken gewoon niet doen,

1817
01:16:03,540 --> 01:16:05,880
ja, dus als  Ik

1818
01:16:05,880 --> 01:16:10,140
kan naar de open AI-sportschoolwebsite gaan,

1819
01:16:10,140 --> 01:16:12,179
we hebben daar verschillende experimenten, de

1820
01:16:12,179 --> 01:16:13,739
klassieke leervoorbeelden voor terugbetaling,

1821
01:16:13,739 --> 01:16:15,120


1822
01:16:15,120 --> 01:16:16,980
zoals de maanlander die je

1823
01:16:16,980 --> 01:16:19,679
nu op dit scherm ziet, dus actieve

1824
01:16:19,679 --> 01:16:22,320
gevolgtrekking maakt dit mogelijk. Inception heeft

1825
01:16:22,320 --> 01:16:24,960
problemen ondervonden bij het opschalen

1826
01:16:24,960 --> 01:16:27,600
van taken en dat heeft  dat is op

1827
01:16:27,600 --> 01:16:29,340
zichzelf een onderzoeksgebied op het gebied van actieve

1828
01:16:29,340 --> 01:16:30,360
inferentie, het

1829
01:16:30,360 --> 01:16:32,040
schalen van actieve input en dat is een

1830
01:16:32,040 --> 01:16:34,260
van de redenen waarom diepe actieve inferentie het

1831
01:16:34,260 --> 01:16:35,820
overnam van

1832
01:16:35,820 --> 01:16:38,100
het omgaan met dit soort taken, dus er

1833
01:16:38,100 --> 01:16:39,659
zijn

1834
01:16:39,659 --> 01:16:42,239
zelfs nu benchmarks waar de geavanceerde

1835
01:16:42,239 --> 01:16:43,920
inferentie misschien niet mee om kan gaan

1836
01:16:43,920 --> 01:16:46,020
Staatsruimten en persoonlijk is dat mijn

1837
01:16:46,020 --> 01:16:48,480
onderzoek in mijn PhD. Ik kijk eigenlijk

1838
01:16:48,480 --> 01:16:49,860


1839
01:16:49,860 --> 01:16:52,620
naar optimaal optimaliserende berekeningen in

1840
01:16:52,620 --> 01:16:54,600
geavanceerde inferentie-

1841
01:16:54,600 --> 01:16:57,239
algoritmen waarmee je twee van dergelijke

1842
01:16:57,239 --> 01:16:59,699
omgevingen kunt opschalen, maar om te

1843
01:16:59,699 --> 01:17:02,280
beginnen zul je een soort code moeten schrijven

1844
01:17:02,280 --> 01:17:04,199
en kijken of het werkt  voor een

1845
01:17:04,199 --> 01:17:07,679
omgeving kijk dan of het niet

1846
01:17:07,679 --> 01:17:09,659
werkt, dan moet je naar methodewoorden kijken om

1847
01:17:09,659 --> 01:17:12,659
het op te schalen enzovoort, dus

1848
01:17:12,659 --> 01:17:14,699
als ik het heb over

1849
01:17:14,699 --> 01:17:16,860
geavanceerde benchmarks en Princess zo goed als

1850
01:17:16,860 --> 01:17:19,080
alle RL-algoritmen,

1851
01:17:19,080 --> 01:17:21,840
eh voor deze toestandsruimte, dus voor kleine

1852
01:17:21,840 --> 01:17:23,460
problemen, dus welke Gate-ingang zal

1853
01:17:23,460 --> 01:17:26,580
werken en het is echt goed, maar voor

1854
01:17:26,580 --> 01:17:29,100
hoogdimensionale problemen zoals deze,

1855
01:17:29,100 --> 01:17:31,020
de klassieke implementatie die ik

1856
01:17:31,020 --> 01:17:33,239
zojuist heb laten zien, werkt misschien niet, maar het is goed

1857
01:17:33,239 --> 01:17:36,120
genoeg voor elk fatsoenlijk experiment, maar als

1858
01:17:36,120 --> 01:17:38,040
je wilt opschalen, dan is dat nog steeds

1859
01:17:38,040 --> 01:17:40,199
open en dat is het ook  een nieuw onderzoeksgebied

1860
01:17:40,199 --> 01:17:43,040
en wat je doet zou een volgend nieuw

1861
01:17:43,040 --> 01:17:46,020
belangrijk artikel kunnen worden, dus dat is alles wat ik

1862
01:17:46,020 --> 01:17:49,520
in dat opzicht kan zeggen, naar

1863
01:17:49,940 --> 01:17:52,260
welke maatregelen denk je dat je zou

1864
01:17:52,260 --> 01:17:53,580
zoeken,

1865
01:17:53,580 --> 01:17:54,840
zoals

1866
01:17:54,840 --> 01:17:57,960
computerbronnen, of wat

1867
01:17:57,960 --> 01:18:00,000
zijn de maatregelen die er zelfs toe leiden  Het is logisch om

1868
01:18:00,000 --> 01:18:04,020
zulke verschillende methoden naast elkaar te plaatsen,

1869
01:18:04,020 --> 01:18:09,120
ja, dus de open AI-sportschool is daarvoor ontworpen

1870
01:18:09,120 --> 01:18:12,600
om verschillende uh-algoritmen te vergelijken,

1871
01:18:12,600 --> 01:18:15,900
dus open stel je voor dat het per definitie een

1872
01:18:15,900 --> 01:18:18,179
verzameling van vele omgevingen is, dus in mijn

1873
01:18:18,179 --> 01:18:19,620
demo had ik het over de grid-

1874
01:18:19,620 --> 01:18:22,440
omgeving. Open iigm is niets anders dan een

1875
01:18:22,440 --> 01:18:24,719
verzameling van vele omgevingen waarmee

1876
01:18:24,719 --> 01:18:26,460
je met die omgevingen kunt communiceren

1877
01:18:26,460 --> 01:18:29,360
met behulp van de

1878
01:18:29,360 --> 01:18:31,980
omgeving.stap-functie

1879
01:18:31,980 --> 01:18:32,699
eh

1880
01:18:32,699 --> 01:18:34,500
ja, dus hier hebben we de

1881
01:18:34,500 --> 01:18:36,719
omgeving.stap-functie waarmee

1882
01:18:36,719 --> 01:18:39,060
je kunt communiceren met de maanlander en

1883
01:18:39,060 --> 01:18:42,120
die specifieke taak zal matrixen hebben

1884
01:18:42,120 --> 01:18:44,040
waarmee je kunt

1885
01:18:44,040 --> 01:18:46,500
oordelen  hoe goed of slecht je algoritme

1886
01:18:46,500 --> 01:18:50,100
is, dus in dit maanlanderprobleem, hoe

1887
01:18:50,100 --> 01:18:52,080
optimaal kun je je Rover

1888
01:18:52,080 --> 01:18:54,659
tussen deze twee vlaggen laten landen door

1889
01:18:54,659 --> 01:18:57,900
de brandstof te minimaliseren, enzovoort, dus die

1890
01:18:57,900 --> 01:19:01,920
matrices zijn zeer taakspecifiek en

1891
01:19:01,920 --> 01:19:03,780
dat is één richting die je moet nemen die

1892
01:19:03,780 --> 01:19:07,679
je kunt nemen  uh probeer te concurreren met RL-

1893
01:19:07,679 --> 01:19:10,739
algoritmen in matrices, maar

1894
01:19:10,739 --> 01:19:12,960
het juiste potentieel of de potentiële

1895
01:19:12,960 --> 01:19:16,080
IC in geavanceerde gevolgtrekkingen die

1896
01:19:16,080 --> 01:19:19,020
intelligent gedrag modelleren, waarbij in RL de

1897
01:19:19,020 --> 01:19:21,300
nadruk ligt op het gedaan krijgen van dingen om dit te laten

1898
01:19:21,300 --> 01:19:23,340
werken, maar het is niet echt verklaarbaar,

1899
01:19:23,340 --> 01:19:25,679
vooral D parallel en diep leren

1900
01:19:25,679 --> 01:19:27,719
methoden, maar in actieve gevolgtrekking, als het je

1901
01:19:27,719 --> 01:19:29,159
lukt om het op te schalen, zijn ze

1902
01:19:29,159 --> 01:19:31,620
verklaarbaar en en ze

1903
01:19:31,620 --> 01:19:33,719
zullen je laten begrijpen hoe

1904
01:19:33,719 --> 01:19:36,540
intelligent in de loop van de tijd naar voren komt en ik

1905
01:19:36,540 --> 01:19:39,300
zie dat interessanter dan

1906
01:19:39,300 --> 01:19:41,340
concurreren met RL, want als je

1907
01:19:41,340 --> 01:19:44,219
focus ligt op het voor elkaar krijgen van dingen dan  misschien

1908
01:19:44,219 --> 01:19:46,320
is techniek de juiste manier en geen

1909
01:19:46,320 --> 01:19:49,460
actieve verzekering,

1910
01:19:50,699 --> 01:19:55,219
nog andere opmerkingen of gedachten

1911
01:20:02,159 --> 01:20:04,199
Osman, heb je nog andere opmerkingen of

1912
01:20:04,199 --> 01:20:05,340
gedachten,

1913
01:20:05,340 --> 01:20:09,300
nee, ik ben best blij, ik hoop dat ik

1914
01:20:09,300 --> 01:20:10,980
duidelijk was bij het uitleggen van de code, misschien was het

1915
01:20:10,980 --> 01:20:13,020
te ingewikkeld of eenvoudig, afhankelijk van

1916
01:20:13,020 --> 01:20:14,400
jouw niveau,

1917
01:20:14,400 --> 01:20:16,380
maar ik hoop dat het nuttig is voor ten minste

1918
01:20:16,380 --> 01:20:19,080
één persoon die dit zou gaan gebruiken

1919
01:20:19,080 --> 01:20:21,179
en de code zou schrijven en dus heel

1920
01:20:21,179 --> 01:20:23,520
erg bedankt voor je tijd geweldig bedankt voor

1921
01:20:23,520 --> 01:20:25,440
de kans

1922
01:20:25,440 --> 01:20:28,080
bedankt voor het meedoen tot de volgende keer tot de volgende keer

1923
01:20:28,080 --> 01:20:29,159


1924
01:20:29,159 --> 01:20:32,780
bedankt  tot ziens,

1925
01:20:37,860 --> 01:20:40,639
goede

1926
01:20:45,060 --> 01:20:48,320
groeten aan Korea,

1927
01:20:48,780 --> 01:20:52,219
tot de volgende keer

