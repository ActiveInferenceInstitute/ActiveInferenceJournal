1
00:00:01,289 --> 00:00:04,022
Daniel: All right, next up is going to be

2
00:00:04,022 --> 00:00:06,489
Keith Duggar, who has submitted a pre

3
00:00:06,489 --> 00:00:07,623
recorded video.

4
00:00:07,773 --> 00:00:10,122
The pre recorded video is called active

5
00:00:10,122 --> 00:00:10,191
inference.

6
00:00:10,197 --> 00:00:14,562
And the actor model So I will bring that

7
00:00:14,562 --> 00:00:15,690
up right now.

8
00:00:29,040 --> 00:00:33,402
Okay, here comes Keith's pre recorded

9
00:00:33,402 --> 00:00:36,784
video on active inference and the Actor

10
00:00:36,784 --> 00:00:37,862
model.

11
00:00:44,519 --> 00:00:46,747
Keith: Active inference and the actor

12
00:00:46,747 --> 00:00:46,791
model.

13
00:00:47,809 --> 00:00:47,853
Hello.

14
00:00:47,860 --> 00:00:48,902
Hello.

15
00:00:48,913 --> 00:00:48,968
I'm Dr. Keith

16
00:00:48,973 --> 00:00:52,298
Duggar, platform CTO at X Ray, an

17
00:00:52,298 --> 00:00:54,495
extended reality AI

18
00:00:54,502 --> 00:00:57,816
Company, and co host of Machine Learning

19
00:00:57,816 --> 00:00:58,982
Street Talk podcast.

20
00:00:59,072 --> 00:01:03,809
Now, as we all work to build an ecosystem

21
00:01:03,809 --> 00:01:06,132
based on active inference, software will

22
00:01:06,132 --> 00:01:09,431
obviously play a foundational role to

23
00:01:09,431 --> 00:01:12,730
make the most of active inference.

24
00:01:12,738 --> 00:01:14,976
We'll need to use software engineering

25
00:01:14,976 --> 00:01:17,227
paradigms that align with the principles

26
00:01:17,227 --> 00:01:19,484
of active inference, and I think there is

27
00:01:19,484 --> 00:01:21,690
one tailor made for our needs.

28
00:01:22,707 --> 00:01:23,874
It's called the actor model.

29
00:01:25,007 --> 00:01:27,258
Active Inference and the Actor Model are

30
00:01:27,258 --> 00:01:29,496
two deeply connected understandings of

31
00:01:29,496 --> 00:01:30,572
the world.

32
00:01:31,624 --> 00:01:34,933
They provide foundational frameworks for

33
00:01:34,933 --> 00:01:37,210
dealing with the dynamics of complex

34
00:01:37,210 --> 00:01:39,480
systems, with a focus on autonomous

35
00:01:39,480 --> 00:01:42,765
agents that interact in an ecology of

36
00:01:42,765 --> 00:01:44,911
nested systems.

37
00:01:45,001 --> 00:01:48,033
I'd like to explore some of their key

38
00:01:48,033 --> 00:01:51,068
connections, including the role of agents

39
00:01:51,068 --> 00:01:55,102
concurrency, autonomy, uncertainty, and

40
00:01:55,102 --> 00:01:57,122
behavior adaptation.

41
00:01:58,136 --> 00:02:02,113
We will see that active inference and the

42
00:02:02,113 --> 00:02:05,145
Active model are both paradigm shifts

43
00:02:05,145 --> 00:02:09,180
away from a deterministic, centralized,

44
00:02:09,180 --> 00:02:12,215
step by step thinking to a decentralized

45
00:02:12,215 --> 00:02:15,249
network concurrent perspective of both

46
00:02:15,249 --> 00:02:18,276
computation and cognition.

47
00:02:19,289 --> 00:02:21,307
Just a little bit of history about the

48
00:02:21,307 --> 00:02:22,314
Actor model.

49
00:02:22,319 --> 00:02:26,355
Back in 1973, Karl Hewitt, Peter Bishop,

50
00:02:26,355 --> 00:02:30,390
and Richard Steiger were all working at

51
00:02:30,390 --> 00:02:33,427
the Massachusetts Institute of Technology

52
00:02:33,427 --> 00:02:37,462
AI lab to Fundamentalize, a concept of

53
00:02:37,462 --> 00:02:40,499
concurrent computation that included both

54
00:02:40,499 --> 00:02:44,535
structure as well as adaptable algorithm

55
00:02:44,535 --> 00:02:46,549
execution.

56
00:02:47,564 --> 00:02:50,589
Conventional methods at the time lacked

57
00:02:50,589 --> 00:02:52,611
robustness and secure mathematical

58
00:02:52,611 --> 00:02:53,620
foundations.

59
00:02:53,629 --> 00:02:56,653
Their collaborative effort ultimately led

60
00:02:56,653 --> 00:02:58,674
to the creation of the Actor model.

61
00:02:59,681 --> 00:03:01,643
At the time, it was viewed as

62
00:03:01,643 --> 00:03:04,672
revolutionary due to its characteristics

63
00:03:04,672 --> 00:03:06,699
of both increased error tolerance and

64
00:03:06,699 --> 00:03:09,726
distributed computation abilities.

65
00:03:10,733 --> 00:03:13,762
Throughout the 1980s and the 1990s, the

66
00:03:13,762 --> 00:03:16,791
Actor model became a basis for numerous

67
00:03:16,791 --> 00:03:18,819
research projects as well as practical

68
00:03:18,819 --> 00:03:21,846
projects, gaining popularity for its

69
00:03:21,846 --> 00:03:24,873
flexibility and intuitive approach to

70
00:03:24,873 --> 00:03:26,894
concurrent computation.

71
00:03:28,909 --> 00:03:30,934
It was primarily used in artificial

72
00:03:30,934 --> 00:03:33,960
intelligence and multi agent systems.

73
00:03:33,961 --> 00:03:34,973
Sound familiar?

74
00:03:35,988 --> 00:03:38,015
New Actor based languages like Actor,

75
00:03:38,015 --> 00:03:41,041
Saulson and Erlang contributed to the

76
00:03:41,041 --> 00:03:44,070
refinement of the model, shaping it into

77
00:03:44,070 --> 00:03:46,098
a more robust and flexible approach to

78
00:03:46,098 --> 00:03:49,124
concurrent computing, and it remains

79
00:03:49,124 --> 00:03:52,153
alive and well in computer science today.

80
00:03:52,153 --> 00:03:52,157
.

81
00:03:53,165 --> 00:03:56,194
More recently, the Actor model has gained

82
00:03:56,194 --> 00:03:58,219
renewed interest, mainly due to the

83
00:03:58,219 --> 00:04:01,185
growing need for distributed systems,

84
00:04:01,185 --> 00:04:04,210
cloud computing and edge computing,

85
00:04:04,210 --> 00:04:07,240
fueling the Internet of Things and Web 30.

86
00:04:07,240 --> 00:04:07,243
.

87
00:04:08,254 --> 00:04:11,284
These computer tasks are ideally suited

88
00:04:11,284 --> 00:04:14,312
to take advantage of the ACA model's

89
00:04:14,312 --> 00:04:17,342
architecture, which is designed exactly

90
00:04:17,342 --> 00:04:20,373
for modeling concurrent handling of both

91
00:04:20,373 --> 00:04:23,403
large volumes of data on the one hand,

92
00:04:23,403 --> 00:04:26,432
and fine grained disparate autonomous

93
00:04:26,432 --> 00:04:28,456
systems on the other hand.

94
00:04:29,466 --> 00:04:32,495
This application of the Actor model has

95
00:04:32,495 --> 00:04:35,525
had profound effects on major companies

96
00:04:35,525 --> 00:04:38,552
that have utilized its principles to

97
00:04:38,552 --> 00:04:41,583
handle big data problems such as Twitter,

98
00:04:41,583 --> 00:04:44,611
Facebook, LinkedIn, so what does this

99
00:04:44,611 --> 00:04:47,640
have to do with active inference?

100
00:04:47,642 --> 00:04:49,663
I'm guessing you've already heard some of

101
00:04:49,663 --> 00:04:50,678
the parallels in the intro.

102
00:04:51,680 --> 00:04:53,706
But let's start by looking at a few core

103
00:04:53,706 --> 00:04:56,729
principles of the actor model and how

104
00:04:56,729 --> 00:04:58,755
they relate to the principles of active

105
00:04:58,755 --> 00:04:59,763
inference.

106
00:05:00,710 --> 00:05:02,734
Let's start with the concept of isolation.

107
00:05:02,734 --> 00:05:02,734
.

108
00:05:03,745 --> 00:05:06,774
Isolation means that an actor in the

109
00:05:06,774 --> 00:05:09,808
actor model does not share its state with

110
00:05:09,808 --> 00:05:11,822
any other actor.

111
00:05:12,830 --> 00:05:14,859
It can only be affected by receiving a

112
00:05:14,859 --> 00:05:15,866
message.

113
00:05:16,870 --> 00:05:18,896
And it can only affect change in the

114
00:05:18,896 --> 00:05:21,926
state of other actors by sending a finite

115
00:05:21,926 --> 00:05:24,950
number of messages in response.

116
00:05:24,958 --> 00:05:27,989
From a software engineering point of view,

117
00:05:27,989 --> 00:05:30,013
, this isolation principle limits

118
00:05:30,013 --> 00:05:33,043
potential side effects of an operation to

119
00:05:33,043 --> 00:05:36,075
a single actor, thus improving the system'

120
00:05:36,075 --> 00:05:39,103
's overall predictability reliability,

121
00:05:39,103 --> 00:05:42,132
and most importantly, if embraced fully,

122
00:05:42,132 --> 00:05:44,158
can actually simplify the design.

123
00:05:46,175 --> 00:05:48,199
Looking at the diagram, we see an

124
00:05:48,199 --> 00:05:51,228
ecosystem of actors sending messages to a

125
00:05:51,228 --> 00:05:54,255
particular actor, which in turn sends

126
00:05:54,255 --> 00:05:57,279
back messages to other actors.

127
00:05:58,292 --> 00:05:59,308
Where is active inference?

128
00:06:00,250 --> 00:06:04,293
Well, let's recast receiving and sending

129
00:06:04,293 --> 00:06:08,337
messages to a perception action cycle and

130
00:06:08,337 --> 00:06:12,377
denote external, internal, sensory and

131
00:06:12,377 --> 00:06:14,396
active states.

132
00:06:15,404 --> 00:06:18,435
And we now clearly have the necessary

133
00:06:18,435 --> 00:06:21,467
foundation of active inference a Markov

134
00:06:21,467 --> 00:06:22,475
blanket.

135
00:06:23,486 --> 00:06:26,512
The actors of the actor model map

136
00:06:26,512 --> 00:06:28,536
directly to the agents of active

137
00:06:28,536 --> 00:06:29,546
inference.

138
00:06:30,554 --> 00:06:33,582
In addition, the finiteness, the fact

139
00:06:33,582 --> 00:06:35,608
that an actor can only send a finite

140
00:06:35,608 --> 00:06:38,639
number of messages in response is also an

141
00:06:38,639 --> 00:06:41,661
important shared property.

142
00:06:41,668 --> 00:06:44,698
Because active inference models reality,

143
00:06:44,698 --> 00:06:47,725
it necessarily respects the resource

144
00:06:47,725 --> 00:06:49,748
constraints of real systems.

145
00:06:49,749 --> 00:06:52,772
And this is nicely bathed into the

146
00:06:52,772 --> 00:06:54,793
foundation of the active model.

147
00:06:55,802 --> 00:06:57,827
Let's look at another core principle

148
00:06:57,827 --> 00:06:59,848
asynchronous message passing.

149
00:07:00,798 --> 00:07:03,820
Communication between actors is

150
00:07:03,820 --> 00:07:04,830
asynchronous.

151
00:07:04,834 --> 00:07:06,858
This means an actor doesn't wait for a

152
00:07:06,858 --> 00:07:09,880
response after sending a message.

153
00:07:09,882 --> 00:07:12,913
It continues working, it continues living,

154
00:07:12,913 --> 00:07:13,921
, as it were.

155
00:07:13,928 --> 00:07:16,957
This is critical as it decouples the

156
00:07:16,957 --> 00:07:19,986
actors, leading to a system that can

157
00:07:19,986 --> 00:07:22,018
continue functioning, living and making

158
00:07:22,018 --> 00:07:25,049
progress even when parts of the system

159
00:07:25,049 --> 00:07:29,083
are slow or even temporarily unavailable.

160
00:07:29,083 --> 00:07:29,086
.

161
00:07:30,097 --> 00:07:34,130
Professor Friston has said that the free

162
00:07:34,130 --> 00:07:36,156
energy principle is the ultimate

163
00:07:36,156 --> 00:07:39,187
existential question if things exist,

164
00:07:39,187 --> 00:07:41,204
what must they do?

165
00:07:42,216 --> 00:07:45,246
Well, the actor model claims they must

166
00:07:45,246 --> 00:07:47,263
not wait on others.

167
00:07:48,273 --> 00:07:52,311
Of course, an actor can choose to wait on

168
00:07:52,311 --> 00:07:55,347
others, but it must not be forced to do

169
00:07:55,347 --> 00:07:57,364
so in the model.

170
00:07:57,365 --> 00:07:59,387
It must be free to choose.

171
00:08:01,348 --> 00:08:04,373
This leads us to another critical

172
00:08:04,373 --> 00:08:07,405
principle that both models share autonomy.

173
00:08:07,405 --> 00:08:07,406
.

174
00:08:08,418 --> 00:08:11,449
The free energy principle is a model of

175
00:08:11,449 --> 00:08:14,477
physical reality and our reality is,

176
00:08:14,477 --> 00:08:16,496
after all, concurrent.

177
00:08:17,503 --> 00:08:20,532
All throughout infinite space, systems

178
00:08:20,532 --> 00:08:23,563
are evolving simultaneously according to

179
00:08:23,563 --> 00:08:25,581
their local dynamics.

180
00:08:25,583 --> 00:08:28,610
And therefore this is reflected at the

181
00:08:28,610 --> 00:08:30,635
heart of the free energy principle.

182
00:08:30,639 --> 00:08:33,669
Of course, a model of computation need

183
00:08:33,669 --> 00:08:36,695
not constrain itself to physics.

184
00:08:36,696 --> 00:08:38,710
But Hewitt et al.

185
00:08:38,711 --> 00:08:40,738
Were seeking to develop a model that did

186
00:08:40,738 --> 00:08:43,760
model the reality of distributed

187
00:08:43,760 --> 00:08:44,775
concurrent systems.

188
00:08:44,776 --> 00:08:47,805
And luckily for us, the actor model

189
00:08:47,805 --> 00:08:50,837
embraces both concurrency, seen from the

190
00:08:50,837 --> 00:08:54,872
principle of isolation and actor autonomy,

191
00:08:54,872 --> 00:08:57,900
, making it compatible with active

192
00:08:57,900 --> 00:08:58,909
inference.

193
00:08:59,921 --> 00:09:01,888
Next we come to nesting.

194
00:09:02,896 --> 00:09:05,927
The actor model allows for an actor to

195
00:09:05,927 --> 00:09:09,961
not only receive and send a finite number

196
00:09:09,961 --> 00:09:12,995
of messages to perceive and act, it also

197
00:09:12,995 --> 00:09:15,025
allows as an action the creation of a

198
00:09:15,025 --> 00:09:18,052
finite number of new actors.

199
00:09:19,062 --> 00:09:21,087
These actors can either be nested within

200
00:09:21,087 --> 00:09:24,112
the parent, say, the parts of an animal

201
00:09:24,112 --> 00:09:26,134
cell, or it can be released into the

202
00:09:26,134 --> 00:09:28,158
environment as independent actors.

203
00:09:28,158 --> 00:09:31,186
From then on this principle, the model

204
00:09:31,186 --> 00:09:34,215
fits nicely with the beautiful concepts

205
00:09:34,215 --> 00:09:36,239
of multiscale nesting and active

206
00:09:36,239 --> 00:09:37,249
inference.

207
00:09:38,259 --> 00:09:41,287
This allows for actors to contain

208
00:09:41,287 --> 00:09:45,319
ecosystems of actors both all the way

209
00:09:45,319 --> 00:09:47,342
down and all the way up.

210
00:09:49,361 --> 00:09:52,391
Last, I want to cover two more actor

211
00:09:52,391 --> 00:09:55,424
model design principles behavior change

212
00:09:55,424 --> 00:09:57,439
and persistence.

213
00:09:59,459 --> 00:10:01,428
Actors have the ability to change their

214
00:10:01,428 --> 00:10:04,454
behavior in response to a message.

215
00:10:05,461 --> 00:10:07,489
This adaptability allows for the

216
00:10:07,489 --> 00:10:11,526
construction of complex stateful entities

217
00:10:11,526 --> 00:10:14,551
that can evolve over time.

218
00:10:14,557 --> 00:10:18,590
And indeed, it allows for entire

219
00:10:18,590 --> 00:10:21,624
ecosystems to evolve new emergent

220
00:10:21,624 --> 00:10:22,636
behaviors.

221
00:10:24,650 --> 00:10:27,681
When used for software engineering, this

222
00:10:27,681 --> 00:10:30,713
adds a powerful tool for managing complex

223
00:10:30,713 --> 00:10:31,727
dynamic systems.

224
00:10:32,736 --> 00:10:35,763
Active inference, of course, embraces

225
00:10:35,763 --> 00:10:36,778
this to the extreme.

226
00:10:38,791 --> 00:10:41,822
The very essence of thingness is the

227
00:10:41,822 --> 00:10:44,856
ongoing attempt to predict and adapt to

228
00:10:44,856 --> 00:10:48,889
an environment and thereby continue to

229
00:10:48,889 --> 00:10:51,925
exist to maintain one's Markov blanket in

230
00:10:51,925 --> 00:10:54,951
a broiling sea of activity.

231
00:10:56,971 --> 00:10:59,999
Along with this also comes the concept of

232
00:10:59,999 --> 00:10:59,008
persistence.

233
00:11:00,956 --> 00:11:03,988
Persistence allows actors to sade their

234
00:11:03,988 --> 00:11:07,023
state and to restore or modify it later a

235
00:11:07,023 --> 00:11:10,054
feature that embodies the principle of

236
00:11:10,054 --> 00:11:11,062
memory.

237
00:11:11,067 --> 00:11:15,101
Memory is a prerequisite for learning and

238
00:11:15,101 --> 00:11:16,111
adaptation.

239
00:11:16,116 --> 00:11:19,149
An agent's ability to predict depends on

240
00:11:19,149 --> 00:11:23,181
its ability to remember past experiences

241
00:11:23,181 --> 00:11:26,214
and thus minimize the surprise associated

242
00:11:26,214 --> 00:11:28,233
with unexpectedness.

243
00:11:28,238 --> 00:11:31,262
The vital role of memory is also

244
00:11:31,262 --> 00:11:34,290
emphasized when we assume that agents

245
00:11:34,290 --> 00:11:36,316
have inductive priors, either from

246
00:11:36,316 --> 00:11:39,345
experience or inheritance, contributing

247
00:11:39,345 --> 00:11:41,364
to their world model.

248
00:11:42,372 --> 00:11:44,397
This world model both guides their

249
00:11:44,397 --> 00:11:47,426
current behavior and it is continuously

250
00:11:47,426 --> 00:11:50,449
updated based on new experiences

251
00:11:50,449 --> 00:11:52,478
contributing to their ongoing adaptation

252
00:11:52,478 --> 00:11:54,491
and existence.

253
00:11:56,515 --> 00:11:57,524
Okay, great.

254
00:11:57,524 --> 00:11:59,547
You say there are clear and deep

255
00:11:59,547 --> 00:12:02,515
connections between the actor model and

256
00:12:02,515 --> 00:12:03,529
active inference.

257
00:12:04,532 --> 00:12:07,565
But how does this help us in the active

258
00:12:07,565 --> 00:12:09,583
inference community?

259
00:12:10,596 --> 00:12:13,621
Well, firstly, in my opinion, it is a

260
00:12:13,621 --> 00:12:15,648
software engineering paradigm we should

261
00:12:15,648 --> 00:12:16,655
embrace.

262
00:12:16,658 --> 00:12:20,694
And if we do, there are of course, actor

263
00:12:20,694 --> 00:12:23,729
model libraries and frameworks that we

264
00:12:23,729 --> 00:12:27,763
can use such as ACA, Orleans, thespian

265
00:12:27,763 --> 00:12:31,800
Actix Protoactor and many more, which we

266
00:12:31,800 --> 00:12:34,836
can immediately use when building active

267
00:12:34,836 --> 00:12:37,863
inference software modules and

268
00:12:37,863 --> 00:12:39,880
applications.

269
00:12:39,888 --> 00:12:43,922
There are also libraries, languages and

270
00:12:43,922 --> 00:12:46,955
even language features that align very

271
00:12:46,955 --> 00:12:50,991
well with the actor model principles such

272
00:12:50,991 --> 00:12:53,023
as Zero, MQ, tokyo and Rust, Erlang,

273
00:12:53,023 --> 00:12:55,043
Async, Await and C.

274
00:12:55,044 --> 00:12:57,064
Sharp, et cetera.

275
00:12:58,073 --> 00:13:01,043
But more important than the tools

276
00:13:01,043 --> 00:13:04,077
available to us today is the software

277
00:13:04,077 --> 00:13:07,107
design mindset that will guide our

278
00:13:07,107 --> 00:13:11,144
creation of the active inference software

279
00:13:11,144 --> 00:13:12,159
of tomorrow.

280
00:13:13,166 --> 00:13:16,199
The actor model provides a paradigm of

281
00:13:16,199 --> 00:13:20,232
software design and engineering that is

282
00:13:20,232 --> 00:13:23,265
the most perfect match that we have for

283
00:13:23,265 --> 00:13:25,282
active inference.

284
00:13:26,298 --> 00:13:29,322
This is evident not only from the

285
00:13:29,322 --> 00:13:31,348
alignment of the core principles we

286
00:13:31,348 --> 00:13:34,376
previously discussed, but also from the

287
00:13:34,376 --> 00:13:37,403
insights that active inference in the

288
00:13:37,403 --> 00:13:39,429
actor model bring to each other.

289
00:13:41,439 --> 00:13:43,468
For example, consider what is now called

290
00:13:43,468 --> 00:13:44,478
Hewitt's Law.

291
00:13:45,488 --> 00:13:48,519
Informally stated as everything is

292
00:13:48,519 --> 00:13:52,554
everywhere, this law signifies the idea

293
00:13:52,554 --> 00:13:56,591
that in a truly asynchronous distributed

294
00:13:56,591 --> 00:13:59,626
system, it can take an arbitrary amount

295
00:13:59,626 --> 00:14:03,600
of time for a message to go from one

296
00:14:03,600 --> 00:14:06,635
place to another, and any actor must be

297
00:14:06,635 --> 00:14:09,663
prepared for that event.

298
00:14:10,669 --> 00:14:12,694
There is simply no such thing as

299
00:14:12,694 --> 00:14:15,724
instantaneous in such a system, and no

300
00:14:15,724 --> 00:14:18,754
component can make an assumption about

301
00:14:18,754 --> 00:14:21,787
the timing of another component's actions.

302
00:14:21,787 --> 00:14:22,789
.

303
00:14:22,795 --> 00:14:26,837
In fact, one must act as if a message may

304
00:14:26,837 --> 00:14:28,852
never arrive.

305
00:14:29,865 --> 00:14:31,888
This has important implications.

306
00:14:32,897 --> 00:14:35,925
It suggests that it is impossible to

307
00:14:35,925 --> 00:14:38,957
accurately and consistently determine the

308
00:14:38,957 --> 00:14:41,987
state of the entire system at any given

309
00:14:41,987 --> 00:14:44,017
time, because the information just may

310
00:14:44,017 --> 00:14:47,044
not have even propagated across the

311
00:14:47,044 --> 00:14:48,053
system.

312
00:14:49,067 --> 00:14:52,096
And also attempts to implement global

313
00:14:52,096 --> 00:14:55,128
synchronization will inevitably introduce

314
00:14:55,128 --> 00:14:58,157
bottlenecks and reduce efficiency.

315
00:14:59,168 --> 00:15:02,136
Hewitt's Law emphasizes the need for

316
00:15:02,136 --> 00:15:05,167
systems to be designed in a way that they

317
00:15:05,167 --> 00:15:08,198
can effectively handle these unavoidable

318
00:15:08,198 --> 00:15:11,226
delays and uncertainties, highlighting

319
00:15:11,226 --> 00:15:14,254
the importance of robust nonblocking

320
00:15:14,254 --> 00:15:17,280
communication mechanisms and local

321
00:15:17,280 --> 00:15:19,304
decision making abilities.

322
00:15:20,311 --> 00:15:23,346
In short, Hector model systems are by

323
00:15:23,346 --> 00:15:26,369
nature nondeterministic.

324
00:15:27,381 --> 00:15:28,397
Does this sound familiar?

325
00:15:29,403 --> 00:15:32,433
What other paradigm highlights operation

326
00:15:32,433 --> 00:15:35,460
under uncertainty and the autonomy to

327
00:15:35,460 --> 00:15:37,486
continue despite the environment?

328
00:15:38,499 --> 00:15:41,520
Active Inference and the free energy

329
00:15:41,520 --> 00:15:41,526
principle?

330
00:15:42,535 --> 00:15:45,563
Active inference reflects the reality of

331
00:15:45,563 --> 00:15:47,587
an unpredictable world in which our

332
00:15:47,587 --> 00:15:49,606
software systems operate.

333
00:15:50,610 --> 00:15:52,637
Different outcomes may result from the

334
00:15:52,637 --> 00:15:55,661
same initial conditions due to the

335
00:15:55,661 --> 00:15:57,685
occurrence of events in a random,

336
00:15:57,685 --> 00:15:59,701
unpredictable order.

337
00:16:00,652 --> 00:16:03,681
This is the concept of surprise that we

338
00:16:03,681 --> 00:16:06,712
all know well, where an agent updates its

339
00:16:06,712 --> 00:16:09,741
beliefs about the world when the sensory

340
00:16:09,741 --> 00:16:11,768
input it receives does not match its

341
00:16:11,768 --> 00:16:13,780
predictions.

342
00:16:13,787 --> 00:16:16,814
Both the actor model and active inference

343
00:16:16,814 --> 00:16:18,834
acknowledge that the world is

344
00:16:18,834 --> 00:16:19,845
unpredictable.

345
00:16:20,857 --> 00:16:23,889
Even more than acknowledge it, the models

346
00:16:23,889 --> 00:16:26,918
accept this uncertainty as a given and

347
00:16:26,918 --> 00:16:29,945
not something to be managed away.

348
00:16:30,957 --> 00:16:33,984
Indeed, as we know in the free energy

349
00:16:33,984 --> 00:16:36,010
principle, the uncertainty that we

350
00:16:36,010 --> 00:16:38,039
maintain in our models is what gives us

351
00:16:38,039 --> 00:16:41,059
the flexibility to adapt.

352
00:16:43,084 --> 00:16:46,115
Perhaps this is just my personal flight

353
00:16:46,115 --> 00:16:49,144
of fancy, but I imagine a future where

354
00:16:49,144 --> 00:16:52,170
software modules guided by active

355
00:16:52,170 --> 00:16:55,200
inference do away with hard coded error

356
00:16:55,200 --> 00:16:57,227
handling and swap in probabilistic

357
00:16:57,227 --> 00:17:00,193
learning algorithms that optimize

358
00:17:00,193 --> 00:17:03,226
themselves as the error landscape evolves.

359
00:17:03,226 --> 00:17:04,230
.

360
00:17:05,243 --> 00:17:09,280
Modules that are robust and self healing

361
00:17:09,280 --> 00:17:12,317
distributed systems with no single points

362
00:17:12,317 --> 00:17:16,350
of failure that focus on predictive

363
00:17:16,350 --> 00:17:19,386
disaster avoidance rather than reactive

364
00:17:19,386 --> 00:17:21,406
disaster recovery.

365
00:17:23,420 --> 00:17:25,446
Looking towards the future, we as a

366
00:17:25,446 --> 00:17:28,476
community have the potential to push the

367
00:17:28,476 --> 00:17:31,506
boundary of both active imprints theory

368
00:17:31,506 --> 00:17:34,533
and practical implementations of the

369
00:17:34,533 --> 00:17:35,545
actor model.

370
00:17:36,549 --> 00:17:38,578
By leveraging the strengths of these two

371
00:17:38,578 --> 00:17:41,602
paradigms together, we can create

372
00:17:41,602 --> 00:17:43,626
software systems that are robust,

373
00:17:43,626 --> 00:17:46,656
adaptive and more aligned to the physical

374
00:17:46,656 --> 00:17:49,685
world in which they actually operate.

375
00:17:51,700 --> 00:17:53,723
Imagine a future where software

376
00:17:53,723 --> 00:17:56,753
components using active inference in the

377
00:17:56,753 --> 00:17:59,779
actor model can anticipate potential

378
00:17:59,779 --> 00:18:01,747
issues, learn from past mistakes, and

379
00:18:01,747 --> 00:18:04,773
adapt in real time to environmental

380
00:18:04,773 --> 00:18:05,783
changes.

381
00:18:06,796 --> 00:18:09,821
With this approach, we can build systems

382
00:18:09,821 --> 00:18:11,847
that are fundamentally more resilient and

383
00:18:11,847 --> 00:18:12,857
more efficient.

384
00:18:13,863 --> 00:18:16,890
In my opinion, this can bring a step

385
00:18:16,890 --> 00:18:18,915
change in software reliability and

386
00:18:18,915 --> 00:18:21,944
performance and scalability, and heralds

387
00:18:21,944 --> 00:18:23,967
a new era of computing, weaving

388
00:18:23,967 --> 00:18:26,997
principles of biology and cognition into

389
00:18:26,997 --> 00:18:29,002
the fabric of our software systems,

390
00:18:29,002 --> 00:18:31,004
bringing them closer to life in the

391
00:18:31,004 --> 00:18:33,005
process.

392
00:18:35,008 --> 00:18:37,010
In conclusion, the coupling of active

393
00:18:37,010 --> 00:18:40,013
inference to the actor model provides a

394
00:18:40,013 --> 00:18:43,016
powerful new lens through which we can

395
00:18:43,016 --> 00:18:46,019
look at software design and engineering.

396
00:18:47,020 --> 00:18:50,023
Whether we leverage existing languages

397
00:18:50,023 --> 00:18:52,025
and libraries aligned with active

398
00:18:52,025 --> 00:18:55,028
inference or invent new ones, we are

399
00:18:55,028 --> 00:18:58,031
standing on the brink of an exciting

400
00:18:58,031 --> 00:18:59,032
frontier.

401
00:19:00,027 --> 00:19:03,030
So let's seize the day, have a look at

402
00:19:03,030 --> 00:19:05,032
the actor model and its relationship to

403
00:19:05,032 --> 00:19:08,035
active inference, and let's shape the

404
00:19:08,035 --> 00:19:10,037
future of intelligent distributed

405
00:19:10,037 --> 00:19:11,038
computing.

406
00:19:13,040 --> 00:19:14,041
Thank you for listening.

407
00:19:17,044 --> 00:19:18,045
Daniel: Awesome.

408
00:19:19,046 --> 00:19:21,048
Great talk by Keith.

409
00:19:21,048 --> 00:19:23,050
Thank you, Keith, for sending that in.

410
00:19:24,051 --> 00:19:26,053
There were some comments in the chat.

411
00:19:27,054 --> 00:19:29,056
So, Keith, potentially if you want to

412
00:19:29,056 --> 00:19:32,059
join for A-Q-A some future time, but

413
00:19:32,059 --> 00:19:33,060
really cool presentation.

