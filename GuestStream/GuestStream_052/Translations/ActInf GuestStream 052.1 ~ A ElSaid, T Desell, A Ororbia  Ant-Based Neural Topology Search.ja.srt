1
00:00:06,319 --> 00:00:09,420
こんにちは、ようこそ、こちらは

2
00:00:09,420 --> 00:00:13,440
2023 年 8 月 10 日のアクティブなゲストルーム 52.1 です。アーメド・アル・サイドのアレクサンドラ・オーロビア

3
00:00:13,440 --> 00:00:15,900
と

4
00:00:15,900 --> 00:00:17,460
トラヴィス・デ・セルが

5
00:00:17,460 --> 00:00:20,400
プレゼンテーションを行う予定です。

6
00:00:20,400 --> 00:00:22,680
その後、考察

7
00:00:22,680 --> 00:00:25,080
やディスカッションを行う予定です。ご参加いただきありがとうございます。

8
00:00:25,080 --> 00:00:27,240
アーメン プレゼンテーションをしていただきありがとう

9
00:00:27,240 --> 00:00:29,779


10
00:00:30,480 --> 00:00:34,079
ございます えー、

11
00:00:34,079 --> 00:00:38,160
今日は私たちの

12
00:00:38,160 --> 00:00:39,300


13
00:00:39,300 --> 00:00:42,300


14
00:00:42,300 --> 00:00:44,160
新しいアーキテクチャの探索と新しい

15
00:00:44,160 --> 00:00:46,500
進化の問題を解決するために私たちが考え出した方法について話し合うために行きます

16
00:00:46,500 --> 00:00:48,180
えー

17
00:00:48,180 --> 00:00:50,579
、コロニー最適化ベースの

18
00:00:50,579 --> 00:00:52,140
ソリューションです

19
00:00:52,140 --> 00:00:56,100
ええと、タイトルにあるように、ニューラル アーキテクチャの探索と革命のためのコロニー最適化について言及しています。ええと、

20
00:00:56,100 --> 00:00:58,199


21
00:00:58,199 --> 00:01:00,660


22
00:01:00,660 --> 00:01:03,080
この作品は、

23
00:01:03,080 --> 00:01:06,659
私の間の共同作業です。ええと、

24
00:01:06,659 --> 00:01:09,600
以前のアドバイザーが細胞を乾燥させたので、私の

25
00:01:09,600 --> 00:01:11,580
コード アドバイザーが、ええと、

26
00:01:11,580 --> 00:01:15,119
オラ博士と上院議員が

27
00:01:15,119 --> 00:01:16,979
私は今、ええと、私とのコラボレーションです。

28
00:01:16,979 --> 00:01:19,140
大学の助教授で、

29
00:01:19,140 --> 00:01:20,520


30
00:01:20,520 --> 00:01:23,159
えー、ノースカロライナ大学

31
00:01:23,159 --> 00:01:25,080
ノースカロライナウェリントンです、えー、

32
00:01:25,080 --> 00:01:26,520


33
00:01:26,520 --> 00:01:29,640
次のスライドに進みます、えー、

34
00:01:29,640 --> 00:01:31,920


35
00:01:31,920 --> 00:01:35,040
今日お話しする内容の概要として、えー、

36
00:01:35,040 --> 00:01:38,400
鳥の氷の眺めを何のために撮ってみたいと思います それは

37
00:01:38,400 --> 00:01:40,020
革命です、ええと、

38
00:01:40,020 --> 00:01:43,619
なぜ私たちはなぜそれが必要ですか、そしてそこから私は、

39
00:01:43,619 --> 00:01:46,680


40
00:01:46,680 --> 00:01:50,280
ええと、エンド

41
00:01:50,280 --> 00:01:52,200


42
00:01:52,200 --> 00:01:54,540
ベースのニューラルポリシー検索と呼ばれる、または略して

43
00:01:54,540 --> 00:01:57,479
終了とその後の最適化に基づいて呼び出している私たちの方法について説明しようとします

44
00:01:57,479 --> 00:02:01,979
私たちがこのアイデアをどのように進めたか、

45
00:02:01,979 --> 00:02:04,280
えー、

46
00:02:04,280 --> 00:02:06,719
継続的なアリやガンの制御を導入することで、

47
00:02:06,719 --> 00:02:08,699


48
00:02:08,699 --> 00:02:11,220
この研究スペースのどの優れたスレッドを継続的なスペース

49
00:02:11,220 --> 00:02:14,160
に置き換えたかについて説明します。

50
00:02:14,160 --> 00:02:17,220
その後、

51
00:02:17,220 --> 00:02:20,220
私たちが何をしたかについても話します。

52
00:02:20,220 --> 00:02:22,379
3 次元 The Continuous ants で

53
00:02:22,379 --> 00:02:24,980
バックプロパゲーションのないクラスを開きます

54
00:02:24,980 --> 00:02:28,620
。その後で、将来の作業のために答えている 3 つの点について説明します。それで、

55
00:02:28,620 --> 00:02:31,319


56
00:02:31,319 --> 00:02:33,000


57
00:02:33,000 --> 00:02:35,220


58
00:02:35,220 --> 00:02:35,819


59
00:02:35,819 --> 00:02:39,780
機械学習で、

60
00:02:39,780 --> 00:02:41,459
ニューラル ネットワーク構造が

61
00:02:41,459 --> 00:02:43,620
取得する構造を学習します。 より深く、ええ、

62
00:02:43,620 --> 00:02:45,900
人々はパフォーマンスを向上させるために構造を最適化しようとしていて、

63
00:02:45,900 --> 00:02:47,220


64
00:02:47,220 --> 00:02:49,379
さまざまな

65
00:02:49,379 --> 00:02:51,480
レルムやさまざまな

66
00:02:51,480 --> 00:02:53,700
問題領域の人々が、ええ、

67
00:02:53,700 --> 00:02:55,019


68
00:02:55,019 --> 00:02:57,660
最高のパフォーマンスを発揮するニューラル

69
00:02:57,660 --> 00:03:00,680
アーキテクチャまたは構造を借用して、

70
00:03:00,680 --> 00:03:04,140
少し修正しようとしていたのです。

71
00:03:04,140 --> 00:03:06,599
彼らの問題に対して、彼らは

72
00:03:06,599 --> 00:03:09,480
構造の写真の一部を微調整して、

73
00:03:09,480 --> 00:03:12,180


74
00:03:12,180 --> 00:03:14,459
これらのさまざまな微調整を比較しようとしました。そして、彼らは、

75
00:03:14,459 --> 00:03:16,080
私たちが最もパフォーマンスの高い構造を見つけたと言いましたが、

76
00:03:16,080 --> 00:03:17,940


77
00:03:17,940 --> 00:03:18,659


78
00:03:18,659 --> 00:03:22,140
実際に絶対的なオープン構造を見つけるには、

79
00:03:22,140 --> 00:03:23,700


80
00:03:23,700 --> 00:03:26,040
それが必要になるでしょう その解決策に関しては、それは

81
00:03:26,040 --> 00:03:28,319
NPR 問題になるでしょう。なぜなら、

82
00:03:28,319 --> 00:03:31,379
その解決策に到達するには、

83
00:03:31,379 --> 00:03:34,319


84
00:03:34,319 --> 00:03:37,319
さまざまな構造要素のすべての組み合わせを正しく試さなければならなかったのです。

85
00:03:37,319 --> 00:03:40,739
そして、

86
00:03:40,739 --> 00:03:43,379
これらのディープ ニューラル ネットワークには巨大な構造があるため、

87
00:03:43,379 --> 00:03:44,519


88
00:03:44,519 --> 00:03:47,519
それらは可能性があります。  NPR の問題は、

89
00:03:47,519 --> 00:03:50,760


90
00:03:50,760 --> 00:03:53,459


91
00:03:53,459 --> 00:03:56,159
これらすべての

92
00:03:56,159 --> 00:03:58,080
構造を実際にトレーニングしてテストするための計算能力や十分な時間がないためです。これらすべての構造は、

93
00:03:58,080 --> 00:03:59,459


94
00:03:59,459 --> 00:04:01,080


95
00:04:01,080 --> 00:04:03,780
構築者のさまざまな組み合わせから構築されているため、

96
00:04:03,780 --> 00:04:06,239
これを行う別の方法は、実際に次のことを試してみることです。

97
00:04:06,239 --> 00:04:09,900
流星的な手法を適用して、

98
00:04:09,900 --> 00:04:12,180


99
00:04:12,180 --> 00:04:15,239


100
00:04:15,239 --> 00:04:17,339
構造を最適化しない、または

101
00:04:17,339 --> 00:04:19,738
ランダム検索のようなものに依存するよりもはるかに優れた耳からオープンなソリューションに変換します。

102
00:04:19,738 --> 00:04:21,478
ランダム検索は、ニューラルネットワークのパフォーマンスを向上させることができます

103
00:04:21,478 --> 00:04:23,340


104
00:04:23,340 --> 00:04:26,340
が、そうはいきません。

105
00:04:26,340 --> 00:04:28,740
最適解へのミュートを与えるか、

106
00:04:28,740 --> 00:04:30,000
最適解に近い状態で収束するようにしてください。

107
00:04:30,000 --> 00:04:31,759


108
00:04:31,759 --> 00:04:33,660


109
00:04:33,660 --> 00:04:34,680


110
00:04:34,680 --> 00:04:36,660
つまり、ヒューリスティックな方法により

111
00:04:36,660 --> 00:04:40,020
自動化された方法が得られます。

112
00:04:40,020 --> 00:04:43,259
また、この構造問題に対する解決策を開くのに近い新しい文書構造に収束することもできます。

113
00:04:43,259 --> 00:04:45,479


114
00:04:45,479 --> 00:04:49,039


115
00:04:49,919 --> 00:04:52,680
ええと、人々が Nas に近づいた方法は、ええ、

116
00:04:52,680 --> 00:04:55,919


117
00:04:55,919 --> 00:04:58,740
自然界で最適化がどのように行われるかを模倣しようとすることでした。

118
00:04:58,740 --> 00:05:02,400
つまり、最初の方法、最初の

119
00:05:02,400 --> 00:05:05,220
思考方法は、ええと、

120
00:05:05,220 --> 00:05:08,400


121
00:05:08,400 --> 00:05:13,080
生物が自然界でどのように進化するかを模倣しようとしていたのです。

122
00:05:13,080 --> 00:05:14,400


123
00:05:14,400 --> 00:05:16,500


124
00:05:16,500 --> 00:05:20,000
ダーウィンの運動進化のような遺伝ベースのアルゴリズムを使用しており

125
00:05:20,000 --> 00:05:23,520
、それはきちんとした、

126
00:05:23,520 --> 00:05:24,660
えー、または

127
00:05:24,660 --> 00:05:27,660
えー、それはえー、

128
00:05:27,660 --> 00:05:33,680
新しい革命、えー異質の略語

129
00:05:41,960 --> 00:05:45,060
です、その概念は

130
00:05:45,060 --> 00:05:48,600
通常の運動方法に関するほとんどの NAS にも適用され

131
00:05:48,600 --> 00:05:52,680
、試験は次の 1 つです。 彼らは

132
00:05:52,680 --> 00:05:55,380
この方法を思いつき、それが最先端の方法の 1 つになりました。 ああ、

133
00:05:55,380 --> 00:05:58,020


134
00:05:58,020 --> 00:06:02,460
ナスで、その

135
00:06:02,460 --> 00:06:06,600
ような方法で、私たちは

136
00:06:06,600 --> 00:06:09,720


137
00:06:09,720 --> 00:06:11,699
新しい構造要素を導入することによって、遺伝的進化を再び模倣しようとしました。 または、

138
00:06:11,699 --> 00:06:13,979
構造要素を削除したり、

139
00:06:13,979 --> 00:06:15,180


140
00:06:15,180 --> 00:06:17,639
進化の反復や

141
00:06:17,639 --> 00:06:20,460
進化の世代を通じて進化プロセスを通じて構造を変更したりすることで、

142
00:06:20,460 --> 00:06:24,120


143
00:06:24,120 --> 00:06:25,680
エッジを分割したり、エッジを

144
00:06:25,680 --> 00:06:29,460
追加したり、無効化するエッジを表示したりして突然変異を適用できます。

145
00:06:29,460 --> 00:06:31,919
これを表示します。エッジを無効にすると、

146
00:06:31,919 --> 00:06:33,479
一部の構造要素が無効になります。

147
00:06:33,479 --> 00:06:34,979


148
00:06:34,979 --> 00:06:37,919
その構成要素を失わないようにすることで、後で

149
00:06:37,919 --> 00:06:41,520
それをゲノム内の休眠遺伝子のようなものとして使用できるようにすることで、

150
00:06:41,520 --> 00:06:44,039


151
00:06:44,039 --> 00:06:45,960
後の世代でそれが完全に除去されずに現れることができるようにするため、

152
00:06:45,960 --> 00:06:49,380
突然変異で使用できるようにすることが

153
00:06:49,380 --> 00:06:51,419
できます エッジを無効にする このオプションを試したいことが

154
00:06:51,419 --> 00:06:53,580
わかったら、後の世代で有効にできます

155
00:06:53,580 --> 00:06:55,800


156
00:06:55,800 --> 00:06:58,380


157
00:06:58,380 --> 00:07:00,300
ええと、繰り返しエッジを追加したり、

158
00:07:00,300 --> 00:07:03,419
リコールを削除したり、

159
00:07:03,419 --> 00:07:06,060
現在のエッジを有効または無効にすることもできます ええと、取得できるノードを分割できます

160
00:07:06,060 --> 00:07:07,979


161
00:07:07,979 --> 00:07:11,460
前の世代のノードの一部は、

162
00:07:11,460 --> 00:07:13,800
えー、それを 2 つのノードに分割し、

163
00:07:13,800 --> 00:07:16,620


164
00:07:16,620 --> 00:07:18,720
そのノードに接続されているエッジを取得し、

165
00:07:18,720 --> 00:07:21,060


166
00:07:21,060 --> 00:07:23,340
前の世代のノードから生成された新しい統計の間で分割してみます。

167
00:07:23,340 --> 00:07:27,199
前の世代

168
00:07:27,199 --> 00:07:31,500
ええと、構造と構造にノードを追加することもできる

169
00:07:31,500 --> 00:07:33,479
ので、

170
00:07:33,479 --> 00:07:35,639
これらはすべて遺伝的プロセスの突然変異クラスの一部です

171
00:07:35,639 --> 00:07:38,580


172
00:07:38,580 --> 00:07:41,160
ええと、単に試したい場合は、無効にしない場合はノートを無効にすることもできます

173
00:07:41,160 --> 00:07:43,080


174
00:07:43,080 --> 00:07:45,120
ノートの 1 つを削除し、1 つ

175
00:07:45,120 --> 00:07:47,759
または複数のノードを無効にすると、

176
00:07:47,759 --> 00:07:50,940
そのノートに接続されているエッジも無効になります

177
00:07:50,940 --> 00:07:52,979
um 突然変異のほかに、私たちはその反対

178
00:07:52,979 --> 00:07:55,020
側です

179
00:07:55,020 --> 00:07:58,620
um 遺伝的プロセスは、

180
00:07:58,620 --> 00:08:00,360
最高のパフォーマンスを誇る 2 つの集団があるクロスオーバーを行うことです

181
00:08:00,360 --> 00:08:03,840
ええと、

182
00:08:03,840 --> 00:08:06,000
子孫をもたらすために一緒に作られ、子孫は

183
00:08:06,000 --> 00:08:07,740


184
00:08:07,740 --> 00:08:10,319
ええと、両親から来た特徴のコレクションを持っ

185
00:08:10,319 --> 00:08:12,900


186
00:08:12,900 --> 00:08:14,160
ています、ええと、

187
00:08:14,160 --> 00:08:15,840
その親からの特徴の一部と、

188
00:08:15,840 --> 00:08:17,940
もう一方の親からの他の特徴を取得します。

189
00:08:17,940 --> 00:08:21,680
これにより、

190
00:08:21,680 --> 00:08:24,840
パフォーマンスが悪くなることを期待しています ニューラル ネットワーク えーっと、

191
00:08:24,840 --> 00:08:27,799
プラットフォーム世代

192
00:08:28,680 --> 00:08:30,780
えーっと、主な問題です

193
00:08:30,780 --> 00:08:33,500
申し訳ありません

194
00:08:33,958 --> 00:08:36,719
が、

195
00:08:36,719 --> 00:08:39,179
えーっと、遺伝ベースのアルゴリズムの主な問題は、

196
00:08:39,179 --> 00:08:41,399


197
00:08:41,399 --> 00:08:43,559


198
00:08:43,559 --> 00:08:47,160
入力と出力を意味する最小限の構造から始まることです。えー、

199
00:08:47,160 --> 00:08:49,740
これで最適化から始めます。

200
00:08:49,740 --> 00:08:53,160
最小の探索空間

201
00:08:53,160 --> 00:08:55,620
では、

202
00:08:55,620 --> 00:08:57,720
最適化プロセスを通じてメソッドが局所的な最小値に閉じ込め

203
00:08:57,720 --> 00:09:00,720
られる可能性があるため、この障害を取り除く方法を考えていました。

204
00:09:00,720 --> 00:09:03,899


205
00:09:03,899 --> 00:09:06,060
まず、より大きな空間を用意することで、そのより大きな空間からいくつかのソリューションをサンプリングすることができます。

206
00:09:06,060 --> 00:09:07,800


207
00:09:07,800 --> 00:09:09,200


208
00:09:09,200 --> 00:09:12,839
私たちは周りを見回していました、私たちは

209
00:09:12,839 --> 00:09:15,600


210
00:09:15,600 --> 00:09:18,779
最適化の呼び出しを終了することを心配していました、そして私はその理由を言うつもりです、

211
00:09:18,779 --> 00:09:21,180


212
00:09:21,180 --> 00:09:23,279
最初にメソッドを紹介しようとします、それでメソッドは最初に

213
00:09:23,279 --> 00:09:25,680
グラフィック

214
00:09:25,680 --> 00:09:27,720
最適化メソッド、

215
00:09:27,720 --> 00:09:30,420
グラフ最適化メソッドとして紹介されました、申し訳ありませ

216
00:09:30,420 --> 00:09:32,339
んが導入されました 90年代半ば、

217
00:09:32,339 --> 00:09:35,000
マーガレット・リバーが

218
00:09:35,000 --> 00:09:37,680
この方法を応用しました

219
00:09:37,680 --> 00:09:40,500
ひどいセールス・マスの

220
00:09:40,500 --> 00:09:42,720
問題で、問題は主に国内のいくつかの都市を

221
00:09:42,720 --> 00:09:45,000
訪問したい旅行セールスマンに関するものです それは

222
00:09:45,000 --> 00:09:46,920


223
00:09:46,920 --> 00:09:48,779
ジョージのスタッフだと思いますか、

224
00:09:48,779 --> 00:09:50,640
私たちがこの問題を検討しているとしたら

225
00:09:50,640 --> 00:09:52,620
異なる数値であり、都市の数が

226
00:09:52,620 --> 00:09:55,560
増加すると、

227
00:09:55,560 --> 00:09:57,839
これらの数値の実装を組み合わせたものが

228
00:09:57,839 --> 00:09:59,760
更新され、オープンな解決策を見つけるために考慮する必要があります。

229
00:09:59,760 --> 00:10:01,500


230
00:10:01,500 --> 00:10:03,779
うーん、この数値が総計である場合、

231
00:10:03,779 --> 00:10:05,580
npmr 問題が発生することになります。

232
00:10:05,580 --> 00:10:08,160


233
00:10:08,160 --> 00:10:12,060
これをコンパクトにするのに十分な時間や計算能力がありません、

234
00:10:12,060 --> 00:10:16,380
この爆発物解決策を

235
00:10:16,380 --> 00:10:19,260
完了、またはこのピクセル ステップ検索を完了しました。そこで

236
00:10:19,260 --> 00:10:21,180
彼は

237
00:10:21,180 --> 00:10:24,180
観察からここに来て、

238
00:10:24,180 --> 00:10:24,959


239
00:10:24,959 --> 00:10:29,580
自然界で進化するために、

240
00:10:29,580 --> 00:10:33,060
彼らが食料を見つける方法を応用できることを発見しました。

241
00:10:33,060 --> 00:10:33,959
自然

242
00:10:33,959 --> 00:10:37,440
とええと、ええと、

243
00:10:37,440 --> 00:10:39,720
この観察が

244
00:10:39,720 --> 00:10:42,660
アルゴリズムに適用され、ある点からええとそこにつながる最適ではない経路を見つけて、

245
00:10:42,660 --> 00:10:46,500


246
00:10:46,500 --> 00:10:49,200
すべての都市を訪問し

247
00:10:49,200 --> 00:10:53,240
、最短の計画でええと、

248
00:10:53,640 --> 00:10:58,019
この方法が適用されるというこの概念を採用します。 観察、

249
00:10:58,019 --> 00:11:00,120
コミックスライドのこの行は、

250
00:11:00,120 --> 00:11:02,180


251
00:11:02,180 --> 00:11:06,300


252
00:11:06,300 --> 00:11:07,019


253
00:11:07,019 --> 00:11:09,480
自然界に食べ物を植えるためにどのようにして自然に注ぐのか、

254
00:11:09,480 --> 00:11:12,180
その後マーケットレゲエがどのようにその概念を取り入れて

255
00:11:12,180 --> 00:11:15,060
それを適用したか、そしてチャールズの

256
00:11:15,060 --> 00:11:17,640
ヒットマンの問題で、したがって

257
00:11:17,640 --> 00:11:19,380


258
00:11:19,380 --> 00:11:22,079
観察を私たちに与えようとしているだけです

259
00:11:22,079 --> 00:11:24,360
自然の植物の餌から資金を集めて、

260
00:11:24,360 --> 00:11:25,680


261
00:11:25,680 --> 00:11:27,300
ええと、デトロイトでは別の

262
00:11:27,300 --> 00:11:28,860
方向に行きます、ええと、

263
00:11:28,860 --> 00:11:31,320
彼らは最終的に

264
00:11:31,320 --> 00:11:33,120
餌を見つけると、その餌の一部を受け取り

265
00:11:33,120 --> 00:11:35,700
、それから巣に戻り

266
00:11:35,700 --> 00:11:38,640
、帰ります 彼らは

267
00:11:38,640 --> 00:11:40,980


268
00:11:40,980 --> 00:11:42,240
フェロモンと呼ばれる別の物質を蓄積する

269
00:11:42,240 --> 00:11:45,360
ので、食物資源を通じて他のアリに

270
00:11:45,360 --> 00:11:47,040
伝達するためにその物質を蓄積します。

271
00:11:47,040 --> 00:11:49,820


272
00:11:49,820 --> 00:11:54,000
実際、他のアリはこれを

273
00:11:54,000 --> 00:11:57,120
さらに他の物質のために利用し、

274
00:11:57,120 --> 00:11:59,279
それを感知すると追跡しようとします。

275
00:11:59,279 --> 00:12:02,100
最初の終端が

276
00:12:02,100 --> 00:12:04,620
その時から通った道は、ええと警察からの巣への道でした、ええ、

277
00:12:04,620 --> 00:12:05,940


278
00:12:05,940 --> 00:12:07,860


279
00:12:07,860 --> 00:12:10,620
その時間の終わりに彼らが食べ物を見つけることを望んでいて、そして

280
00:12:10,620 --> 00:12:13,019
実際に彼らが道の終わりで食べ物を見つけたとき、彼らは

281
00:12:13,019 --> 00:12:14,640
通るでしょう 餌をいくらか食べると、

282
00:12:14,640 --> 00:12:17,220
同じことをして、

283
00:12:17,220 --> 00:12:19,740
同じ道に芝生からさらにいくらか置きます。それを食べる

284
00:12:19,740 --> 00:12:21,540
他のアリにもっとアピールして、

285
00:12:21,540 --> 00:12:23,100
より多くの餌を巣に持ってくることができます。

286
00:12:23,100 --> 00:12:24,240


287
00:12:24,240 --> 00:12:27,839
このプロセスのこの結果は、

288
00:12:27,839 --> 00:12:31,200
搾取 ああ、アリの行動ですが、

289
00:12:31,200 --> 00:12:33,600
また時々、

290
00:12:33,600 --> 00:12:35,940
他のアリも、その他の

291
00:12:35,940 --> 00:12:38,220
充実した資源、潜在的な食料

292
00:12:38,220 --> 00:12:41,760
資源を探索しようとします、そして、彼らはある種の抵抗をします、ああ、

293
00:12:41,760 --> 00:12:45,660
正式なフレーズに従って、

294
00:12:45,660 --> 00:12:48,540
ああ、そして彼らは立ち去ろうとします

295
00:12:48,540 --> 00:12:52,800
そして、巣を搾取する者たちのための新しい食料資源を見つけます、

296
00:12:52,800 --> 00:12:55,219


297
00:12:57,740 --> 00:13:00,540
彼らも探検しています、そして

298
00:13:00,540 --> 00:13:02,519
これら 2 つの概念は、

299
00:13:02,519 --> 00:13:05,220
市場の怒り狂う人々によって、

300
00:13:05,220 --> 00:13:06,000


301
00:13:06,000 --> 00:13:09,779
検索ビットの

302
00:13:09,779 --> 00:13:12,240
バランスをより良くするために使用されていました。

303
00:13:12,240 --> 00:13:13,620


304
00:13:13,620 --> 00:13:15,800


305
00:13:15,800 --> 00:13:20,359
トランプのセールスマンの問題は都市で、

306
00:13:21,060 --> 00:13:23,040


307
00:13:23,040 --> 00:13:25,860
ヘレンのスポーツや自然界でも彼らが観察した3番目のことは、

308
00:13:25,860 --> 00:13:28,680
匂いは

309
00:13:28,680 --> 00:13:30,720
他の物質のホルモンも

310
00:13:30,720 --> 00:13:34,860
蒸発するので、完全な資源への道が確保できないときは常にそうであるということです。

311
00:13:34,860 --> 00:13:37,079


312
00:13:37,079 --> 00:13:39,300
完全なリソースは排他的であり、

313
00:13:39,300 --> 00:13:41,459
アリはもうその道を

314
00:13:41,459 --> 00:13:43,800
歩むことはありません、またはその道を通ってそこに到達したとき、

315
00:13:43,800 --> 00:13:47,279
完全なリソースが公開されると、

316
00:13:47,279 --> 00:13:49,079


317
00:13:49,079 --> 00:13:50,880
ナスダックまで同じ道をたどることはないと訴え、彼らは疑問に思い、考えようとします。

318
00:13:50,880 --> 00:13:53,519
より多くの新しい食料資源を見つける

319
00:13:53,519 --> 00:13:55,620
ため、そして彼らは再びその道を通ることはなく、

320
00:13:55,620 --> 00:13:58,200


321
00:13:58,200 --> 00:14:01,019
その道のフェロモンにいかなる形でも依存しないため、ホルモンは最終的に

322
00:14:01,019 --> 00:14:03,600
蒸発して消滅し、

323
00:14:03,600 --> 00:14:05,820
他のアリにとってそれほど魅力的ではなくなります、ええと

324
00:14:05,820 --> 00:14:08,480


325
00:14:08,519 --> 00:14:09,959


326
00:14:09,959 --> 00:14:10,770


327
00:14:10,770 --> 00:14:12,060
[音楽]  ]

328
00:14:12,060 --> 00:14:15,300
マルコ・デュランゴが

329
00:14:15,300 --> 00:14:16,980
旅行

330
00:14:16,980 --> 00:14:18,839
宇宙飛行士の問題を考えたときに注目していたものはこれでした。

331
00:14:18,839 --> 00:14:22,139
えーと、

332
00:14:22,139 --> 00:14:24,779
ある

333
00:14:24,779 --> 00:14:25,980
エージェントに

334
00:14:25,980 --> 00:14:29,760
このさまざまなタスクを試してもらい、

335
00:14:29,760 --> 00:14:31,680


336
00:14:31,680 --> 00:14:34,440
そのエージェントがそれを比較することで、それを連邦セールスマンの問題に適用したかったのです。 都市間のパスを右に進み、

337
00:14:34,440 --> 00:14:38,279


338
00:14:38,279 --> 00:14:41,760


339
00:14:41,760 --> 00:14:43,800
そのパスの長さを

340
00:14:43,800 --> 00:14:46,440
他のパスでの以前のエクスペリエンスと比較し、それが短ければ、

341
00:14:46,440 --> 00:14:49,019


342
00:14:49,019 --> 00:14:52,199
そのパスのセグメントに何か月も蓄積しようとし、最終的には 彼は

343
00:14:52,199 --> 00:14:54,060
望んでいた、そして彼が望んでいたときのことは正しかった、

344
00:14:54,060 --> 00:14:56,519


345
00:14:56,519 --> 00:14:59,040
最終的には全体のパターンが多ければ多いほど、

346
00:14:59,040 --> 00:15:00,959


347
00:15:00,959 --> 00:15:03,839
究極的に短いパスを与えるより短いセグメントが

348
00:15:03,839 --> 00:15:05,279


349
00:15:05,279 --> 00:15:07,079


350
00:15:07,079 --> 00:15:11,040
より短くなり、一つの預金からより多くの情報が得られ、より

351
00:15:11,040 --> 00:15:12,959
多くのことが得られることを望んでいた

352
00:15:12,959 --> 00:15:14,519
エージェントが反復を通じて処理する方が魅力的です。

353
00:15:14,519 --> 00:15:15,680


354
00:15:15,680 --> 00:15:20,160
そこで私たちはこの概念について考えました。そして、この概念を

355
00:15:20,160 --> 00:15:21,839


356
00:15:21,839 --> 00:15:24,360
Nas 問題に適用するのは非常に魅力的だと考えました。

357
00:15:24,360 --> 00:15:27,920
なぜなら、

358
00:15:28,519 --> 00:15:32,100
ソリューションはグラフ最適化問題に適用され

359
00:15:32,100 --> 00:15:34,500
、ニューラル

360
00:15:34,500 --> 00:15:36,600
ネットワークはその中にあるからです。 方向グラフを感じた

361
00:15:36,600 --> 00:15:38,160


362
00:15:38,160 --> 00:15:41,040
ので、足首の最適化も検討しました。

363
00:15:41,040 --> 00:15:42,800
なぜなら、完全なトレント

364
00:15:42,800 --> 00:15:46,139
分散型でスケーラブルであり、

365
00:15:46,139 --> 00:15:48,240
簡単に追跡できるからです。

366
00:15:48,240 --> 00:15:52,019
また、分散型に戻ることを考えました。それが

367
00:15:52,019 --> 00:15:55,019
私たちに与えてくれました。

368
00:15:55,019 --> 00:15:58,079
この

369
00:15:58,079 --> 00:16:01,139
方法が完璧になりました。 仲間の候補

370
00:16:01,139 --> 00:16:02,760
と高性能コンピューテ

371
00:16:02,760 --> 00:16:04,260
ィング

372
00:16:04,260 --> 00:16:06,660
えー、ソリューションは最終的には

373
00:16:06,660 --> 00:16:08,940
最適化問題を加速します。

374
00:16:08,940 --> 00:16:12,120
次のスライドで考えます次のスライドの次のスライドで、

375
00:16:12,120 --> 00:16:15,000


376
00:16:15,000 --> 00:16:16,620


377
00:16:16,620 --> 00:16:18,779
これをどのように活用または使用するかについて説明します。

378
00:16:18,779 --> 00:16:19,940


379
00:16:19,940 --> 00:16:23,100
エンド接続化の特徴

380
00:16:23,100 --> 00:16:25,440
ええと、私たちが思いついた解決策、

381
00:16:25,440 --> 00:16:26,940
またはアリとゲームである私たちが思いついた方法を加速するためです、

382
00:16:26,940 --> 00:16:29,339


383
00:16:29,339 --> 00:16:33,420
ええと、このスキーム、または

384
00:16:33,420 --> 00:16:35,760
アリを適用するアリのスキーム、またはエンドコールの適応を

385
00:16:35,760 --> 00:16:39,060
ニューラルで、または申し訳ありませんが ニューラル ニューラル

386
00:16:39,060 --> 00:16:41,459
アーキテクチャの検索は、

387
00:16:41,459 --> 00:16:45,120
この

388
00:16:45,120 --> 00:16:49,259
フローチャートに示されているか、図示されています。そのため、大規模な検索スペースから開始します。つまり、

389
00:16:49,259 --> 00:16:51,420


390
00:16:51,420 --> 00:16:52,579


391
00:16:52,579 --> 00:16:57,120


392
00:16:57,120 --> 00:16:57,980


393
00:16:57,980 --> 00:17:03,360


394
00:17:03,360 --> 00:17:05,880


395
00:17:05,880 --> 00:17:08,400
各ノードが大規模に接続されているニューラル ネットワークを具体化する上部構造で表現されます。 その

396
00:17:08,400 --> 00:17:09,780
上部構造は、

397
00:17:09,780 --> 00:17:12,599
エッジと再帰エッジを介して他のノードと接続されており、

398
00:17:12,599 --> 00:17:15,119
逆方向および順方向および逆方向の

399
00:17:15,119 --> 00:17:17,339
現在のエッジです。

400
00:17:17,339 --> 00:17:22,859
そして、

401
00:17:22,859 --> 00:17:26,579
入力ノードから

402
00:17:26,579 --> 00:17:29,220
出力ノードまで構造上に多数のエージェントを群がらせ、これらのエージェントのそれぞれが

403
00:17:29,220 --> 00:17:31,740
選択するようにします。 入力ノードに到達し、

404
00:17:31,740 --> 00:17:34,980
そのノードから

405
00:17:34,980 --> 00:17:36,860
現在のエッジと

406
00:17:36,860 --> 00:17:39,980
再帰エッジの接続、および

407
00:17:39,980 --> 00:17:42,299
隠れ

408
00:17:42,299 --> 00:17:44,940
層間のノード間をさまよって、出力ノードの 1 つを取得して選択します。

409
00:17:44,940 --> 00:17:47,640
その後、

410
00:17:47,640 --> 00:17:51,660
さまざまなエージェントのパスをすべて取得し、

411
00:17:51,660 --> 00:17:54,660
それらを組み合わせて構造ネットワーク構造

412
00:17:54,660 --> 00:17:56,940
とニューラル ネットワーク構造をフォーマットし、

413
00:17:56,940 --> 00:17:59,160
その構造を取得してデータを排出して

414
00:17:59,160 --> 00:18:00,720
テストし、その

415
00:18:00,720 --> 00:18:03,360
パフォーマンスをこのパフォーマンス構造を通じて

416
00:18:03,360 --> 00:18:05,100
ニューラル ネットワークで最もパフォーマンスの高い集団と比較すると、そのパフォーマンスは

417
00:18:05,100 --> 00:18:06,360


418
00:18:06,360 --> 00:18:09,360
最も悪いパフォーマンスよりも優れています。

419
00:18:09,360 --> 00:18:12,360
それから、

420
00:18:12,360 --> 00:18:14,700
アリがたどった道に報酬を与えます、えっと、

421
00:18:14,700 --> 00:18:16,860
エージェントが引き継いだ

422
00:18:16,860 --> 00:18:19,679
上部構造で、ホルモンを使って作業しました。

423
00:18:19,679 --> 00:18:22,559
そうすることで、

424
00:18:22,559 --> 00:18:25,140


425
00:18:25,140 --> 00:18:27,960
進化プロセスや

426
00:18:27,960 --> 00:18:29,880
最適化プロセスを通じて、後の反復でこれらのパスを魅力的なものにすることができます。

427
00:18:29,880 --> 00:18:33,000
持続した構造が

428
00:18:33,000 --> 00:18:34,980
集団内で最悪のものよりも優れている場合、

429
00:18:34,980 --> 00:18:37,380
そうでない場合は、実際に悪かった場合、

430
00:18:37,380 --> 00:18:39,900
集団内で最悪の場合、

431
00:18:39,900 --> 00:18:42,660


432
00:18:42,660 --> 00:18:44,820
ネットワーク内のその構造または構造は破棄され、

433
00:18:44,820 --> 00:18:49,280
アリがたどった経路には報酬が与えられません。

434
00:18:49,280 --> 00:18:52,919
熱蒸発は、より優れた構造を提供しない

435
00:18:52,919 --> 00:18:55,020


436
00:18:55,020 --> 00:18:56,880
エッジに堆積したフェロモンを取り除くのに役立ちます。

437
00:18:56,880 --> 00:19:01,440


438
00:19:01,679 --> 00:19:03,600


439
00:19:03,600 --> 00:19:06,900
また、エンドコロニーは

440
00:19:06,900 --> 00:19:09,120
分散化されているため、

441
00:19:09,120 --> 00:19:10,080


442
00:19:10,080 --> 00:19:11,940
非同期ソリューションまたは

443
00:19:11,940 --> 00:19:14,280
非同期進化を使用してこれを利用しました。

444
00:19:14,280 --> 00:19:17,340


445
00:19:17,340 --> 00:19:18,480


446
00:19:18,480 --> 00:19:21,059
新しい構造を生成し、

447
00:19:21,059 --> 00:19:23,100


448
00:19:23,100 --> 00:19:25,860
テストを実行する構造の母集団を更新し、

449
00:19:25,860 --> 00:19:28,740
上部構造の不良月を更新するメイン

450
00:19:28,740 --> 00:19:31,919
プロセスがあったので、メイン プロセスが構造を生成し

451
00:19:31,919 --> 00:19:33,539
、ワーカー プロセスに送信します。

452
00:19:33,539 --> 00:19:35,520


453
00:19:35,520 --> 00:19:38,160


454
00:19:38,160 --> 00:19:41,100
問題に対して得たデータに基づいてニューラル ネットワークをトレーニングしてテストし、その

455
00:19:41,100 --> 00:19:43,799
結果または

456
00:19:43,799 --> 00:19:46,260
ニューラル ネットワークの厚さを

457
00:19:46,260 --> 00:19:47,940
メイン プロセスに送り返します。その

458
00:19:47,940 --> 00:19:50,760
フィットネスに基づいて、そのプロセスは、ええと

459
00:19:50,760 --> 00:19:53,640
破棄するか、

460
00:19:53,640 --> 00:19:55,980
ええと私たちが決定します。 このフィットネスを取得し、

461
00:19:55,980 --> 00:19:57,960


462
00:19:57,960 --> 00:19:59,760
母集団内で最高のパフォーマンスを示しているものと比較し、それが最悪のものよりも優れている場合は、

463
00:19:59,760 --> 00:20:02,460


464
00:20:02,460 --> 00:20:04,080


465
00:20:04,080 --> 00:20:05,940
モーション モードをデポジットすることで上部構造上で終了したパスに報酬を与えます。あるいは、母集団内で最悪のものよりも悪い場合は、

466
00:20:05,940 --> 00:20:07,200


467
00:20:07,200 --> 00:20:10,740
それを破棄します。

468
00:20:10,740 --> 00:20:13,020
新しい構造を生成し、プロセスに送信し続けます。これは、トレーニングと

469
00:20:13,020 --> 00:20:17,160


470
00:20:17,160 --> 00:20:20,340


471
00:20:20,340 --> 00:20:22,740


472
00:20:22,740 --> 00:20:26,100


473
00:20:26,100 --> 00:20:28,080


474
00:20:28,080 --> 00:20:31,620
トレーニングを並行して実行できる多数のワーカー プロセスがある場合、その伝播に依存するトレーニングがこのプロセスで最も計算コストがかかる部分であるためです。 これらのニューラル ネットワークを評価してください。

475
00:20:31,620 --> 00:20:33,900
この新しい新しい

476
00:20:33,900 --> 00:20:36,000
構造を使用して、非同期汚染スキームの内部でさまざまな構造を同時にトレーニングおよび評価することで、プロセスを高速化できます。

477
00:20:36,000 --> 00:20:37,020


478
00:20:37,020 --> 00:20:38,940


479
00:20:38,940 --> 00:20:41,220


480
00:20:41,220 --> 00:20:44,820


481
00:20:44,820 --> 00:20:49,159


482
00:20:50,160 --> 00:20:52,020


483
00:20:52,020 --> 00:20:53,580
えーっと、これは実際にはアニメーションですが、

484
00:20:53,580 --> 00:20:56,460
このバージョンでは機能しません。 スライドは、

485
00:20:56,460 --> 00:20:58,740
PDF を使用しているためですが、

486
00:20:58,740 --> 00:21:01,260
主に構造になっており、

487
00:21:01,260 --> 00:21:02,820


488
00:21:02,820 --> 00:21:06,120
これらのノード間のエッジや接続が表示されます。

489
00:21:06,120 --> 00:21:07,679


490
00:21:07,679 --> 00:21:10,940
フェードしたり、繰り返しを通じて

491
00:21:10,940 --> 00:21:13,320
月ごとの値に基づいて色が暗くなったりするため、

492
00:21:13,320 --> 00:21:15,539


493
00:21:15,539 --> 00:21:17,460
この各フレームはええと

494
00:21:17,460 --> 00:21:21,360
、 このアニメーションでは、

495
00:21:21,360 --> 00:21:24,840


496
00:21:24,840 --> 00:21:27,660


497
00:21:27,660 --> 00:21:30,240


498
00:21:30,240 --> 00:21:32,400
アジア人が

499
00:21:32,400 --> 00:21:34,860
開始ノードから群がって

500
00:21:34,860 --> 00:21:36,600
入力ノードの 1 つを取得するときに生成されたニューラル ネットワークのバージョンのパフォーマンスに基づいて、エッジのフェロモン値を更新するようなものです。 中間

501
00:21:36,600 --> 00:21:38,640
層、そしてそこから、ここにある

502
00:21:38,640 --> 00:21:40,559
この 1 つの隠れ層の 1 つの隠し層に行き、

503
00:21:40,559 --> 00:21:42,780
そこから

504
00:21:42,780 --> 00:21:45,678
出力に行きます。

505
00:21:47,100 --> 00:21:50,039
つまり、これが

506
00:21:50,039 --> 00:21:53,400
ATO と現在の最適化を適用するという概念でした。

507
00:21:53,400 --> 00:21:57,539
そして、これが今の私です。

508
00:21:57,539 --> 00:21:59,340
私たちが考え出した実際の方法について話します。

509
00:21:59,340 --> 00:22:01,580


510
00:22:01,980 --> 00:22:05,580
そうすれば、より劇的でより強力になります。 えー、

511
00:22:05,580 --> 00:22:08,280
神経検出検索方法です。

512
00:22:08,280 --> 00:22:10,500


513
00:22:10,500 --> 00:22:11,640


514
00:22:11,640 --> 00:22:13,220
えー、もっと包括的です。言ってもいいかもしれませんが、えー、

515
00:22:13,220 --> 00:22:17,580
私たちはその方法を適用することにしました。

516
00:22:17,580 --> 00:22:20,220
ニューラル ネットワークが必要なのは、

517
00:22:20,220 --> 00:22:23,700


518
00:22:23,700 --> 00:22:25,500


519
00:22:25,500 --> 00:22:28,140


520
00:22:28,140 --> 00:22:30,299
現在の接続により他の C やニューラル ネットワーク構造よりも潜在的に大きくなる傾向があるためです。そのため、

521
00:22:30,299 --> 00:22:32,880


522
00:22:32,880 --> 00:22:35,760
この問題を開始したらメソッドを構築するか

523
00:22:35,760 --> 00:22:37,200
定数を任意のニューラル ネットワークに適用すると考えましたが、

524
00:22:37,200 --> 00:22:39,360
それを適用するのは 再帰型

525
00:22:39,360 --> 00:22:40,740
ネットワーク

526
00:22:40,740 --> 00:22:43,620
は、私たちが考えたメソッドのパフォーマンスを測定するための、より魅力的な挑戦になりました。そのため、

527
00:22:43,620 --> 00:22:45,600


528
00:22:45,600 --> 00:22:47,600


529
00:22:47,700 --> 00:22:49,679


530
00:22:49,679 --> 00:22:52,400


531
00:22:52,500 --> 00:22:55,500
次の側のこの行では、アリのメソッド

532
00:22:55,500 --> 00:22:58,500


533
00:22:58,500 --> 00:23:01,280
のさまざまなヒューリスティックについて説明します。特性

534
00:23:01,280 --> 00:23:03,600


535
00:23:03,600 --> 00:23:05,760
自体は超構造化されています。 前に述べたように、

536
00:23:05,760 --> 00:23:08,400
これはメソッド検索空間であり、

537
00:23:08,400 --> 00:23:10,980


538
00:23:10,980 --> 00:23:14,100


539
00:23:14,100 --> 00:23:15,840
作業中のマシンまたはハードウェアで可能な限り処理できるメソッドです。

540
00:23:15,840 --> 00:23:18,299
上部構造は、

541
00:23:18,299 --> 00:23:19,740
大規模に

542
00:23:19,740 --> 00:23:22,020
接続されたニューラル ネットワークで構成されており、その構造内のすべてのノードが

543
00:23:22,020 --> 00:23:23,520
他のノードに接続されている

544
00:23:23,520 --> 00:23:27,240
か、エッジを介して接続されています。 前方

545
00:23:27,240 --> 00:23:30,059
エッジと再帰エッジ 後方

546
00:23:30,059 --> 00:23:32,820
前方エッジと後方コーナー エッジ

547
00:23:32,820 --> 00:23:34,860


548
00:23:34,860 --> 00:23:37,200
ここにあるこの単純な構造は、ここでアリに適用した上部構造の概念の 1 つを表しています。

549
00:23:37,200 --> 00:23:39,600


550
00:23:39,600 --> 00:23:42,780


551
00:23:42,780 --> 00:23:45,059
入力ノードが 3 つあり、3 つの隠れ層にはそれぞれ

552
00:23:45,059 --> 00:23:47,400
3 つのノードと、

553
00:23:47,400 --> 00:23:51,020
出力層に

554
00:23:51,020 --> 00:23:53,640
1 つの出力ノードがあります。緑色の順方向再帰で表されているエッジを介して他のノードに接続されている 1 つのノードを示しているだけです。

555
00:23:53,640 --> 00:23:56,220


556
00:23:56,220 --> 00:23:59,100


557
00:23:59,100 --> 00:24:01,380


558
00:24:01,380 --> 00:24:02,520
申し訳ありませんが、

559
00:24:02,520 --> 00:24:05,159
エッジは 1つはグレーで、

560
00:24:05,159 --> 00:24:06,659
次に緑色で順方向電流と逆方向電流が表示されます。

561
00:24:06,659 --> 00:24:09,360
赤色で終わります。

562
00:24:09,360 --> 00:24:13,620
また、再帰エッジの概念は、

563
00:24:13,620 --> 00:24:15,419


564
00:24:15,419 --> 00:24:18,419
この例で見ると少し混乱するかもしれません。なぜなら、

565
00:24:18,419 --> 00:24:20,460
エッジ

566
00:24:20,460 --> 00:24:22,740
はどのようにして電流が入ってくるように見えるのでしょうか？

567
00:24:22,740 --> 00:24:26,460
同じノードまたは

568
00:24:26,460 --> 00:24:29,280
同じタイム ステップ内のノートから出力されますが、この構造により、

569
00:24:29,280 --> 00:24:32,760
えーっと明確になるかもしれません。

570
00:24:32,760 --> 00:24:34,380
それで、ここに

571
00:24:34,380 --> 00:24:37,620
3 つの構造があり、

572
00:24:37,620 --> 00:24:39,419
前に見たものと非常によく似ていますが、

573
00:24:39,419 --> 00:24:41,700
ここでは 3 つの入力があります。 ノードは 2 つの

574
00:24:41,700 --> 00:24:43,200
隠れ層です。

575
00:24:43,200 --> 00:24:45,059
第 3 章のノードには

576
00:24:45,059 --> 00:24:46,860
3 つの層があります。出力すると、2 つのノートがあります。

577
00:24:46,860 --> 00:24:49,260
そして、

578
00:24:49,260 --> 00:24:51,900
現在の時間から t ゼロ、

579
00:24:51,900 --> 00:24:53,640
前回の時間から T マイナス

580
00:24:53,640 --> 00:24:56,280
1、その前の時間から 3 つのタイム ステップもあります。 ここの 2 つの

581
00:24:56,280 --> 00:25:01,080
エッジは黒の実線を使用して示されています。

582
00:25:01,080 --> 00:25:04,440


583
00:25:04,440 --> 00:25:07,799
そしてもちろん、これらのエッジは

584
00:25:07,799 --> 00:25:10,440


585
00:25:10,440 --> 00:25:12,059
ニューラル ネットワークを介して伝播する現在のタイム ステップに存在し、

586
00:25:12,059 --> 00:25:16,140
現在の

587
00:25:16,140 --> 00:25:18,600
接続はこれらのエッジが

588
00:25:18,600 --> 00:25:20,520
情報をもたらす

589
00:25:20,520 --> 00:25:22,500
か、提供されます。

590
00:25:22,500 --> 00:25:25,200
前回のタイム ステップからの情報 以前の

591
00:25:25,200 --> 00:25:28,260


592
00:25:28,260 --> 00:25:31,440


593
00:25:31,440 --> 00:25:32,520
言語でノードに発行された以前の えーっと入力または前のえーデータ

594
00:25:32,520 --> 00:25:36,299
、これらは現在のエッジです

595
00:25:36,299 --> 00:25:39,240
ここでは赤とオレンジで検出されます 4 つのエッジは

596
00:25:39,240 --> 00:25:42,539
赤とオレンジで優れています 赤は

597
00:25:42,539 --> 00:25:44,039
T マイナス 1 から来ていて、オレンジは

598
00:25:44,039 --> 00:25:46,860
T マイナス 2 から来ていて

599
00:25:46,860 --> 00:25:50,520
、後方の現在のエッジは

600
00:25:50,520 --> 00:25:55,740
青と緑の点線で、えーっと、後方に進んで

601
00:25:55,740 --> 00:25:56,940
いることがわかります。

602
00:25:56,940 --> 00:25:59,279
つまり、

603
00:25:59,279 --> 00:26:03,659
後方への移動と後方のレイヤーへの移動がカットされています。

604
00:26:03,659 --> 00:26:04,340


605
00:26:04,340 --> 00:26:08,220
でも、えー、でも私たちですが、彼らは

606
00:26:08,220 --> 00:26:09,960
すでに最新のものなので、それができます。なぜなら、彼らは

607
00:26:09,960 --> 00:26:12,360
情報を処理しているからです。彼らはすでに

608
00:26:12,360 --> 00:26:14,220
処理された情報を持ってくるので、

609
00:26:14,220 --> 00:26:16,520


610
00:26:16,520 --> 00:26:19,320
情報を時間を遡ったり

611
00:26:19,320 --> 00:26:20,700


612
00:26:20,700 --> 00:26:23,039
、構造を遡ったりすることを心配する必要はありません。しかし、私たちは

613
00:26:23,039 --> 00:26:24,840
それができます 前のタイムスタンプから来ている場合、

614
00:26:24,840 --> 00:26:27,439


615
00:26:27,779 --> 00:26:30,840
2 番目のヒューリスティックとアリは、

616
00:26:30,840 --> 00:26:35,400
使用したかったコロニーの重み共有です。その

617
00:26:35,400 --> 00:26:38,700
ため、最初のブランディングの代わりに、

618
00:26:38,700 --> 00:26:41,520
重みまたはシナプスの重みを初期化し

619
00:26:41,520 --> 00:26:45,179
、生成されたニューラル ネットワークを

620
00:26:45,179 --> 00:26:48,539


621
00:26:48,539 --> 00:26:51,600
初期化するために、トレインの重みを使用したかったのです。 新しく

622
00:26:51,600 --> 00:26:55,140
生成されたニューラル ニューラル ネットワークの重み

623
00:26:55,140 --> 00:26:57,240
これらのニューラル ネットワークを上部構造に保存することで、

624
00:26:57,240 --> 00:26:58,880


625
00:26:58,880 --> 00:27:02,520


626
00:27:02,520 --> 00:27:05,700
この更新を行うためにここで最後の um 方程式を使用しました。これにより、

627
00:27:05,700 --> 00:27:07,740


628
00:27:07,740 --> 00:27:11,100
以前に保存された方法と、以前の方法の間でバランスが取れます。

629
00:27:11,100 --> 00:27:13,260
訓練または評価された

630
00:27:13,260 --> 00:27:16,440
ニューラル ネットワークから来ており、この更新を行うために 2 人の中国人も使用しました。

631
00:27:16,440 --> 00:27:19,500


632
00:27:19,500 --> 00:27:25,020
固定パラメーター ファイルを使用しました。または、

633
00:27:25,020 --> 00:27:27,659
それが最初の戦略であることが判明した場合、

634
00:27:27,659 --> 00:27:29,700
2 番目の戦略は、

635
00:27:29,700 --> 00:27:33,380


636
00:27:33,380 --> 00:27:36,600
依存するこれら 2 つの方程式を適用して Fly を取得することでした。

637
00:27:36,600 --> 00:27:38,159
以前は

638
00:27:38,159 --> 00:27:40,740
一般的に使用されていたニューラル ネットワークのパフォーマンスについてです、申し訳ありませんが、以前に

639
00:27:40,740 --> 00:27:43,380
関連した入り口なので、

640
00:27:43,380 --> 00:27:45,539


641
00:27:45,539 --> 00:27:49,500
トレーニング、検証、またはテストされたニューラル ネットワークのパフォーマンスに依存しているため、

642
00:27:49,500 --> 00:27:51,480


643
00:27:51,480 --> 00:27:54,000
約束がよければ、そうさせ

644
00:27:54,000 --> 00:27:57,600
ていただきます これは、その

645
00:27:57,600 --> 00:28:00,120
ニューラル ネットワークの重みです。ニューラル ネットワークの重みは、そのニューラル ネットワークの重みです。そのニューラル ネットワークの重みは、その方法の

646
00:28:00,120 --> 00:28:04,340


647
00:28:04,340 --> 00:28:06,600
初期化により多く貢献します。そのため、新しく

648
00:28:06,600 --> 00:28:08,580
生成された RN のパフォーマンスが

649
00:28:08,580 --> 00:28:11,279
それほど良くない場合、なぜこの方程式では

650
00:28:11,279 --> 00:28:13,919
それほど貢献できないのでしょうか

651
00:28:13,919 --> 00:28:15,360


652
00:28:15,360 --> 00:28:18,240
。  3 番目のメタ ヒューリスティックは、

653
00:28:18,240 --> 00:28:20,640
複数のメモリ セルです。ええと、

654
00:28:20,640 --> 00:28:23,520
各ノードにあります。ええと、

655
00:28:23,520 --> 00:28:26,760
エージェントまたは

656
00:28:26,760 --> 00:28:28,919
アリが上部構造内のノードに到達したとき、いつ、ええと、

657
00:28:28,919 --> 00:28:31,679


658
00:28:31,679 --> 00:28:33,179


659
00:28:33,179 --> 00:28:36,779
新しいタイプを選択するためにローカル検索を実行します。

660
00:28:36,779 --> 00:28:40,080
ニューロンまたはノードのタイプ えー、

661
00:28:40,080 --> 00:28:42,059
これら 3 つの異なるタイプのメモリ

662
00:28:42,059 --> 00:28:45,600
セルからの、生成された RNN の

663
00:28:45,600 --> 00:28:47,880
えー、生成構造 構造内のノードは

664
00:28:47,880 --> 00:28:50,279
すべて同じではなく、

665
00:28:50,279 --> 00:28:52,200
ローカル検索に基づいて異なります えー、

666
00:28:52,200 --> 00:28:54,299


667
00:28:54,299 --> 00:28:55,260


668
00:28:55,260 --> 00:28:57,240
エージェント 上部構造の入力から出力までのパスを

669
00:28:57,240 --> 00:28:59,520
通って到達する各ノードで実行されるか、最終的に実行されます。

670
00:28:59,520 --> 00:29:02,039


671
00:29:02,039 --> 00:29:03,419


672
00:29:03,419 --> 00:29:04,860
ええ、

673
00:29:04,860 --> 00:29:07,799
4 番目の主要な要素は複数の

674
00:29:07,799 --> 00:29:10,140
抗種です。それで、

675
00:29:10,140 --> 00:29:12,480
異なる種を適用するか、

676
00:29:12,480 --> 00:29:14,460
アリに異なる種を思いつきました。

677
00:29:14,460 --> 00:29:16,860
最初の種は、

678
00:29:16,860 --> 00:29:19,320
エッジのみをトラバースするもので、

679
00:29:19,320 --> 00:29:21,720
そのため、上部構造の質量のニューラル ネットワークのエッジにあるエッジを通ってのみ前進します。

680
00:29:21,720 --> 00:29:26,039


681
00:29:26,039 --> 00:29:27,720


682
00:29:27,720 --> 00:29:29,100


683
00:29:29,100 --> 00:29:32,640
これらは、内部の

684
00:29:32,640 --> 00:29:34,440
ノードの数を定義します。 生成された

685
00:29:34,440 --> 00:29:36,720
構造 また、

686
00:29:36,720 --> 00:29:39,120
上部構造内のノードのタイプも定義します。

687
00:29:39,120 --> 00:29:40,799
作業が完了すると、

688
00:29:40,799 --> 00:29:43,559
ソーシャル アリまたは 2 番目の種が

689
00:29:43,559 --> 00:29:45,500
ソーシャル アリになります。

690
00:29:45,500 --> 00:29:50,039
これらのノード間を横断しますが、

691
00:29:50,039 --> 00:29:53,460
現在のエッジを使用します。

692
00:29:53,460 --> 00:29:56,279
これらの

693
00:29:56,279 --> 00:29:59,220
ノード間を移動するためにやるべきことを行うため、それらのリカレントエッジを作成します。

694
00:29:59,220 --> 00:30:01,020
実際に

695
00:30:01,020 --> 00:30:03,539
生成された RNA で、

696
00:30:03,539 --> 00:30:06,600
これらの社会アリには 2 つの異なる種、または 3 つの 2 つ

697
00:30:06,600 --> 00:30:10,020
の異なる種のサブタイプがあります。1 つは

698
00:30:10,020 --> 00:30:13,320
前方です。 ああ、

699
00:30:13,320 --> 00:30:16,200
社会的な終わり、私たちこれらのものは、入力から出力までの

700
00:30:16,200 --> 00:30:19,919
貧弱な接続の上でのみ進歩します

701
00:30:19,919 --> 00:30:22,500
が、

702
00:30:22,500 --> 00:30:25,860
現在のエッジ、

703
00:30:25,860 --> 00:30:28,080
そして

704
00:30:28,080 --> 00:30:30,659
後ろ向きのソーシャルアリがすべて進む場所だけを越えて進みます。

705
00:30:30,659 --> 00:30:33,720
出力から入力、そして

706
00:30:33,720 --> 00:30:36,299
Recon 接続を介したトラバースに至るまで、

707
00:30:36,299 --> 00:30:39,240


708
00:30:39,240 --> 00:30:41,100
これらの異なる種について考えた理由は、複雑

709
00:30:41,100 --> 00:30:43,200


710
00:30:43,200 --> 00:30:46,919


711
00:30:46,919 --> 00:30:48,779


712
00:30:48,779 --> 00:30:51,240
な構造を利用して、上部構造内を歩き回るアリの傾向を制御したかったからです。

713
00:30:51,240 --> 00:30:52,919


714
00:30:52,919 --> 00:30:54,840


715
00:30:54,840 --> 00:30:57,480
えー、再帰接続のメッシュです。それで、それを制御し

716
00:30:57,480 --> 00:31:00,299
たかったので、この戦略を思いつきました。

717
00:31:00,299 --> 00:31:01,080


718
00:31:01,080 --> 00:31:04,020


719
00:31:04,020 --> 00:31:05,820
探索終了を使用して構造を定義するだけで、その後、ソーシャル回答を使用して再帰

720
00:31:05,820 --> 00:31:07,679
接続を定義できます。

721
00:31:07,679 --> 00:31:11,539


722
00:31:11,640 --> 00:31:15,240
流星的なのは、

723
00:31:15,240 --> 00:31:17,760


724
00:31:17,760 --> 00:31:19,980
またしてもプロモーションステートメントの正規化です。私たちは、より

725
00:31:19,980 --> 00:31:22,380


726
00:31:22,380 --> 00:31:24,799


727
00:31:24,799 --> 00:31:30,059
スパースでパフォーマンスの高いニューラル

728
00:31:30,059 --> 00:31:31,200
ネットワークをもたらすためのインセンティブを与えるために、

729
00:31:31,200 --> 00:31:34,620
彼らが

730
00:31:34,620 --> 00:31:38,220
より高密度またはより大きな構造を構築した場合にペナルティを与えるだけで、それを追加

731
00:31:38,220 --> 00:31:40,260


732
00:31:40,260 --> 00:31:45,179
したいと考えています。 この正則化項と、

733
00:31:45,179 --> 00:31:47,340
ホルモン値を更新した式です。

734
00:31:47,340 --> 00:31:49,620


735
00:31:49,620 --> 00:31:52,380
ご覧のとおり、正則化項は

736
00:31:52,380 --> 00:31:54,779
パフォーマンスに依存します。

737
00:31:54,779 --> 00:31:56,159
ここでの Ada はニューラル ネットワークのパフォーマンスに依存し

738
00:31:56,159 --> 00:31:58,980
、構造のサイズにも依存します。

739
00:31:58,980 --> 00:32:02,539


740
00:32:06,299 --> 00:32:09,120
ええと、最後は太い最後のものです。 ええと、これは

741
00:32:09,120 --> 00:32:12,480
ジャンプとジャンプ端です。

742
00:32:12,480 --> 00:32:14,760
実験したいの

743
00:32:14,760 --> 00:32:18,179
は、

744
00:32:18,179 --> 00:32:20,940
ええと、名前が上部構造を通って

745
00:32:20,940 --> 00:32:23,100
移動するときに、名前が層を飛び越えることができるかどうか、

746
00:32:23,100 --> 00:32:25,620


747
00:32:25,620 --> 00:32:28,559


748
00:32:28,559 --> 00:32:30,539
えっと、これらを飛び越えることができるかどうかです。

749
00:32:30,539 --> 00:32:31,740
ニューラル ネットワークを構築するためのレイヤーと

750
00:32:31,740 --> 00:32:34,140
比較して、レイヤーの動きを制限して、

751
00:32:34,140 --> 00:32:37,399
一度に 1 レイヤーずつジャンプする

752
00:32:37,399 --> 00:32:41,100


753
00:32:41,100 --> 00:32:44,039
場合、これはどのような結果になるでしょうか。

754
00:32:44,039 --> 00:32:46,919
パーサーが提供され、構造を実行中にパーサーが提供されるか

755
00:32:46,919 --> 00:32:49,320
、パーサーが提供するか、このジャンプによりパフォーマンスが

756
00:32:49,320 --> 00:32:51,899
低下します。 パフォーマンスは、

757
00:32:51,899 --> 00:32:56,279
ええ、構造を弱く保つことで、ええと、

758
00:32:56,279 --> 00:32:59,279


759
00:32:59,940 --> 00:33:00,679


760
00:33:00,679 --> 00:33:05,039


761
00:33:05,039 --> 00:33:07,799
石炭火力発電所に属する可能性のある時系列データを使用します、ええと、

762
00:33:07,799 --> 00:33:11,940


763
00:33:11,940 --> 00:33:15,179
トレーニングとテスト用に 7200 um のレコードを作成するためにデータを分割しました。

764
00:33:15,179 --> 00:33:18,000
ここでのプロットは、データが

765
00:33:18,000 --> 00:33:21,059
それは非線形であり、

766
00:33:21,059 --> 00:33:24,659
サイクルであり、

767
00:33:24,659 --> 00:33:26,580
季節性ではないことがわかります。したがって、これは困難です。

768
00:33:26,580 --> 00:33:31,019
非線形ニューラル ネットワーク

769
00:33:31,019 --> 00:33:33,059
ソリューションや回帰線形

770
00:33:33,059 --> 00:33:36,120
回帰ソリューションにとっては難しい問題です。その

771
00:33:36,120 --> 00:33:38,820
ため、入力は 12 個のパラメーターで構成されます。

772
00:33:38,820 --> 00:33:40,500


773
00:33:40,500 --> 00:33:45,019
パラメータを 1 つだけ予測しようとしていたとき、炎の強さの

774
00:33:46,640 --> 00:33:48,840
実験はアリのヒューリスティックをすべてカバーしていました。

775
00:33:48,840 --> 00:33:51,899


776
00:33:51,899 --> 00:33:53,820
これらのさまざまなパラメータにさまざまな値を与えました。

777
00:33:53,820 --> 00:33:56,600


778
00:33:56,940 --> 00:33:59,159
ええと、上部構造は 12 の

779
00:33:59,159 --> 00:34:00,659
非常に優れたノード、3 つの隠れ層、

780
00:34:00,659 --> 00:34:03,299
および第 12 章のメモで構成されています。

781
00:34:03,299 --> 00:34:05,340
出力プレーヤーの 1 つの出力ノード ええと、

782
00:34:05,340 --> 00:34:07,740
反復接続は 3 回のタイム ステップにわたって費やされました。

783
00:34:07,740 --> 00:34:10,260
1 2 回と 3

784
00:34:10,260 --> 00:34:11,639
回のステップで、

785
00:34:11,639 --> 00:34:14,339
上部構造に 49 個の

786
00:34:14,339 --> 00:34:19,739
ノードがあり、えー 9924 のエッジとほぼ 3.5

787
00:34:19,739 --> 00:34:20,760
000

788
00:34:20,760 --> 00:34:22,859
um の反復アドレスが発生するため、

789
00:34:22,859 --> 00:34:26,820
構造を 30 を超えて展開すると、  72 タイム ステップ えー、

790
00:34:26,820 --> 00:34:28,980
時間伝播では

791
00:34:28,980 --> 00:34:34,199
約 3.5 個のタイム

792
00:34:34,199 --> 00:34:36,659


793
00:34:36,659 --> 00:34:40,739


794
00:34:40,739 --> 00:34:42,119
ステップが発生します

795
00:34:42,119 --> 00:34:44,940


796
00:34:44,940 --> 00:34:47,219


797
00:34:47,219 --> 00:34:51,060
私たちはそれを試験と比較する

798
00:34:51,060 --> 00:34:56,940
必要があるので、試験は

799
00:34:56,940 --> 00:34:59,760
ニューラルテクスチャ検索における最先端のものであり、

800
00:34:59,760 --> 00:35:01,680
遺伝ベースの

801
00:35:01,680 --> 00:35:04,800
方法です。また、

802
00:35:04,800 --> 00:35:07,980
新しい革命のベンチマークのようなものであるため、それをニート

803
00:35:07,980 --> 00:35:11,700
とも比較します。

804
00:35:11,700 --> 00:35:13,680
それを固定構造に変換する

805
00:35:13,680 --> 00:35:16,920
最適化されていない構造は、1、2、3 の隠れ層と、異なる種類のメモリベースのセルを

806
00:35:16,920 --> 00:35:18,900
備えた 1 つ、2 つ、

807
00:35:18,900 --> 00:35:21,300
3 つ目の構造でした

808
00:35:21,300 --> 00:35:24,020


809
00:35:24,260 --> 00:35:27,960


810
00:35:27,960 --> 00:35:30,359
実験は、時期尚早のヒューリスティックとアリのヒューリスティックの

811
00:35:30,359 --> 00:35:31,859
すべての組み合わせをカバーするために 1600 の実験をカバーしました

812
00:35:31,859 --> 00:35:33,540


813
00:35:33,540 --> 00:35:35,579


814
00:35:35,579 --> 00:35:38,400
これらの実験はそれぞれ

815
00:35:38,400 --> 00:35:41,760
10 回繰り返され、

816
00:35:41,760 --> 00:35:44,599
統計分析用に

817
00:35:45,300 --> 00:35:47,300


818
00:35:47,300 --> 00:35:51,300
説明されました。実験ごとに 2000 rnns が

819
00:35:51,300 --> 00:35:55,200


820
00:35:55,200 --> 00:35:58,680
合計で 10 Apex のトレーニングを受け、

821
00:35:58,680 --> 00:36:01,220
夢に関連したトレーニングと評価が生成されました。1

822
00:36:01,220 --> 00:36:05,640
か月かかりました。

823
00:36:05,640 --> 00:36:08,339
実験を完了するために 1,000 個の CPU を使用して、

824
00:36:08,339 --> 00:36:10,619


825
00:36:10,619 --> 00:36:14,579
得られた結果は、

826
00:36:14,579 --> 00:36:16,440
当然、構造

827
00:36:16,440 --> 00:36:18,560
化されていない、構造化されていない、構造化されていない、ごめんなさい、

828
00:36:18,560 --> 00:36:21,359


829
00:36:21,359 --> 00:36:23,880
最適化されていない、最適化された構造から結果が得られました。そして、

830
00:36:23,880 --> 00:36:26,880
それは必要性を上回っていました。

831
00:36:26,880 --> 00:36:28,200


832
00:36:28,200 --> 00:36:31,020
そして、アリの組み合わせのいくつかは上回りました。

833
00:36:31,020 --> 00:36:34,500
そうですね、ここでの試験は

834
00:36:34,500 --> 00:36:36,420
左から 4 番目で、

835
00:36:36,420 --> 00:36:38,820
平均

836
00:36:38,820 --> 00:36:41,579
絶対誤差、または

837
00:36:41,579 --> 00:36:44,099
ヘルスとヒューリスティックのバージョンまたは組み合わせの一部が

838
00:36:44,099 --> 00:36:46,140


839
00:36:46,140 --> 00:36:49,460
試験から得られたことがわかります。

840
00:36:49,920 --> 00:36:53,220
そこで、

841
00:36:53,220 --> 00:36:54,780
統計的な

842
00:36:54,780 --> 00:36:55,619


843
00:36:55,619 --> 00:36:59,220
研究をしようとします。 アリから得た結果なので、

844
00:36:59,220 --> 00:37:02,880


845
00:37:02,880 --> 00:37:05,460


846
00:37:05,460 --> 00:37:08,400
その結果から得られた上位のパフォーマンス ニューラル ネットワークを調べようとしました。それで、

847
00:37:08,400 --> 00:37:14,339
上位 10、25、120、200、250、500 の結果を調べてみると、

848
00:37:14,339 --> 00:37:16,980


849
00:37:16,980 --> 00:37:19,079
これらのヒューリスティックの寄与を確認できました。

850
00:37:19,079 --> 00:37:22,500
この最高のパフォーマンスを誇るニューラル

851
00:37:22,500 --> 00:37:24,839
ネットワークまたは構造では、

852
00:37:24,839 --> 00:37:28,260
これらのヒューリスティックがこれらの結果の

853
00:37:28,260 --> 00:37:31,440
ほとんどに効果的に貢献していることがわかりました。

854
00:37:31,440 --> 00:37:35,060
しかし、

855
00:37:35,060 --> 00:37:37,560


856
00:37:37,560 --> 00:37:40,140


857
00:37:40,140 --> 00:37:42,140


858
00:37:43,140 --> 00:37:46,320
私たちにとって本当に興味をそそられた、または驚く

859
00:37:46,320 --> 00:37:48,780
べきことに、

860
00:37:48,780 --> 00:37:52,260
私たちが見たのは、

861
00:37:52,260 --> 00:37:54,000
現在の接続が

862
00:37:54,000 --> 00:37:55,920
この結果では消えています。これは、

863
00:37:55,920 --> 00:37:58,260
最高のパフォーマンスを発揮するニューラル ネットワークには

864
00:37:58,260 --> 00:38:00,839
それほど多くの Recon 接続がなかったためです。つまり、

865
00:38:00,839 --> 00:38:02,579


866
00:38:02,579 --> 00:38:06,119


867
00:38:06,119 --> 00:38:09,180
メモリ ベースのセルが前回からの

868
00:38:09,180 --> 00:38:11,099
反復情報の役割を果たしていたということになります。

869
00:38:11,099 --> 00:38:13,619
テストですが、

870
00:38:13,619 --> 00:38:16,619
この層を拡張したかっただけです

871
00:38:16,619 --> 00:38:19,740
が、

872
00:38:19,740 --> 00:38:23,899
今後の調​​査について話し合うためのリストに入っています えー、

873
00:38:25,800 --> 00:38:28,920
これは、

874
00:38:28,920 --> 00:38:31,320


875
00:38:31,320 --> 00:38:34,380
実験から得られた結果に基づいたアリの成果の単なる要約です

876
00:38:34,380 --> 00:38:37,339
外国人が

877
00:38:52,339 --> 00:38:54,540
繰り返し利用するエクスプロイト 接続が

878
00:38:54,540 --> 00:38:56,760
成功したことが証明されたのは、

879
00:38:56,760 --> 00:38:59,300
えー、

880
00:38:59,300 --> 00:39:01,800
組織ヒューリスティックの正則化コンポーネントであるため、

881
00:39:01,800 --> 00:39:04,260


882
00:39:04,260 --> 00:39:06,780


883
00:39:06,780 --> 00:39:09,079
この表に示されているより良い結果が得られる可能性があること

884
00:39:09,079 --> 00:39:13,079
と、ここでのジャンピング アリのジャンピング アリにより、

885
00:39:13,079 --> 00:39:15,359


886
00:39:15,359 --> 00:39:18,560
非トランピング イオン

887
00:39:19,079 --> 00:39:22,160
と比較してパフォーマンスが向上したためです。

888
00:39:24,359 --> 00:39:27,780
えー、

889
00:39:27,780 --> 00:39:28,940


890
00:39:28,940 --> 00:39:30,680


891
00:39:30,680 --> 00:39:35,280
リング戦略も効果的であることが証明されたデータです。

892
00:39:35,280 --> 00:39:38,099
これを見てみると、

893
00:39:38,099 --> 00:39:40,260


894
00:39:40,260 --> 00:39:44,240
賃金公聴会を適用しない場合と比較したデータもあります。それでは

895
00:39:46,260 --> 00:39:48,619


896
00:39:54,660 --> 00:39:58,220
究極的な戦略であり、

897
00:39:58,220 --> 00:40:00,500
汎用的な

898
00:40:00,500 --> 00:40:03,000
戦略です。 使用は、

899
00:40:03,000 --> 00:40:05,220


900
00:40:05,220 --> 00:40:08,220
エンド

901
00:40:08,220 --> 00:40:10,020
コロニーベースおよびエンドコール最適化ベースのあらゆる問題や解決策に適用するのに十分汎用的です、

902
00:40:10,020 --> 00:40:11,579


903
00:40:11,579 --> 00:40:12,420


904
00:40:12,420 --> 00:40:15,180
バーモント堆積物、

905
00:40:15,180 --> 00:40:17,280
私たちが思いついた方法は、これまで

906
00:40:17,280 --> 00:40:18,900
どのイラストレーターにも導入されていなかった値でもあります

907
00:40:18,900 --> 00:40:21,839
生き物

908
00:40:21,839 --> 00:40:23,640
です。他のベンチマークやこの分野の最新技術と比較した広告のパフォーマンスも

909
00:40:23,640 --> 00:40:26,099


910
00:40:26,099 --> 00:40:28,680


911
00:40:28,680 --> 00:40:30,599
驚くべきものであり、

912
00:40:30,599 --> 00:40:31,859


913
00:40:31,859 --> 00:40:35,339
今後は

914
00:40:35,339 --> 00:40:39,000
良いリソースが得られると考えましたが、

915
00:40:39,000 --> 00:40:42,260
アリの主な欠点はその

916
00:40:42,260 --> 00:40:44,700
生き物であることです。 スペース

917
00:40:44,700 --> 00:40:48,180
ええと、アリはこの大規模に

918
00:40:48,180 --> 00:40:50,300
接続されたええとメティックに

919
00:40:50,300 --> 00:40:53,280
接続された上部構造に取り組みましたが、

920
00:40:53,280 --> 00:40:56,760
それは大規模です、はい、でもまだ個別です、ええ、

921
00:40:56,760 --> 00:40:58,200


922
00:40:58,200 --> 00:41:01,200
アリはこれらのノード間を自由に移動できます

923
00:41:01,200 --> 00:41:04,380
、または、

924
00:41:04,380 --> 00:41:06,960
これらの事前

925
00:41:06,960 --> 00:41:10,260
定義されたええと接続を介してこれらの音符の間を移動することを強制されます

926
00:41:10,260 --> 00:41:14,599
鍛造エッジまたは現在のエッジです。

927
00:41:14,599 --> 00:41:16,140


928
00:41:16,140 --> 00:41:19,320
そこで、その

929
00:41:19,320 --> 00:41:21,540
連続検索を削除して、空間の通りを削除し、

930
00:41:21,540 --> 00:41:23,040
連続空間に置き換えることを考えました。

931
00:41:23,040 --> 00:41:25,440


932
00:41:25,440 --> 00:41:29,640


933
00:41:29,640 --> 00:41:31,680
そこで、3D 検索スペースを設計しました。そこで、

934
00:41:31,680 --> 00:41:34,560
検索ビットには時間の長さを表すレイヤーのようなものが含まれていました。

935
00:41:34,560 --> 00:41:37,800


936
00:41:37,800 --> 00:41:40,500
ええと、アリは

937
00:41:40,500 --> 00:41:44,280
これらの層の間を飛び越えて、再帰接続を提供する必要があります。

938
00:41:44,280 --> 00:41:46,859


939
00:41:46,859 --> 00:41:50,099
したがって、これらの各層では、フォワード

940
00:41:50,099 --> 00:41:52,859
とポートを提供するだけです。申し訳ありませんが、

941
00:41:52,859 --> 00:41:54,599
ノード間のエッジと

942
00:41:54,599 --> 00:41:57,680
ノード間のエッジです

943
00:41:58,800 --> 00:42:00,960
コミック スライドのこの行では、

944
00:42:00,960 --> 00:42:03,780


945
00:42:03,780 --> 00:42:06,060
缶または連続的

946
00:42:06,060 --> 00:42:08,040
なエンドでどのように移動するかの例を示します。

947
00:42:08,040 --> 00:42:11,160
つまり、エージェントまたはアリは、先に

948
00:42:11,160 --> 00:42:13,260


949
00:42:13,260 --> 00:42:16,320
進むレイヤーの 1 つを選択することから始まります。 これは個別の方法で行われ、

950
00:42:16,320 --> 00:42:17,640


951
00:42:17,640 --> 00:42:19,920
これが完了すると、

952
00:42:19,920 --> 00:42:21,480


953
00:42:21,480 --> 00:42:24,240
搾取探索動作を行うかどうかが決定されます。

954
00:42:24,240 --> 00:42:25,619
そして、この

955
00:42:25,619 --> 00:42:27,780
例では、

956
00:42:27,780 --> 00:42:30,060
探索動作を行うことにしたので、

957
00:42:30,060 --> 00:42:34,020


958
00:42:34,020 --> 00:42:38,520
次の角度と半径を決定します。 それが完了すると、そのレイヤー上での割り当てが行われ、

959
00:42:38,520 --> 00:42:41,160


960
00:42:41,160 --> 00:42:43,680
その場所に進み、

961
00:42:43,680 --> 00:42:45,060


962
00:42:45,060 --> 00:42:47,460
エクスプロイトを行うかどうか、または次の動きが

963
00:42:47,460 --> 00:42:50,040
エクスプロイト探査の動きであり、この

964
00:42:50,040 --> 00:42:51,619
例の

965
00:42:51,619 --> 00:42:55,460
エクスプロイトの動きであるかどうかを決定するため、

966
00:42:55,460 --> 00:42:58,380
正式なエクスプロイトを試みます。

967
00:42:58,380 --> 00:43:00,359
他のファンによって以前に

968
00:43:00,359 --> 00:43:04,319
検索スペースに配置されたバーモントをトレースします。そのため、

969
00:43:04,319 --> 00:43:06,599


970
00:43:06,599 --> 00:43:08,280


971
00:43:08,280 --> 00:43:12,180
各端を通して以前に定義されたものである検出半径を使用し、

972
00:43:12,180 --> 00:43:12,780


973
00:43:12,780 --> 00:43:16,560
ホルモン トレースの質量中心を見つけて

974
00:43:16,560 --> 00:43:19,859
、それを一度検出します。

975
00:43:19,859 --> 00:43:21,780


976
00:43:21,780 --> 00:43:24,119
ホルモンの重心を計算して

977
00:43:24,119 --> 00:43:26,460
次の場所にあるとみなして

978
00:43:26,460 --> 00:43:29,520
その場所に移動し、

979
00:43:29,520 --> 00:43:31,800


980
00:43:31,800 --> 00:43:34,079
次の動きが搾取

981
00:43:34,079 --> 00:43:37,079
探査の動きであるかどうかを決定します。

982
00:43:37,079 --> 00:43:39,240
各場所で、

983
00:43:39,240 --> 00:43:41,579
ステップの種類が

984
00:43:41,579 --> 00:43:43,740
搾取的循環であるかどうかを決定する前に、

985
00:43:43,740 --> 00:43:45,839


986
00:43:45,839 --> 00:43:48,599
同時に同じレベルに留まるかどうかも決定されます。たとえば、

987
00:43:48,599 --> 00:43:53,060
次のタイムラインに

988
00:43:53,640 --> 00:43:56,760
ジャンプするかどうかも決定されます。 動きは

989
00:43:56,760 --> 00:43:58,440
同じレベルにあります、

990
00:43:58,440 --> 00:43:59,220


991
00:43:59,220 --> 00:44:02,220
ええと、動きが同じレベルにある場合は、

992
00:44:02,220 --> 00:44:05,220
S が搾取の動きをしている場合、

993
00:44:05,220 --> 00:44:07,200
それはその前にある

994
00:44:07,200 --> 00:44:09,780
1 つのフレーズからのみ考慮されます、ええと、

995
00:44:09,780 --> 00:44:13,140


996
00:44:13,140 --> 00:44:15,420
それはできるからです そうでない

997
00:44:15,420 --> 00:44:17,540
場合と同様に、同時に

998
00:44:17,540 --> 00:44:20,520
後方に移動することはありません。ネットワーク

999
00:44:20,520 --> 00:44:23,880
では許可されていない後方ステップを実行します

1000
00:44:23,880 --> 00:44:26,420


1001
00:44:26,520 --> 00:44:28,740
が、

1002
00:44:28,740 --> 00:44:31,260


1003
00:44:31,260 --> 00:44:34,800
上の層でさらにタイムラグが発生する場合は、それが可能であり、

1004
00:44:34,800 --> 00:44:36,780
再帰エッジを実行します。

1005
00:44:36,780 --> 00:44:41,940
したがって、現在のエッジは時間を遡ることができます。ああ、

1006
00:44:41,940 --> 00:44:44,220
申し訳ありませんが、

1007
00:44:44,220 --> 00:44:49,140
前のスライドの構造に戻ってください。レイヤーです。これで、

1008
00:44:49,140 --> 00:44:51,720
アリは緊張しているときにすべての形式的なトレースを考慮し、

1009
00:44:51,720 --> 00:44:53,760


1010
00:44:53,760 --> 00:44:55,619
前にあるものと

1011
00:44:55,619 --> 00:44:58,619
後ろにあるものを半径で考慮できるようになります。 この例では、

1012
00:44:58,619 --> 00:45:00,540


1013
00:45:00,540 --> 00:45:02,460
このステップでは、半径を

1014
00:45:02,460 --> 00:45:04,079
感知しているときにすべてのリモートトレースを考慮して重心を

1015
00:45:04,079 --> 00:45:06,540
計算し、

1016
00:45:06,540 --> 00:45:08,839
それを次の位置として考慮し

1017
00:45:08,839 --> 00:45:11,880
、それから

1018
00:45:11,880 --> 00:45:14,400
これを続けるかどうかを検討します。

1019
00:45:14,400 --> 00:45:17,880
出力ノードの近くに到達し、

1020
00:45:17,880 --> 00:45:19,740
これが完了すると、入力から出力までのパスの最終位置として

1021
00:45:19,740 --> 00:45:23,099
どの出力ノードを

1022
00:45:23,099 --> 00:45:26,400
考慮するかを決定します。

1023
00:45:26,400 --> 00:45:29,599


1024
00:45:29,599 --> 00:45:31,140


1025
00:45:31,140 --> 00:45:34,680
その後、他の端も同じことを行います。

1026
00:45:34,680 --> 00:45:38,040
そして、

1027
00:45:38,040 --> 00:45:42,300
いくつかの入力といくつかの出力から異なるパスがあり、

1028
00:45:42,300 --> 00:45:45,180
アカウントはこれらのパスをとり、

1029
00:45:45,180 --> 00:45:47,400


1030
00:45:47,400 --> 00:45:49,560


1031
00:45:49,560 --> 00:45:52,200
ノードがあまり多くならないように、そしてノードが互いに非常に近くなるようにノードを凝縮しようとします。

1032
00:45:52,200 --> 00:45:54,300


1033
00:45:54,300 --> 00:45:57,599
特定の近接内にある 1 つのノードは、

1034
00:45:57,599 --> 00:46:00,300
DB スキャンを使用してクラスター化され、

1035
00:46:00,300 --> 00:46:04,619
ノードの数が減ります。その後、

1036
00:46:04,619 --> 00:46:07,440
パスが取得され、

1037
00:46:07,440 --> 00:46:08,240


1038
00:46:08,240 --> 00:46:11,700


1039
00:46:11,700 --> 00:46:15,660
十分な新しい構造が収集されて構造に配置され、次に送信されます。

1040
00:46:15,660 --> 00:46:18,000
トレーニングとテストを行うワーカー プロセスと

1041
00:46:18,000 --> 00:46:20,040
、それを母集団と比較する

1042
00:46:20,040 --> 00:46:22,500
最もパフォーマンスの高い RN と、

1043
00:46:22,500 --> 00:46:26,400
この時点からのプラスはほぼ同じになります

1044
00:46:26,400 --> 00:46:29,819


1045
00:46:29,819 --> 00:46:32,280
構造が構築され、

1046
00:46:32,280 --> 00:46:34,079
トレーニングとテストのプロセスが完了すると、アリとほぼ同じになります

1047
00:46:34,079 --> 00:46:36,839


1048
00:46:36,839 --> 00:46:39,560
ダンスで議論したものと同じです、

1049
00:46:40,740 --> 00:46:43,500
えっと、これはアリが

1050
00:46:43,500 --> 00:46:47,579
これらの

1051
00:46:47,579 --> 00:46:51,060
パスをたどる方法を示すアニメーションでもあります、えー、見てください、

1052
00:46:51,060 --> 00:46:53,339
3D 空間の入力から出力まで、

1053
00:46:53,339 --> 00:46:54,420


1054
00:46:54,420 --> 00:46:57,480
それは 3D 検索空間です

1055
00:46:57,480 --> 00:47:01,020
あたかも端を見ているかのようです ああ、アリには

1056
00:47:01,020 --> 00:47:04,140
調整可能なハイパー パラメータが 8 つしかありません

1057
00:47:04,140 --> 00:47:06,540


1058
00:47:06,540 --> 00:47:08,640
これを端と比較して調べると、

1059
00:47:08,640 --> 00:47:10,859
ハイパープランナーや他の

1060
00:47:10,859 --> 00:47:13,800
メソッドの数の半分です これらのハイパー パラメータは、

1061
00:47:13,800 --> 00:47:15,599
検索空間のレイヤーの数です

1062
00:47:15,599 --> 00:47:17,760
脚の種類の数

1063
00:47:17,760 --> 00:47:20,520
探索空間にどれくらいの脚があるか

1064
00:47:20,520 --> 00:47:22,920
エージェントの数 似

1065
00:47:22,920 --> 00:47:25,859
ているものに似ているアリの数

1066
00:47:25,859 --> 00:47:28,140
似たようなハイパーパラメータとアリがある

1067
00:47:28,140 --> 00:47:30,680


1068
00:47:30,839 --> 00:47:32,339
um

1069
00:47:32,339 --> 00:47:34,980
エージェントまたはアリの感知半径

1070
00:47:34,980 --> 00:47:36,240


1071
00:47:36,240 --> 00:47:38,400
um エージェントが新しいノードを作成する確率

1072
00:47:38,400 --> 00:47:43,619
えー、どのパラメーターが

1073
00:47:43,619 --> 00:47:45,540
利用されるのではなく探索を表しているか、あるいは

1074
00:47:45,540 --> 00:47:48,060


1075
00:47:48,060 --> 00:47:50,640
業界における 1 つのバックトレースからのすべてのもの えー、

1076
00:47:50,640 --> 00:47:53,160
ノードの補償

1077
00:47:53,160 --> 00:47:56,880
えー、パラメーターまたは要因 えー、

1078
00:47:56,880 --> 00:47:58,440


1079
00:47:58,440 --> 00:48:01,200
その変数 DB スキャンで表されるパラメータは、

1080
00:48:01,200 --> 00:48:03,900


1081
00:48:03,900 --> 00:48:06,660
ハイパー パラメータ、ハイパー パラメータ

1082
00:48:06,660 --> 00:48:07,920


1083
00:48:07,920 --> 00:48:09,900


1084
00:48:09,900 --> 00:48:11,940
、ガンの場合も考慮されます。ええと、1 つの更新パラメータと 1 つのボラティリティ プライマーからのものです。これらは、

1085
00:48:11,940 --> 00:48:14,280


1086
00:48:14,280 --> 00:48:18,660
ええと SEO ベースの問題にも存在します。ええと、

1087
00:48:18,660 --> 00:48:21,259
解決策です。申し訳ありませんが、

1088
00:48:22,140 --> 00:48:23,640
実験は 3 年間使用されました。

1089
00:48:23,640 --> 00:48:25,319


1090
00:48:25,319 --> 00:48:28,200
パラメーターの数とサイズが異なります

1091
00:48:28,200 --> 00:48:30,919


1092
00:48:31,140 --> 00:48:33,900
えー、結果は、

1093
00:48:33,900 --> 00:48:35,900


1094
00:48:36,260 --> 00:48:39,060
缶から得られた結果が、えー、

1095
00:48:39,060 --> 00:48:41,460


1096
00:48:41,460 --> 00:48:44,339
アリと非常に競争しており、検査すると、

1097
00:48:44,339 --> 00:48:47,160
必ずしも

1098
00:48:47,160 --> 00:48:49,260
優れているわけではありませんが、競争しました、えー、同じレベルでしたが、

1099
00:48:49,260 --> 00:48:50,819


1100
00:48:50,819 --> 00:48:55,560
それは また、

1101
00:48:55,560 --> 00:48:58,500
データベースのデータセットの 1 つではあまりうまくいきませんでした

1102
00:48:58,500 --> 00:49:04,440
が、それは主な絶対エラー

1103
00:49:04,440 --> 00:49:06,960
としてパフォーマンスを比較していたものとの比較ですが、えー、

1104
00:49:06,960 --> 00:49:10,200


1105
00:49:10,200 --> 00:49:13,200
がんの結果との比較です、えー、えー、申し訳ありませんが、

1106
00:49:13,200 --> 00:49:13,920


1107
00:49:13,920 --> 00:49:15,359


1108
00:49:15,359 --> 00:49:17,339


1109
00:49:17,339 --> 00:49:19,880


1110
00:49:25,319 --> 00:49:28,260
サイズから

1111
00:49:28,260 --> 00:49:31,880
ケアンズから入手した新しいネットワークでは、

1112
00:49:31,880 --> 00:49:35,160
構造がまばらだったので、

1113
00:49:35,160 --> 00:49:37,380


1114
00:49:37,380 --> 00:49:39,480
パフォーマンスが試験と競合していましたが、

1115
00:49:39,480 --> 00:49:42,420
構造もアリと

1116
00:49:42,420 --> 00:49:45,420
比較され、はるかにまばらで、

1117
00:49:45,420 --> 00:49:49,800
サムに似ていました。

1118
00:49:49,800 --> 00:49:52,740


1119
00:49:52,740 --> 00:49:55,859
試験から得られた構造のサイズは、試験が遺伝ベースであることを覚えておいてください。つまり、

1120
00:49:55,859 --> 00:49:57,960


1121
00:49:57,960 --> 00:50:00,000
構造の開始は

1122
00:50:00,000 --> 00:50:01,740
最小構造要素を使用した構造最適化プロセスです。

1123
00:50:01,740 --> 00:50:03,599


1124
00:50:03,599 --> 00:50:06,060
しかし、

1125
00:50:06,060 --> 00:50:08,480
ローカルの Minimus

1126
00:50:08,480 --> 00:50:10,800
トラップトラップの影響を受けやすかったです。 は

1127
00:50:10,800 --> 00:50:14,160
この問題には適していません

1128
00:50:14,160 --> 00:50:17,099
が、

1129
00:50:17,099 --> 00:50:19,740
より小さな構造と、

1130
00:50:19,740 --> 00:50:21,420


1131
00:50:21,420 --> 00:50:25,020
他のメッセージ検査者と競合するパフォーマンスも得られました。

1132
00:50:28,680 --> 00:50:32,579
したがって、癌の利点は、アリと

1133
00:50:32,579 --> 00:50:35,700
比較してアンバランスな空間があることです。

1134
00:50:35,700 --> 00:50:37,079


1135
00:50:37,079 --> 00:50:40,020


1136
00:50:40,020 --> 00:50:42,900
結果結果と比較して、結果 結果として出てきたものは、アリや検査ハイパーパラメータと比べて良好でした。

1137
00:50:42,900 --> 00:50:45,599


1138
00:50:45,599 --> 00:50:47,760
調整可能なハイパーパラメータは、検査アリのパラメータの半分です。

1139
00:50:47,760 --> 00:50:50,520


1140
00:50:50,520 --> 00:50:53,220
また、

1141
00:50:53,220 --> 00:50:56,040
ニューラルトポロジを間接的に 3D 検索空間にエンコードしたので、

1142
00:50:56,040 --> 00:50:57,720
これはそのうちの 1 つであり、

1143
00:50:57,720 --> 00:51:00,960
重要な貢献の貢献度に依存するかもしれません。

1144
00:51:00,960 --> 00:51:04,220


1145
00:51:04,380 --> 00:51:07,440
ええと、これまでの目標とできることは

1146
00:51:07,440 --> 00:51:08,880
解決策です

1147
00:51:08,880 --> 00:51:11,839
ええと、ニューラル ゴールド アーキテクチャ検索を適用したのは、

1148
00:51:11,839 --> 00:51:14,940


1149
00:51:14,940 --> 00:51:16,380


1150
00:51:16,380 --> 00:51:19,859


1151
00:51:19,859 --> 00:51:21,780
最適化

1152
00:51:21,780 --> 00:51:24,079
プロセスまたは進化プロセス中にニューラル ネットワークのシナプス パラメーターを最適化しなかったことを意味します。

1153
00:51:24,079 --> 00:51:25,680


1154
00:51:25,680 --> 00:51:28,559


1155
00:51:28,559 --> 00:51:31,440
これも同様に行うため、

1156
00:51:31,440 --> 00:51:34,680
ニューラル ネットワークをトレーニングしたり、

1157
00:51:34,680 --> 00:51:37,920
シナプスの重みを最適化したりするため、

1158
00:51:37,920 --> 00:51:39,420


1159
00:51:39,420 --> 00:51:42,660
最適化プロセス中のニューラル ネットワークの構造の重み、

1160
00:51:42,660 --> 00:51:45,000
構造最適化プロセスを行うため、

1161
00:51:45,000 --> 00:51:47,280


1162
00:51:47,280 --> 00:51:48,920
探索空間

1163
00:51:48,920 --> 00:51:51,960
に 4 次元を追加し、それを埋め込みました。

1164
00:51:51,960 --> 00:51:54,420
シナプスパラメータの重み

1165
00:51:54,420 --> 00:52:00,740
ええと、そのマップのこのターミナルはその

1166
00:52:00,740 --> 00:52:03,440
新しい次元にあります、

1167
00:52:03,440 --> 00:52:07,380
私たちも末端で

1168
00:52:07,380 --> 00:52:10,200
自己認識を持ち、

1169
00:52:10,200 --> 00:52:12,380


1170
00:52:12,380 --> 00:52:15,540


1171
00:52:15,540 --> 00:52:18,839
進化のプロセスを通して自分自身を進化させようとしました、そうすれば彼らは

1172
00:52:18,839 --> 00:52:21,900
変化などに適応できるようになります ええと、より良いパフォーマンスを提供できる

1173
00:52:21,900 --> 00:52:23,819
ように、自分自身を適応させてください。

1174
00:52:23,819 --> 00:52:25,500


1175
00:52:25,500 --> 00:52:28,020
ええと、以前の感知半径などの特性の動作を変更してもらいたいのです。

1176
00:52:28,020 --> 00:52:29,760


1177
00:52:29,760 --> 00:52:32,819


1178
00:52:32,819 --> 00:52:35,579
たとえば、それらは、反復を通じて変更できる変数にすることができます。

1179
00:52:35,579 --> 00:52:38,220


1180
00:52:38,220 --> 00:52:40,380
装飾 ええと、

1181
00:52:40,380 --> 00:52:43,140
各端は、ええと、これらの特性を変えることができます ええと、

1182
00:52:43,140 --> 00:52:47,339


1183
00:52:47,339 --> 00:52:49,040
進化が進むにつれて、

1184
00:52:49,040 --> 00:52:52,079


1185
00:52:52,079 --> 00:52:55,460
生成されているニューラル ネットワークのパフォーマンスに基づいて、ええと、そのままの状態で、

1186
00:53:00,920 --> 00:53:05,339
これを行う利点は、

1187
00:53:05,339 --> 00:53:08,220
逆

1188
00:53:08,220 --> 00:53:10,559
伝播プロセスを排除できることでした 進化プロセス

1189
00:53:10,559 --> 00:53:13,260
で最もコンパイルに完全に高価な部分

1190
00:53:13,260 --> 00:53:15,359
と、試験で

1191
00:53:15,359 --> 00:53:18,000
これまで使用した方法のProでは、これが終了し、

1192
00:53:18,000 --> 00:53:21,119


1193
00:53:21,119 --> 00:53:22,980
非常に排除されているため、その伝播によりはるかに

1194
00:53:22,980 --> 00:53:26,819
高速化されました

1195
00:53:26,819 --> 00:53:30,079
革命プロセスもあります

1196
00:53:30,300 --> 00:53:32,640


1197
00:53:32,640 --> 00:53:34,920


1198
00:53:34,920 --> 00:53:36,839
最初に右側のグラフについて説明します。このグラフは、

1199
00:53:36,839 --> 00:53:39,240


1200
00:53:39,240 --> 00:53:41,339


1201
00:53:41,339 --> 00:53:42,839


1202
00:53:42,839 --> 00:53:45,720
逆伝播のない 4 次元のがんから得られた結果の厚さまたは損傷の有意な誤差を、

1203
00:53:45,720 --> 00:53:48,359


1204
00:53:48,359 --> 00:53:50,339
逆伝播の可能性

1205
00:53:50,339 --> 00:53:52,319
と最終的な正常確率と比較したものです。

1206
00:53:52,319 --> 00:53:54,540
結果は、

1207
00:53:54,540 --> 00:53:58,200
特定のデータベース上で、ええと、

1208
00:53:58,200 --> 00:54:00,900
あの繁殖、えー、杖と

1209
00:54:00,900 --> 00:54:03,059
その繁殖のない機会が、えー、

1210
00:54:03,059 --> 00:54:06,059
かなり似たような仕事をしたということを示しました、

1211
00:54:06,059 --> 00:54:08,339
えー、でも、この特定のデータベースではどちらもアリより優れていましたが、

1212
00:54:08,339 --> 00:54:11,160


1213
00:54:11,160 --> 00:54:13,800
実際にはそれらが主な貢献

1214
00:54:13,800 --> 00:54:16,440
というか主要な役割を果たしました このケースを適用する利点は、

1215
00:54:16,440 --> 00:54:19,619
左側のグラフに表示されます。

1216
00:54:19,619 --> 00:54:23,099


1217
00:54:23,099 --> 00:54:25,140
結果を比較すると、

1218
00:54:25,140 --> 00:54:28,200
えー、進化の時間に基づいて、

1219
00:54:28,200 --> 00:54:31,020
進化の時間に基づいて、

1220
00:54:31,020 --> 00:54:32,280


1221
00:54:32,280 --> 00:54:35,520
えー、したがって、多くの時間がかかったことがわかります。

1222
00:54:35,520 --> 00:54:39,660


1223
00:54:39,660 --> 00:54:44,220
缶やアリのバックプロパゲーションバージョンよりもはるかに短い時間で、

1224
00:54:44,220 --> 00:54:46,319
これらの異なるアンプと数を使用しています。

1225
00:54:46,319 --> 00:54:47,579


1226
00:54:47,579 --> 00:54:50,780


1227
00:54:51,260 --> 00:54:55,380
また、このグラフは、通常の缶と比較してどれだけ速く、その伝播プリキャンを示しています。

1228
00:54:55,380 --> 00:54:57,900


1229
00:54:57,900 --> 00:55:00,359


1230
00:55:00,359 --> 00:55:04,020
したがって、この図では、曲線が

1231
00:55:04,020 --> 00:55:08,760
データ行は、

1232
00:55:08,760 --> 00:55:11,280
バックプロパゲーションフリーの缶とニューラルネットワークの

1233
00:55:11,280 --> 00:55:14,099
準備または生成に要した時間を示しています。

1234
00:55:14,099 --> 00:55:17,099
または、通常の場合の Mac 伝播ガンと比較して、伝播フリーの缶の方が

1235
00:55:17,099 --> 00:55:19,920


1236
00:55:19,920 --> 00:55:22,500
ニューラルネットワークの準備または生成に時間がかかったことがわかります。

1237
00:55:22,500 --> 00:55:24,599


1238
00:55:24,599 --> 00:55:26,520
それは

1239
00:55:26,520 --> 00:55:28,800
4 番目の次元があるためです。また、

1240
00:55:28,800 --> 00:55:31,619


1241
00:55:31,619 --> 00:55:33,780
反復を通じてエージェントの端を回転させる必要があるため、そのためにはより多くの時間が必要です。

1242
00:55:33,780 --> 00:55:35,579


1243
00:55:35,579 --> 00:55:37,559
うーん、でも、もう

1244
00:55:37,559 --> 00:55:39,480
1 つの曲線です。他の 2 つの曲線は破線で

1245
00:55:39,480 --> 00:55:42,180


1246
00:55:42,180 --> 00:55:44,520
示されています。これは、  time

1247
00:55:44,520 --> 00:55:47,240
2 つのメソッドを検証するのに要した時間、

1248
00:55:47,240 --> 00:55:49,619


1249
00:55:49,619 --> 00:55:51,780
ニューラル ネットワークのトレーニングと検証に要した時間。Mac の

1250
00:55:51,780 --> 00:55:52,800


1251
00:55:52,800 --> 00:55:55,500
伝播フリーの缶は

1252
00:55:55,500 --> 00:55:57,359
ニューラル ネットワークをトレーニングする必要がありません。

1253
00:55:57,359 --> 00:55:58,740


1254
00:55:58,740 --> 00:56:01,260
その伝播は行わない

1255
00:56:01,260 --> 00:56:03,960
ので、次の時点でそれがわかります。

1256
00:56:03,960 --> 00:56:06,240
かかった時間は、がんの逆伝播バージョンよりも一桁短いです。

1257
00:56:06,240 --> 00:56:07,380


1258
00:56:07,380 --> 00:56:09,240


1259
00:56:09,240 --> 00:56:10,260


1260
00:56:10,260 --> 00:56:12,720
これらの実線は、

1261
00:56:12,720 --> 00:56:15,960
両方の方法にかかった累積時間を示しています。

1262
00:56:15,960 --> 00:56:18,359
もちろん、

1263
00:56:18,359 --> 00:56:20,160
伝播先行がんが逆伝播バージョンよりも

1264
00:56:20,160 --> 00:56:21,480
はるかに短い時間しかかかっていないことを示しています。

1265
00:56:21,480 --> 00:56:24,720
3 つの缶の伝播にかかる

1266
00:56:24,720 --> 00:56:25,920
時間ははるかに短く、

1267
00:56:25,920 --> 00:56:29,880
バックプロパゲーションにより、将来の方向性がキャンセルされます。将来の方向性が取り消されます。

1268
00:56:29,880 --> 00:56:32,460
私たちが

1269
00:56:32,460 --> 00:56:34,619


1270
00:56:34,619 --> 00:56:36,660
懸念している点は、

1271
00:56:36,660 --> 00:56:38,400
申し訳ありませんが、

1272
00:56:38,400 --> 00:56:41,579
今後の作業で検討している点は、

1273
00:56:41,579 --> 00:56:44,579
完全な連続空間ですので、

1274
00:56:44,579 --> 00:56:45,839
ご覧のとおり、ええと、

1275
00:56:45,839 --> 00:56:49,680
私たちは 3 番目の

1276
00:56:49,680 --> 00:56:53,579
缶の検索空間は純粋に

1277
00:56:53,579 --> 00:56:56,460
連続ではありません。ええと、次の時間は

1278
00:56:56,460 --> 00:56:59,520
離散レイヤーで表されるため、ええと、

1279
00:56:59,520 --> 00:57:01,319
これを連続ディメンションを表す連続次元レイヤーに置き換えたいと考えています。

1280
00:57:01,319 --> 00:57:03,240


1281
00:57:03,240 --> 00:57:05,640
lag ええと、

1282
00:57:05,640 --> 00:57:09,240
rnns でのタイムラグです。ただし、これは

1283
00:57:09,240 --> 00:57:11,460
少し難しいです。なぜなら、時間の長さの数値は、ええ、

1284
00:57:11,460 --> 00:57:14,819


1285
00:57:14,819 --> 00:57:18,900
最適化プロセスの前に知っておく必要があるからです。なぜなら、それ以外

1286
00:57:18,900 --> 00:57:21,780
では、

1287
00:57:21,780 --> 00:57:25,260
全体をマッピングすることになるからです。 時

1288
00:57:25,260 --> 00:57:29,180
系列、ええと、タイムラプスとして、

1289
00:57:29,180 --> 00:57:31,559
そこから次の時間を選びますが、

1290
00:57:31,559 --> 00:57:32,460


1291
00:57:32,460 --> 00:57:34,500


1292
00:57:34,500 --> 00:57:36,960
これは現実的ではありません。したがって、これが将来の作業で

1293
00:57:36,960 --> 00:57:39,059
調査することを検討している最初の点です。2

1294
00:57:39,059 --> 00:57:42,480
番目は、

1295
00:57:42,480 --> 00:57:45,540
この結果を調査することです。

1296
00:57:45,540 --> 00:57:49,380


1297
00:57:49,380 --> 00:57:51,420
結果では、結果の中で、

1298
00:57:51,420 --> 00:57:54,059


1299
00:57:54,059 --> 00:57:55,740
最もパフォーマンスの高い構造から再帰接続が消失することがアリでした。

1300
00:57:55,740 --> 00:57:58,619


1301
00:57:58,619 --> 00:58:00,540
そして、私たちが持っている理論は、

1302
00:58:00,540 --> 00:58:03,720
メモリベースのセルがこれらの接続を置き換えて、私

1303
00:58:03,720 --> 00:58:05,040
たちが知っている情報を提供するというものです。

1304
00:58:05,040 --> 00:58:08,040
過去 9 つのステップが必要です

1305
00:58:08,040 --> 00:58:11,400
えー、接続と

1306
00:58:11,400 --> 00:58:14,040
比較して、より効果的になるように、これを実行する方が効率的です。そのため、これを実行する

1307
00:58:14,040 --> 00:58:16,260
必要があります。これを

1308
00:58:16,260 --> 00:58:20,640
拡張して、さらに調査します。えー、

1309
00:58:20,640 --> 00:58:22,740
最後に検討したいことは、

1310
00:58:22,740 --> 00:58:25,980
これが次のいずれかであることを意味します

1311
00:58:25,980 --> 00:58:27,599
私たちが一番欲しいものは、壁にあるこの 3 つの点だけです。

1312
00:58:27,599 --> 00:58:30,480
私たちのリストの一番上にあります。ええと、

1313
00:58:30,480 --> 00:58:32,520
3 番目の点は、

1314
00:58:32,520 --> 00:58:34,200
実は、あの、

1315
00:58:34,200 --> 00:58:38,940


1316
00:58:38,940 --> 00:58:42,480
デボラ ゴードン博士の本の中で作られた概念の 1 つだと考えています。

1317
00:58:42,480 --> 00:58:43,740


1318
00:58:43,740 --> 00:58:47,040
ええと、彼女が言及したところです。

1319
00:58:47,040 --> 00:58:50,099
アリの世界の生きている

1320
00:58:50,099 --> 00:58:53,400
生物は、それ

1321
00:58:53,400 --> 00:58:55,440
自体は年齢ではありませんが、

1322
00:58:55,440 --> 00:58:57,480
コロニーがあり、コロニーは

1323
00:58:57,480 --> 00:58:59,640
生物であり、

1324
00:58:59,640 --> 00:59:03,240
始まりであり、成長し

1325
00:59:03,240 --> 00:59:04,980
、相互作用する

1326
00:59:04,980 --> 00:59:06,960
生態系の環境と相互作用します

1327
00:59:06,960 --> 00:59:09,359
他のコロニーと一緒にいて、ある時点で死んでしまいます。

1328
00:59:09,359 --> 00:59:12,359
そのため、アリ自体は

1329
00:59:12,359 --> 00:59:14,339
組織されていません。アリは

1330
00:59:14,339 --> 00:59:17,400
これらの生物の細胞です。コロニー生物です。そのため、

1331
00:59:17,400 --> 00:59:19,799
私たちはその概念を採用し、

1332
00:59:19,799 --> 00:59:22,859
それを方法に適用して、多数の

1333
00:59:22,859 --> 00:59:26,839
コロニーを一緒に住まわせたいと考えています。 並行して

1334
00:59:26,839 --> 00:59:29,339
進化し、お互いにコミュニケーションをとり、

1335
00:59:29,339 --> 00:59:32,339


1336
00:59:32,339 --> 00:59:34,740
これによってより良いパフォーマンスが得られるかどうかを確認したいと考えていますが、

1337
00:59:34,740 --> 00:59:36,480
結局のところ、私たちはソリューションの中で自然を模倣しようとしているためです。

1338
00:59:36,480 --> 00:59:39,540


1339
00:59:39,540 --> 00:59:41,040


1340
00:59:41,040 --> 00:59:43,520
調査してください、

1341
00:59:44,520 --> 00:59:46,500
それではこれで

1342
00:59:46,500 --> 00:59:49,140
私のプレゼンテーションは終わりました、そして質問があれば、

1343
00:59:49,140 --> 00:59:52,279


1344
00:59:53,819 --> 00:59:56,059
外国人は

1345
00:59:56,059 --> 00:59:58,319
素晴らしいですね、

1346
00:59:58,319 --> 01:00:00,299
素晴らしいプレゼンテーションですね、

1347
01:00:00,299 --> 01:00:03,299


1348
01:00:03,299 --> 01:00:04,799
あなたはどうですか、トラヴィスとアレクサンダー、どちらかが最初に行きたいので、

1349
01:00:04,799 --> 01:00:06,900
遠慮なく自己紹介

1350
01:00:06,900 --> 01:00:09,359
と主な質問をしてください それに関してあなたが持っているコメント、

1351
01:00:09,359 --> 01:00:11,540


1352
01:00:16,559 --> 01:00:18,780
わかりました、私は何かを言うことができます、私は

1353
01:00:18,780 --> 01:00:20,460
あまり追加することはありません、私は仕事の核心部分を検討して、

1354
01:00:20,460 --> 01:00:23,579
かなり良い仕事をしたと思います、

1355
01:00:23,579 --> 01:00:25,680


1356
01:00:25,680 --> 01:00:27,960
ええと、私はアレックス・ロビアです 私はロチェスター工科大学で

1357
01:00:27,960 --> 01:00:31,260
コンピューターサイエンスの助教授で、えー、

1358
01:00:31,260 --> 01:00:33,240
関連学部で、

1359
01:00:33,240 --> 01:00:34,980
心理学の関連教授と

1360
01:00:34,980 --> 01:00:37,079
計算神経科学の関連学部で、

1361
01:00:37,079 --> 01:00:40,020


1362
01:00:40,020 --> 01:00:42,599
たくさんのことに取り組んでいますが、

1363
01:00:42,599 --> 01:00:44,400
主に予測コーディング、能動推論

1364
01:00:44,400 --> 01:00:47,040
変分自由エネルギーの雨が多く降り注いでいます。

1365
01:00:47,040 --> 01:00:48,059
これは、

1366
01:00:48,059 --> 01:00:51,299
このグループにとって実際に興味深いもので、ええと、これは

1367
01:00:51,299 --> 01:00:52,680


1368
01:00:52,680 --> 01:00:54,599
私にとって特に興味深いプロジェクトでした。なぜなら、私自身の研究の一分野が、

1369
01:00:54,599 --> 01:00:56,700


1370
01:00:56,700 --> 01:00:59,280
神経進化的手法、あるいは単なる

1371
01:00:59,280 --> 01:01:01,500
自然からインスピレーションを得たメタヒューリスティック

1372
01:01:01,500 --> 01:01:04,619
最適化に取り組んでいるからです。

1373
01:01:04,619 --> 01:01:06,660
アブドゥル

1374
01:01:06,660 --> 01:01:09,839
ラーマンが RIT の博士課程の学生だったときに一緒に仕事ができた喜び、私たちは

1375
01:01:09,839 --> 01:01:11,880


1376
01:01:11,880 --> 01:01:14,460
コロニー ベースの

1377
01:01:14,460 --> 01:01:16,319
最適化アプローチについてよく話し合いました。私は

1378
01:01:16,319 --> 01:01:19,440
彼に、その

1379
01:01:19,440 --> 01:01:21,240
起源やそのようなものを調べるよう勧めました。 私は

1380
01:01:21,240 --> 01:01:23,520
物理的なアリがどのように行動するかを実際に理解しようとしているので、それは

1381
01:01:23,520 --> 01:01:25,920
私にとって常に魅力的でした、

1382
01:01:25,920 --> 01:01:27,960
ええと、

1383
01:01:27,960 --> 01:01:29,460
技術的な部分に関してはあまり編集する必要はありません、彼が

1384
01:01:29,460 --> 01:01:31,440
すべての核となる結果をカバーしていたと思います、

1385
01:01:31,440 --> 01:01:33,839
私が考えたい唯一のことは、そして私が考えたいことです

1386
01:01:33,839 --> 01:01:36,780
実際のところ、

1387
01:01:36,780 --> 01:01:38,880
活発な幼児研究所から

1388
01:01:38,880 --> 01:01:41,880
コロニー法やコロニー法への関心、

1389
01:01:41,880 --> 01:01:43,619
特に彼らにとって何が興味深かったのかを聞くのがもっと興味深かったです。

1390
01:01:43,619 --> 01:01:47,280
なぜなら、何をするのかを考えて

1391
01:01:47,280 --> 01:01:49,619
最適化と呼ぶのですが、

1392
01:01:49,619 --> 01:01:51,480
それを能動的推論の

1393
01:01:51,480 --> 01:01:53,819
観点からどのように見るのかということだと思います。 特に

1394
01:01:53,819 --> 01:01:55,980
興味深く、考えさせられます。そして、

1395
01:01:55,980 --> 01:01:57,599
これが

1396
01:01:57,599 --> 01:02:00,180
聴衆の間での私の質問なのかどうかはわかりませんが、私が構築して前に説明した

1397
01:02:00,180 --> 01:02:02,579
小さなアリのエージェントを行うのか、それともエージェントを行うことができないのかわからないという考えさえありました、

1398
01:02:02,579 --> 01:02:04,319


1399
01:02:04,319 --> 01:02:06,359


1400
01:02:06,359 --> 01:02:08,520
ええと、そこに何があるか知っていますか

1401
01:02:08,520 --> 01:02:10,559
それらを、

1402
01:02:10,559 --> 01:02:12,359


1403
01:02:12,359 --> 01:02:15,119
変分自由エネルギー量を最適化するマルチエージェント システムのようなものとして見る方法

1404
01:02:15,119 --> 01:02:16,440


1405
01:02:16,440 --> 01:02:18,660


1406
01:02:18,660 --> 01:02:20,460


1407
01:02:20,460 --> 01:02:22,380


1408
01:02:22,380 --> 01:02:25,260
集団知性や社会

1409
01:02:25,260 --> 01:02:27,119
組織で何が起こっているかも同様で、

1410
01:02:27,119 --> 01:02:30,059
フリーエネルギーをこれらの非常に

1411
01:02:30,059 --> 01:02:32,339
高いレベルの視点から、

1412
01:02:32,339 --> 01:02:34,799
きめ細かい細胞活動に至るまで見ることができるので、

1413
01:02:34,799 --> 01:02:37,740
私は実際にダニエルと社会組織がいつになったのか知りたいと思っています。

1414
01:02:37,740 --> 01:02:39,480
アクティブな入り口にいる他の人で、

1415
01:02:39,480 --> 01:02:41,400


1416
01:02:41,400 --> 01:02:43,319
特に

1417
01:02:43,319 --> 01:02:45,480
ベースの最適化とメタヒューリスティック

1418
01:02:45,480 --> 01:02:47,040
最適化に興味があることを説明できる人はいませんか?

1419
01:02:47,040 --> 01:02:48,720


1420
01:02:48,720 --> 01:02:51,599
私はそれを知りたいと思っていますが、

1421
01:02:51,599 --> 01:02:53,220
フリーエネルギーとは何かなど、いくつかの興味深い視点があるかもしれません。 アリ

1422
01:02:53,220 --> 01:02:56,760
自体はとても単純です つまり、アリを

1423
01:02:56,760 --> 01:02:58,260
より賢くしたということです 私はローマ人のことを知っていますが、

1424
01:02:58,260 --> 01:02:59,940


1425
01:02:59,940 --> 01:03:02,400
たとえばアリに

1426
01:03:02,400 --> 01:03:04,020
強化

1427
01:03:04,020 --> 01:03:06,240
学習制御システムのようなものを持たせたらどうなるかについて長々と話しました。

1428
01:03:06,240 --> 01:03:08,280
缶

1429
01:03:08,280 --> 01:03:11,579
自体は

1430
01:03:11,579 --> 01:03:14,220
能動的な推論を行っているのですが、それが

1431
01:03:14,220 --> 01:03:16,020
システムにとってどのようなもので、

1432
01:03:16,020 --> 01:03:17,940
彼らは自らの自由エネルギーを最適化しています、

1433
01:03:17,940 --> 01:03:20,640
それらは単なる楽しいちょっとした思考

1434
01:03:20,640 --> 01:03:22,740
実験です、私たちは明らかに

1435
01:03:22,740 --> 01:03:25,260
それらに取り組んでいません、ええ、少なくともアブドゥル・ラーマン

1436
01:03:25,260 --> 01:03:28,140


1437
01:03:28,140 --> 01:03:31,680
私の世界のその部分に私がさらされたことは一度もありませんでした ええと、生体模倣

1438
01:03:31,680 --> 01:03:34,140
知能のことなので、これらが私のコメントです

1439
01:03:34,140 --> 01:03:35,579
特に

1440
01:03:35,579 --> 01:03:37,920
役立つかどうかはわかりませんが、非常に一般的なもので、

1441
01:03:37,920 --> 01:03:39,900
実際にはアクティブな人から知りたいと思っています

1442
01:03:39,900 --> 01:03:42,059
推論研究所、ええと、彼らは

1443
01:03:42,059 --> 01:03:43,799
それに興味を持っています、そしてあなたは

1444
01:03:43,799 --> 01:03:45,780
それがおそらくどこで交差するか知っていますか、それとも

1445
01:03:45,780 --> 01:03:47,280
単にああ、私たちはあなたが

1446
01:03:47,280 --> 01:03:49,559
興味深いトピックや知性を知っているのが好きです、

1447
01:03:49,559 --> 01:03:52,319
それで、はい、

1448
01:03:52,319 --> 01:03:55,079
ありがとうアレクサンドラ・トラヴィス、あなたは

1449
01:03:55,079 --> 01:03:57,000
挨拶をして、トークについての感想を言いたいのですが、

1450
01:03:57,000 --> 01:03:59,359


1451
01:04:00,240 --> 01:04:02,099
私たちは みんな来てるよ、誰かが

1452
01:04:02,099 --> 01:04:03,200


1453
01:04:03,200 --> 01:04:05,940
ここのホワイトジャングルで私を少しでも見てくれることを願ってるよ、こんにちは、私はトラヴィスの

1454
01:04:05,940 --> 01:04:07,920
独房です、私はRITの准教授です、

1455
01:04:07,920 --> 01:04:10,079
私は

1456
01:04:10,079 --> 01:04:11,579
データサイエンスの修士課程の大学院プログラムディレクターでもあります。

1457
01:04:11,579 --> 01:04:13,140


1458
01:04:13,140 --> 01:04:15,000
この仕事やデータ サイエンスに興味がある人はいますか? 知っていますか?

1459
01:04:15,000 --> 01:04:16,799
メールを送ってください。

1460
01:04:16,799 --> 01:04:18,359
この仕事は

1461
01:04:18,359 --> 01:04:21,480
多くの点で本当に非常に興味深いものだと思いました。

1462
01:04:21,480 --> 01:04:23,760
それで多くの Dollarama がそれに取り組んでいました。

1463
01:04:23,760 --> 01:04:25,559
最もクールな部分は、

1464
01:04:25,559 --> 01:04:28,440
人気のニューロ進化アルゴリズムで、

1465
01:04:28,440 --> 01:04:29,880


1466
01:04:29,880 --> 01:04:31,380
私の後に登場した

1467
01:04:31,380 --> 01:04:35,460
ハイパーニートと呼ばれるもので、

1468
01:04:35,460 --> 01:04:37,859
ニューラル アーキテクチャ検索の離散検索空間を

1469
01:04:37,859 --> 01:04:39,599
連続検索空間に変換します。

1470
01:04:39,599 --> 01:04:40,559


1471
01:04:40,559 --> 01:04:42,299


1472
01:04:42,299 --> 01:04:44,099
このバージョンではかなり強力な方法であることが示されています。

1473
01:04:44,099 --> 01:04:46,140
アリのコロニー最適化の

1474
01:04:46,140 --> 01:04:48,180
新しいものは、検索空間を連続にする同じことをします

1475
01:04:48,180 --> 01:04:50,280
が、私が

1476
01:04:50,280 --> 01:04:52,740
本当に素晴らしいと感じたのは、

1477
01:04:52,740 --> 01:04:55,200


1478
01:04:55,200 --> 01:04:56,760
グラフがあり、

1479
01:04:56,760 --> 01:04:58,859
エッジに沿ってアンプを送信するだけの従来のアリのコロニー最適化とは対照的であるということです。

1480
01:04:58,859 --> 01:05:00,839
グラフを見て、

1481
01:05:00,839 --> 01:05:02,280
最適なパスを選択してグラフを構築することができます。ええと、

1482
01:05:02,280 --> 01:05:04,200
ここでの答えは、実際に

1483
01:05:04,200 --> 01:05:06,180
現実世界でアリのように機能すると、

1484
01:05:06,180 --> 01:05:09,180


1485
01:05:09,180 --> 01:05:11,520
点Aから点Bまでだけでなく、連続的な量の空間を移動し

1486
01:05:11,520 --> 01:05:13,380
、実際に下に落ちます フェロモン

1487
01:05:13,380 --> 01:05:16,200
で、

1488
01:05:16,200 --> 01:05:18,480
アリが現実世界でどのように動き回るかを実際にシミュレーションしたようなもので、

1489
01:05:18,480 --> 01:05:19,619


1490
01:05:19,619 --> 01:05:21,540


1491
01:05:21,540 --> 01:05:24,660
古い手法よりも良い結果が得られているので、

1492
01:05:24,660 --> 01:05:27,660
それは本当に嬉しいことだと思います。

1493
01:05:27,660 --> 01:05:30,180
それを見て、

1494
01:05:30,180 --> 01:05:32,640
非常に興味深い作品になったと思いました。

1495
01:05:32,640 --> 01:05:34,819


1496
01:05:35,940 --> 01:05:37,980
素晴らしいです。ああ、アーメッドさん、何か追加したいことはありますか、

1497
01:05:37,980 --> 01:05:39,960


1498
01:05:39,960 --> 01:05:41,760
アリについて考えて、ライブ チャットからいくつかの質問をさせていただきます。

1499
01:05:41,760 --> 01:05:43,380


1500
01:05:43,380 --> 01:05:45,000
ああ、いいです、

1501
01:05:45,000 --> 01:05:46,680
考えようとしています。

1502
01:05:46,680 --> 01:05:49,140
私たちが言いたかったことはすべてカバーしました えー、

1503
01:05:49,140 --> 01:05:52,020
それについて えー、

1504
01:05:52,020 --> 01:05:55,260
アレックスが言っていた 1 つだけ、エージェントに高度な情報を提供するということについて

1505
01:05:55,260 --> 01:05:56,819


1506
01:05:56,819 --> 01:05:59,819
話し合ったことがあると思います。そして、私はそれ

1507
01:05:59,819 --> 01:06:01,619
についてかなりオープンにしています 実際に

1508
01:06:01,619 --> 01:06:02,940
考えてみましたが、彼らはまだ何も実装していませんでしたが、

1509
01:06:02,940 --> 01:06:06,180


1510
01:06:06,180 --> 01:06:07,619
将来の方向性について私が最後に議論したことは、

1511
01:06:07,619 --> 01:06:09,540
私が実際に

1512
01:06:09,540 --> 01:06:11,880
取り組み始めたものですが、彼らは実験を開始していませんでした。

1513
01:06:11,880 --> 01:06:13,920


1514
01:06:13,920 --> 01:06:16,260


1515
01:06:16,260 --> 01:06:18,380
その

1516
01:06:18,660 --> 01:06:21,780
素晴らしい井戸については、進むべき道が山ほどあり、

1517
01:06:21,780 --> 01:06:23,880


1518
01:06:23,880 --> 01:06:25,740


1519
01:06:25,740 --> 01:06:29,160
インタラクティブな設定での純粋なエージェントの

1520
01:06:29,160 --> 01:06:32,099
スティグマジーの相互作用やマルチエージェントのような基本的な質問の1つではありませんが、

1521
01:06:32,099 --> 01:06:34,319
最終的には読み書きなどの複数のスティグマGを介して媒介されます

1522
01:06:34,319 --> 01:06:36,480


1523
01:06:36,480 --> 01:06:38,819
。 エラー修正コードなので、その

1524
01:06:38,819 --> 01:06:41,339
通信設定では、

1525
01:06:41,339 --> 01:06:43,819


1526
01:06:43,819 --> 01:06:46,700


1527
01:06:46,700 --> 01:06:50,220
以前は

1528
01:06:50,220 --> 01:06:51,900
マルチエイジングにアプローチしていた作業が複数の次元に沿って一般化しているように感じましたが、

1529
01:06:51,900 --> 01:06:54,420
連続

1530
01:06:54,420 --> 01:06:56,819
時間機能やその他のいくつかの

1531
01:06:56,819 --> 01:06:58,859
機能のような種類の柔軟性がありませんでした。

1532
01:06:58,859 --> 01:07:00,980


1533
01:07:01,079 --> 01:07:02,880
アリ自身へ、

1534
01:07:02,880 --> 01:07:04,079


1535
01:07:04,079 --> 01:07:07,559
ええと、私は

1536
01:07:07,559 --> 01:07:11,460
アリゾナ州のアメリカ南西部でアリのフィールドワークを5年間行い、

1537
01:07:11,460 --> 01:07:14,400
多くの採餌活動を観察しました。

1538
01:07:14,400 --> 01:07:15,780
非常に

1539
01:07:15,780 --> 01:07:19,880
大きな問題というか、その文脈や設定は

1540
01:07:19,880 --> 01:07:22,980
本当に楽しいものであり、

1541
01:07:22,980 --> 01:07:25,740
あらゆる種類の生命システムに蔓延しています。

1542
01:07:25,740 --> 01:07:28,020
活動的で

1543
01:07:28,020 --> 01:07:30,599
生きているものなら何でもいいのですが、それでは

1544
01:07:30,599 --> 01:07:33,859
なぜ全体的に採餌タイプのアルゴリズムを追求したのでしょ

1545
01:07:33,859 --> 01:07:38,700
うか、またこのクラスには、

1546
01:07:38,700 --> 01:07:42,420


1547
01:07:42,420 --> 01:07:45,299


1548
01:07:45,299 --> 01:07:47,280
ゴードン教授がアリとの遭遇で強調したエージェントと直接接触するインタラクションベースの手法が含まれていますか

1549
01:07:47,280 --> 01:07:50,000


1550
01:07:50,280 --> 01:07:54,119


1551
01:07:54,119 --> 01:07:56,220
私はちょうど

1552
01:07:56,220 --> 01:07:58,619
イギリス人がこのマップについて考えたことを言及するように行動することを学んだところです

1553
01:07:58,619 --> 01:08:01,200
実際にトラヴィスは

1554
01:08:01,200 --> 01:08:03,420
あなたのバージョンでの使用と量子化についてのこのアイデアを始めました

1555
01:08:03,420 --> 01:08:05,700
私たちの新しいアーキテクチャ検索

1556
01:08:05,700 --> 01:08:08,339
この方法をより単純なニューラルネットワークに適用することによって

1557
01:08:08,339 --> 01:08:10,200
エルマとゴードンのニューラルネットワーク あなたの

1558
01:08:10,200 --> 01:08:12,299
カーディナルネットワーク そして私はそうしました そこから信じて、

1559
01:08:12,299 --> 01:08:14,160
私の作品、私の患者の作品に取り組み始めました。

1560
01:08:14,160 --> 01:08:18,238
それで、私たちは

1561
01:08:18,238 --> 01:08:20,520
このアイデアについて考えました。前のスライドで、

1562
01:08:20,520 --> 01:08:22,979
えー、量子化を使用した理由について少し述べたと思いますが、

1563
01:08:22,979 --> 01:08:24,779


1564
01:08:24,779 --> 01:08:28,679
聴衆が私が正しいことを理解していることを確認するためにそれを繰り返しただけです。

1565
01:08:28,679 --> 01:08:30,719
ああ、私たちが

1566
01:08:30,719 --> 01:08:33,238
このアイデアを考えたのは、

1567
01:08:33,238 --> 01:08:36,620
えー、グラフに任意の最適化が適用されたからです、

1568
01:08:36,620 --> 01:08:39,779
これはグラフ最適化

1569
01:08:39,779 --> 01:08:43,679
ソリューションです。そして、なぜそうし

1570
01:08:43,679 --> 01:08:45,600
ないのか、なぜあなたのネットワークはビジネスにあるのだから、そうしないのか、

1571
01:08:45,600 --> 01:08:47,339
ニューラルネットワークは

1572
01:08:47,339 --> 01:08:50,219
指示されているので、指示された許可が与えられているのではないかと考えたのです。

1573
01:08:50,219 --> 01:08:52,799
おそらく、

1574
01:08:52,799 --> 01:08:54,420
情報の流れがある方向から

1575
01:08:54,420 --> 01:08:56,040
別の方向に進むため、その方向ですが、

1576
01:08:56,040 --> 01:08:57,719


1577
01:08:57,719 --> 01:09:01,859
アドレスに接続されたノードであるためグラフにもなります。私たちの最終的な

1578
01:09:01,859 --> 01:09:04,859
目的または目標は、要素の状態を削除および追加して構造を最適化することであり、

1579
01:09:04,859 --> 01:09:06,779


1580
01:09:06,779 --> 01:09:08,580


1581
01:09:08,580 --> 01:09:10,080
パフォーマンスが向上します。まあ、

1582
01:09:10,080 --> 01:09:11,160


1583
01:09:11,160 --> 01:09:14,040
素晴らしいです。そして、

1584
01:09:14,040 --> 01:09:15,839
ゴードン教授やその他の人々が、

1585
01:09:15,839 --> 01:09:18,960


1586
01:09:18,960 --> 01:09:20,219


1587
01:09:20,219 --> 01:09:21,779
コンピューター サイエンスと数学と

1588
01:09:21,779 --> 01:09:24,238
分析定式化、そして

1589
01:09:24,238 --> 01:09:26,520
フィールドワークと実際の行動の間の双方向の学習関係について語っているのは、次のような

1590
01:09:26,520 --> 01:09:29,219
理由からです。 何千種ものアリが、

1591
01:09:29,219 --> 01:09:33,238


1592
01:09:33,238 --> 01:09:35,939
さまざまな

1593
01:09:35,939 --> 01:09:38,339
パターンの規則性を持つ膨大な範囲の生態系の中で活動しているのです。

1594
01:09:38,339 --> 01:09:40,020
さまざまな資源が分布し、採餌しているのは

1595
01:09:40,020 --> 01:09:42,420
驚くべきことです。一般的でありながら、用語的には

1596
01:09:42,420 --> 01:09:44,219


1597
01:09:44,219 --> 01:09:46,319
必要な機能の 1 つにすぎません。

1598
01:09:46,319 --> 01:09:47,460
これらのうちのいくつかは、より遅い

1599
01:09:47,460 --> 01:09:51,238
プロセスへの組織の割り当てのような、より

1600
01:09:51,238 --> 01:09:53,880
速いプロセスへの警報フェロモンへの反応のようなものである

1601
01:09:53,880 --> 01:09:56,219
ため、このある

1602
01:09:56,219 --> 01:09:59,100
クラスのアルゴリズムは、最終的には

1603
01:09:59,100 --> 01:10:02,400
視界を超えて明らかに拡大縮小しているようなものです。

1604
01:10:02,400 --> 01:10:04,800
これらの採集アルゴリズムの一部は、

1605
01:10:04,800 --> 01:10:08,100


1606
01:10:08,100 --> 01:10:09,420
フェアモント・トレイルから離れない法律の施行者です。 つまり、

1607
01:10:09,420 --> 01:10:11,100
単一の

1608
01:10:11,100 --> 01:10:14,160
肯定的なフェロモンを残すか、あるいはそのまま去るというアイデアさえ似ていますが、

1609
01:10:14,160 --> 01:10:15,600


1610
01:10:15,600 --> 01:10:17,400
タイムトラベル

1611
01:10:17,400 --> 01:10:21,000
フェロモンのロスレス知覚のように、モデルにはできてアリにはできないこともあります、

1612
01:10:21,000 --> 01:10:24,060


1613
01:10:24,060 --> 01:10:25,980
同じような有限量では発生しえない高次元のUhシグナリングプロファイル

1614
01:10:25,980 --> 01:10:28,380
分子の数が

1615
01:10:28,380 --> 01:10:31,140
多く、今ではそれらは、行動スケールでの変分自由エネルギーを備えた

1616
01:10:31,140 --> 01:10:34,260
1 世代内でアクティブ エージェントとしてその経路を継続し

1617
01:10:34,260 --> 01:10:36,420


1618
01:10:36,420 --> 01:10:38,159
、その後

1619
01:10:38,159 --> 01:10:39,360
世代を超えてその

1620
01:10:39,360 --> 01:10:42,540
進化層と

1621
01:10:42,540 --> 01:10:43,739
ニューラル ネットワークの

1622
01:10:43,739 --> 01:10:46,320
実装とアクティブ推論

1623
01:10:46,320 --> 01:10:48,360
モデルの間の関係を維持しています。 これは、スラッシュの実装を説明する 2 つの方法のようなものです。

1624
01:10:48,360 --> 01:10:51,000


1625
01:10:51,000 --> 01:10:53,460
そうですね、

1626
01:10:53,460 --> 01:10:54,900
アクティブ

1627
01:10:54,900 --> 01:10:57,960
推論がどのように機能するようになったと考えているか、またはニューラル ネットワーク ベースのアプローチとアクティブ推論の

1628
01:10:57,960 --> 01:11:00,719
古い最終的な類似点と相違点をどのように考えているかについて、何かご意見があれば聞きたいです。

1629
01:11:00,719 --> 01:11:02,940


1630
01:11:02,940 --> 01:11:05,340
推論ベースの

1631
01:11:05,340 --> 01:11:08,640
アプローチは同じ補完的で

1632
01:11:08,640 --> 01:11:11,640
重複するものですか

1633
01:11:12,360 --> 01:11:16,280
皆さんはこれに固執したいと

1634
01:11:16,560 --> 01:11:17,940
思います 正直に言うとこれはアレックスの質問になるかもしれません まあ、

1635
01:11:17,940 --> 01:11:21,080


1636
01:11:22,340 --> 01:11:26,100
そうですね、つまり、アクティブな推論を維持したい場合は、

1637
01:11:26,100 --> 01:11:27,600
トラビスは

1638
01:11:27,600 --> 01:11:28,980
そうするつもりだと思います 実際のコロニーの詳細など、非常に具体的な内容に入りたい場合は、タグを付ける必要があります。なぜなら、

1639
01:11:28,980 --> 01:11:30,719


1640
01:11:30,719 --> 01:11:33,900


1641
01:11:33,900 --> 01:11:36,540
私はダン コロニーの

1642
01:11:36,540 --> 01:11:39,360
最適化をよりグローバルな

1643
01:11:39,360 --> 01:11:41,520
観点から見ているからです。明確にするために言っておきますが、

1644
01:11:41,520 --> 01:11:44,760
この特定の

1645
01:11:44,760 --> 01:11:46,440
作業のことを指します。 ダニエル、たとえその名前が研究所自体にあるとしても、雄羊のやり方もあなたの質問に

1646
01:11:46,440 --> 01:11:48,480
完全に盲目にされないように私はそうします、ええと、

1647
01:11:48,480 --> 01:11:50,699


1648
01:11:50,699 --> 01:11:53,100
これは

1649
01:11:53,100 --> 01:11:55,560
積極的な推論作業ではありません、それであなたが指摘したように

1650
01:11:55,560 --> 01:11:57,420
明らかにたくさんのことがある一方で、あなたもまた知っています

1651
01:11:57,420 --> 01:11:59,580


1652
01:11:59,580 --> 01:12:01,620
たとえば、

1653
01:12:01,620 --> 01:12:03,600
アリが探索を行うとき、

1654
01:12:03,600 --> 01:12:05,460


1655
01:12:05,460 --> 01:12:07,199
反復ネットワークのように考えてみましょう。アリはフェロモンの痕跡を繰り返しながら、

1656
01:12:07,199 --> 01:12:10,340
どのノードが上部

1657
01:12:10,340 --> 01:12:13,560
構造を説明しているのかを理解しているという事実など、興味深い要素が含まれています

1658
01:12:13,560 --> 01:12:15,540


1659
01:12:15,540 --> 01:12:17,940
。 どのノードを

1660
01:12:17,940 --> 01:12:20,100
繰り返し接続したいのかを把握してください、

1661
01:12:20,100 --> 01:12:23,400
前方接続してください、スキップ接続してください、などなど、

1662
01:12:23,400 --> 01:12:25,380
まあ、あなたは「まあまあ」と言うでしょう、

1663
01:12:25,380 --> 01:12:27,000
これらのアリが何をしているかというと、彼らは能動推論やididの

1664
01:12:27,000 --> 01:12:30,239
重要な概念である認識論的採餌に従事しているのです。

1665
01:12:30,239 --> 01:12:32,760


1666
01:12:32,760 --> 01:12:34,320
そうやってラーメンを作るよ トラヴィスも専門

1667
01:12:34,320 --> 01:12:37,260


1668
01:12:37,260 --> 01:12:40,020
用語に取り残されないよ エピサミットは能動的推論で鍛えている それは

1669
01:12:40,020 --> 01:12:42,060
大きな一般的な枠組みだ それは

1670
01:12:42,060 --> 01:12:45,179
RL への生物学的神経生物学的プロセスのようなものであり

1671
01:12:45,179 --> 01:12:47,340
、認識論はただ

1672
01:12:47,340 --> 01:12:49,020
不確実性のようなものを指します トラヴィス あなたと

1673
01:12:49,020 --> 01:12:51,659
私は

1674
01:12:51,659 --> 01:12:55,440
自分の世界を理解したいと思っています。

1675
01:12:55,440 --> 01:12:58,080
自分の世界を正しく探索すればするほど、

1676
01:12:58,080 --> 01:13:00,420
驚くべきことは減っていきます

1677
01:13:00,420 --> 01:13:02,760
が、生成的な世界モデルを構築するときに本当に奇妙な情報に遭遇した場合は、

1678
01:13:02,760 --> 01:13:05,460


1679
01:13:05,460 --> 01:13:07,500
または、

1680
01:13:07,500 --> 01:13:09,600
非常に驚​​くべき予測世界モデルです。

1681
01:13:09,600 --> 01:13:11,640
おそらくそれを調査する必要があります。

1682
01:13:11,640 --> 01:13:14,040
ええと、もちろん、私はこの

1683
01:13:14,040 --> 01:13:15,719
概念を、探索とエクスプロイトのトレードオフの探索部分のようなものに凝縮しています。ご存知かと思いますが、

1684
01:13:15,719 --> 01:13:18,600


1685
01:13:18,600 --> 01:13:21,540


1686
01:13:21,540 --> 01:13:23,219
それが強化を特徴づけています。 私たちが

1687
01:13:23,219 --> 01:13:24,540


1688
01:13:24,540 --> 01:13:27,000
認識的または認識的採餌と言うとき、それが

1689
01:13:27,000 --> 01:13:28,980
まさに私たちが意味することを

1690
01:13:28,980 --> 01:13:31,560
学んでいます、そして明らかにラーメンの採餌は、アリが自分たちの環境を探索している正しい行動に喩えることができます。

1691
01:13:31,560 --> 01:13:32,699


1692
01:13:32,699 --> 01:13:34,260


1693
01:13:34,260 --> 01:13:37,260


1694
01:13:37,260 --> 01:13:38,880


1695
01:13:38,880 --> 01:13:40,920
ここで同じページにあるようなもので、えー、

1696
01:13:40,920 --> 01:13:43,440
これがどのように機能するのかという違いについての質問に行きますが、

1697
01:13:43,440 --> 01:13:45,780


1698
01:13:45,780 --> 01:13:48,120
能動的推論に対する典型的なニューラルベースのアプローチと同様に、

1699
01:13:48,120 --> 01:13:50,219
私は

1700
01:13:50,219 --> 01:13:52,440
ニューラルモデルを構築する、生物学的プロセスモデルを構築するというカテゴリーに分類されます。

1701
01:13:52,440 --> 01:13:55,080
非常に集中してい

1702
01:13:55,080 --> 01:13:57,900
ますね、少なくとも個人レベルで言えることは、

1703
01:13:57,900 --> 01:13:59,340


1704
01:13:59,340 --> 01:14:00,960
例えばバック

1705
01:14:00,960 --> 01:14:03,960
プロパゲーションベースのえー、部分的に

1706
01:14:03,960 --> 01:14:06,840
観察可能なマルコフ決定プロセスを構築しているときに、えー、

1707
01:14:06,840 --> 01:14:08,940


1708
01:14:08,940 --> 01:14:10,260
単一エージェントのような能動推論を知っていますね。

1709
01:14:10,260 --> 01:14:12,420


1710
01:14:12,420 --> 01:14:15,420
認識量と

1711
01:14:15,420 --> 01:14:17,880
その手段的用語のバランスをとろうとしているこの構造を構築しようとしているのですが、これはラーメンとトラヴィス

1712
01:14:17,880 --> 01:14:19,860
に関する別の専門用語で、

1713
01:14:19,860 --> 01:14:22,199


1714
01:14:22,199 --> 01:14:24,780
報酬信号や以前の好み

1715
01:14:24,780 --> 01:14:27,000
や以前の分布に似ています。 目標の状態

1716
01:14:27,000 --> 01:14:29,520
とエージェントは、

1717
01:14:29,520 --> 01:14:31,980
そのトレードオフに対処するようなものですが、

1718
01:14:31,980 --> 01:14:33,780
個々のエージェントのレベルでは、

1719
01:14:33,780 --> 01:14:35,699
それ自体については議論しませんが、アリベースのアプローチの他の観点からの解釈があると確信しています。

1720
01:14:35,699 --> 01:14:37,159


1721
01:14:37,159 --> 01:14:40,739


1722
01:14:40,739 --> 01:14:43,260
これには、

1723
01:14:43,260 --> 01:14:45,120


1724
01:14:45,120 --> 01:14:47,280
少なくともラーメンのボブが

1725
01:14:47,280 --> 01:14:49,500
能動推論に対して明らかにした明示的な形式または関連性があると考えられますが、アイデアとしては、

1726
01:14:49,500 --> 01:14:51,300
これは能動推論に対するマルチエージェント アプローチのようなものであり、

1727
01:14:51,300 --> 01:14:54,000


1728
01:14:54,000 --> 01:14:56,219
アリが認識論的鍛造を行うとき、

1729
01:14:56,219 --> 01:14:58,920
おそらく、これは非常に

1730
01:14:58,920 --> 01:15:01,920
単純なモデルであり、各アントン

1731
01:15:01,920 --> 01:15:04,500
自身が本質的に知っているでしょう、

1732
01:15:04,500 --> 01:15:06,600
多くの人は係数といくつかの

1733
01:15:06,600 --> 01:15:09,300
ハードコードされたルールを知っています、彼らは彼らだからです、

1734
01:15:09,300 --> 01:15:11,280
彼らの仕事は基本的に

1735
01:15:11,280 --> 01:15:13,380
フェロモンの痕跡と協力して、

1736
01:15:13,380 --> 01:15:15,179
ああを理解することです 上部構造のどの部分が

1737
01:15:15,179 --> 01:15:17,340
役に立つのか、だから

1738
01:15:17,340 --> 01:15:19,620
それは違うと思いますし、ある意味ではそれが役に立ちます もちろん、

1739
01:15:19,620 --> 01:15:21,780


1740
01:15:21,780 --> 01:15:23,580
アリをより複雑にして

1741
01:15:23,580 --> 01:15:26,159
利益を失う可能性があります 私が今言いたいのは、

1742
01:15:26,159 --> 01:15:27,840
これを大規模に並列化できるということです。

1743
01:15:27,840 --> 01:15:29,640


1744
01:15:29,640 --> 01:15:33,420
私が思う重要な強みの 1 つは、実際

1745
01:15:33,420 --> 01:15:36,060
に行われた多くの最適化

1746
01:15:36,060 --> 01:15:39,000
アルゴリズムでは当然のことだと思いますが、コロニー最適化もその

1747
01:15:39,000 --> 01:15:40,860
1 つです。アブドゥル ラーメンは

1748
01:15:40,860 --> 01:15:43,800
何百もの CPU を使用しており、

1749
01:15:43,800 --> 01:15:45,300
これらのアリを独自のプロセッサに配置できるということです。

1750
01:15:45,300 --> 01:15:47,820


1751
01:15:47,820 --> 01:15:49,739
彼らが情報を交換するときに彼らの間でコミュニケーションが発生していることはご存知

1752
01:15:49,739 --> 01:15:51,540


1753
01:15:51,540 --> 01:15:53,640
のとおり、フェロモントレイルを介して

1754
01:15:53,640 --> 01:15:55,260
間接的なメカニズムがあり、それを促進するのはそれほど複雑ではなく、

1755
01:15:55,260 --> 01:15:57,719


1756
01:15:57,719 --> 01:15:59,699


1757
01:15:59,699 --> 01:16:01,679
非同期形式の

1758
01:16:01,679 --> 01:16:04,260
コミュニケーションなど、さらに良い方法があると確信しています。

1759
01:16:04,260 --> 01:16:06,659
I Know Travis をさらに最適化します。Travis は

1760
01:16:06,659 --> 01:16:08,580
これに加えて、

1761
01:16:08,580 --> 01:16:10,860
市民科学や分散

1762
01:16:10,860 --> 01:16:12,659
コンピューティングなどのことを行ってきました。ご存知のとおり、ボランティアのボランティア コンピューティングを通じて、

1763
01:16:12,659 --> 01:16:14,940


1764
01:16:14,940 --> 01:16:16,739
これを

1765
01:16:16,739 --> 01:16:19,199
大規模なグローバル非同期ネットワークを通じて分散する方法を考え

1766
01:16:19,199 --> 01:16:22,620
られるようにします。

1767
01:16:22,620 --> 01:16:24,719
申し訳ありませんが、アリのコロニー最適化

1768
01:16:24,719 --> 01:16:27,360
アプローチは、

1769
01:16:27,360 --> 01:16:29,520
能動推論の分散大規模分散バージョンのようなもので、

1770
01:16:29,520 --> 01:16:31,440
基本的に

1771
01:16:31,440 --> 01:16:33,900
変分自由エネルギーについて書き留める必要があります。

1772
01:16:33,900 --> 01:16:36,480


1773
01:16:36,480 --> 01:16:38,640
ここでも具体的な用語が書かれていないため、引用符を付けています。

1774
01:16:38,640 --> 01:16:41,280


1775
01:16:41,280 --> 01:16:43,080
つまり、私たちは少なくとも

1776
01:16:43,080 --> 01:16:44,820
これを能動推論の観点から直接見ていないからです。

1777
01:16:44,820 --> 01:16:46,800
各アリは

1778
01:16:46,800 --> 01:16:48,659
自身の変分自由エネルギーを最適化しています

1779
01:16:48,659 --> 01:16:50,340
が、実際にはおそらく次の

1780
01:16:50,340 --> 01:16:52,980


1781
01:16:52,980 --> 01:16:55,739
関数としてのグローバルな量が存在します。 個々

1782
01:16:55,739 --> 01:16:58,199
のハンドエージェントのフェロモンの痕跡、

1783
01:16:58,199 --> 01:16:59,520
ええと、もちろん

1784
01:16:59,520 --> 01:17:03,120
搾取用語や手段、

1785
01:17:03,120 --> 01:17:04,679
またはええと、各候補者に対する

1786
01:17:04,679 --> 01:17:07,440


1787
01:17:07,440 --> 01:17:09,900
実際のエージェントのパフォーマンスによって駆動されるRL用語を与えるための報酬シグナルは何ですか？

1788
01:17:09,900 --> 01:17:13,320


1789
01:17:13,320 --> 01:17:15,540
ラーメンの右側のタスクのエージェントです。時系列予測を

1790
01:17:15,540 --> 01:17:16,860
行うときに平均二乗誤差のように計算します。

1791
01:17:16,860 --> 01:17:19,380
ある意味、

1792
01:17:19,380 --> 01:17:22,080
報酬関数が組み込まれています。これを、

1793
01:17:22,080 --> 01:17:24,900


1794
01:17:24,900 --> 01:17:27,300
ここでアクティブな推論グループの人々のために使用します。

1795
01:17:27,300 --> 01:17:28,800
完全なクラス定理を使用して、

1796
01:17:28,800 --> 01:17:31,199
事前

1797
01:17:31,199 --> 01:17:33,120
設定を確認すると、報酬は

1798
01:17:33,120 --> 01:17:34,980
技術的には事前設定であることがわかります。これは

1799
01:17:34,980 --> 01:17:38,100
対数確率のようなものです。そのことを

1800
01:17:38,100 --> 01:17:40,560
念頭に置いて、

1801
01:17:40,560 --> 01:17:43,140
コロニーの最適化に目を細めて見てください。

1802
01:17:43,140 --> 01:17:45,360
大きな利点は、その大規模な並列化から得られます

1803
01:17:45,360 --> 01:17:47,100


1804
01:17:47,100 --> 01:17:49,920
が、シングル エージェントのニューラル ベースのアプローチを知っていれば、実際には簡単には実現できないでしょう。

1805
01:17:49,920 --> 01:17:52,679


1806
01:17:52,679 --> 01:17:54,000


1807
01:17:54,000 --> 01:17:55,380
それは、

1808
01:17:55,380 --> 01:17:57,960
構築するのに興味深い場所かもしれないので、この時点でとりとめのない話はやめておきます

1809
01:17:57,960 --> 01:17:59,400
。」 それが役に立ったかどうかはわかりませんが、

1810
01:17:59,400 --> 01:18:01,759


1811
01:18:02,640 --> 01:18:05,640
今日の早い段階でもそれは素晴らしかったです

1812
01:18:05,640 --> 01:18:08,280


1813
01:18:08,280 --> 01:18:10,920
情報処理コースで物理学のクリスフィールドは、

1814
01:18:10,920 --> 01:18:12,860


1815
01:18:12,860 --> 01:18:15,120


1816
01:18:15,120 --> 01:18:17,520
フェロモンの知覚と沈着のような

1817
01:18:17,520 --> 01:18:19,620
フェロモンの修飾と

1818
01:18:19,620 --> 01:18:22,140
知覚の感覚が作用するような毛布に刻まれた古典的な情報について話していました これは、

1819
01:18:22,140 --> 01:18:24,719
巣の仲間の認知システムのように関連付けることができる

1820
01:18:24,719 --> 01:18:27,719
ため、

1821
01:18:27,719 --> 01:18:29,400
巣の仲間のパススルーと同じくらい単純なものに

1822
01:18:29,400 --> 01:18:32,460
なる可能性があります。

1823
01:18:32,460 --> 01:18:35,159
包括的な単純な巣の

1824
01:18:35,159 --> 01:18:37,620
仲間 洗練された巣の仲間 別の

1825
01:18:37,620 --> 01:18:39,719
レベルの時系列

1826
01:18:39,719 --> 01:18:41,040
モデリングのような、任意の関係を記述することができます

1827
01:18:41,040 --> 01:18:43,560
一方、環境時

1828
01:18:43,560 --> 01:18:46,679
系列モデリングがあり、それはアリの中にあります

1829
01:18:46,679 --> 01:18:48,780
が、

1830
01:18:48,780 --> 01:18:49,920


1831
01:18:49,920 --> 01:18:52,739
四次元は、

1832
01:18:52,739 --> 01:18:55,380
低

1833
01:18:55,380 --> 01:18:57,780
次元の古典的なスティグマジックスクリーンから

1834
01:18:57,780 --> 01:19:01,500
量子情報空間に入る量子回転のようなもので、

1835
01:19:01,500 --> 01:19:03,600
それが

1836
01:19:03,600 --> 01:19:06,000
八分五分に進むことに関する議論の一つです 今は、

1837
01:19:06,000 --> 01:19:08,840
量子フォーマリズムをマクロに結び付けるかなり以前のアプローチについてです。たとえば、

1838
01:19:08,840 --> 01:19:11,900


1839
01:19:11,900 --> 01:19:14,840
神経現象は、

1840
01:19:14,840 --> 01:19:17,820


1841
01:19:17,820 --> 01:19:19,860
分子電子の

1842
01:19:19,860 --> 01:19:23,400
泡立ちのような妥当性に基づいていますが、一方、

1843
01:19:23,400 --> 01:19:26,940
意思決定と統計からの研究と、

1844
01:19:26,940 --> 01:19:29,820
単なる多視点モデリングと、それ

1845
01:19:29,820 --> 01:19:31,260
に関連するすべての問題が必要です。

1846
01:19:31,260 --> 01:19:33,300
物理性情報は

1847
01:19:33,300 --> 01:19:34,679
その有限性を伝達する

1848
01:19:34,679 --> 01:19:37,560
量子形式主義は、

1849
01:19:37,560 --> 01:19:40,140


1850
01:19:40,140 --> 01:19:41,580
他の

1851
01:19:41,580 --> 01:19:44,760
電子現象への依存の有無にかかわらず、それ自体で有用になるため、ノイズのない4ビットのブランケット上に自由度を持つ

1852
01:19:44,760 --> 01:19:46,560
など、非常に興味深い関係がたくさんある

1853
01:19:46,560 --> 01:19:48,239


1854
01:19:48,239 --> 01:19:51,000


1855
01:19:51,000 --> 01:19:53,340
または、この

1856
01:19:53,340 --> 01:19:56,340
非常に特殊なものではノイズが多い可能性がありますが、コンピュータでは

1857
01:19:56,340 --> 01:19:57,360


1858
01:19:57,360 --> 01:20:00,239
両側から再生して物事をスケールアップおよびスケール

1859
01:20:00,239 --> 01:20:02,219
ダウンし、

1860
01:20:02,219 --> 01:20:04,739
その任意の空間上でメタヒューリスティックを実行できるため、

1861
01:20:04,739 --> 01:20:07,199
学習が非常に簡単になる可能性もあれば、学習がどれほど簡単になる可能性もあります

1862
01:20:07,199 --> 01:20:10,080
そして、

1863
01:20:10,080 --> 01:20:11,760
アリのコロニーアルゴリズムが

1864
01:20:11,760 --> 01:20:14,480
最終的に具体化を通じて統合されるのと同じように、

1865
01:20:14,480 --> 01:20:17,820
その特性により、それはバイオミメトリの非常に有用な

1866
01:20:17,820 --> 01:20:20,159
候補となるため、

1867
01:20:20,159 --> 01:20:21,300
人々が行動の収集について考えるとき、多くの場合、

1868
01:20:21,300 --> 01:20:22,980
彼らは鳥の群れや群れのように考えています。

1869
01:20:22,980 --> 01:20:24,500
魚

1870
01:20:24,500 --> 01:20:27,239
やそれらはもちろん集団

1871
01:20:27,239 --> 01:20:29,400
システムであり、集団行動であり、

1872
01:20:29,400 --> 01:20:31,140
これらすべての種類の同様の複雑なシステムの

1873
01:20:31,140 --> 01:20:32,100
特性は

1874
01:20:32,100 --> 01:20:33,600
そのタイプのシステムで研究できます

1875
01:20:33,600 --> 01:20:37,320
が、それはまた、少なくとも汚名Gによる分析の自由度を無視しているので、

1876
01:20:37,320 --> 01:20:39,000


1877
01:20:39,000 --> 01:20:40,199


1878
01:20:40,199 --> 01:20:44,580
それが本当に開かれます

1879
01:20:44,580 --> 01:20:46,739
量子と古典的な情報の両方、または

1880
01:20:46,739 --> 01:20:49,880
ニッチ変更と

1881
01:20:49,880 --> 01:20:54,120
行動的ええと認知モデリングの両方なので、

1882
01:20:54,120 --> 01:20:56,280
私が考えているので付け加えますが、

1883
01:20:56,280 --> 01:20:59,219
ノードが何であるかは、

1884
01:20:59,219 --> 01:21:02,159
異種であるか未知であるか、

1885
01:21:02,159 --> 01:21:03,719
さまざまな方法で適合するか、設計プロセスを通じて修正される可能性さえあります

1886
01:21:03,719 --> 01:21:06,239
アリのコロニーが柔軟性を持っているので、アリのコロニーが

1887
01:21:06,239 --> 01:21:08,640


1888
01:21:08,640 --> 01:21:11,460
あらゆる種類の場所に住むことができるように、相互にやり取りするためにこのような種類の

1889
01:21:11,460 --> 01:21:13,620
入れ子になった決定を下すことができるのと同じように、

1890
01:21:13,620 --> 01:21:15,480


1891
01:21:15,480 --> 01:21:17,699
その柔軟性は

1892
01:21:17,699 --> 01:21:19,800
まさに私たちが説明できるものの氷山の一角のようなものです。

1893
01:21:19,800 --> 01:21:21,900
常に

1894
01:21:21,900 --> 01:21:23,940
実際の環境で

1895
01:21:23,940 --> 01:21:25,380
アリのコロニーを試したことがないため、アリのシステムの

1896
01:21:25,380 --> 01:21:27,960
すべてのレパートリーやダイナミクスの全容を知ることは決してできませんが、

1897
01:21:27,960 --> 01:21:30,540


1898
01:21:30,540 --> 01:21:35,040
その後は

1899
01:21:35,040 --> 01:21:38,480
新しい数学的統計

1900
01:21:38,480 --> 01:21:40,560
分布フレームワークにアブダクションするだけで、別の環境に引き戻すことができます。

1901
01:21:40,560 --> 01:21:42,000


1902
01:21:42,000 --> 01:21:43,500
メタ学習プロセスの学習のレベルを考えて、

1903
01:21:43,500 --> 01:21:47,280
そこから始めて、まあほとんど皮肉というか、あるいはその

1904
01:21:47,280 --> 01:21:49,560
逆かもしれません。

1905
01:21:49,560 --> 01:21:51,840
アリのコロニーのビデオ

1906
01:21:51,840 --> 01:21:55,320
データや移動データ、あるいは採餌

1907
01:21:55,320 --> 01:21:57,659
活動そのものに応用できるかもしれませんが、

1908
01:21:57,659 --> 01:21:59,699
それにはある種の

1909
01:21:59,699 --> 01:22:01,920
インスピレーションと

1910
01:22:01,920 --> 01:22:03,960
並行して、または会話しながら発達するので、

1911
01:22:03,960 --> 01:22:06,659
本物のアリができるバランスのようなものではありません。または、

1912
01:22:06,659 --> 01:22:08,880


1913
01:22:08,880 --> 01:22:12,120
本物のアリが

1914
01:22:12,120 --> 01:22:13,620
この特定の方法でのみ相互作用できるように

1915
01:22:13,620 --> 01:22:15,719
、または実際にフェロモンがこれだけしかないように、本物のアリが持つ特性があるように制限することもできます。

1916
01:22:15,719 --> 01:22:18,960
モデルの比較なので、

1917
01:22:18,960 --> 01:22:21,840
非常に自由度が高いです。

1918
01:22:21,840 --> 01:22:23,940
皆さんはアリのコロニーのモデリングについてオープンになっているように感じます。

1919
01:22:23,940 --> 01:22:26,640
また、

1920
01:22:26,640 --> 01:22:28,199
マルチエージェント シミュレーションのやりがいのある部分の 1 つは、

1921
01:22:28,199 --> 01:22:30,000


1922
01:22:30,000 --> 01:22:33,000
設計空間のオープンエンド性のようなものです。

1923
01:22:33,000 --> 01:22:35,699
創造的な

1924
01:22:35,699 --> 01:22:37,320
アイデアであっても、適切なコンピューティング リソースを見つけるのは非常に困難です。適切な

1925
01:22:37,320 --> 01:22:39,840
コンピューティング リソースは、

1926
01:22:39,840 --> 01:22:41,940
あなたが発見したことに明らかにまだ必要です。えー、

1927
01:22:41,940 --> 01:22:43,500


1928
01:22:43,500 --> 01:22:46,560
ここでの分析で、

1929
01:22:46,560 --> 01:22:49,080
チャットで Bert からの素晴らしい質問がありました。

1930
01:22:49,080 --> 01:22:52,500
ただ、はっきりさせておきたいのです。 えー、

1931
01:22:52,500 --> 01:22:54,600
用語が正しいかどうか確認してください。

1932
01:22:54,600 --> 01:22:57,060
確かにアブドラ・ラーメンとトラヴィスを

1933
01:22:57,060 --> 01:22:58,440
調べてみてください。

1934
01:22:58,440 --> 01:22:59,820
ブランケットと言っていたとき、マルコフ ブランケットのことを指していたのは

1935
01:22:59,820 --> 01:23:03,179
正しいです。つまり、

1936
01:23:03,179 --> 01:23:05,580
マルコフ ブランケットの技術的な定義は、

1937
01:23:05,580 --> 01:23:08,520
ベイジアンがあるときです。 グラフでは、

1938
01:23:08,520 --> 01:23:10,080
ノードは変数であり、エッジは対象となるノードの

1939
01:23:10,080 --> 01:23:11,520
これらの変数間の関係です。

1940
01:23:11,520 --> 01:23:14,159


1941
01:23:14,159 --> 01:23:15,659
単に内部状態と呼ぶことにします。したがって、これらは世界の

1942
01:23:15,659 --> 01:23:16,980
特徴ではなく、

1943
01:23:16,980 --> 01:23:19,260


1944
01:23:19,260 --> 01:23:20,760
世界の実際の巣の仲間の組織にタグ付けされていません。 これは、

1945
01:23:20,760 --> 01:23:22,500


1946
01:23:22,500 --> 01:23:24,420
ベース グラフ内の任意のノードにタグ付けされているか、

1947
01:23:24,420 --> 01:23:26,520
またはパースペクティブに似たものであり、

1948
01:23:26,520 --> 01:23:29,880
その親ノードでそれを絶縁するすべてのノードは、

1949
01:23:29,880 --> 01:23:32,219


1950
01:23:32,219 --> 01:23:35,159
1 層の絶縁体のようなものであり、

1951
01:23:35,159 --> 01:23:36,659
それについてはさらに多くの議論があり、

1952
01:23:36,659 --> 01:23:38,640
哲学的な意味合いやその一般化が行われていますが、

1953
01:23:38,640 --> 01:23:41,340


1954
01:23:41,340 --> 01:23:43,500
大まかに言えば、マルコフブランケットは、

1955
01:23:43,500 --> 01:23:45,780
私たちが

1956
01:23:45,780 --> 01:23:47,460
意味形成や

1957
01:23:47,460 --> 01:23:50,340
知覚学習の注意と関連付けている内向きの依存関係であり、その後、

1958
01:23:50,340 --> 01:23:53,520


1959
01:23:53,520 --> 01:23:55,380
同様の行動と関連付けているエージェントに対する外向きの依存関係です。

1960
01:23:55,380 --> 01:23:57,659


1961
01:23:57,659 --> 01:24:00,360
下流の方向性で影響を与えています、

1962
01:24:00,360 --> 01:24:02,340
ありがとうございます。

1963
01:24:02,340 --> 01:24:04,860
アブドゥル・ラーマンと

1964
01:24:04,860 --> 01:24:06,600
トラヴィスはその用語だけでは精通していないと思うので、それを明確にしたかったのですが、

1965
01:24:06,600 --> 01:24:09,480
それは非常にフォーストニア的で、非常に

1966
01:24:09,480 --> 01:24:11,460
能動的推論の種類の専門

1967
01:24:11,460 --> 01:24:13,560
用語を知っているので、それを確認したかったのです

1968
01:24:13,560 --> 01:24:15,239
彼らは物理学の観点からそれを理解しました、

1969
01:24:15,239 --> 01:24:18,179
ありがとう、ええ、本当に素晴らしい

1970
01:24:18,179 --> 01:24:20,520
指摘です、それで、

1971
01:24:20,520 --> 01:24:24,960
鳥の夕食から今すぐ質問してください、

1972
01:24:24,960 --> 01:24:27,360
生成

1973
01:24:27,360 --> 01:24:29,219
モデルをより多くの生成モデルで解決するのは

1974
01:24:29,219 --> 01:24:31,199
非常に印象的だと言いました、

1975
01:24:31,199 --> 01:24:35,239
アリを畳み込みで置き換えるのはどうですか、

1976
01:24:38,300 --> 01:24:42,000
メタ学習が必要です アルゴリズムは、

1977
01:24:42,000 --> 01:24:43,860


1978
01:24:43,860 --> 01:24:47,480
他のニューラル ネットワークを最適化する方法を学習するニューラル ネットワークを持つようなものです。

1979
01:24:48,239 --> 01:24:51,199
ええ、つまり、このコンセプトは

1980
01:24:51,199 --> 01:24:53,400
ある時点でインタビューされていると思います。

1981
01:24:53,400 --> 01:24:56,520
通常のマシンで意味しますが、私たちは、

1982
01:24:56,520 --> 01:25:01,140


1983
01:25:01,140 --> 01:25:04,260
母親のようなものを模倣する、自然ベースのメソッドを適用したかったのです。 自然はどれですか、

1984
01:25:04,260 --> 01:25:08,040
ご存知のとおり、自然は最も

1985
01:25:08,040 --> 01:25:10,320
効率的な最適化革命システムです、

1986
01:25:10,320 --> 01:25:11,760
それで、

1987
01:25:11,760 --> 01:25:14,219


1988
01:25:14,219 --> 01:25:16,199
自然の中で得られた結果を見てみると、

1989
01:25:16,199 --> 01:25:18,840
自然ベースの方法が示唆されています、それらは

1990
01:25:18,840 --> 01:25:21,420
他のどの方法よりも優れていました、

1991
01:25:21,420 --> 01:25:22,980
そして得られた結果も それは、

1992
01:25:22,980 --> 01:25:25,020


1993
01:25:25,020 --> 01:25:27,719


1994
01:25:27,719 --> 01:25:29,580
私たちの結果から、

1995
01:25:29,580 --> 01:25:31,380
そして他の手法からの以前の結果から、

1996
01:25:31,380 --> 01:25:32,820


1997
01:25:32,820 --> 01:25:35,520
私たちが非常に優れたパフォーマンスを発揮していることを指摘しました。それで、私はここに少し飛び込みすぎます、

1998
01:25:35,520 --> 01:25:36,900


1999
01:25:36,900 --> 01:25:39,300
ええと、ニューラルアーキテクチャ

2000
01:25:39,300 --> 01:25:40,620
研究の場合 いくつかの

2001
01:25:40,620 --> 01:25:42,540
クラスのアプローチがありますが、そのうちの 1 つは

2002
01:25:42,540 --> 01:25:44,580
建設的なもので、ますます

2003
01:25:44,580 --> 01:25:47,580
大規模なネットワークを構築し、最適なソリューションを見つける

2004
01:25:47,580 --> 01:25:49,800
ためにネットワーク サイズを最小限に抑えようとするようなものです。

2005
01:25:49,800 --> 01:25:52,320
他の

2006
01:25:52,320 --> 01:25:54,120
タイプのニューラル アーキテクチャ検索

2007
01:25:54,120 --> 01:25:56,400
アプローチでは、次のように使用されます。

2008
01:25:56,400 --> 01:25:58,500
これは、

2009
01:25:58,500 --> 01:26:00,780
これの初期の繰り返しで、

2010
01:26:00,780 --> 01:26:02,699
検索スペースの境界があり、

2011
01:26:02,699 --> 01:26:04,139
その境界内で最適なネットワークを見つけようとする方法のようなものです。

2012
01:26:04,139 --> 01:26:05,940
つまり、一方は

2013
01:26:05,940 --> 01:26:07,320
ゼロからものを構築し、もう

2014
01:26:07,320 --> 01:26:10,260
一方はゼロから構築しようとするようなものです。 大きな

2015
01:26:10,260 --> 01:26:12,300
ネットワークを小さなネットワークに縮小したいのですが、

2016
01:26:12,300 --> 01:26:14,840
畳み込みについて質問してください。

2017
01:26:14,840 --> 01:26:17,880


2018
01:26:17,880 --> 01:26:19,560
最近、離散グラフ検索空間のように畳み込みを使用できる、いわゆる

2019
01:26:19,560 --> 01:26:21,719
グラフベースのニューラル ネットワークについてかなりの研究が行われています。

2020
01:26:21,719 --> 01:26:24,960


2021
01:26:24,960 --> 01:26:27,179


2022
01:26:27,179 --> 01:26:28,920
潜在的に他のグラフを生成することもできます。

2023
01:26:28,920 --> 01:26:30,239


2024
01:26:30,239 --> 01:26:32,580


2025
01:26:32,580 --> 01:26:35,580
これを使用したニューラル アーキテクト アーキテクチャの検索作業がいくつかあったと思いますが、

2026
01:26:35,580 --> 01:26:37,440


2027
01:26:37,440 --> 01:26:39,420
ここでのアプローチの主要で優れている点の 1 つは、それらとは異なります。

2028
01:26:39,420 --> 01:26:40,800
それは、グラフ

2029
01:26:40,800 --> 01:26:42,659
ベースのニューラル ネットワークがあり、

2030
01:26:42,659 --> 01:26:44,219
検索ベースは

2031
01:26:44,219 --> 01:26:45,960
ある種のマトリックスとして定義されており、

2032
01:26:45,960 --> 01:26:47,580
どの

2033
01:26:47,580 --> 01:26:49,080
ノードが相互に接続されているかに応じて物事がオフになったりオンになったりします。

2034
01:26:49,080 --> 01:26:51,600
固定の検索スペースがありますが、

2035
01:26:51,600 --> 01:26:53,520
十分な大きさではないか、正しい検索スペースではない可能性があります。

2036
01:26:53,520 --> 01:26:55,199
このニューラル

2037
01:26:55,199 --> 01:26:57,179
アーキテクチャの検索問題では、この

2038
01:26:57,179 --> 01:26:59,880
メソッドはすべて連続的です。

2039
01:26:59,880 --> 01:27:01,440
つまり、この連続検索空間内では

2040
01:27:01,440 --> 01:27:03,300
実際にアルゴリズムに

2041
01:27:03,300 --> 01:27:04,860
多くの自由が与えられるのですが、自由度が高すぎるかもしれませんが、

2042
01:27:04,860 --> 01:27:07,620
実にオープンエンドな方法でさまざまなデータを

2043
01:27:07,620 --> 01:27:10,199
生成できます。 ニューラル

2044
01:27:10,199 --> 01:27:12,900
アーキテクチャは、

2045
01:27:12,900 --> 01:27:16,199
固定された個別の上部構造内で動作するようにアルゴリズムを事前に制約すると、

2046
01:27:16,199 --> 01:27:18,120


2047
01:27:18,120 --> 01:27:19,800


2048
01:27:19,800 --> 01:27:22,139
可能性すらないため、見つけることさえできない可能性があります。

2049
01:27:22,139 --> 01:27:24,480
それが、私たちがやらなかった理由の 1 つです。

2050
01:27:24,480 --> 01:27:26,760
その道には進みませんが、

2051
01:27:26,760 --> 01:27:29,159
グラフベースのニューラルアーティスティックアーキテクチャ

2052
01:27:29,159 --> 01:27:30,659
検索アルゴリズムがあり、

2053
01:27:30,659 --> 01:27:31,860
基本的にアーキテクチャを

2054
01:27:31,860 --> 01:27:34,260
グラフとして取得し、

2055
01:27:34,260 --> 01:27:36,000


2056
01:27:36,000 --> 01:27:37,320


2057
01:27:37,320 --> 01:27:39,559
より良いと思われる別のグラフを吐き出すようにニューラルネットワークをトレーニングし

2058
01:27:40,199 --> 01:27:42,960
、それらは時々畳み込みを使用することで

2059
01:27:42,960 --> 01:27:44,340
役立ちます

2060
01:27:44,340 --> 01:27:46,199
それはすごいですね、畳み込みは

2061
01:27:46,199 --> 01:27:49,139
そうそう、そう、そして一つ考えられるのは、

2062
01:27:49,139 --> 01:27:52,199
アリはこれらすべての信じられないパターンを解決し、

2063
01:27:52,199 --> 01:27:54,420


2064
01:27:54,420 --> 01:27:56,820


2065
01:27:56,820 --> 01:27:59,280
情報的および物理的な制限の中で驚くべきことを行うのです。

2066
01:27:59,280 --> 01:28:02,340
私たち全員がそうしているように、

2067
01:28:02,340 --> 01:28:04,400


2068
01:28:06,060 --> 01:28:09,420


2069
01:28:09,420 --> 01:28:11,159
アリに

2070
01:28:11,159 --> 01:28:13,500


2071
01:28:13,500 --> 01:28:15,239
貿易をさせるだけです -

2072
01:28:15,239 --> 01:28:18,300
タスク空間内でオフにし、

2073
01:28:18,300 --> 01:28:22,199


2074
01:28:22,199 --> 01:28:24,840
そのタスク空間を

2075
01:28:24,840 --> 01:28:27,199
フェロモン分布

2076
01:28:27,199 --> 01:28:31,860
やメタ認知アリに触れるようなものにするためのモデラーとしてのダイヤルを持ち、

2077
01:28:31,860 --> 01:28:34,500
本質的にそのすべてまたは何かをエミュレートします。

2078
01:28:34,500 --> 01:28:37,080
ええと、たとえばオクターブ推論は

2079
01:28:37,080 --> 01:28:38,520
前向きで、

2080
01:28:38,520 --> 01:28:39,900
他のものを考え抜くようなものです。 ある種

2081
01:28:39,900 --> 01:28:42,239
の認知コロニーが存在する可能性がある

2082
01:28:42,239 --> 01:28:43,440


2083
01:28:43,440 --> 01:28:47,100
ので、それによりインシリコでの

2084
01:28:47,100 --> 01:28:49,560
トータルな思考実験コロニーが可能になり

2085
01:28:49,560 --> 01:28:54,420
、データ駆動型のプロセスを通じて

2086
01:28:54,420 --> 01:28:56,820
そのモデルとの連続性が保たれ

2087
01:28:56,820 --> 01:28:58,739


2088
01:28:58,739 --> 01:29:02,100
、おそらく文字通りモデルとの連続性が保たれ、それから経験的なものに接続されます。

2089
01:29:02,100 --> 01:29:04,679


2090
01:29:04,679 --> 01:29:05,219


2091
01:29:05,219 --> 01:29:08,580
エージェントベースのモデリングでは非常に困難です。

2092
01:29:08,580 --> 01:29:11,580
これは、ポイントインのようなもので、

2093
01:29:11,580 --> 01:29:14,699
特定の固定軸を設定することが多く、スイープのように実行されます。1

2094
01:29:14,699 --> 01:29:15,960


2095
01:29:15,960 --> 01:29:18,179
つのメカニズムを調べますが、

2096
01:29:18,179 --> 01:29:20,699


2097
01:29:20,699 --> 01:29:24,120
学習や世代内、世代間の

2098
01:29:24,120 --> 01:29:26,940
効果など、考えられるすべてのメカニズムを検討するわけではありません。

2099
01:29:26,940 --> 01:29:30,840
これが

2100
01:29:30,840 --> 01:29:32,460
さまざまな研究やアプリケーションの

2101
01:29:32,460 --> 01:29:35,460
ドメインでどのように使用されていると思いますか、

2102
01:29:38,340 --> 01:29:39,719


2103
01:29:39,719 --> 01:29:44,880
うーん、つまり、私たちが考えている主な使用例は、

2104
01:29:44,880 --> 01:29:46,739
新しい

2105
01:29:46,739 --> 01:29:49,260
革新的なアーキテクチャの検索でした、ええと、

2106
01:29:49,260 --> 01:29:52,380
それは北極の検索以外の他のドメインに適用するためです。

2107
01:29:52,380 --> 01:29:55,440


2108
01:29:55,440 --> 01:29:58,440
それがわかりません、ええと、アレックスがそれについて説明できると思います、

2109
01:29:58,440 --> 01:30:00,719


2110
01:30:00,719 --> 01:30:03,179
私も少し飛び込むことができますつまり、

2111
01:30:03,179 --> 01:30:06,060


2112
01:30:06,060 --> 01:30:08,219
グラフを生成する必要があり

2113
01:30:08,219 --> 01:30:10,560
、そのグラフに固定構造がある必要がない場合は、基本的にこのタイプのアルゴリズムです

2114
01:30:10,560 --> 01:30:12,960
そして私がグラフと言うとき、

2115
01:30:12,960 --> 01:30:14,219
私はノード画像を持つコンピュータサイエンスグラフのようなことを意味します、

2116
01:30:14,219 --> 01:30:16,860


2117
01:30:16,860 --> 01:30:19,320
ええと、

2118
01:30:19,320 --> 01:30:21,480
グラフ構築に関わるほとんどすべてのことを意味します。この種

2119
01:30:21,480 --> 01:30:23,699
のメソッドは、

2120
01:30:23,699 --> 01:30:25,560
内部で機能するものだと思います。ご存知のとおり、

2121
01:30:25,560 --> 01:30:28,020
グラフとして表すことができ、通常は

2122
01:30:28,020 --> 01:30:30,000


2123
01:30:30,000 --> 01:30:32,699
とても人気があるのでニューラルネットワークに使っていると思いますが、

2124
01:30:32,699 --> 01:30:34,620


2125
01:30:34,620 --> 01:30:36,420


2126
01:30:36,420 --> 01:30:39,060
伝統的な巡回セールスマンのような他のアルゴリズムもあるのはご存知ですか、

2127
01:30:39,060 --> 01:30:40,560
ルーティングの問題のようなものがあって、

2128
01:30:40,560 --> 01:30:41,880
必要なあらゆるタイプのものがあります。

2129
01:30:41,880 --> 01:30:43,739


2130
01:30:43,739 --> 01:30:47,040
スマートな方法でグラフを生成しましょう、そうしましょう、はい、

2131
01:30:47,040 --> 01:30:48,540
別の点を取り上げますが、

2132
01:30:48,540 --> 01:30:49,739
ここで本当にクールなことは何かと思います、そして私は

2133
01:30:49,739 --> 01:30:51,420
それらのサンダーの周りに忍び込みたくありませんが、

2134
01:30:51,420 --> 01:30:52,800
将来の方向性についての彼の最後のポイントは、ええと、特定のバージョンであることは知っています

2135
01:30:52,800 --> 01:30:54,179


2136
01:30:54,179 --> 01:30:56,760


2137
01:30:56,760 --> 01:30:58,440
このアリのコロニー最適化探索は、

2138
01:30:58,440 --> 01:30:59,880
最適なニューラル ネットワークを見つけるために実行されています。

2139
01:30:59,880 --> 01:31:03,480
コロニーには

2140
01:31:03,480 --> 01:31:06,659
その中で動作する固定パラメーターがありますが、

2141
01:31:06,659 --> 01:31:08,699


2142
01:31:08,699 --> 01:31:10,739
アリが生物であるのではなく、コロニーを生物として考えると、コロニーを進化させて、そのコロニーの最適化を行うことができます。

2143
01:31:10,739 --> 01:31:15,659


2144
01:31:15,659 --> 01:31:17,880
アリ自体が行動するので、

2145
01:31:17,880 --> 01:31:21,719
コロニーを進化させることができます。コロニーは、より小さな

2146
01:31:21,719 --> 01:31:25,139
意味では、アリが生成するエージェントに対して

2147
01:31:25,139 --> 01:31:26,760
規定されたパラメーター内で進化または最適化するので、

2148
01:31:26,760 --> 01:31:29,699


2149
01:31:29,699 --> 01:31:31,199
メタメタのような精度を持つことができます。

2150
01:31:31,199 --> 01:31:34,860
本当にクールで

2151
01:31:34,860 --> 01:31:37,199
素晴らしいです。 つまり、今日の

2152
01:31:37,199 --> 01:31:40,320
アンプの行動に対する「なぜ」という質問の進化的説明は、

2153
01:31:40,320 --> 01:31:42,900
その答えの一部は、その規則性や制約の

2154
01:31:42,900 --> 01:31:45,659
下では生き残ることができなかったコロニーが生き残るために、

2155
01:31:45,659 --> 01:31:48,600


2156
01:31:48,600 --> 01:31:51,120
私たちはそれらをテーブルから一掃するのに長い長い時間を費やしてきたため、というものです。

2157
01:31:51,120 --> 01:31:53,219
生物学的

2158
01:31:53,219 --> 01:31:54,540
システムにはそのような

2159
01:31:54,540 --> 01:31:56,639
マルチスケールの秩序が必要です

2160
01:31:56,639 --> 01:32:00,840
えー、2021年に私たちは

2161
01:32:00,840 --> 01:32:03,120


2162
01:32:03,120 --> 01:32:07,139
認識論的採餌の視覚的注意タスクから修正された活動的な昆虫の論文を作成しました えー、

2163
01:32:07,139 --> 01:32:07,860


2164
01:32:07,860 --> 01:32:11,580
周りをスキャンしてから認識論的採餌と

2165
01:32:11,580 --> 01:32:14,040
関係のあるセミ政策を学習することについてです

2166
01:32:14,040 --> 01:32:16,080
痕跡を残さず、

2167
01:32:16,080 --> 01:32:17,940


2168
01:32:17,940 --> 01:32:20,040
アクティブな推論の認識的

2169
01:32:20,040 --> 01:32:22,860
視覚採餌モデルをアクティブなええと推論アリの設定に持ち込むための主な変更は、

2170
01:32:22,860 --> 01:32:25,800


2171
01:32:25,800 --> 01:32:27,540
あなたが説明したようなフェロモンルールを追加することでした。

2172
01:32:27,540 --> 01:32:28,739
もちろん、それが

2173
01:32:28,739 --> 01:32:30,540
唯一のフェロモンルールではありませんが、それは単なる

2174
01:32:30,540 --> 01:32:32,100
フェロモンルールです。 あなたが間違いなく持っているように、私たちが一般化できる最も単純なフェロモンルールであり、

2175
01:32:32,100 --> 01:32:34,080


2176
01:32:34,080 --> 01:32:37,800


2177
01:32:37,800 --> 01:32:39,719
それらのマルチスケールの能動推論モデルをモデル化する新しい方法がたくさんあり、相互作用を通じて起こる物事の

2178
01:32:39,719 --> 01:32:41,940


2179
01:32:41,940 --> 01:32:44,400


2180
01:32:44,400 --> 01:32:46,760
左右性の種類とより関連付けることができるレイヤー全体を構成する方法があります。

2181
01:32:46,760 --> 01:32:48,900


2182
01:32:48,900 --> 01:32:52,199
そして、マイク・レビンが

2183
01:32:52,199 --> 01:32:54,260
時間のようなもので示したように、

2184
01:32:54,260 --> 01:32:58,560


2185
01:32:58,560 --> 01:33:00,239


2186
01:33:00,239 --> 01:33:04,440
ある種の認知的形状の記憶保持コンポーネントと、

2187
01:33:04,440 --> 01:33:06,420


2188
01:33:06,420 --> 01:33:10,139


2189
01:33:10,139 --> 01:33:11,880
それを説明するために使用できる拡張意識や主体性、またはその他の属性を備えたダイヤモンドシステムは、

2190
01:33:11,880 --> 01:33:14,699
統計的に受け入れられる

2191
01:33:14,699 --> 01:33:18,420
方法です 物事を記述する

2192
01:33:18,420 --> 01:33:20,100
と、

2193
01:33:20,100 --> 01:33:22,920
特定の統計

2194
01:33:22,920 --> 01:33:24,659
問題やフェデレーテッド コンピューティング

2195
01:33:24,659 --> 01:33:26,820
アーキテクチャのようなさまざまな実装があり、アクティブ推論のさまざまなコンポーネントの初期の Matlab コードのように

2196
01:33:26,820 --> 01:33:29,300
純粋な行列乗算のように実行していない場合があります。

2197
01:33:29,300 --> 01:33:32,460


2198
01:33:32,460 --> 01:33:34,560


2199
01:33:34,560 --> 01:33:36,480


2200
01:33:36,480 --> 01:33:37,920
機械学習システムのいくつかは、ある種

2201
01:33:37,920 --> 01:33:41,580
の方法で一緒に構成されている可能性もありますし、

2202
01:33:41,580 --> 01:33:44,040


2203
01:33:44,040 --> 01:33:45,600
コミュニケーションのパターンに従うようなものでもありますが、

2204
01:33:45,600 --> 01:33:48,420
抽象化のレベルはまだ

2205
01:33:48,420 --> 01:33:49,920
説明できますが、それは能動的な推論が一種のようなものになるという意味ではありません

2206
01:33:49,920 --> 01:33:52,080


2207
01:33:52,080 --> 01:33:53,699
それが

2208
01:33:53,699 --> 01:33:54,900
多くの柔軟性をもたらすものであり、

2209
01:33:54,900 --> 01:33:58,080


2210
01:33:58,080 --> 01:34:00,600
アレクサンダーと

2211
01:34:00,600 --> 01:34:03,020
仕事、そして

2212
01:34:03,020 --> 01:34:05,639


2213
01:34:05,639 --> 01:34:07,320
マルチエージェント モデリングに関するアクティブな推論の観点と他の

2214
01:34:07,320 --> 01:34:10,260
すべてのビューを好むこれらの種類のコラボレーションが、あなたのバックグラウンドを通じて、

2215
01:34:10,260 --> 01:34:11,820
少なくとも比較的に統合できるのは本当に素晴らしいことです。

2216
01:34:11,820 --> 01:34:12,679


2217
01:34:12,679 --> 01:34:14,580


2218
01:34:14,580 --> 01:34:17,400
そして、それは、

2219
01:34:17,400 --> 01:34:20,639
この

2220
01:34:20,639 --> 01:34:22,800


2221
01:34:22,800 --> 01:34:26,760
組織タイプまたはコロニータイプ全体を適用する非常に興味深い交換になると思います

2222
01:34:26,760 --> 01:34:29,280
モデルの上と内で考えて、

2223
01:34:29,280 --> 01:34:31,380


2224
01:34:31,380 --> 01:34:34,320
あなたが言ったように多くの自由度は多すぎる可能性がありますが、

2225
01:34:34,320 --> 01:34:36,300
別の方法があると思います

2226
01:34:36,300 --> 01:34:38,699


2227
01:34:38,699 --> 01:34:41,460
アリの比喩をどう受け止めるかはあなた次第だと思います、そしてまたわかります、

2228
01:34:41,460 --> 01:34:43,620


2229
01:34:43,620 --> 01:34:45,239
あなたが行っている質問やコメントのいくつかは興味深いものです、

2230
01:34:45,239 --> 01:34:47,400
ダニエルと聴衆からあなたについてのいくつかの意見がありました、

2231
01:34:47,400 --> 01:34:50,100
えー、これはあなたが知っていることをどう思いますか

2232
01:34:50,100 --> 01:34:51,780
認知の観点からそれについて

2233
01:34:51,780 --> 01:34:53,460
私が仕事をしているのは、認知

2234
01:34:53,460 --> 01:34:55,860
アーキテクチャの中で、もちろん、

2235
01:34:55,860 --> 01:34:58,679
あなたが知っている単一のエージェント全体、または

2236
01:34:58,679 --> 01:35:01,679
単一のエンティティから、そしてあなたが知っている

2237
01:35:01,679 --> 01:35:03,960
さまざまな領域で単一の脳をモデル化するようなものですが、あなたが

2238
01:35:03,960 --> 01:35:07,440
理解しているなら、私は知っていると思います

2239
01:35:07,440 --> 01:35:11,040


2240
01:35:11,040 --> 01:35:13,739
アブデル・ラーメンが夢中になっているアリの比喩のような、自然にインスピレーションを得た最適化アプローチです。それは、

2241
01:35:13,739 --> 01:35:16,260


2242
01:35:16,260 --> 01:35:17,960
彼が

2243
01:35:17,960 --> 01:35:21,000


2244
01:35:21,000 --> 01:35:23,520
アリが自分たちの世界とどのように相互作用するかという原則を形式化する方法のようなものです。

2245
01:35:23,520 --> 01:35:26,460
そして、

2246
01:35:26,460 --> 01:35:28,920
これらの特定の概念を段階的に数学的にモデル化することがわかります。この

2247
01:35:28,920 --> 01:35:31,800


2248
01:35:31,800 --> 01:35:34,500
メタファーを曲げて、

2249
01:35:34,500 --> 01:35:36,540
まあまあと言うなら、アリのコロニーのメタファーは

2250
01:35:36,540 --> 01:35:39,900
複数の人間のエージェント システムや他のエンティティに正しく適用できるでしょうか。

2251
01:35:39,900 --> 01:35:42,480


2252
01:35:42,480 --> 01:35:44,460
アリは必ずそうなりますか？

2253
01:35:44,460 --> 01:35:46,860
一般化された アブドゥルラフマンが最初の比喩に基づいた物理的生き物はご存知でしょうが、それは

2254
01:35:46,860 --> 01:35:51,000


2255
01:35:51,000 --> 01:35:52,440


2256
01:35:52,440 --> 01:35:54,300
興味深い哲学的な解釈であり、

2257
01:35:54,300 --> 01:35:57,239
それをたとえば

2258
01:35:57,239 --> 01:35:59,100
マルチエージェント

2259
01:35:59,100 --> 01:36:01,080
認知システムの構築にどう適用するか、そしてもちろん

2260
01:36:01,080 --> 01:36:03,480
トラヴィスが議論していたと言いました あなたと一緒に

2261
01:36:03,480 --> 01:36:05,820
メタ認知について言及していましたが、

2262
01:36:05,820 --> 01:36:07,380


2263
01:36:07,380 --> 01:36:09,000
アリのコロニーのアリのコロニーを考えることができることはわかっていますが、

2264
01:36:09,000 --> 01:36:11,159
アリという単語を置き換えて、あなたが

2265
01:36:11,159 --> 01:36:13,260


2266
01:36:13,260 --> 01:36:15,719
知性のあるエージェントのクラスターを知っているか、またはどの程度の

2267
01:36:15,719 --> 01:36:17,760
モデリングを行っているかを知っているとだけ言うこともできます。 なぜなら、

2268
01:36:17,760 --> 01:36:20,159
もう一度強調したいのは、

2269
01:36:20,159 --> 01:36:22,440
少なくともラーメンの

2270
01:36:22,440 --> 01:36:24,360
文脈で私が一緒に仕事をしてきたエージェントには、

2271
01:36:24,360 --> 01:36:26,280
それらが存在することはなく、

2272
01:36:26,280 --> 01:36:29,040


2273
01:36:29,040 --> 01:36:31,739
それ自体には存在しないということです。

2274
01:36:31,739 --> 01:36:34,920
生成モデルや非常に非常に

2275
01:36:34,920 --> 01:36:38,100
単純な制御システムでは、

2276
01:36:38,100 --> 01:36:39,540
それぞれの下にニューラル ネットワークはありません。その場合、

2277
01:36:39,540 --> 01:36:41,159


2278
01:36:41,159 --> 01:36:43,139


2279
01:36:43,139 --> 01:36:44,580
フレームワーク内でこれらのアリをそれぞれ計算的にシミュレートする必要があるため、優れ

2280
01:36:44,580 --> 01:36:47,280
た実用的な機械学習のような

2281
01:36:47,280 --> 01:36:48,780
観点が常にあると思います。

2282
01:36:48,780 --> 01:36:50,820


2283
01:36:50,820 --> 01:36:53,040
CPU を使って作業するのは明らかですが、CPU を

2284
01:36:53,040 --> 01:36:55,980


2285
01:36:55,980 --> 01:36:57,840
再び畳み込みネットワークに置き換えるための GPU の軍隊を持っているわけではありません。

2286
01:36:57,840 --> 01:36:59,699
リソースがあれば、これは

2287
01:36:59,699 --> 01:37:02,159
素晴らしいでしょうが、費用と

2288
01:37:02,159 --> 01:37:03,900
お金はまた別です。 この地球上には制約があります

2289
01:37:03,900 --> 01:37:05,340
が、

2290
01:37:05,340 --> 01:37:07,260


2291
01:37:07,260 --> 01:37:10,260


2292
01:37:10,260 --> 01:37:13,139
アリの比喩からインスピレーションを得て、興味深い視点や興味深い方向性があると思います。

2293
01:37:13,139 --> 01:37:15,420
フェロモンの概念を知っていて、フェロモン

2294
01:37:15,420 --> 01:37:18,000
を別の概念に翻訳すると、

2295
01:37:18,000 --> 01:37:20,699
他の現実世界の信号や、たとえば

2296
01:37:20,699 --> 01:37:23,100
人間間のコミュニケーション パターンなどもわかります。

2297
01:37:23,100 --> 01:37:25,020
他の動物の実体や他の

2298
01:37:25,020 --> 01:37:26,940
人間のエージェントを知っていれば、それは

2299
01:37:26,940 --> 01:37:28,920
興味深い視点を開くと思います。そして、

2300
01:37:28,920 --> 01:37:30,840
それを常に結び付けようとしているなら、

2301
01:37:30,840 --> 01:37:32,940
フリーエネルギーの

2302
01:37:32,940 --> 01:37:35,340
最小化を知っていて、私たちがどのように

2303
01:37:35,340 --> 01:37:38,159
バランスをとっているのかをよく言おうとしているなら、あなたは

2304
01:37:38,159 --> 01:37:40,500
あなたが言う用語を知っています それを認識論と手段に分解することができます

2305
01:37:40,500 --> 01:37:42,480
、そしてこれらはどの

2306
01:37:42,480 --> 01:37:45,239
ようにバランスがとれていますか、そして

2307
01:37:45,239 --> 01:37:48,540
私たちが指定するこれらの物理的プロセスはどのようにして、ああ、

2308
01:37:48,540 --> 01:37:50,280
それらの用語のバランスをとっているのは知っています、それは

2309
01:37:50,280 --> 01:37:52,139
非常に興味深い場所です、そして

2310
01:37:52,139 --> 01:37:53,940
あなたはアリの能動的推論バージョンを知っていると言いました、

2311
01:37:53,940 --> 01:37:56,159
そして それは魅力的で、それ

2312
01:37:56,159 --> 01:37:58,739
自体は興味深いです、最後のコメントは

2313
01:37:58,739 --> 01:38:01,320
もう一度モデリングの程度と、

2314
01:38:01,320 --> 01:38:03,420


2315
01:38:03,420 --> 01:38:05,639
社会や組織をモデル化している場合にどのようなモデリングを行っているかです。それが

2316
01:38:05,639 --> 01:38:07,500
使用できる方法の 1 つであることは知っています。

2317
01:38:07,500 --> 01:38:10,320
アリのコロニーのフレームワークや

2318
01:38:10,320 --> 01:38:12,199
最適化についても知っています。 または、メタ ヒューリスティック

2319
01:38:12,199 --> 01:38:14,760
最適化フレームワークを知っていて、それを

2320
01:38:14,760 --> 01:38:17,820
キャストすると、システムを知っている、アクティブな推論の種類

2321
01:38:17,820 --> 01:38:20,940
として、あらゆる種類の複雑なマルチエージェント システムを知っている、魅力

2322
01:38:20,940 --> 01:38:22,920


2323
01:38:22,920 --> 01:38:25,620
的なプロセスを知っている、あるいは、

2324
01:38:25,620 --> 01:38:27,719
非常に低レベルに移行してセルについて考えることもできます。

2325
01:38:27,719 --> 01:38:30,120
体の中で、あるいは

2326
01:38:30,120 --> 01:38:32,820
器官や小器官を構成する単位で、よく言いたいのですが、

2327
01:38:32,820 --> 01:38:34,560


2328
01:38:34,560 --> 01:38:36,600


2329
01:38:36,600 --> 01:38:38,760
人間や動物の実体のような内部の粒度レベルをモデル化するためにこれを使用できるでしょうか。

2330
01:38:38,760 --> 01:38:39,900


2331
01:38:39,900 --> 01:38:41,880


2332
01:38:41,880 --> 01:38:44,340
このメタファーがどのように機能するのかについて、いくつかの興味深い疑問があると思います。

2333
01:38:44,340 --> 01:38:45,960
さまざまな時間スケールとさまざまな

2334
01:38:45,960 --> 01:38:48,719
度合いで現れます。

2335
01:38:48,719 --> 01:38:50,520
どのようにモデリングしているのか、

2336
01:38:50,520 --> 01:38:52,320
何を観察しているのか、

2337
01:38:52,320 --> 01:38:53,940
エミュレートしたい画像は何なのか、そしてもちろん、内部には常に

2338
01:38:53,940 --> 01:38:55,560


2339
01:38:55,560 --> 01:38:57,780


2340
01:38:57,780 --> 01:39:00,420
計算コストに関する実用的な考慮事項が存在します。 彼らは割り当てを行い、

2341
01:39:00,420 --> 01:39:02,219
実際にその

2342
01:39:02,219 --> 01:39:04,020
シミュレーションを十分な時間実行できますか? なぜなら、

2343
01:39:04,020 --> 01:39:06,600
すべてのラーメンは私を間違っていると思うからです。私が間違っている場合、あなたが

2344
01:39:06,600 --> 01:39:08,280
言及した実験の1つは、より

2345
01:39:08,280 --> 01:39:10,560
大きな

2346
01:39:10,560 --> 01:39:12,480
システムでは1か月かかったと思います、もちろん

2347
01:39:12,480 --> 01:39:15,300
これはそうでした CPU については、

2348
01:39:15,300 --> 01:39:17,880


2349
01:39:17,880 --> 01:39:19,560
それ以上に大きくしたい場合は、かなり高額になる可能性があることはご存知

2350
01:39:19,560 --> 01:39:21,659
でしょうが、繰り返しになりますが、

2351
01:39:21,659 --> 01:39:23,400


2352
01:39:23,400 --> 01:39:27,239
太陽をシミュレートするためにどのようなハードウェアが必要かを知っているかどうかにかかっています。また、

2353
01:39:27,239 --> 01:39:29,159
高性能コンピューティングを使用するということです。

2354
01:39:29,159 --> 01:39:31,739
小さなニューラルネットワーク

2355
01:39:31,739 --> 01:39:34,320
のようにアリの脳をモデル化しようとすると、

2356
01:39:34,320 --> 01:39:36,239


2357
01:39:36,239 --> 01:39:39,300
GPU を使用するのは

2358
01:39:39,300 --> 01:39:41,760
実現可能な解決策ではないかもしれません。Travis は

2359
01:39:41,760 --> 01:39:43,260
ハイパフォーマンスコンピューティングのスペシャリストですので、

2360
01:39:43,260 --> 01:39:46,639
専門家の価値はありますが、

2361
01:39:46,639 --> 01:39:49,920
GPU にデータを送信してそれを戻すのは

2362
01:39:49,920 --> 01:39:52,440
非常に時間がかかり、リソースは

2363
01:39:52,440 --> 01:39:55,500
継続できるため、メイン メモリと GPU

2364
01:39:55,500 --> 01:39:58,260


2365
01:39:58,260 --> 01:40:00,960
間の通信には

2366
01:40:00,960 --> 01:40:04,440


2367
01:40:04,440 --> 01:40:08,880
オーバーヘッドが発生するため、問題を解決するというよりも時間の消費が悪化します。 このようなソリューションでこの GPU を

2368
01:40:08,880 --> 01:40:11,820
実際に利用するには、十分に大きな問題がなければなりません。

2369
01:40:11,820 --> 01:40:17,780


2370
01:40:20,760 --> 01:40:23,040
そうですね、超

2371
01:40:23,040 --> 01:40:25,980
大規模な言語モデルや

2372
01:40:25,980 --> 01:40:28,639
コンピューター ビジョン用の大規模なモデルをご存知のとおり、それらは基本的に

2373
01:40:28,639 --> 01:40:32,100
テンソル上で大規模な演算を大量に実行します。

2374
01:40:32,100 --> 01:40:33,840
多次元行列が

2375
01:40:33,840 --> 01:40:36,780
適切で、非常に大きなワイド テンソルがある場合、

2376
01:40:36,780 --> 01:40:39,540


2377
01:40:39,540 --> 01:40:42,139
GPU 全体で操作を非常にうまく並列化できます。

2378
01:40:42,139 --> 01:40:45,659
この作業の多くは、センサー データに基づいて

2379
01:40:45,659 --> 01:40:47,699
時系列仕様を予測する時系列のような作業に基づいています。

2380
01:40:47,699 --> 01:40:50,400


2381
01:40:50,400 --> 01:40:52,800
Power Systems のようなので、

2382
01:40:52,800 --> 01:40:55,380
大規模な言語モデルへの入力は

2383
01:40:55,380 --> 01:40:57,360
1,000 以上になる可能性があることがわかります。

2384
01:40:57,360 --> 01:40:58,320


2385
01:40:58,320 --> 01:41:01,080
単語埋め込みの語長は

2386
01:41:01,080 --> 01:41:03,900
実際にはそれほど大きくありませんが、

2387
01:41:03,900 --> 01:41:05,880
コンピューター ビジョン モデルに移行した場合にのみ、

2388
01:41:05,880 --> 01:41:08,520
入力画像が

2389
01:41:08,520 --> 01:41:09,960
1,000 万 5,000 ピクセルで、

2390
01:41:09,960 --> 01:41:11,580
実際には 100 万個の入力が得られます。

2391
01:41:11,580 --> 01:41:12,420


2392
01:41:12,420 --> 01:41:13,679


2393
01:41:13,679 --> 01:41:15,900
飛行機の発電所のセンサー システムを使用する場合、

2394
01:41:15,900 --> 01:41:17,159
この種の入力は 50 ～ 100 個ある可能性があります。

2395
01:41:17,159 --> 01:41:19,320


2396
01:41:19,320 --> 01:41:20,940
時系列データの場合、

2397
01:41:20,940 --> 01:41:24,179
大規模で超ワイドなニューラル ネットワークは必要ありません。

2398
01:41:24,179 --> 01:41:26,159
また、

2399
01:41:26,159 --> 01:41:27,540
時間の経過とともに逆問題を実行する必要がある再帰性を追加したり、

2400
01:41:27,540 --> 01:41:28,800
このような他の処理を実行したりすると、

2401
01:41:28,800 --> 01:41:30,239
実際には GPU 上で適切に並列化することができなくなります。

2402
01:41:30,239 --> 01:41:32,880
私たちにとって、CPU の方が

2403
01:41:32,880 --> 01:41:34,440
実際にはより効率的です。

2404
01:41:34,440 --> 01:41:36,179
アブドゥル ラーマンは

2405
01:41:36,179 --> 01:41:38,400
ずっと前にこれを GPU に載せるために大量のコードを書いてみましたが、

2406
01:41:38,400 --> 01:41:39,900
かなり遅いことがわかりました。そのため、

2407
01:41:39,900 --> 01:41:42,119


2408
01:41:42,119 --> 01:41:43,679
ニューラル ネットワークで何をしているかによっては、  GPU は実際には正しい答えではありません。

2409
01:41:43,679 --> 01:41:45,060


2410
01:41:45,060 --> 01:41:46,500
でも、これに関するもう 1 つの素晴らしい点は、

2411
01:41:46,500 --> 01:41:48,360
もしかしたら可能性さえあると私が思うのは、

2412
01:41:48,360 --> 01:41:51,179


2413
01:41:51,179 --> 01:41:54,179
ご存知の通り、機械学習におけるあまり語られていない大きな問題の 1 つは、

2414
01:41:54,179 --> 01:41:55,739


2415
01:41:55,739 --> 01:41:58,260
バックプロパゲーションが最速であるということです。

2416
01:41:58,260 --> 01:42:00,659
私たちが知っていることですが、それは本質的に

2417
01:42:00,659 --> 01:42:03,239
スケーラブルではありません。より大きな

2418
01:42:03,239 --> 01:42:05,520
より優れた GPU を使用してネットワークの各部分を

2419
01:42:05,520 --> 01:42:07,260
並列処理して速度を上げることができます

2420
01:42:07,260 --> 01:42:09,179
が、トレーニング プロセスを高速化したい場合は、より大きなネットワークを使用する場合にのみ改善されます。

2421
01:42:09,179 --> 01:42:11,040


2422
01:42:11,040 --> 01:42:12,659
単に

2423
01:42:12,659 --> 01:42:16,440
別の CPU や別の GPU を追加して

2424
01:42:16,440 --> 01:42:18,840
バックドロップを高速化することはできません。

2425
01:42:18,840 --> 01:42:20,219


2426
01:42:20,219 --> 01:42:22,260
ニューラル ネットワークを介した前方および後方のパスを高速化することはできますが、それでもやらなければならないのは、バック

2427
01:42:22,260 --> 01:42:24,239
プロップのエポックごとに反復することです。

2428
01:42:24,239 --> 01:42:25,980


2429
01:42:25,980 --> 01:42:28,380


2430
01:42:28,380 --> 01:42:30,060
Generate we're not we're not one それは

2431
01:42:30,060 --> 01:42:31,800
バックプロップ 3 です。バックプロップを使用していません。

2432
01:42:31,800 --> 01:42:34,440
ネイチャーインスパイアや

2433
01:42:34,440 --> 01:42:36,179
その他の方法を使用して数百台の

2434
01:42:36,179 --> 01:42:37,619
コンピューターを使用できます。そうすれば、2 倍のコンピューターを投入して、

2435
01:42:37,619 --> 01:42:39,119


2436
01:42:39,119 --> 01:42:41,820
2 倍の結果を得ることができます。 その問題は 2 倍の速度ですが、

2437
01:42:41,820 --> 01:42:43,679
それは不可能です。

2438
01:42:43,679 --> 01:42:45,480
実際に

2439
01:42:45,480 --> 01:42:47,820
ニューラル ネットワークをより速くトレーニングできることを考えてみると、

2440
01:42:47,820 --> 01:42:49,920
その作物は実際に、私たちが行う必要があることに対して

2441
01:42:49,920 --> 01:42:52,380
かなり低い速度制限があることがわかります。 これは

2442
01:42:52,380 --> 01:42:54,420


2443
01:42:54,420 --> 01:42:55,320
機械学習コミュニティの一種の大きな問題で、

2444
01:42:55,320 --> 01:42:56,400
人々はあまり話したくないのです

2445
01:42:56,400 --> 01:42:57,239
が、「

2446
01:42:57,239 --> 01:43:00,239
次の大きな Nvidia GPU を買えば

2447
01:43:00,239 --> 01:43:01,320
作業が速くなり、

2448
01:43:01,320 --> 01:43:02,580


2449
01:43:02,580 --> 01:43:05,159
非常に興味深いことになるでしょう」というようなことになるからです。

2450
01:43:05,159 --> 01:43:08,100
もちろん

2451
01:43:08,100 --> 01:43:10,380
グラフィックスビジュアライゼーションのようなものは

2452
01:43:10,380 --> 01:43:13,260
GPU がうまく機能し、大規模に展開できる

2453
01:43:13,260 --> 01:43:15,659


2454
01:43:15,659 --> 01:43:18,840
古典的なプロセスで時間の経過とともに画面が変化し

2455
01:43:18,840 --> 01:43:22,860


2456
01:43:22,860 --> 01:43:26,100
、最終的には

2457
01:43:26,100 --> 01:43:28,139
巣の仲間の認知モデルが再び展開されるような、ある種の関係性さえも持ち出します。

2458
01:43:28,139 --> 01:43:29,880
ネストされていますが、認知的なものは、

2459
01:43:29,880 --> 01:43:31,920
より量子的な認知モデルであり、

2460
01:43:31,920 --> 01:43:35,580


2461
01:43:35,580 --> 01:43:38,159


2462
01:43:38,159 --> 01:43:40,679
スティグマジーを介して以外に精神が互いに影響を与えないため、並行して実行できるため、

2463
01:43:40,679 --> 01:43:43,080
CPU に制限されたサイズのコロニーですが、

2464
01:43:43,080 --> 01:43:44,100


2465
01:43:44,100 --> 01:43:46,440


2466
01:43:46,440 --> 01:43:48,600
グラフィックスのような別のものを使用することもできます

2467
01:43:48,600 --> 01:43:53,580
コロニー生物が存在するのでアリは 1 匹だけなの

2468
01:43:53,580 --> 01:43:55,560
か、あるいはそれは哲学的な質問ですが、ああ、アリが

2469
01:43:55,560 --> 01:43:58,619
存在する規模はどのくらいですか、

2470
01:43:58,619 --> 01:44:01,619


2471
01:44:01,619 --> 01:44:04,080
たとえばアルゼンチン アリがカリフォルニア全域に存在するのですが、では

2472
01:44:04,080 --> 01:44:05,639
そのような種類のメッシュワークの認知にどう対処するのかなどのテクニックです。

2473
01:44:05,639 --> 01:44:08,639
システムは

2474
01:44:08,639 --> 01:44:11,340
どんぐりの50個までずっと続いていて、

2475
01:44:11,340 --> 01:44:12,960
これらすべての異なる

2476
01:44:12,960 --> 01:44:15,900
トレードオフが行われているだけで、特徴のない砂漠のように、

2477
01:44:15,900 --> 01:44:18,659


2478
01:44:18,659 --> 01:44:21,840
異なる経路探索、経路探索、

2479
01:44:21,840 --> 01:44:24,060
センサーの統合、

2480
01:44:24,060 --> 01:44:25,380
異なる認知戦略のような光の偏光、

2481
01:44:25,380 --> 01:44:28,139
なぜならそれらは

2482
01:44:28,139 --> 01:44:31,020
長く続くかもしれないからです 距離を置き、

2483
01:44:31,020 --> 01:44:32,639
フェロモンを残さずに何かを家に引きずり込みます。

2484
01:44:32,639 --> 01:44:34,739


2485
01:44:34,739 --> 01:44:36,900
そこに食べ物がある可能性が低いため、その場合、スティグマGは

2486
01:44:36,900 --> 01:44:40,199
基本的に最小限

2487
01:44:40,199 --> 01:44:42,239
または実質的にゼロになります。そして、他の状況では、分布

2488
01:44:42,239 --> 01:44:45,239
に非常に忠実なものが得られる可能性があります。 非常に

2489
01:44:45,239 --> 01:44:47,100


2490
01:44:47,100 --> 01:44:49,560
ある種の規範的な道筋に適合しているようなものです

2491
01:44:49,560 --> 01:44:53,159


2492
01:44:53,159 --> 01:44:55,280
が、それは、

2493
01:44:55,280 --> 01:44:58,380
さまざまな計算

2494
01:44:58,380 --> 01:45:00,179
アーキテクチャ、

2495
01:45:00,179 --> 01:45:03,360
さまざまな情報アーキテクチャ、

2496
01:45:03,360 --> 01:45:06,440
そして最終的にはさまざまな生物学的実施

2497
01:45:06,440 --> 01:45:09,719
形態が、

2498
01:45:09,719 --> 01:45:12,360


2499
01:45:12,360 --> 01:45:14,639
生物学的アルゴリズムの多様性の多様性に目を向けて再び実りある形で取り組むことを可能にするレベルで起こっています。

2500
01:45:14,639 --> 01:45:17,159
集団行動は、

2501
01:45:17,159 --> 01:45:19,500


2502
01:45:19,500 --> 01:45:20,880
ゴードン教授や他の人々によって非常に多くの異なる

2503
01:45:20,880 --> 01:45:22,980
角度で研究されていますが、

2504
01:45:22,980 --> 01:45:24,780
マルチエージェント モデルは常に

2505
01:45:24,780 --> 01:45:27,179
スクエア ワンで

2506
01:45:27,179 --> 01:45:29,100
概念実証現象を実証するような形で開始され

2507
01:45:29,100 --> 01:45:31,080
、それが次のようなものの一部として利用されているように感じることがあります。

2508
01:45:31,080 --> 01:45:33,420
より大きな観点から見るが、

2509
01:45:33,420 --> 01:45:36,900
そのモデルが

2510
01:45:36,900 --> 01:45:39,719
最大のパフォーマンスに調整されていると主張されていたわけでは

2511
01:45:39,719 --> 01:45:41,219
なく、意思決定の動作は得られたようだ。

2512
01:45:41,219 --> 01:45:42,600


2513
01:45:42,600 --> 01:45:43,980
これをミツバチの意思決定などを使用してグループの意思決定に移すこともできるが、

2514
01:45:43,980 --> 01:45:46,260


2515
01:45:46,260 --> 01:45:48,060


2516
01:45:48,060 --> 01:45:49,260


2517
01:45:49,260 --> 01:45:51,719
そこにはまだ大きなギャップがある

2518
01:45:51,719 --> 01:45:53,820
でも、あなたが缶について説明していることは

2519
01:45:53,820 --> 01:45:55,619
面白いと思います。それは

2520
01:45:55,619 --> 01:45:57,900
ありえないかもしれないからですが、缶は

2521
01:45:57,900 --> 01:45:59,460


2522
01:45:59,460 --> 01:46:01,619
話されている方言でもあります、そう、だからそれは非常に素晴らしかった、つまり

2523
01:46:01,619 --> 01:46:03,780
私たちはそれを思いついた

2524
01:46:03,780 --> 01:46:06,300
素晴らしい選択であり、それはまさにそうです、

2525
01:46:06,300 --> 01:46:08,280
なぜならそれがあるからです

2526
01:46:08,280 --> 01:46:10,980


2527
01:46:10,980 --> 01:46:13,139
古典的な画面上で複数の視点を切り替えることができるのは、

2528
01:46:13,139 --> 01:46:15,840
言葉の意味が

2529
01:46:15,840 --> 01:46:17,040
四次元の認知的に起こっていることだからであり、

2530
01:46:17,040 --> 01:46:19,320


2531
01:46:19,320 --> 01:46:21,659
言葉の意味は

2532
01:46:21,659 --> 01:46:24,960
毛布の上だけで見つけられるものではなく、

2533
01:46:24,960 --> 01:46:26,219
ただのコミュニケーションであるインターフェース自体の上で見つけることができるからです。

2534
01:46:26,219 --> 01:46:28,380


2535
01:46:28,380 --> 01:46:30,179
それは有界システムのようなもので、

2536
01:46:30,179 --> 01:46:31,320


2537
01:46:31,320 --> 01:46:32,580
その種の制約を持たない認知システムをモデル化すると、それは

2538
01:46:32,580 --> 01:46:33,780


2539
01:46:33,780 --> 01:46:36,420


2540
01:46:36,420 --> 01:46:39,600


2541
01:46:39,600 --> 01:46:41,699
ある種の包括的なインデックスを持つマップによって表現されます。それを具体化しない場合のような、ある種の包括的なものです

2542
01:46:41,699 --> 01:46:43,139


2543
01:46:43,139 --> 01:46:45,420
統計モデルの制約 マップ あなたが

2544
01:46:45,420 --> 01:46:46,880
無視しているのは、物事が具現化された形で起こる方法をモデリングする際の基本的な制約の 1 つ たぶん、完全な

2545
01:46:46,880 --> 01:46:50,219


2546
01:46:50,219 --> 01:46:51,659


2547
01:46:51,659 --> 01:46:53,639


2548
01:46:53,639 --> 01:46:55,260


2549
01:46:55,260 --> 01:46:58,020
スラムダンクのような特定の問題には抽象的なスペースがあるかもしれませんが、

2550
01:46:58,020 --> 01:47:00,960
少なくとも完全な一般性のために

2551
01:47:00,960 --> 01:47:02,580
私たちが知っている

2552
01:47:02,580 --> 01:47:04,860
生物学的生命体とその

2553
01:47:04,860 --> 01:47:07,679
関わり、そして生態学的な

2554
01:47:07,679 --> 01:47:08,540


2555
01:47:08,540 --> 01:47:10,980
関わりなど、1つの空間内での行動だけではなく、その

2556
01:47:10,980 --> 01:47:15,420
空間は非常に広大であり、

2557
01:47:15,420 --> 01:47:17,159


2558
01:47:17,159 --> 01:47:19,560
2つの異なるシステム全体にわたって学ぶべきことがたくさんあり、

2559
01:47:19,560 --> 01:47:21,300


2560
01:47:21,300 --> 01:47:22,880
別のシステムに引き離されます 情報

2561
01:47:22,880 --> 01:47:25,860
アーキテクチャと能動推論は

2562
01:47:25,860 --> 01:47:29,280
それらのサブセッタータイプなので、

2563
01:47:29,280 --> 01:47:31,560
素晴らしい仕事です。

2564
01:47:31,560 --> 01:47:34,760
最後に何かコメントは

2565
01:47:37,320 --> 01:47:40,320
ありますか。ええと、

2566
01:47:40,320 --> 01:47:42,600
友人がこの環境について自己認識し、よく認識できるように機能を提供しています。

2567
01:47:42,600 --> 01:47:43,860
それは実際に

2568
01:47:43,860 --> 01:47:46,020
私たちが実装したものです。

2569
01:47:46,020 --> 01:47:49,320
BP無料アカウントを使った前回の作業では、

2570
01:47:49,320 --> 01:47:50,760


2571
01:47:50,760 --> 01:47:53,520
彼らは間接的に自分たちの

2572
01:47:53,520 --> 01:47:55,619
環境と理論について認識しており、

2573
01:47:55,619 --> 01:47:58,199


2574
01:47:58,199 --> 01:48:00,659
起訴によって臨床環境の変化に適応しています。 つまり、

2575
01:48:00,659 --> 01:48:03,900
彼らは

2576
01:48:03,900 --> 01:48:07,080
遺伝ベースのアルゴリズムを使用して

2577
01:48:07,080 --> 01:48:09,540
進化しているということです。

2578
01:48:09,540 --> 01:48:12,540
これらのものは、彼らがステップを

2579
01:48:12,540 --> 01:48:14,760
踏むときの言葉、言葉、フェロモン、

2580
01:48:14,760 --> 01:48:16,920
そして時々、彼らが持っている他の

2581
01:48:16,920 --> 01:48:18,960
キャラクターなので、彼らは

2582
01:48:18,960 --> 01:48:22,440
適応しているのですが、まあ、

2583
01:48:22,440 --> 01:48:26,699
知的で、ええと、

2584
01:48:26,699 --> 01:48:28,560
進化を通じてそれを通過するのですが、ある種のナッツのようなものです。

2585
01:48:28,560 --> 01:48:32,580
実際に言いたいのは、

2586
01:48:32,580 --> 01:48:34,440
これらのエージェントのそれぞれに脳を入れることを検討しているのです

2587
01:48:34,440 --> 01:48:37,879
が、ニューラルネットワークを進化させるにつれてこれらの脳のそれぞれを訓練するのに時間がかかるということを

2588
01:48:46,340 --> 01:48:49,860
麻痺させるのが好きではなかったので、再び設計としてです、

2589
01:48:49,860 --> 01:48:52,080


2590
01:48:52,080 --> 01:48:54,119


2591
01:48:54,119 --> 01:48:56,480


2592
01:48:58,500 --> 01:49:01,139
素晴らしい

2593
01:49:01,139 --> 01:49:05,540
アレクサンダー またはトラヴィス、最後に何か考えはあります

2594
01:49:11,480 --> 01:49:14,219
か、わかりました、

2595
01:49:14,219 --> 01:49:15,179


2596
01:49:15,179 --> 01:49:18,179
うーん、私は本当に本当に幸せです、

2597
01:49:18,179 --> 01:49:19,500
つまり、この作品は本当に

2598
01:49:19,500 --> 01:49:22,080
興味深いものであり、

2599
01:49:22,080 --> 01:49:24,719


2600
01:49:24,719 --> 01:49:27,420
私たちがここまで到達できれば、非常にクールな道が再び開かれると思います

2601
01:49:27,420 --> 01:49:29,400
進化するコロニーがアリを生み出しており、

2602
01:49:29,400 --> 01:49:30,960


2603
01:49:30,960 --> 01:49:33,840
それがどこに行くのかがわかるので、

2604
01:49:33,840 --> 01:49:35,219
ニューラル アーキテクチャの探索における大きな問題の 1 つは、

2605
01:49:35,219 --> 01:49:37,320


2606
01:49:37,320 --> 01:49:38,940
最適なニューラル ネットワークとは何か、そして

2607
01:49:38,940 --> 01:49:40,980
最適なニューラル ネットワークとは何かという全体的な問題です。

2608
01:49:40,980 --> 01:49:43,440


2609
01:49:43,440 --> 01:49:44,940
異なるタスクによって異なりますが、それ

2610
01:49:44,940 --> 01:49:47,520
だけではありません。たとえ同じデータセットであっても、

2611
01:49:47,520 --> 01:49:49,380
そのニューラル ネットワークをどのように使用しているかによって、そのニューラル ネットワークの

2612
01:49:49,380 --> 01:49:51,719
最適性が低下する可能性があり、

2613
01:49:51,719 --> 01:49:53,520


2614
01:49:53,520 --> 01:49:55,199
その使用方法によっては、

2615
01:49:55,199 --> 01:49:57,540
よりエネルギー効率の高いニューラル ネットワークが必要になる可能性があります。

2616
01:49:57,540 --> 01:49:59,159
エネルギー効率やパフォーマンスを気にせず、

2617
01:49:59,159 --> 01:50:00,900


2618
01:50:00,900 --> 01:50:02,219
低速のニューラル ネットワークを使用することになりますが、

2619
01:50:02,219 --> 01:50:05,159
より高い精度が必要となるため、

2620
01:50:05,159 --> 01:50:07,860
このプロセス全体を自動化し、

2621
01:50:07,860 --> 01:50:10,260


2622
01:50:10,260 --> 01:50:11,340
実際にニューラル ネットワークを使用したいものに合わせて調整できるアルゴリズムが必要になります。

2623
01:50:11,340 --> 01:50:14,219
というのは本当に重要で、1つは問題に対してネットワークを最適化できる

2624
01:50:14,219 --> 01:50:16,080
アリのコロニー最適化だけでも

2625
01:50:16,080 --> 01:50:17,580


2626
01:50:17,580 --> 01:50:19,080
素晴らしかったと思いますが、2つ目は、

2627
01:50:19,080 --> 01:50:21,179
アルゴリズム自体が

2628
01:50:21,179 --> 01:50:24,239
自己最適化するようにすることができれば、現時点ではこのプロセス全体を本当に合理化できます

2629
01:50:24,239 --> 01:50:27,600


2630
01:50:27,600 --> 01:50:28,980
機械学習をやっているなら、それは

2631
01:50:28,980 --> 01:50:31,020
ちょっと惨めなことになるかもしれない ニューラル

2632
01:50:31,020 --> 01:50:32,639
ネットワークアーキテクチャを作るのが好きだから試してみて、それがどれ

2633
01:50:32,639 --> 01:50:34,500
だけうまくいくか見てみる ああ、それはあまりうまくいかなかった

2634
01:50:34,500 --> 01:50:37,199
いくつかのノブを調整させてください、

2635
01:50:37,199 --> 01:50:40,320
そのプロセスを自動化します 私の

2636
01:50:40,320 --> 01:50:42,540
コンピューター科学者としての人生は、

2637
01:50:42,540 --> 01:50:44,719
怠け者であることと賢く取り組むことです。そのため、何度も

2638
01:50:44,719 --> 01:50:47,760


2639
01:50:47,760 --> 01:50:49,619
実行する必要がないように最適化できるものはすべて、

2640
01:50:49,619 --> 01:50:52,020
時間の有効な使い方だと思われるので、

2641
01:50:52,020 --> 01:50:54,000
賢明に取り組むつもりです。

2642
01:50:54,000 --> 01:50:56,840
将来的にはできる限りやるべきことは

2643
01:50:57,719 --> 01:51:00,540
最小限に抑えなければならないと思います、それから私はそれに付け加えることはあまりありません、ええと

2644
01:51:00,540 --> 01:51:02,880
多くの

2645
01:51:02,880 --> 01:51:05,760
良い議論がすでに起こっていると思います、そして

2646
01:51:05,760 --> 01:51:08,719
私たちはさまざまな影響や見方について話し合いました。

2647
01:51:08,719 --> 01:51:11,400
コロニーの

2648
01:51:11,400 --> 01:51:13,260
最適化については、能動的推論の観点を含む他の観点をご存知のとおりです。

2649
01:51:13,260 --> 01:51:15,000


2650
01:51:15,000 --> 01:51:17,340
つまり、

2651
01:51:17,340 --> 01:51:19,980
私の

2652
01:51:19,980 --> 01:51:23,159
最終的な考えとしては、それは興味深いものになるだろう、または、

2653
01:51:23,159 --> 01:51:25,800


2654
01:51:25,800 --> 01:51:28,260
私が前に述べたり提案したりするのは興味深い方向性であるということです。

2655
01:51:28,260 --> 01:51:30,719
比喩を

2656
01:51:30,719 --> 01:51:34,020
他のシステムに正しく適用すること、何を

2657
01:51:34,020 --> 01:51:36,300
モデル化しようとしているのか、

2658
01:51:36,300 --> 01:51:38,580
科学的および

2659
01:51:38,580 --> 01:51:40,619
哲学的な観点から見た目標は何か、答えようとしている

2660
01:51:40,619 --> 01:51:41,820
質問は何なのか、これを考える

2661
01:51:41,820 --> 01:51:43,739
と非常に興味深いものになると思います。

2662
01:51:43,739 --> 01:51:46,260
他の

2663
01:51:46,260 --> 01:51:48,119
開発やご存知のとおり、コンピューティング

2664
01:51:48,119 --> 01:51:50,760
技術は、

2665
01:51:50,760 --> 01:51:53,880
並列化を実装する方法であり、

2666
01:51:53,880 --> 01:51:56,280
それが私が

2667
01:51:56,280 --> 01:51:58,380
これらのメタヒューリスティックアルゴリズムの多くに最も惹かれたものであり、

2668
01:51:58,380 --> 01:52:00,780
粒子群のようなものであり、

2669
01:52:00,780 --> 01:52:03,060


2670
01:52:03,060 --> 01:52:05,400
何年も前にTravisと仕事をしたときのことです。 試験の

2671
01:52:05,400 --> 01:52:07,739
アルゴリズムで私たちの名前が載っていて、ああ、

2672
01:52:07,739 --> 01:52:10,440
その種のことに取り組んでいるのですが、

2673
01:52:10,440 --> 01:52:12,060


2674
01:52:12,060 --> 01:52:13,739
いつも私の注意を引いた部分は、

2675
01:52:13,739 --> 01:52:16,139
これらのエンティティを別の

2676
01:52:16,139 --> 01:52:18,600
処理、コンピューティング処理、ご存知の

2677
01:52:18,600 --> 01:52:21,420
リソースやデバイスに配置できると言える能力です。 彼らは

2678
01:52:21,420 --> 01:52:23,880


2679
01:52:23,880 --> 01:52:26,340
何らかの方法で相互作用したり、相互作用したり、結果を交換したりして、

2680
01:52:26,340 --> 01:52:29,900
ご存知のとおり、複雑な

2681
01:52:29,900 --> 01:52:32,820
多目的コスト関数を最適化しようとします。そのため、今後

2682
01:52:32,820 --> 01:52:35,040
私たちが目にする部分、またはメタのようなものでも

2683
01:52:35,040 --> 01:52:37,860
広範な採用を促進する部分になると思います。  -

2684
01:52:37,860 --> 01:52:40,500
ヒューリスティック

2685
01:52:40,500 --> 01:52:42,119
アルゴリズムは一般に、

2686
01:52:42,119 --> 01:52:43,800
たとえばエンジニアリング領域ではあまり使用されていないとは言えませんが、これもご存知の

2687
01:52:43,800 --> 01:52:46,440


2688
01:52:46,440 --> 01:52:48,300
並列

2689
01:52:48,300 --> 01:52:50,100
コンピューティング処理システムの開発であり、

2690
01:52:50,100 --> 01:52:52,139
非同期コンピューティングなどを利用することも

2691
01:52:52,139 --> 01:52:53,760


2692
01:52:53,760 --> 01:52:55,860
私の注意を引いた別の角度だと思います。  Travis から、あなたは彼が

2693
01:52:55,860 --> 01:52:57,780
多くの研究を行っていることを知っています、あなたは

2694
01:52:57,780 --> 01:52:59,940


2695
01:52:59,940 --> 01:53:01,980
非同期の観点から進化における遺伝的最適化を知っています、そして

2696
01:53:01,980 --> 01:53:04,440


2697
01:53:04,440 --> 01:53:06,540
利用可能なリソースをどのように割り当てることができるかを知っています、そしてあなたも知っています

2698
01:53:06,540 --> 01:53:09,179
それらをグローバルネットワーク全体に分散すること

2699
01:53:09,179 --> 01:53:11,940
が私は最良かもしれないと思います スケールアップへの

2700
01:53:11,940 --> 01:53:14,340
取り組みです 今得られたもので見てみましょう

2701
01:53:14,340 --> 01:53:16,440
あなたが年次量子テクノロジーについて言及したことが再びあるかもしれません

2702
01:53:16,440 --> 01:53:18,679


2703
01:53:18,679 --> 01:53:20,940
量子コンピューティングは、ゲームを変えるような別の興味深い

2704
01:53:20,940 --> 01:53:23,699
場所です

2705
01:53:23,699 --> 01:53:25,800
ええと、しかし、私たちが知らないテクノロジーを知っているのでなければ、あなたは知っています

2706
01:53:25,800 --> 01:53:28,320


2707
01:53:28,320 --> 01:53:30,540
現時点では必然的に最高の状態にあるのですが、

2708
01:53:30,540 --> 01:53:32,040


2709
01:53:32,040 --> 01:53:34,880
市民科学、

2710
01:53:34,880 --> 01:53:38,100
分散コンピューティング、またはピアツーピア

2711
01:53:38,100 --> 01:53:40,159
型の通信をどのように活用し、マルチエージェントの比喩のように体現する大

2712
01:53:40,159 --> 01:53:42,960
規模なアクティブ推論システムを構築できるかご存知でしょう。

2713
01:53:42,960 --> 01:53:45,380


2714
01:53:45,380 --> 01:53:48,540
コロニーの最適化や

2715
01:53:48,540 --> 01:53:51,239
その他の自然にインスピレーションを得たフレームワーク、そして、

2716
01:53:51,239 --> 01:53:54,659
あなたが知っているこのシステムは、

2717
01:53:54,659 --> 01:53:57,119


2718
01:53:57,119 --> 01:53:59,760
進化が実際に別の作品で機能したように、非常に長い期間にわたって進化することができるのでしょうか、私の

2719
01:53:59,760 --> 01:54:02,580
最終的な計算と、ええと、私が

2720
01:54:02,580 --> 01:54:05,639
時々進化に興味を持っている理由は、

2721
01:54:05,639 --> 01:54:09,179
私にとってそれです

2722
01:54:09,179 --> 01:54:11,460


2723
01:54:11,460 --> 01:54:13,920
たとえば人間のエージェントを可能にする構造を私たちに提供した帰納的バイアス 赤ちゃんは

2724
01:54:13,920 --> 01:54:15,540
すでに操作できることを知っていますか 赤ちゃんは

2725
01:54:15,540 --> 01:54:18,000
すでに顔を正しく認識できます そして私

2726
01:54:18,000 --> 01:54:20,400
たちは進化論者が私たちに与えた特定の本能的な反応

2727
01:54:20,400 --> 01:54:22,139
と特定のメカニズムを持っています

2728
01:54:22,139 --> 01:54:24,600
そこで

2729
01:54:24,600 --> 01:54:26,699
興味深い質問は次のとおりです

2730
01:54:26,699 --> 01:54:29,159
これの相互作用は何ですか

2731
01:54:29,159 --> 01:54:31,619
人工的な進化の形をシミュレートするというアイデアはご存知でしょ

2732
01:54:31,619 --> 01:54:33,900
う もしかしたら構築しているかもしれません DNA

2733
01:54:33,900 --> 01:54:35,780
構造は非常に単純化された

2734
01:54:35,780 --> 01:54:37,679
計算構造であり、それが

2735
01:54:37,679 --> 01:54:40,139
アブデル・ラーマンの懸念に答えるでしょう

2736
01:54:40,139 --> 01:54:41,940
おそらく私たちはエージェントが賢くなりすぎてほしくないのかもしれません

2737
01:54:41,940 --> 01:54:43,739


2738
01:54:43,739 --> 01:54:45,960


2739
01:54:45,960 --> 01:54:48,600
シミュレーターを実行するのに 10 年ほど与えてくれない限り、それを実際にシミュレートすることは

2740
01:54:48,600 --> 01:54:50,219
できませんが、

2741
01:54:50,219 --> 01:54:51,960
もっと基本的なプリミティブを思いつき、

2742
01:54:51,960 --> 01:54:54,239
それをニューラル ネットワークの開始点として使用できるかもしれません。

2743
01:54:54,239 --> 01:54:56,219
ダニエルとしましょう。

2744
01:54:56,219 --> 01:54:58,380
画像セグメンテーションで何らかのタスクを実行したいと考えています。それは

2745
01:54:58,380 --> 01:55:00,960
わかっていますが、

2746
01:55:00,960 --> 01:55:03,000
進化的なフレームワークが私に何をもたらしてくれるでしょうか。

2747
01:55:03,000 --> 01:55:04,980
ここに、

2748
01:55:04,980 --> 01:55:07,380
開始するためのテンプレートがあります。これは、

2749
01:55:07,380 --> 01:55:09,239
フレームワークを構築するためのカーネルです。

2750
01:55:09,239 --> 01:55:11,940
それは DNA 構造のようなもので、これが

2751
01:55:11,940 --> 01:55:13,980
進化してきたことはご存知でしょう。

2752
01:55:13,980 --> 01:55:16,380
長年にわたる分散型ピアツーピア

2753
01:55:16,380 --> 01:55:18,360
コンピューティングをご存知でしょう。

2754
01:55:18,360 --> 01:55:22,020
この巨大な進化を続ける継続的な学習

2755
01:55:22,020 --> 01:55:25,320
スタイルを構築することを想像できるでしょう。進化アルゴリズムが

2756
01:55:25,320 --> 01:55:27,719
遺伝的アルゴリズムに基づいているかどうかはご存知でしょう。

2757
01:55:27,719 --> 01:55:29,940
ブランド コロニー

2758
01:55:29,940 --> 01:55:31,619
それは興味深い考え方かもしれないと

2759
01:55:31,619 --> 01:55:33,420
想像していただけると思いますが、私は、開発するか

2760
01:55:33,420 --> 01:55:36,060


2761
01:55:36,060 --> 01:55:38,639


2762
01:55:38,639 --> 01:55:41,280


2763
01:55:41,280 --> 01:55:43,500
どうかは分からない新しいコンピューティング システムを発明せずに、どのようにしてスケーラブルな形式を構想できるかというアイデアを吐き出して生成しています。

2764
01:55:43,500 --> 01:55:46,739
存在します。なぜなら、量子には

2765
01:55:46,739 --> 01:55:48,480
まだ解決すべき問題がたくさんあるからです。

2766
01:55:48,480 --> 01:55:50,580


2767
01:55:50,580 --> 01:55:54,719
私が学んだように、超伝導や超高温や光子トラップなどがあります。

2768
01:55:54,719 --> 01:55:55,860


2769
01:55:55,860 --> 01:55:57,300
それは興味深い方向性かもしれません。

2770
01:55:57,300 --> 01:55:59,100


2771
01:55:59,100 --> 01:56:01,679
特に実用的な目的からのスケーリングは次のように

2772
01:56:01,679 --> 01:56:03,600
なると思います。 最も重要なことは、

2773
01:56:03,600 --> 01:56:05,219


2774
01:56:05,219 --> 01:56:08,100
前に述べたように、私たちが持っているすべてのツールをまとめる必要がある

2775
01:56:08,100 --> 01:56:10,380
ため、さらにとりとめのない話になってしまうので、ここでやめておきます。

2776
01:56:10,380 --> 01:56:12,239
それが理にかなっていれば幸いです。

2777
01:56:12,239 --> 01:56:13,980


2778
01:56:13,980 --> 01:56:17,820
これは非常に壮大で感動的なものでした。

2779
01:56:17,820 --> 01:56:20,460
仕事頑張ってください えー、

2780
01:56:20,460 --> 01:56:23,820
別の作品を提案することは大歓迎です。

2781
01:56:23,820 --> 01:56:25,800
私たちが焦点を当てたり、

2782
01:56:25,800 --> 01:56:27,840
議論を続けたりできるかもしれませんが、

2783
01:56:27,840 --> 01:56:30,659
非常に興味深いものなので、適切と思われる

2784
01:56:30,659 --> 01:56:33,659
方法でご提案ください。では、次回まで

2785
01:56:33,659 --> 01:56:38,820
ありがとうございました、ありがとうございました、さようなら

