1
00:00:06,319 --> 00:00:09,420
안녕하세요 환영합니다.

2
00:00:09,420 --> 00:00:13,440
2023년 8월 10일 활성 객실 52.1입니다.

3
00:00:13,440 --> 00:00:15,900
Ahmed al-said Alexandra aurobia와

4
00:00:15,900 --> 00:00:17,460
Travis de cell이

5
00:00:17,460 --> 00:00:20,400
프레젠테이션을 할 예정이며

6
00:00:20,400 --> 00:00:22,680
다음에는 몇 가지 반성

7
00:00:22,680 --> 00:00:25,080
및 토론이 있을 것입니다.

8
00:00:25,080 --> 00:00:27,240
참여해 주셔서 감사합니다. 아멘

9
00:00:27,240 --> 00:00:29,779
발표해 주셔서

10
00:00:30,480 --> 00:00:34,079
감사합니다

11
00:00:34,079 --> 00:00:38,160
um 오늘 저는 여기에서

12
00:00:38,160 --> 00:00:39,300
um our

13
00:00:39,300 --> 00:00:42,300
um

14
00:00:42,300 --> 00:00:44,160
새로운 아키텍처 검색과 새로운

15
00:00:44,160 --> 00:00:46,500
Evolution 문제를 해결하기 위해 우리가 생각해낸 방법

16
00:00:46,500 --> 00:00:48,180
um 방법

17
00:00:48,180 --> 00:00:50,579
과 Colony optimization based

18
00:00:50,579 --> 00:00:52,140
Solutions에 대해 논의할 것입니다

19
00:00:52,140 --> 00:00:56,100
음 그래서 제목 ish는 음

20
00:00:56,100 --> 00:00:58,199
과 신경

21
00:00:58,199 --> 00:01:00,660
구조 검색 및 혁명을 위한 식민지 최적화를 언급하고 있습니다 음

22
00:01:00,660 --> 00:01:03,080
이 작업은 음 저와의

23
00:01:03,080 --> 00:01:06,659
공동 작업입니다 음 내 음

24
00:01:06,659 --> 00:01:09,600
이전 고문이 셀을 말리고 내

25
00:01:09,600 --> 00:01:11,580
코드 고문

26
00:01:11,580 --> 00:01:15,119
음 Dr Ora와 상원의원

27
00:01:15,119 --> 00:01:16,979
나는 현재

28
00:01:16,979 --> 00:01:19,140
음  University의 조교수이자

29
00:01:19,140 --> 00:01:20,520


30
00:01:20,520 --> 00:01:23,159
음 North Carolina University North

31
00:01:23,159 --> 00:01:25,080
Carolina Wellington

32
00:01:25,080 --> 00:01:26,520
음 그리고

33
00:01:26,520 --> 00:01:29,640
다음 슬라이드로 넘어가서

34
00:01:29,640 --> 00:01:31,920


35
00:01:31,920 --> 00:01:35,040
오늘 논의할 내용에 대한

36
00:01:35,040 --> 00:01:38,400
개요를 살펴보겠습니다.  혁명입니다 음

37
00:01:38,400 --> 00:01:40,020


38
00:01:40,020 --> 00:01:43,619
우리가 왜 왜 우리가 그것을 필요로 하는지 그리고 거기에서 저는 음

39
00:01:43,619 --> 00:01:46,680


40
00:01:46,680 --> 00:01:50,280


41
00:01:50,280 --> 00:01:52,200


42
00:01:52,200 --> 00:01:54,540
최종 기반 신경 정책 검색이라고 하는 최적화를 기반으로 하고 호출하는 우리의 방법에 대해 논의하려고 노력할 것입니다.

43
00:01:54,540 --> 00:01:57,479
저는

44
00:01:57,479 --> 00:02:01,979
우리가 어떻게 이 아이디어를 발전시켰는지에 대해 논의할 것입니다

45
00:02:01,979 --> 00:02:04,280
음

46
00:02:04,280 --> 00:02:06,719
연속 개미 또는 암 제어를 도입하여

47
00:02:06,719 --> 00:02:08,699


48
00:02:08,699 --> 00:02:11,220
이

49
00:02:11,220 --> 00:02:14,160
연구 공간의 좋은 스레드를 연속 공간으로 대체한

50
00:02:14,160 --> 00:02:17,220
다음

51
00:02:17,220 --> 00:02:20,220
우리가 한 일에 대해서도 말할 것입니다

52
00:02:20,220 --> 00:02:22,379
3차원 연속 개미는

53
00:02:22,379 --> 00:02:24,980
역전파 자유 수업을

54
00:02:24,980 --> 00:02:28,620
하고 나중에 기계 학습에서

55
00:02:28,620 --> 00:02:31,319
우리가 대답하는 세 가지 포인트에 대해 논의할 것입니다.

56
00:02:31,319 --> 00:02:33,000


57
00:02:33,000 --> 00:02:35,220


58
00:02:35,220 --> 00:02:35,819


59
00:02:35,819 --> 00:02:39,780


60
00:02:39,780 --> 00:02:41,459


61
00:02:41,459 --> 00:02:43,620
더 깊고 깊게

62
00:02:43,620 --> 00:02:45,900
um 사람들은

63
00:02:45,900 --> 00:02:47,220
더 나은 성능을 내기 위해 구조를 최적화하려고 노력했고

64
00:02:47,220 --> 00:02:49,379
다른

65
00:02:49,379 --> 00:02:51,480
영역이나 다른

66
00:02:51,480 --> 00:02:53,700
um 문제 영역에 있는 사람들과 사람들은 um 가장

67
00:02:53,700 --> 00:02:55,019


68
00:02:55,019 --> 00:02:57,660
성능이 좋은 신경

69
00:02:57,660 --> 00:03:00,680
구조나 구조를 차용하고 조금 수정하려고 했습니다.

70
00:03:00,680 --> 00:03:04,140


71
00:03:04,140 --> 00:03:06,599
그들의 문제에 대해 그들은

72
00:03:06,599 --> 00:03:09,480
구조의 그림 중 일부를 조정

73
00:03:09,480 --> 00:03:12,180
하고

74
00:03:12,180 --> 00:03:14,459
음 이러한 다른 조정을 비교하려고 노력한 다음 그들은

75
00:03:14,459 --> 00:03:16,080
우리가 가장 성능이 좋은 구조를 찾았다고 말하지만

76
00:03:16,080 --> 00:03:17,940


77
00:03:17,940 --> 00:03:18,659
음

78
00:03:18,659 --> 00:03:22,140
실제로 절대적인

79
00:03:22,140 --> 00:03:23,700
음 열린 구조를 찾으려면

80
00:03:23,700 --> 00:03:26,040
그것은 어  그 솔루션에 관해서는

81
00:03:26,040 --> 00:03:28,319
NPR 문제가 될 것입니다.

82
00:03:28,319 --> 00:03:31,379
그 솔루션에 도달하기 위해 그들은

83
00:03:31,379 --> 00:03:34,319


84
00:03:34,319 --> 00:03:37,319
서로 다른 구조적 요소의 모든 조합을 올바르게 시도해야 했고

85
00:03:37,319 --> 00:03:40,739
이것은 우리가

86
00:03:40,739 --> 00:03:43,379
이러한 심층 신경망에 거대한 um 구조를 가지고 있기 때문에

87
00:03:43,379 --> 00:03:44,519


88
00:03:44,519 --> 00:03:47,519
um 그들은 될 수 있습니다.  NPR 문제는

89
00:03:47,519 --> 00:03:50,760
계산 능력이 없거나

90
00:03:50,760 --> 00:03:53,459
실제로

91
00:03:53,459 --> 00:03:56,159
모든 구조를 훈련하고 테스트할 충분한 시간이 없기 때문입니다. 이 모든

92
00:03:56,159 --> 00:03:58,080
구조는

93
00:03:58,080 --> 00:03:59,459
이러한 다양한

94
00:03:59,459 --> 00:04:01,080


95
00:04:01,080 --> 00:04:03,780
구성 손의 조합으로 구성되므로 이를

96
00:04:03,780 --> 00:04:06,239
수행하는 다른 방법은 실제로 다음을 시도하는 것입니다.

97
00:04:06,239 --> 00:04:09,900
유성 방법을 적용

98
00:04:09,900 --> 00:04:12,180
하고 구조를 최적화하지

99
00:04:12,180 --> 00:04:15,239
않거나 임의 검색 권한과 같은 종류에 의존하는 것보다 훨씬 더 나은 개방형 솔루션으로 귀를 변환하려면 임의

100
00:04:15,239 --> 00:04:17,339


101
00:04:17,339 --> 00:04:19,738


102
00:04:19,738 --> 00:04:21,478
검색이 신경망을 수행하는 더 나은 성능을 얻을 수

103
00:04:21,478 --> 00:04:23,340


104
00:04:23,340 --> 00:04:26,340
있지만 그렇게 되지는 않을 것입니다.

105
00:04:26,340 --> 00:04:28,740
음 최적의 솔루션에 음소거하거나

106
00:04:28,740 --> 00:04:30,000
최적의 솔루션에 가까운 수렴을 제공합니다.

107
00:04:30,000 --> 00:04:31,759


108
00:04:31,759 --> 00:04:33,660


109
00:04:33,660 --> 00:04:34,680


110
00:04:34,680 --> 00:04:36,660
그래서 휴리스틱 방법은 우리에게 자동화된 방법을 제공할 것이고

111
00:04:36,660 --> 00:04:40,020


112
00:04:40,020 --> 00:04:43,259
또한 우리는 이 어 구조적 문제에 대한 개방형 솔루션에 가까운 새 문서 구조로 수렴할 수 있습니다.

113
00:04:43,259 --> 00:04:45,479


114
00:04:45,479 --> 00:04:49,039


115
00:04:49,919 --> 00:04:52,680
음 그래서 사람들이 Nas에 접근한 방식은

116
00:04:52,680 --> 00:04:55,919


117
00:04:55,919 --> 00:04:58,740
음 자연에서 최적화가 수행되는 방식을 모방하려고 시도하는 것이었습니다.

118
00:04:58,740 --> 00:05:02,400
그래서 첫 번째 방법은

119
00:05:02,400 --> 00:05:05,220
생각이 있는 첫 번째 방법입니다.

120
00:05:05,220 --> 00:05:08,400


121
00:05:08,400 --> 00:05:13,080


122
00:05:13,080 --> 00:05:14,400


123
00:05:14,400 --> 00:05:16,500


124
00:05:16,500 --> 00:05:20,000
Darwin kinetic evolution과 같은 유전자 기반 알고리즘을 사용

125
00:05:20,000 --> 00:05:23,520
하고 깔끔한 음으로 시작했습니다

126
00:05:23,520 --> 00:05:24,660
음 또는

127
00:05:24,660 --> 00:05:27,660
음 그것은

128
00:05:27,660 --> 00:05:33,680
음 어 새로운 혁명의 약자입니다 어 외국

129
00:05:41,960 --> 00:05:45,060
그 개념은

130
00:05:45,060 --> 00:05:48,600
대부분의 NAS에서 일반 동작 방법

131
00:05:48,600 --> 00:05:52,680
및 시험에 적용되었습니다.  그들은 Uh 에게이

132
00:05:52,680 --> 00:05:55,380
방법을 생각해 내려고 시도했으며, 그것은 Nas Um의

133
00:05:55,380 --> 00:05:58,020
UH의 예술 방법 대신 예술의 최첨단 중 하나가되었으므로,

134
00:05:58,020 --> 00:06:02,460


135
00:06:02,460 --> 00:06:06,600
우리는

136
00:06:06,600 --> 00:06:09,720


137
00:06:09,720 --> 00:06:11,699
새로운 구조적 요소를 소개함으로써 유전 적 진화를 다시 모방하려고 노력했습니다.  또는 진화 반복

138
00:06:11,699 --> 00:06:13,979


139
00:06:13,979 --> 00:06:15,180


140
00:06:15,180 --> 00:06:17,639


141
00:06:17,639 --> 00:06:20,460
및 진화 세대를 통해 진화 프로세스를 통해 구조적 요소를 제거하거나 구조를 변경하여

142
00:06:20,460 --> 00:06:24,120


143
00:06:24,120 --> 00:06:25,680
가장자리를 분할

144
00:06:25,680 --> 00:06:29,460
하거나 가장자리를 추가하거나 비활성화

145
00:06:29,460 --> 00:06:31,919
가장자리를 표시하여 돌연변이를 적용할 수 있으며 이를 통해 가장자리를

146
00:06:31,919 --> 00:06:33,479
비활성화하면 일부 구조적 요소가 비활성화됩니다.

147
00:06:33,479 --> 00:06:34,979


148
00:06:34,979 --> 00:06:37,919
우리가 나중에 사용할 수 있도록 그 구성 요소를 잃지 않도록

149
00:06:37,919 --> 00:06:41,520
음 휴면 상태의

150
00:06:41,520 --> 00:06:44,039
유전자와 같이 게놈에 있는 유전자가

151
00:06:44,039 --> 00:06:45,960
후세에 나타날 수 있도록

152
00:06:45,960 --> 00:06:49,380
완전히 제거하지 않고 돌연변이에서 할 수 있습니다.

153
00:06:49,380 --> 00:06:51,419
에지 비활성화 우리가 시도하고 싶은 경우 이후 세대에서 활성화할 수 있습니다

154
00:06:51,419 --> 00:06:53,580


155
00:06:53,580 --> 00:06:55,800


156
00:06:55,800 --> 00:06:58,380
um 이 옵션

157
00:06:58,380 --> 00:07:00,300
um 우리는 또한 반복 에지를 추가하거나

158
00:07:00,300 --> 00:07:03,419
리콜을 제거하거나 현재 에지를 활성화 또는 비활성화할 수 있습니다

159
00:07:03,419 --> 00:07:06,060
uh 우리는 취할 수 있는 노드를 분할할 수 있습니다

160
00:07:06,060 --> 00:07:07,979


161
00:07:07,979 --> 00:07:11,460
이전 세대의 노드 중 일부는 음,

162
00:07:11,460 --> 00:07:13,800
그리고 우리는 그것을 두 개의 노드로 분할한

163
00:07:13,800 --> 00:07:16,620
다음 가장자리를 취할 수 있습니다. 음 해당 노드에 연결된 가장자리를 가져오고

164
00:07:16,620 --> 00:07:18,720


165
00:07:18,720 --> 00:07:21,060
음, 이전 노드에서 생성된 새 통계 간에 분할하려고 시도합니다.

166
00:07:21,060 --> 00:07:23,340


167
00:07:23,340 --> 00:07:27,199
이전 어 세대

168
00:07:27,199 --> 00:07:31,500
어 또한 우리는 구조와 구조에 노드를 추가할 수 있으므로

169
00:07:31,500 --> 00:07:33,479


170
00:07:33,479 --> 00:07:35,639
이들 모두는 유전 과정에서 돌연변이 클래스의 일부입니다

171
00:07:35,639 --> 00:07:38,580


172
00:07:38,580 --> 00:07:41,160
음 그냥 시도하고 싶지 않으면 메모를 비활성화할 수도 있습니다

173
00:07:41,160 --> 00:07:43,080


174
00:07:43,080 --> 00:07:45,120
음표 중 하나를 제거하고 노드

175
00:07:45,120 --> 00:07:47,759
또는 여러 노드를 비활성화하면

176
00:07:47,759 --> 00:07:50,940
해당 음표에 연결된 가장자리도 비활성화됩니다.

177
00:07:50,940 --> 00:07:52,979
음 돌연변이 옆에 우리는 음의 다른

178
00:07:52,979 --> 00:07:55,020
쪽입니다.

179
00:07:55,020 --> 00:07:58,620


180
00:07:58,620 --> 00:08:00,360


181
00:08:00,360 --> 00:08:03,840
어

182
00:08:03,840 --> 00:08:06,000
함께 만들어 자손을 가져오고

183
00:08:06,000 --> 00:08:07,740
자손은 음

184
00:08:07,740 --> 00:08:10,319


185
00:08:10,319 --> 00:08:12,900
그들의 부모로부터 오는 특성의 모음을 갖게 될 것입니다

186
00:08:12,900 --> 00:08:14,160
음 그래서 그것은 우리에게 나쁜 성과를 주기를 바라면서

187
00:08:14,160 --> 00:08:15,840
그 부모의 특성 중 일부와

188
00:08:15,840 --> 00:08:17,940
다른 부모의 다른 특성을 취할 것입니다

189
00:08:17,940 --> 00:08:21,680


190
00:08:21,680 --> 00:08:24,840
신경망 어 또는

191
00:08:24,840 --> 00:08:27,799
플랫폼 세대

192
00:08:28,680 --> 00:08:30,780
음 그래서 주된 문제는

193
00:08:30,780 --> 00:08:33,500
죄송합니다.

194
00:08:33,958 --> 00:08:36,719


195
00:08:36,719 --> 00:08:39,179
음 어 유전자 기반 알고리즘의 주된 문제는 입력과 출력을 의미하는

196
00:08:39,179 --> 00:08:41,399
최소한의 구조로 시작한다는 것입니다.

197
00:08:41,399 --> 00:08:43,559


198
00:08:43,559 --> 00:08:47,160


199
00:08:47,160 --> 00:08:49,740


200
00:08:49,740 --> 00:08:53,160
최소 검색 공간은 최적화 프로세스를 통해 로컬 최소값에 방법을 가둘 수 있으므로

201
00:08:53,160 --> 00:08:55,620


202
00:08:55,620 --> 00:08:57,720
우리는

203
00:08:57,720 --> 00:09:00,720
이 장애물을 제거하는 방법을 생각하고

204
00:09:00,720 --> 00:09:03,899
시작하는 더 큰 또는 더 큰 공간을 확보한

205
00:09:03,899 --> 00:09:06,060
다음 더 큰 공간에서 몇 가지 솔루션을 샘플링할 수 있습니다.

206
00:09:06,060 --> 00:09:07,800


207
00:09:07,800 --> 00:09:09,200


208
00:09:09,200 --> 00:09:12,839
우리는 주위를 둘러보고 우리는 우리가

209
00:09:12,839 --> 00:09:15,600


210
00:09:15,600 --> 00:09:18,779
최적화를 호출하는 것을 끝내고 그리고 나는 왜

211
00:09:18,779 --> 00:09:21,180
내가

212
00:09:21,180 --> 00:09:23,279
음 방법을 먼저 소개하려고 할 것이므로 방법이

213
00:09:23,279 --> 00:09:25,680
음 그래픽

214
00:09:25,680 --> 00:09:27,720
최적화 방법

215
00:09:27,720 --> 00:09:30,420
음 그래프 최적화 방법 죄송합니다

216
00:09:30,420 --> 00:09:32,339
음 소개되었습니다.  90년대 중반에

217
00:09:32,339 --> 00:09:35,000
마가렛 리버가

218
00:09:35,000 --> 00:09:37,680
이 방법을 적용했습니다

219
00:09:37,680 --> 00:09:40,500
음 어 끔찍한 판매에 대량

220
00:09:40,500 --> 00:09:42,720
문제와 문제는 주로 미국의 여러 도시를

221
00:09:42,720 --> 00:09:45,000
방문하고 싶은 여행 판매원에 관한 것입니다

222
00:09:45,000 --> 00:09:46,920


223
00:09:46,920 --> 00:09:48,779
조지의 직원이라고 생각하고

224
00:09:48,779 --> 00:09:50,640
우리가 가지고 있다면 이 문제를 고려하고 있습니다

225
00:09:50,640 --> 00:09:52,620
다른 숫자와 도시의 수가 증가하면

226
00:09:52,620 --> 00:09:55,560


227
00:09:55,560 --> 00:09:57,839
이러한 숫자의 구현을 결합하여

228
00:09:57,839 --> 00:09:59,760
업데이트되어 개방형 솔루션을 찾기 위해 고려해야 합니다.

229
00:09:59,760 --> 00:10:01,500


230
00:10:01,500 --> 00:10:03,779
음 이 숫자가 총체적이라고 표시되면

231
00:10:03,779 --> 00:10:05,580
npmr 문제가 발생하게 됩니다.

232
00:10:05,580 --> 00:10:08,160
충분한 시간

233
00:10:08,160 --> 00:10:12,060
이나 계산 능력이 없어서 이

234
00:10:12,060 --> 00:10:16,380
컴팩트한 폭발물 솔루션을

235
00:10:16,380 --> 00:10:19,260
완료하거나 픽셀 단계 검색을 완료했습니다.

236
00:10:19,260 --> 00:10:21,180
그래서 그는

237
00:10:21,180 --> 00:10:24,180
여기에서 그의 관찰을 통해

238
00:10:24,180 --> 00:10:24,959
음

239
00:10:24,959 --> 00:10:29,580
음 자연에서 발전하기 위해

240
00:10:29,580 --> 00:10:33,060
그가 음식을 찾기 위해 위조하는 방법을 적용할 수 있음을 발견했습니다.

241
00:10:33,060 --> 00:10:33,959
자연

242
00:10:33,959 --> 00:10:37,440
과 음과 어 그리고 나서

243
00:10:37,440 --> 00:10:39,720
이 관찰이

244
00:10:39,720 --> 00:10:42,660
알고리즘에 적용되어 한 지점에서

245
00:10:42,660 --> 00:10:46,500
어로부터 이어지는 최적의 경로가 아닌

246
00:10:46,500 --> 00:10:49,200
모든 도시를 방문

247
00:10:49,200 --> 00:10:53,240
하고 가장 짧은 최단 계획

248
00:10:53,640 --> 00:10:58,019
음 그래서 방법이 방법에 적용된다는 이 개념을 취합니다  관찰

249
00:10:58,019 --> 00:11:00,120
음 그래서 만화 슬라이드의 이 줄은

250
00:11:00,120 --> 00:11:02,180


251
00:11:02,180 --> 00:11:06,300
우리에게 어떻게 음 음

252
00:11:06,300 --> 00:11:07,019


253
00:11:07,019 --> 00:11:09,480
자연에서 음식을 심고

254
00:11:09,480 --> 00:11:12,180
시장 레게가 그것을 적용하기 위해 어떻게 그 개념을 취했는지에 대한 그림을 제공하려고 할 것입니다.

255
00:11:12,180 --> 00:11:15,060


256
00:11:15,060 --> 00:11:17,640


257
00:11:17,640 --> 00:11:19,380


258
00:11:19,380 --> 00:11:22,079


259
00:11:22,079 --> 00:11:24,360
그들의 자연 식물성 식품에서 빠져나가는 자금

260
00:11:24,360 --> 00:11:25,680
과 음

261
00:11:25,680 --> 00:11:27,300
디트로이트의 다른 방향에서 음

262
00:11:27,300 --> 00:11:28,860


263
00:11:28,860 --> 00:11:31,320
그리고 그들이 음식을 찾으면 결국

264
00:11:31,320 --> 00:11:33,120


265
00:11:33,120 --> 00:11:35,700
음식을 찾으면 그 음식의 일부를 가져간 다음

266
00:11:35,700 --> 00:11:38,640
둥지로 돌아가는 길에 돌아갑니다  그들은

267
00:11:38,640 --> 00:11:40,980


268
00:11:40,980 --> 00:11:42,240
페로몬이라는 다른 물질을 축적하여

269
00:11:42,240 --> 00:11:45,360


270
00:11:45,360 --> 00:11:47,040


271
00:11:47,040 --> 00:11:49,820
음식 자원을 통해 다른 사람들과 소통할 수 있도록 그 물질을 축적하므로

272
00:11:49,820 --> 00:11:54,000
실제로 다른 개미는

273
00:11:54,000 --> 00:11:57,120
더 많은 다른 물질을 위해 이것을 이용하고

274
00:11:57,120 --> 00:11:59,279
그것을 감지하면 시도합니다.

275
00:11:59,279 --> 00:12:02,100
첫 번째 끝이

276
00:12:02,100 --> 00:12:04,620
그 끝에서 어 경찰에서 나온 길은

277
00:12:04,620 --> 00:12:05,940
둥지로 음

278
00:12:05,940 --> 00:12:07,860


279
00:12:07,860 --> 00:12:10,620
그 시간의 끝에서 그들이 음식을 찾을 수 있기를 바라며

280
00:12:10,620 --> 00:12:13,019
실제로

281
00:12:13,019 --> 00:12:14,640
그들이 갈 길의 끝에서 음식을 찾을 때  음식의 일부를 가져가는 것과

282
00:12:14,640 --> 00:12:17,220
같은 방식으로

283
00:12:17,220 --> 00:12:19,740
잔디밭에서 같은 경로에 더 많은 음식을 저장합니다. 그러면

284
00:12:19,740 --> 00:12:21,540
다른 개미가 둥지로

285
00:12:21,540 --> 00:12:23,100
더 많은 음식을 가져올 수 있도록 음식을 가져가는 사람들에게 더 매력적으로

286
00:12:23,100 --> 00:12:24,240


287
00:12:24,240 --> 00:12:27,839
느껴질 수 있습니다. 이 과정에서 이것은 우리에게

288
00:12:27,839 --> 00:12:31,200
착취 어 개미의 행동이지만

289
00:12:31,200 --> 00:12:33,600
때때로

290
00:12:33,600 --> 00:12:35,940
다른 개미도

291
00:12:35,940 --> 00:12:38,220
다른 어 완전한 자원을 탐색하려고 시도

292
00:12:38,220 --> 00:12:41,760
하고

293
00:12:41,760 --> 00:12:45,660


294
00:12:45,660 --> 00:12:48,540
잠재적인 식량 자원을 탐색하려고 합니다.

295
00:12:48,540 --> 00:12:52,800
그리고 둥지 착취자들을 위한 음 새로운 식량 자원을 찾으세요.

296
00:12:52,800 --> 00:12:55,219


297
00:12:57,740 --> 00:13:00,540
그들은 탐험가이기도 합니다. 그리고

298
00:13:00,540 --> 00:13:02,519
이 두 개념은 음

299
00:13:02,519 --> 00:13:05,220
시장에서 분노가 더 나은 것을

300
00:13:05,220 --> 00:13:06,000


301
00:13:06,000 --> 00:13:09,779
위한 검색 비트의 균형을 맞추는 데 사용되었습니다.

302
00:13:09,779 --> 00:13:12,240


303
00:13:12,240 --> 00:13:13,620


304
00:13:13,620 --> 00:13:15,800
The the the

305
00:13:15,800 --> 00:13:20,359
towns for the Trump salesman's problem

306
00:13:21,060 --> 00:13:23,040
음 그리고 그들이

307
00:13:23,040 --> 00:13:25,860
Helen's Sports와 자연에서 관찰한 세 번째 것은

308
00:13:25,860 --> 00:13:28,680
냄새가 더 많은

309
00:13:28,680 --> 00:13:30,720
다른 물질에 대한 호르몬도

310
00:13:30,720 --> 00:13:34,860
증발하므로 전체 자원에 대한 경로가

311
00:13:34,860 --> 00:13:37,079
없을 때마다  더 이상 전체 자원에 호소하는 것은

312
00:13:37,079 --> 00:13:39,300
배타적입니다. 더 이상 개미가

313
00:13:39,300 --> 00:13:41,459
그 길을 택하지 않거나 그들이

314
00:13:41,459 --> 00:13:43,800
그 길을 택하고 도달했을 때

315
00:13:43,800 --> 00:13:47,279
노출되는 전체 자원은 그들이

316
00:13:47,279 --> 00:13:49,079


317
00:13:49,079 --> 00:13:50,880
NASDAQ에 대한 동일한 길을 택하지 않을 것이며 그들은 궁금해하고 시도할 것입니다.

318
00:13:50,880 --> 00:13:53,519
더 많은 새로운 식량 자원을 찾기 위해 그리고

319
00:13:53,519 --> 00:13:55,620
그들이 그 길로 다시 가지 않고

320
00:13:55,620 --> 00:13:58,200


321
00:13:58,200 --> 00:14:01,019
그 길에서 어떤 형태의 페로몬에 의존하지 않기 때문에 호르몬은 결국

322
00:14:01,019 --> 00:14:03,600
증발하고 사라지고

323
00:14:03,600 --> 00:14:05,820
다른 개미들이 그것을 취하는 것을 점점 덜 매력적으로 만들 것입니다 음

324
00:14:05,820 --> 00:14:08,480


325
00:14:08,519 --> 00:14:09,959


326
00:14:09,959 --> 00:14:10,770


327
00:14:10,770 --> 00:14:12,060
[음악]  ] 그것이

328
00:14:12,060 --> 00:14:15,300
Marco Durango가

329
00:14:15,300 --> 00:14:16,980
여행

330
00:14:16,980 --> 00:14:18,839
우주인의 문제를 생각할 때 보고 있던 것입니다.

331
00:14:18,839 --> 00:14:22,139
음 그는

332
00:14:22,139 --> 00:14:24,779
연방 세일즈맨의 문제에 적용하기를 원했습니다. 에이전트 한 명에게 음 이

333
00:14:24,779 --> 00:14:25,980


334
00:14:25,980 --> 00:14:29,760
다른 작업을 시도하게 한 다음 어

335
00:14:29,760 --> 00:14:31,680
각 반복을 통해 비교하여

336
00:14:31,680 --> 00:14:34,440
에이전트가  도시 사이의 경로를 선택한

337
00:14:34,440 --> 00:14:38,279
다음

338
00:14:38,279 --> 00:14:41,760


339
00:14:41,760 --> 00:14:43,800
해당 경로의 길이를 다른 경로의 이전 어 경험과 비교하고 더

340
00:14:43,800 --> 00:14:46,440
짧은 경우

341
00:14:46,440 --> 00:14:49,019


342
00:14:49,019 --> 00:14:52,199
해당 경로의 세그먼트에 몇 달 동안 입금하려고 시도하고 결국  그는

343
00:14:52,199 --> 00:14:54,060
바라고 있었고 바랬을 때 그는 옳았습니다.

344
00:14:54,060 --> 00:14:56,519


345
00:14:56,519 --> 00:14:59,040
결국

346
00:14:59,040 --> 00:15:00,959
전체 패턴이

347
00:15:00,959 --> 00:15:03,839
궁극적으로 더

348
00:15:03,839 --> 00:15:05,279
짧은

349
00:15:05,279 --> 00:15:07,079
um 경로를 제공하는 짧은 세그먼트가 더 많을수록

350
00:15:07,079 --> 00:15:11,040
하나의 예금에서 점점 더 많은 정보를 얻었습니다.

351
00:15:11,040 --> 00:15:12,959


352
00:15:12,959 --> 00:15:14,519
에이전트가 반복을 통해 가져가는 것이 더 매력적이어서

353
00:15:14,519 --> 00:15:15,680


354
00:15:15,680 --> 00:15:20,160
우리는 이 개념에 대해 생각했고

355
00:15:20,160 --> 00:15:21,839


356
00:15:21,839 --> 00:15:24,360
Nas 문제에 적용하는 것이 매우 매력적이라고 ​​생각했습니다.

357
00:15:24,360 --> 00:15:27,920


358
00:15:28,519 --> 00:15:32,100
솔루션이 어 그래프 최적화 문제에 적용되었고

359
00:15:32,100 --> 00:15:34,500
음

360
00:15:34,500 --> 00:15:36,600
신경망이 그들의  감각 음

361
00:15:36,600 --> 00:15:38,160
방향 그래프

362
00:15:38,160 --> 00:15:41,040
그래서 우리는 발목 최적화도 고려했습니다.

363
00:15:41,040 --> 00:15:42,800
전체 토렌트가

364
00:15:42,800 --> 00:15:46,139
분산되고 확장 가능하고

365
00:15:46,139 --> 00:15:48,240
쉽게 추적 가능

366
00:15:48,240 --> 00:15:52,019
하고 분산화로 돌아가는 것을 생각합니다.

367
00:15:52,019 --> 00:15:55,019


368
00:15:55,019 --> 00:15:58,079


369
00:15:58,079 --> 00:16:01,139
친구

370
00:16:01,139 --> 00:16:02,760
및 고성능 컴퓨팅의 후보 uh

371
00:16:02,760 --> 00:16:04,260
솔루션

372
00:16:04,260 --> 00:16:06,660
um 그리고 결국

373
00:16:06,660 --> 00:16:08,940
최적화 문제를 가속화할 것입니다.

374
00:16:08,940 --> 00:16:12,120
다음에는 다음 슬라이드에서 다음 슬라이드를 슬라이드합니다. 우리가

375
00:16:12,120 --> 00:16:15,000


376
00:16:15,000 --> 00:16:16,620


377
00:16:16,620 --> 00:16:18,779
um을 활용하거나 사용하는 방법에 대해 논의할 것입니다.

378
00:16:18,779 --> 00:16:19,940


379
00:16:19,940 --> 00:16:23,100
끝 연결화의 특성 음

380
00:16:23,100 --> 00:16:25,440
우리가

381
00:16:25,440 --> 00:16:26,940
생각해낸 해결책을 가속화하기 위해 어 또는 우리가 생각해 낸 방법은 개미

382
00:16:26,940 --> 00:16:29,339
와 게임입니다.

383
00:16:29,339 --> 00:16:33,420


384
00:16:33,420 --> 00:16:35,760


385
00:16:35,760 --> 00:16:39,060
신경 신경

386
00:16:39,060 --> 00:16:41,459
구조 검색은

387
00:16:41,459 --> 00:16:45,120
이 흐름도에 묘사되거나 설명되어 있으므로

388
00:16:45,120 --> 00:16:49,259


389
00:16:49,259 --> 00:16:51,420


390
00:16:51,420 --> 00:16:52,579


391
00:16:52,579 --> 00:16:57,120
상부 구조로 표현된 거대한 검색 공간으로 시작하거나

392
00:16:57,120 --> 00:16:57,980


393
00:16:57,980 --> 00:17:03,360
음 그것은

394
00:17:03,360 --> 00:17:05,880
매우 방대하게

395
00:17:05,880 --> 00:17:08,400
연결되어 있는 신경망을 구현합니다.  그

396
00:17:08,400 --> 00:17:09,780
상부 구조는

397
00:17:09,780 --> 00:17:12,599
에지와 순환 에지를 통해 다른 노드와 연결되어 있습니다.

398
00:17:12,599 --> 00:17:15,119
앞뒤로 그리고 뒤로

399
00:17:15,119 --> 00:17:17,339
현재 에지로

400
00:17:17,339 --> 00:17:22,859
그리고 나서 우리는 많은 에이전트가

401
00:17:22,859 --> 00:17:26,579
입력 노드에서 출력 노드로 구조 위로 무리지어 가도록 합니다.

402
00:17:26,579 --> 00:17:29,220


403
00:17:29,220 --> 00:17:31,740
입력 노드를 입력한 다음

404
00:17:31,740 --> 00:17:34,980


405
00:17:34,980 --> 00:17:36,860


406
00:17:36,860 --> 00:17:39,980


407
00:17:39,980 --> 00:17:42,299


408
00:17:42,299 --> 00:17:44,940


409
00:17:44,940 --> 00:17:47,640
출력 노드 중 하나를 선택하고 선택할 때까지 현재 에지와 반복 에지의 연결과 숨겨진 레이어 사이의 노드 사이를 통해 해당 노드에서 방황합니다. 그런 다음

410
00:17:47,640 --> 00:17:51,660
다른 에이전트의 모든 경로를 선택하고

411
00:17:51,660 --> 00:17:54,660
구조 및 신경망 구조를 구성하기 위해 함께 배치하고

412
00:17:54,660 --> 00:17:56,940


413
00:17:56,940 --> 00:17:59,160
그 구조를 취하여 배수하고 테스트한

414
00:17:59,160 --> 00:18:00,720


415
00:18:00,720 --> 00:18:03,360
다음 이 성능 구조를 통해

416
00:18:03,360 --> 00:18:05,100
신경망에서 최고 성능의 인구와 성능을 비교하면

417
00:18:05,100 --> 00:18:06,360


418
00:18:06,360 --> 00:18:09,360


419
00:18:09,360 --> 00:18:12,360
최악의 것보다 낫습니다.  개체군 다음 우리는

420
00:18:12,360 --> 00:18:14,700
개미가

421
00:18:14,700 --> 00:18:16,860
점령한 경로를 보상합니다 에이전트가 점령한

422
00:18:16,860 --> 00:18:19,679
상부 구조에서 우리는 호르몬으로 작업했습니다.

423
00:18:19,679 --> 00:18:22,559
그래서

424
00:18:22,559 --> 00:18:25,140


425
00:18:25,140 --> 00:18:27,960
진화 과정이나

426
00:18:27,960 --> 00:18:29,880
최적화 과정을 통해 이러한 경로가 나중에 반복되도록 매력적으로 만들 수 있습니다.

427
00:18:29,880 --> 00:18:33,000
지속된 구조는

428
00:18:33,000 --> 00:18:34,980
인구에서 최악보다 최고입니다.

429
00:18:34,980 --> 00:18:37,380
실제로 더 나쁘고 인구에서

430
00:18:37,380 --> 00:18:39,900
최악인 경우

431
00:18:39,900 --> 00:18:42,660
우리는 해당 구조 또는 네트워크에서 해당 구조를 폐기

432
00:18:42,660 --> 00:18:44,820
하고 개미가 택한 경로에 대해 보상하지 않습니다.

433
00:18:44,820 --> 00:18:49,280


434
00:18:49,280 --> 00:18:52,919
열 증발은 우리에게 점점 더 나은 구조를 제공하지

435
00:18:52,919 --> 00:18:55,020


436
00:18:55,020 --> 00:18:56,880
않는 가장자리에 퇴적된 페로몬을 제거하는 데 도움이 될 것입니다.

437
00:18:56,880 --> 00:19:01,440


438
00:19:01,679 --> 00:19:03,600


439
00:19:03,600 --> 00:19:06,900
그리고 다시 끝 콜로니가

440
00:19:06,900 --> 00:19:09,120
분산되어 있기 때문에 우리는

441
00:19:09,120 --> 00:19:10,080


442
00:19:10,080 --> 00:19:11,940
음 비동기 솔루션 또는

443
00:19:11,940 --> 00:19:14,280
비동기 진화를 통해 이것을 악용했습니다

444
00:19:14,280 --> 00:19:17,340
음 우리는

445
00:19:17,340 --> 00:19:18,480


446
00:19:18,480 --> 00:19:21,059
새로운 구조를 생성하고

447
00:19:21,059 --> 00:19:23,100
인구를 업데이트하고

448
00:19:23,100 --> 00:19:25,860
구조를 테스트하고

449
00:19:25,860 --> 00:19:28,740
상부 구조의 가난한 달을 업데이트하여

450
00:19:28,740 --> 00:19:31,919
주요 프로세스가

451
00:19:31,919 --> 00:19:33,539
구조를 생성하고 작업자 프로세스로 보낼 수 있도록 하는 주요 프로세스를 가졌습니다.

452
00:19:33,539 --> 00:19:35,520


453
00:19:35,520 --> 00:19:38,160


454
00:19:38,160 --> 00:19:41,100
문제에 대해 가지고 있는 데이터에 대해 신경망을 훈련하고 테스트한

455
00:19:41,100 --> 00:19:43,799
다음 결과를 다시 보내거나

456
00:19:43,799 --> 00:19:46,260
신경망의 두께를 어

457
00:19:46,260 --> 00:19:47,940
기본 프로세스로 보내고

458
00:19:47,940 --> 00:19:50,760
프로세스가 되는 피트니스를 기반으로

459
00:19:50,760 --> 00:19:53,640
음 폐기하거나

460
00:19:53,640 --> 00:19:55,980
음 우리는'  이 피트니스를 가져 와서

461
00:19:55,980 --> 00:19:57,960


462
00:19:57,960 --> 00:19:59,760
모집단에서 최고 성능과 비교하면 최악보다 낫다면 모션

463
00:19:59,760 --> 00:20:02,460


464
00:20:02,460 --> 00:20:04,080


465
00:20:04,080 --> 00:20:05,940
모드를 입금하여 상부 구조에서 끝낸 경로에 보상하거나 최악의 모집단보다 나쁘면

466
00:20:05,940 --> 00:20:07,200


467
00:20:07,200 --> 00:20:10,740
폐기합니다.  계속해서

468
00:20:10,740 --> 00:20:13,020
새로운 구조를 생성하고 이를 프로세스로 보낼 것입니다.

469
00:20:13,020 --> 00:20:17,160


470
00:20:17,160 --> 00:20:20,340
그 전파에 의존하는 훈련이 병렬로 작업할 수 있는 여러 작업자 프로세스가 있는 경우 이 프로세스에서

471
00:20:20,340 --> 00:20:22,740
가장 계산 비용이 많이 드는 부분이기 때문입니다.

472
00:20:22,740 --> 00:20:26,100


473
00:20:26,100 --> 00:20:28,080


474
00:20:28,080 --> 00:20:31,620
이

475
00:20:31,620 --> 00:20:33,900
새로운 신경망을 평가합니다. 이 새로운

476
00:20:33,900 --> 00:20:36,000
구조를 평가합니다. 비동기 오염 체계에서 내부적으로 동시에 다른 구조를 훈련하고 평가하여 프로세스 속도를 높일 수 있습니다. 음

477
00:20:36,000 --> 00:20:37,020


478
00:20:37,020 --> 00:20:38,940


479
00:20:38,940 --> 00:20:41,220


480
00:20:41,220 --> 00:20:44,820


481
00:20:44,820 --> 00:20:49,159


482
00:20:50,160 --> 00:20:52,020
이것은 실제로

483
00:20:52,020 --> 00:20:53,580
음 이것은 애니메이션이지만

484
00:20:53,580 --> 00:20:56,460
이 버전에서는 작동하지 않습니다.

485
00:20:56,460 --> 00:20:58,740
우리는 PDF를 사용하고 있기 때문에 음 슬라이드하지만

486
00:20:58,740 --> 00:21:01,260
주로 음이 노드

487
00:21:01,260 --> 00:21:02,820


488
00:21:02,820 --> 00:21:06,120
사이의 가장자리 또는 연결을 볼 수 있는 구조입니다.

489
00:21:06,120 --> 00:21:07,679


490
00:21:07,679 --> 00:21:10,940


491
00:21:10,940 --> 00:21:13,320


492
00:21:13,320 --> 00:21:15,539


493
00:21:15,539 --> 00:21:17,460


494
00:21:17,460 --> 00:21:21,360
이 애니메이션에서 아시아인이 생성한 신경망 버전의 성능을 기반으로 가장자리의

495
00:21:21,360 --> 00:21:24,840
페로몬 값에 대한 일종의 업데이트입니다.

496
00:21:24,840 --> 00:21:27,660


497
00:21:27,660 --> 00:21:30,240


498
00:21:30,240 --> 00:21:32,400


499
00:21:32,400 --> 00:21:34,860


500
00:21:34,860 --> 00:21:36,600
중간

501
00:21:36,600 --> 00:21:38,640
레이어 그리고 거기에서 우리가 여기 있는 이

502
00:21:38,640 --> 00:21:40,559
하나의 숨겨진 레이어에 있는 숨겨진 레이어 중 하나로 이동하고

503
00:21:40,559 --> 00:21:42,780
거기에서

504
00:21:42,780 --> 00:21:45,678
출력으로 이동합니다.

505
00:21:47,100 --> 00:21:50,039
그래서 음 그것은

506
00:21:50,039 --> 00:21:53,400
ATO 및 현재 최적화를 적용하는 개념이었고

507
00:21:53,400 --> 00:21:57,539
음 Nas와 이것은 지금 내가'

508
00:21:57,539 --> 00:21:59,340
우리가 생각한 실제 방법에 대해 이야기 할 것이므로

509
00:21:59,340 --> 00:22:01,580


510
00:22:01,980 --> 00:22:05,580
더 극적이고 더 강력합니다.

511
00:22:05,580 --> 00:22:08,280
음 신경 탐지 검색 방법은 음

512
00:22:08,280 --> 00:22:10,500
더 포괄적입니다. 만약 내가 말할 수 있다면

513
00:22:10,500 --> 00:22:11,640


514
00:22:11,640 --> 00:22:13,220
음 우리는 우리가

515
00:22:13,220 --> 00:22:17,580
방법을 적용하기로 선택했고 음 음

516
00:22:17,580 --> 00:22:20,220
음  우리는 신경망이 현재 연결로 인해

517
00:22:20,220 --> 00:22:23,700


518
00:22:23,700 --> 00:22:25,500


519
00:22:25,500 --> 00:22:28,140
음 다른 C 또는 신경망

520
00:22:28,140 --> 00:22:30,299
구조보다 잠재적으로 더 큰 경향이 있기 때문에 신경망이 필요합니다.

521
00:22:30,299 --> 00:22:32,880
그래서 우리는

522
00:22:32,880 --> 00:22:35,760
이 문제를 시작하면 방법이나

523
00:22:35,760 --> 00:22:37,200
상수가 모든 신경망에 적용되지만

524
00:22:37,200 --> 00:22:39,360
그것을 다음에 적용한다고 생각했습니다.  순환

525
00:22:39,360 --> 00:22:40,740
네트워크는

526
00:22:40,740 --> 00:22:43,620
음 우리가 생각한 방법의 성능을 측정하기 위해 음에 대해 더 매력적인 도전을 만들었습니다.

527
00:22:43,620 --> 00:22:45,600


528
00:22:45,600 --> 00:22:47,600


529
00:22:47,700 --> 00:22:49,679


530
00:22:49,679 --> 00:22:52,400


531
00:22:52,500 --> 00:22:55,500


532
00:22:55,500 --> 00:22:58,500


533
00:22:58,500 --> 00:23:01,280


534
00:23:01,280 --> 00:23:03,600


535
00:23:03,600 --> 00:23:05,760
앞서 언급한

536
00:23:05,760 --> 00:23:08,400
방법이고 우리가 작업하고 있는 기계나 하드웨어로 처리할 수 있는 방법 검색 공간과

537
00:23:08,400 --> 00:23:10,980
방법입니다. 음 상부구조는

538
00:23:10,980 --> 00:23:14,100


539
00:23:14,100 --> 00:23:15,840


540
00:23:15,840 --> 00:23:18,299


541
00:23:18,299 --> 00:23:19,740
대규모로 연결된 신경망으로 구성됩니다.

542
00:23:19,740 --> 00:23:22,020


543
00:23:22,020 --> 00:23:23,520
다른 노드에 연결

544
00:23:23,520 --> 00:23:27,240
되거나 모서리를 통해 앞으로

545
00:23:27,240 --> 00:23:30,059
모서리와 반복 모서리 뒤로 앞으로

546
00:23:30,059 --> 00:23:32,820
모서리와 뒤로 모서리 모서리

547
00:23:32,820 --> 00:23:34,860
음 여기에 있는 이 간단한 구조는 우리가

548
00:23:34,860 --> 00:23:37,200


549
00:23:37,200 --> 00:23:39,600


550
00:23:39,600 --> 00:23:42,780
여기 개미에 적용하는 상부 구조의 개념 중 하나를 나타냅니다.  3개의

551
00:23:42,780 --> 00:23:45,059
입력 노드가 있습니다. 3개의 히든 레이어는 각각

552
00:23:45,059 --> 00:23:47,400


553
00:23:47,400 --> 00:23:51,020
출력 레이어에 3개의 노드와

554
00:23:51,020 --> 00:23:53,640
1개의 출력 노드를 가지고 있습니다.

555
00:23:53,640 --> 00:23:56,220


556
00:23:56,220 --> 00:23:59,100
녹색

557
00:23:59,100 --> 00:24:01,380
정방향 반복

558
00:24:01,380 --> 00:24:02,520
죄송합니다

559
00:24:02,520 --> 00:24:05,159
음 가장자리는  회색에 하나,

560
00:24:05,159 --> 00:24:06,659


561
00:24:06,659 --> 00:24:09,360
녹색 끝의 순방향 전류 및 역방향 전류 어 빨간색

562
00:24:09,360 --> 00:24:13,620
및 반복 에지의 개념

563
00:24:13,620 --> 00:24:15,419
um 이

564
00:24:15,419 --> 00:24:18,419
예에서 보면

565
00:24:18,419 --> 00:24:20,460
에지가

566
00:24:20,460 --> 00:24:22,740
전류가 들어오는 것처럼 보일 수 있기 때문에 약간 혼란스러울 수 있습니다.

567
00:24:22,740 --> 00:24:26,460
동일한 노드 또는

568
00:24:26,460 --> 00:24:29,280
동일한 시간 단계의 음에서 나오지만 이 구조는

569
00:24:29,280 --> 00:24:32,760
더 명확하게 만들 수 있습니다

570
00:24:32,760 --> 00:24:34,380
음 그래서 여기에

571
00:24:34,380 --> 00:24:37,620
3이 이전에 본 것과 거의 유사한 구조가 있지만

572
00:24:37,620 --> 00:24:39,419


573
00:24:39,419 --> 00:24:41,700
여기에는 3개의 입력이 있습니다  노드 2개의

574
00:24:41,700 --> 00:24:43,200
숨겨진 레이어

575
00:24:43,200 --> 00:24:45,059
3장의 레이어에는 3개의 노드가 있고 그런 다음 출력에는

576
00:24:45,059 --> 00:24:46,860
2개의 노트가 있습니다

577
00:24:46,860 --> 00:24:49,260
음 그리고 우리는 또한

578
00:24:49,260 --> 00:24:51,900
t가 0인 현재 시간과

579
00:24:51,900 --> 00:24:53,640
이전 시간인 T 빼기

580
00:24:53,640 --> 00:24:56,280
1 T 빼기 이전의 시간인 3개의 시간 단계를 가집니다  여기에 있는 두 개의

581
00:24:56,280 --> 00:25:01,080
가장자리는 검은색 실선을 사용하여 설명되어 있습니다.

582
00:25:01,080 --> 00:25:04,440


583
00:25:04,440 --> 00:25:07,799
물론 이러한 가장자리는

584
00:25:07,799 --> 00:25:10,440


585
00:25:10,440 --> 00:25:12,059
신경망을 통해 전파될 현재 시간 단계에 존재합니다.

586
00:25:12,059 --> 00:25:16,140
그런 다음

587
00:25:16,140 --> 00:25:18,600
이러한 연결이 정보를 가져올 것입니다.

588
00:25:18,600 --> 00:25:20,520


589
00:25:20,520 --> 00:25:22,500
음 또는 제공됩니다.

590
00:25:22,500 --> 00:25:25,200
이전 시간 단계의 정보 이전

591
00:25:25,200 --> 00:25:28,260
음 어 입력 또는

592
00:25:28,260 --> 00:25:31,440
이전 언어의 노드로 실행된 이전 어 데이터는

593
00:25:31,440 --> 00:25:32,520


594
00:25:32,520 --> 00:25:36,299
현재 에지이며

595
00:25:36,299 --> 00:25:39,240
여기에서 빨간색과 주황색으로 감지됩니다. 4개는

596
00:25:39,240 --> 00:25:42,539
빨간색과 주황색에서 더 좋습니다. 빨간색은

597
00:25:42,539 --> 00:25:44,039
T 빼기 1에서 오고 주황색은

598
00:25:44,039 --> 00:25:46,860
T 빼기 2에서 오고 역방향

599
00:25:46,860 --> 00:25:50,520
현재 가장자리는

600
00:25:50,520 --> 00:25:55,740
파란색과 녹색의 점선입니다.

601
00:25:55,740 --> 00:25:56,940


602
00:25:56,940 --> 00:25:59,279


603
00:25:59,279 --> 00:26:03,659


604
00:26:03,659 --> 00:26:04,340


605
00:26:04,340 --> 00:26:08,220
하지만 어 하지만 우리는 하지만 그들은

606
00:26:08,220 --> 00:26:09,960
이미 최신 상태이기 때문에 우리는 그렇게 할 수 있습니다.

607
00:26:09,960 --> 00:26:12,360
그들은 정보를 처리하기 때문에

608
00:26:12,360 --> 00:26:14,220
이미 처리된 정보를 가져오므로 시간을

609
00:26:14,220 --> 00:26:16,520


610
00:26:16,520 --> 00:26:19,320
거슬러 정보를 가져오거나

611
00:26:19,320 --> 00:26:20,700


612
00:26:20,700 --> 00:26:23,039
구조를 통해 다시 가져오는 것에 대해 걱정할 필요가 없습니다. 하지만 우리는

613
00:26:23,039 --> 00:26:24,840
그렇게 할 수 있습니다.  이전 타임스탬프에서 오는 경우

614
00:26:24,840 --> 00:26:27,439


615
00:26:27,779 --> 00:26:30,840
두 번째 휴리스틱 및 개미는

616
00:26:30,840 --> 00:26:35,400
우리가 사용하고 싶었던 Colony 가중치 공유입니다.

617
00:26:35,400 --> 00:26:38,700
그래서 초기 브랜딩 대신

618
00:26:38,700 --> 00:26:41,520
가중치 또는 시냅스

619
00:26:41,520 --> 00:26:45,179
가중치와 생성된 신경망을 초기화합니다. 어

620
00:26:45,179 --> 00:26:48,539
우리는 기차 가중치를 사용하여

621
00:26:48,539 --> 00:26:51,600
새로

622
00:26:51,600 --> 00:26:55,140
생성된 어 신경망의 가중치 우리는

623
00:26:55,140 --> 00:26:57,240
이 신경망을 상부 구조에 저장하여

624
00:26:57,240 --> 00:26:58,880


625
00:26:58,880 --> 00:27:02,520
어 우리는

626
00:27:02,520 --> 00:27:05,700
여기서 마지막 um 방정식을 사용하여 이 업데이트를 수행하여

627
00:27:05,700 --> 00:27:07,740


628
00:27:07,740 --> 00:27:11,100
이전에 저장된 방법과 우리가 어

629
00:27:11,100 --> 00:27:13,260
훈련되거나 평가된 신경망에서 나왔고

630
00:27:13,260 --> 00:27:16,440
우리는 또한

631
00:27:16,440 --> 00:27:19,500
이 업데이트를 수행하기 위해 두 개의 중국어를 사용했습니다.

632
00:27:19,500 --> 00:27:25,020
음 고정 매개변수 파일을 사용했습니다. 또는

633
00:27:25,020 --> 00:27:27,659
그것이 첫 번째 전략임을 알게 된다면

634
00:27:27,659 --> 00:27:29,700
두 번째 전략은

635
00:27:29,700 --> 00:27:33,380
다음 두 방정식을 적용하여 Fly를 얻는 것이었습니다.

636
00:27:33,380 --> 00:27:36,600


637
00:27:36,600 --> 00:27:38,159
이전에

638
00:27:38,159 --> 00:27:40,740
일반적으로 신경망의 성능에 대해 죄송합니다. 이전에

639
00:27:40,740 --> 00:27:43,380
관련 항목이 있으므로

640
00:27:43,380 --> 00:27:45,539


641
00:27:45,539 --> 00:27:49,500
훈련되고 검증되거나 테스트된 신경망의 성능에 의존합니다.

642
00:27:49,500 --> 00:27:51,480


643
00:27:51,480 --> 00:27:54,000
음 만약 약속이 좋다면

644
00:27:54,000 --> 00:27:57,600
우리는 허용할 것입니다.  이것은

645
00:27:57,600 --> 00:28:00,120
어 어 신경망의 가중치가 어

646
00:28:00,120 --> 00:28:04,340
어 초기화 방법의 초기화에 더 많이 기여하기 때문에

647
00:28:04,340 --> 00:28:06,600
새로

648
00:28:06,600 --> 00:28:08,580
생성된 RN이

649
00:28:08,580 --> 00:28:11,279
그렇게 잘 수행되지 않는다면 왜 이 방정식이

650
00:28:11,279 --> 00:28:13,919
그렇게 많이 기여하도록 허용하지 않을까요

651
00:28:13,919 --> 00:28:15,360


652
00:28:15,360 --> 00:28:18,240
?  세 번째 메타 휴리스틱은

653
00:28:18,240 --> 00:28:20,640
다중 메모리 셀이므로 음

654
00:28:20,640 --> 00:28:23,520
각 노드에서 각각 음 어 언제

655
00:28:23,520 --> 00:28:26,760
에이전트나

656
00:28:26,760 --> 00:28:28,919
개미가 상부 구조의 노드에 도달했을 때 음

657
00:28:28,919 --> 00:28:31,679
로컬 검색을 수행하여

658
00:28:31,679 --> 00:28:33,179


659
00:28:33,179 --> 00:28:36,779
새로운 유형을 선택합니다

660
00:28:36,779 --> 00:28:40,080
뉴런 또는 노드의 유형 uh 이

661
00:28:40,080 --> 00:28:42,059
세 가지 다른 유형의 메모리

662
00:28:42,059 --> 00:28:45,600
셀에서 생성된 RNN에서

663
00:28:45,600 --> 00:28:47,880
음 생성 구조에서

664
00:28:47,880 --> 00:28:50,279
구조의 노드가 모두 동일하지 않습니다.

665
00:28:50,279 --> 00:28:52,200
로컬 검색에 따라 달라집니다.

666
00:28:52,200 --> 00:28:54,299


667
00:28:54,299 --> 00:28:55,260
음

668
00:28:55,260 --> 00:28:57,240
에이전트는

669
00:28:57,240 --> 00:28:59,520
그들이 상부 구조의 입력에서 출력까지의 경로를 통해 도달하는 각 노드에서 할 것 또는 끝이 할 것

670
00:28:59,520 --> 00:29:02,039


671
00:29:02,039 --> 00:29:03,419


672
00:29:03,419 --> 00:29:04,860
예

673
00:29:04,860 --> 00:29:07,799
네 번째 주요 항목은 여러

674
00:29:07,799 --> 00:29:10,140
안티 종이므로 우리는

675
00:29:10,140 --> 00:29:12,480
음 다른 종을 적용했습니다.

676
00:29:12,480 --> 00:29:14,460


677
00:29:14,460 --> 00:29:16,860
첫 번째 종은

678
00:29:16,860 --> 00:29:19,320
가장자리만 통과하여 가장자리에서

679
00:29:19,320 --> 00:29:21,720


680
00:29:21,720 --> 00:29:26,039
가장자리를 통해서만 앞으로 이동하는 종이었습니다. 어

681
00:29:26,039 --> 00:29:27,720
질량 상부 구조의 신경망

682
00:29:27,720 --> 00:29:29,100


683
00:29:29,100 --> 00:29:32,640
과 이 종은

684
00:29:32,640 --> 00:29:34,440
노드의 수를 정의할 것입니다.  생성된

685
00:29:34,440 --> 00:29:36,720
구조 또한

686
00:29:36,720 --> 00:29:39,120
상부 구조에서 노드의 유형을 정의하고 노드가

687
00:29:39,120 --> 00:29:40,799
작업을 완료하면

688
00:29:40,799 --> 00:29:43,559
사회적 또는 두 번째 종은

689
00:29:43,559 --> 00:29:45,500
사회적 개미입니다.

690
00:29:45,500 --> 00:29:50,039
이 노드 사이를 통과하지만

691
00:29:50,039 --> 00:29:53,460
현재 가장자리를 사용합니다.

692
00:29:53,460 --> 00:29:56,279
이 노드 사이를 이동하여

693
00:29:56,279 --> 00:29:59,220


694
00:29:59,220 --> 00:30:01,020
실제로

695
00:30:01,020 --> 00:30:03,539
생성된 RNA에 대해 반복되는 가장자리를 생성하고 우리는

696
00:30:03,539 --> 00:30:06,600
이 사회적 개미에 대해 두 가지 다른 종 또는 종

697
00:30:06,600 --> 00:30:10,020
의 세 가지 두 가지 하위 유형이 있습니다. 하나는

698
00:30:10,020 --> 00:30:13,320
음 앞으로 그렇게 앞으로  어

699
00:30:13,320 --> 00:30:16,200
사회적 끝 우리는 이 사람들이

700
00:30:16,200 --> 00:30:19,919


701
00:30:19,919 --> 00:30:22,500
입력에서 출력으로 가는 가난한 연결을 통해서만 진행하지만

702
00:30:22,500 --> 00:30:25,860
현재 가장자리에 대해서만 진행한

703
00:30:25,860 --> 00:30:28,080
다음

704
00:30:28,080 --> 00:30:30,659
이 사람들이 가는 모든 뒤로 사회적 개미가 가는 곳으로만 ​​진행합니다.

705
00:30:30,659 --> 00:30:33,720
출력에서 입력으로 그리고

706
00:30:33,720 --> 00:30:36,299
정찰 연결을 통한 트래버스

707
00:30:36,299 --> 00:30:39,240
와 우리가 이러한 다른 종에 대해 생각한 이유는

708
00:30:39,240 --> 00:30:41,100


709
00:30:41,100 --> 00:30:43,200


710
00:30:43,200 --> 00:30:46,919
개미가 상부 구조에서 배회하는 경향을 제어하고 싶었기 때문입니다.

711
00:30:46,919 --> 00:30:48,779


712
00:30:48,779 --> 00:30:51,240


713
00:30:51,240 --> 00:30:52,919


714
00:30:52,919 --> 00:30:54,840
음 반복 연결의 메쉬

715
00:30:54,840 --> 00:30:57,480
음 그래서 우리는 그것을 제어하고 싶었기 때문에

716
00:30:57,480 --> 00:31:00,299


717
00:31:00,299 --> 00:31:01,080


718
00:31:01,080 --> 00:31:04,020


719
00:31:04,020 --> 00:31:05,820
탐색 끝을 사용하여 구조를 정의한

720
00:31:05,820 --> 00:31:07,679
다음 반복 연결을 정의할 수 있도록 이 전략을 고안했습니다.

721
00:31:07,679 --> 00:31:11,539


722
00:31:11,640 --> 00:31:15,240
meteoristic은

723
00:31:15,240 --> 00:31:17,760
uh 프로모션 성명서의 정규화입니다.

724
00:31:17,760 --> 00:31:19,980
우리는 더

725
00:31:19,980 --> 00:31:22,380


726
00:31:22,380 --> 00:31:24,799


727
00:31:24,799 --> 00:31:30,059
희박하고 잘 수행되는 신경망을 가져오는 인센티브를 제공하기를 원합니다.

728
00:31:30,059 --> 00:31:31,200


729
00:31:31,200 --> 00:31:34,620


730
00:31:34,620 --> 00:31:38,220
um 밀도가 더 높거나 더 큰 구조를 구성하는 경우 가져오면 페널티를 가하여

731
00:31:38,220 --> 00:31:40,260


732
00:31:40,260 --> 00:31:45,179
추가했습니다.  호르몬 값을 업데이트한 이 정규화 항과

733
00:31:45,179 --> 00:31:47,340
음 공식은

734
00:31:47,340 --> 00:31:49,620


735
00:31:49,620 --> 00:31:52,380
어 그리고 보시다시피 정규화

736
00:31:52,380 --> 00:31:54,779
항은 성능에 의존합니다.

737
00:31:54,779 --> 00:31:56,159
여기서 Ada는 신경망의 성능

738
00:31:56,159 --> 00:31:58,980
이며 또한 구조의 크기에 의존합니다

739
00:31:58,980 --> 00:32:02,539


740
00:32:06,299 --> 00:32:09,120
음 마지막 두껍고 마지막 것  입니다 um is is is

741
00:32:09,120 --> 00:32:12,480
jump and jump ends.

742
00:32:12,480 --> 00:32:14,760
우리가 실험해보고 싶은 것은

743
00:32:14,760 --> 00:32:18,179


744
00:32:18,179 --> 00:32:20,940
um의 끝을 허용하면 이름이

745
00:32:20,940 --> 00:32:23,100
um을 통해 이동할 때 레이어를 건너뛰게 하면

746
00:32:23,100 --> 00:32:25,620
uh 상부

747
00:32:25,620 --> 00:32:28,559
구조를 통해

748
00:32:28,559 --> 00:32:30,539
um 우리가 이것들을 뛰어넘게 하면

749
00:32:30,539 --> 00:32:31,740


750
00:32:31,740 --> 00:32:34,140
우리가 이동을 제한하는 경우와 비교하여 신경망을 구성하는 레이어

751
00:32:34,140 --> 00:32:37,399
어 한 번에 한 레이어씩 점프하는 경우 어

752
00:32:37,399 --> 00:32:41,100
어떻게 이것이 어 결국

753
00:32:41,100 --> 00:32:44,039
um 성능 면에서 그들이 우리에게

754
00:32:44,039 --> 00:32:46,919
파서를 제공하고 어 구조를 수행하는 동안

755
00:32:46,919 --> 00:32:49,320
그렇지 않으면 이 점프가

756
00:32:49,320 --> 00:32:51,899
손상될 수 있는지

757
00:32:51,899 --> 00:32:56,279
우리를 더 약하게 함으로써 성능 음 어 구조

758
00:32:56,279 --> 00:32:59,279
그래서 음

759
00:32:59,940 --> 00:33:00,679


760
00:33:00,679 --> 00:33:05,039
우리는

761
00:33:05,039 --> 00:33:07,799
석탄 화력 발전소에 속할 수 있는 시계열 데이터를 사용합니다 어 우리는

762
00:33:07,799 --> 00:33:11,940


763
00:33:11,940 --> 00:33:15,179
훈련과 테스트를 위해 어 7200 음 기록을 갖도록 데이터를 나누었습니다.

764
00:33:15,179 --> 00:33:18,000
여기서 플롯은 데이터가  그리고 우리는

765
00:33:18,000 --> 00:33:21,059
그것이 비선형이고

766
00:33:21,059 --> 00:33:24,659
음 그리고 그것은 주기이고 음이고 계절적이지 않다는 것을 볼 수 있습니다.

767
00:33:24,659 --> 00:33:26,580
그래서 어렵습니다.

768
00:33:26,580 --> 00:33:31,019
비음 신경망

769
00:33:31,019 --> 00:33:33,059
솔루션이나 회귀 선형

770
00:33:33,059 --> 00:33:36,120
회귀 솔루션에 대한 어려운 문제이므로

771
00:33:36,120 --> 00:33:38,820
입력은 12개의 매개변수로 구성됩니다.

772
00:33:38,820 --> 00:33:40,500
우리가

773
00:33:40,500 --> 00:33:45,019
하나의 매개변수만 예측하려고 할 때 화염 강도

774
00:33:46,640 --> 00:33:48,840
실험은 개미의 휴리스틱을 모두 다루었습니다.

775
00:33:48,840 --> 00:33:51,899


776
00:33:51,899 --> 00:33:53,820
um 이러한 다양한 매개변수에 대해 다른 값을 제공합니다.

777
00:33:53,820 --> 00:33:56,600


778
00:33:56,940 --> 00:33:59,159
um 상부구조는 12개의

779
00:33:59,159 --> 00:34:00,659
정말 좋은 노드로 구성됩니다. 3개의 숨겨진 레이어

780
00:34:00,659 --> 00:34:03,299
와 12장 노트 및  하나는

781
00:34:03,299 --> 00:34:05,340
출력 플레이어의 하나의

782
00:34:05,340 --> 00:34:07,740
출력 노드입니다 음 상부 구조가 49개의 노드를 가질 때까지

783
00:34:07,740 --> 00:34:10,260
음 3개의 시간 단계 1 2

784
00:34:10,260 --> 00:34:11,639


785
00:34:11,639 --> 00:34:14,339


786
00:34:14,339 --> 00:34:19,739
및 3개의 시간 단계에 걸쳐 소비된 반복 연결입니다.

787
00:34:19,739 --> 00:34:20,760


788
00:34:20,760 --> 00:34:22,859


789
00:34:22,859 --> 00:34:26,820


790
00:34:26,820 --> 00:34:28,980
시간을 통한 전파에서 72개의 시간 단계는

791
00:34:28,980 --> 00:34:34,199
약 3.5 죄송합니다 352

792
00:34:34,199 --> 00:34:36,659
음 1000 당신은 약

793
00:34:36,659 --> 00:34:40,739
650만 가장자리와 20 약 2600만 어

794
00:34:40,739 --> 00:34:42,119
반복 가장자리

795
00:34:42,119 --> 00:34:44,940
우리는 경험에서 우리는 또한

796
00:34:44,940 --> 00:34:47,219
동일한 데이터 세트를 사용 하 여 개미의 성능을 비교 어

797
00:34:47,219 --> 00:34:51,060
우리는 그것을 시험과 비교하고

798
00:34:51,060 --> 00:34:56,940
필요하므로 시험은

799
00:34:56,940 --> 00:34:59,760


800
00:34:59,760 --> 00:35:01,680
음 유전 기반

801
00:35:01,680 --> 00:35:04,800
음 방법인 음 신경 텍스처 검색의 최신 기술입니다. 우리는 또한

802
00:35:04,800 --> 00:35:07,980
그것이 새로운 혁명과 Nas의 벤치마크와 같기 때문에 그것을 깔끔한 것과 비교합니다.

803
00:35:07,980 --> 00:35:11,700


804
00:35:11,700 --> 00:35:13,680
최적화되지 않은 구조로 변환

805
00:35:13,680 --> 00:35:16,920
1,2,3,

806
00:35:16,920 --> 00:35:18,900


807
00:35:18,900 --> 00:35:21,300
1,2,3개의 은닉층과 다른

808
00:35:21,300 --> 00:35:24,020
유형의

809
00:35:24,260 --> 00:35:27,960
메모리 기반 셀이 있는 최적화되지 않은 구조로 변환

810
00:35:27,960 --> 00:35:30,359
실험은 조기 휴리스틱과 개미의 휴리스틱

811
00:35:30,359 --> 00:35:31,859
의 모든 조합을 다루기 위해 1600번의 실험을 다루었습니다

812
00:35:31,859 --> 00:35:33,540


813
00:35:33,540 --> 00:35:35,579


814
00:35:35,579 --> 00:35:38,400
음  이 실험을 각각

815
00:35:38,400 --> 00:35:41,760
10회씩 어 어 어

816
00:35:41,760 --> 00:35:44,599
통계 분석을 위해 음

817
00:35:45,300 --> 00:35:47,300


818
00:35:47,300 --> 00:35:51,300
잘 설명 각

819
00:35:51,300 --> 00:35:55,200
실험당 2000 백만 총 10 Apex에 대한 훈련을 했고

820
00:35:55,200 --> 00:35:58,680


821
00:35:58,680 --> 00:36:01,220
꿈 관련 훈련에 대해 생성하고 평가하는 데

822
00:36:01,220 --> 00:36:05,640
32백만 어 백만이 걸렸고 한 달이 걸렸습니다.

823
00:36:05,640 --> 00:36:08,339


824
00:36:08,339 --> 00:36:10,619
실험을 마치기 위한 천 개의 CPU와

825
00:36:10,619 --> 00:36:14,579
우리가 얻은 결과는 물론

826
00:36:14,579 --> 00:36:16,440


827
00:36:16,440 --> 00:36:18,560
구조화되지 않은

828
00:36:18,560 --> 00:36:21,359
구조화되지 않은 구조에서 나온 것으로 나타났습니다. 어 구조화되지

829
00:36:21,359 --> 00:36:23,880
않았습니다. 최적화되지 않은

830
00:36:23,880 --> 00:36:26,880


831
00:36:26,880 --> 00:36:28,200


832
00:36:28,200 --> 00:36:31,020
구조를 죄송합니다.

833
00:36:31,020 --> 00:36:34,500
여기 시험은

834
00:36:34,500 --> 00:36:36,420
왼쪽에서 네 번째

835
00:36:36,420 --> 00:36:38,820
이고 평균

836
00:36:38,820 --> 00:36:41,579
절대 오차 또는

837
00:36:41,579 --> 00:36:44,099
건강 및 휴리스틱의 일부 버전 또는 조합이

838
00:36:44,099 --> 00:36:46,140


839
00:36:46,140 --> 00:36:49,460
시험에서 나온 것을 볼 수 있으므로

840
00:36:49,920 --> 00:36:53,220


841
00:36:53,220 --> 00:36:54,780
통계적

842
00:36:54,780 --> 00:36:55,619
음

843
00:36:55,619 --> 00:36:59,220
연구 또는  우리가 개미로부터 얻은 결과 그래서

844
00:36:59,220 --> 00:37:02,880
우리는 결과에서 나오는 최고의 성능 신경망을 보려고 노력했습니다.

845
00:37:02,880 --> 00:37:05,460


846
00:37:05,460 --> 00:37:08,400
그래서 우리는

847
00:37:08,400 --> 00:37:14,339
상위 10 25 120 200 250 및 500개의 결과를 보려고 노력했고

848
00:37:14,339 --> 00:37:16,980


849
00:37:16,980 --> 00:37:19,079
이러한 휴리스틱의 기여도를 볼 수 있었습니다.

850
00:37:19,079 --> 00:37:22,500
이 최고 성능의 어

851
00:37:22,500 --> 00:37:24,839
신경망 또는 구조에서 우리는

852
00:37:24,839 --> 00:37:28,260
이러한 휴리스틱이 이러한

853
00:37:28,260 --> 00:37:31,440
대부분의 결과에 효과적으로 기여한다는 것을 발견했습니다.

854
00:37:31,440 --> 00:37:35,060


855
00:37:35,060 --> 00:37:37,560


856
00:37:37,560 --> 00:37:40,140


857
00:37:40,140 --> 00:37:42,140


858
00:37:43,140 --> 00:37:46,320


859
00:37:46,320 --> 00:37:48,780


860
00:37:48,780 --> 00:37:52,260
그들의

861
00:37:52,260 --> 00:37:54,000
현재 연결은

862
00:37:54,000 --> 00:37:55,920
이 결과에서 사라졌습니다. 왜냐하면

863
00:37:55,920 --> 00:37:58,260
가장 성능이 좋은 신경망은

864
00:37:58,260 --> 00:38:00,839
정찰 연결이 그다지 많지 않았기 때문입니다.

865
00:38:00,839 --> 00:38:02,579


866
00:38:02,579 --> 00:38:06,119
음 우리는

867
00:38:06,119 --> 00:38:09,180
메모리 기반 셀이 이전 시간에서

868
00:38:09,180 --> 00:38:11,099
오는 반복 정보에 대한 작업을 수행했음을 의미합니다.

869
00:38:11,099 --> 00:38:13,619
테스트하지만 우리는

870
00:38:13,619 --> 00:38:16,619
이 레이어를 확장하고 싶었지만

871
00:38:16,619 --> 00:38:19,740


872
00:38:19,740 --> 00:38:23,899
향후 조사에 대해 논의할 목록에 있습니다.

873
00:38:25,800 --> 00:38:28,920
어 그래서 이것은

874
00:38:28,920 --> 00:38:31,320


875
00:38:31,320 --> 00:38:34,380
우리가

876
00:38:34,380 --> 00:38:37,339
외국에서

877
00:38:52,339 --> 00:38:54,540
반복적으로 악용하는 실험에서 얻은 결과를 기반으로 한 개미의 업적에 대한 요약일 뿐입니다.

878
00:38:54,540 --> 00:38:56,760


879
00:38:56,760 --> 00:38:59,300
음

880
00:38:59,300 --> 00:39:01,800
조직 휴리스틱의 정규화 구성 요소가 여기 이 테이블에

881
00:39:01,800 --> 00:39:04,260


882
00:39:04,260 --> 00:39:06,780
표시되는 더 나은 결과를 제공할 수

883
00:39:06,780 --> 00:39:09,079


884
00:39:09,079 --> 00:39:13,079
있고 여기서 점프하는 개미가 비트럼핑 이온에

885
00:39:13,079 --> 00:39:15,359
비해 더 나은 성능을 제공할 수 있기 때문에 연결이 성공적인 것으로 입증되었습니다.

886
00:39:15,359 --> 00:39:18,560


887
00:39:19,079 --> 00:39:22,160


888
00:39:24,359 --> 00:39:27,780
음 또한

889
00:39:27,780 --> 00:39:28,940


890
00:39:28,940 --> 00:39:30,680


891
00:39:30,680 --> 00:39:35,280
링 전략이 증명한 데이터는

892
00:39:35,280 --> 00:39:38,099
음 효과를 보았을 때 우리가

893
00:39:38,099 --> 00:39:40,260


894
00:39:40,260 --> 00:39:44,240
적용하지 않았을 때와 비교했을 때 어 급여 청각

895
00:39:46,260 --> 00:39:48,619
괜찮습니다

896
00:39:54,660 --> 00:39:58,220
그래서 궁극적인 전략과 전략은

897
00:39:58,220 --> 00:40:00,500
일반적이므로

898
00:40:00,500 --> 00:40:03,000
우리가 하는 전략은  용도는

899
00:40:03,000 --> 00:40:05,220


900
00:40:05,220 --> 00:40:08,220
최종

901
00:40:08,220 --> 00:40:10,020
콜로니 기반 및 최종 호출 최적화

902
00:40:10,020 --> 00:40:11,579
기반의 모든 문제 또는 솔루션에 적용할 수 있을 만큼 충분히 일반적입니다. 음

903
00:40:11,579 --> 00:40:12,420


904
00:40:12,420 --> 00:40:15,180
버몬트 증착을 기반으로 합니다. 어

905
00:40:15,180 --> 00:40:17,280
우리가 생각해낸 방법은

906
00:40:17,280 --> 00:40:18,900


907
00:40:18,900 --> 00:40:21,839
이전에 어떤 일러스트레이터에서도 도입되지 않은 값이기도 합니다.  생물

908
00:40:21,839 --> 00:40:23,640
음 그리고 다른 것과 비교한 광고의

909
00:40:23,640 --> 00:40:26,099
성과 영역의 벤치마크 및

910
00:40:26,099 --> 00:40:28,680
예술 상태도

911
00:40:28,680 --> 00:40:30,599
음 놀랍습니다.

912
00:40:30,599 --> 00:40:31,859
그래서

913
00:40:31,859 --> 00:40:35,339
앞으로 우리는

914
00:40:35,339 --> 00:40:39,000
우리에게 좋은 리소스를 제공했다고 생각했지만 개미

915
00:40:39,000 --> 00:40:42,260
의 주요 단점은

916
00:40:42,260 --> 00:40:44,700
생물이  공간

917
00:40:44,700 --> 00:40:48,180
음 그래서 개미는 이 거대하게

918
00:40:48,180 --> 00:40:50,300
연결된 어

919
00:40:50,300 --> 00:40:53,280
물리적으로 연결된 상부 구조에서 작업했지만

920
00:40:53,280 --> 00:40:56,760
거대하긴 하지만 여전히 어 별개입니다 음

921
00:40:56,760 --> 00:40:58,200


922
00:40:58,200 --> 00:41:01,200
개미는 이 음 노드 사이를 자유롭게 이동할 수 있고

923
00:41:01,200 --> 00:41:04,380
또는

924
00:41:04,380 --> 00:41:06,960


925
00:41:06,960 --> 00:41:10,260
미리 정의된 어 연결을 통해 이러한 노트 사이를 강제로 이동해야 합니다.

926
00:41:10,260 --> 00:41:14,599
위조된 가장자리 또는 현재 가장자리

927
00:41:14,599 --> 00:41:16,140
이므로

928
00:41:16,140 --> 00:41:19,320
음 우리는 그

929
00:41:19,320 --> 00:41:21,540
연속 검색을 제거

930
00:41:21,540 --> 00:41:23,040
하고 공간의 거리를 연속 공간으로 대체할 생각을 하여

931
00:41:23,040 --> 00:41:25,440


932
00:41:25,440 --> 00:41:29,640
3D 검색 공간을 설계했습니다.

933
00:41:29,640 --> 00:41:31,680


934
00:41:31,680 --> 00:41:34,560
음 검색 비트는

935
00:41:34,560 --> 00:41:37,800
시간의 길이를 나타내는 레이어와 같았습니다.  lengths

936
00:41:37,800 --> 00:41:40,500
um 그리고 나서 개미는 이 레이어들 사이를 뛰어넘어

937
00:41:40,500 --> 00:41:44,280


938
00:41:44,280 --> 00:41:46,859
순환 연결을 제공해야 하고

939
00:41:46,859 --> 00:41:50,099
각 um 레이어에서

940
00:41:50,099 --> 00:41:52,859


941
00:41:52,859 --> 00:41:54,599
노드 사이의 에지와

942
00:41:54,599 --> 00:41:57,680
노드 사이의 에지를 미안하게 만드는 포워드 및 포트를 제공할 수 있습니다.

943
00:41:58,800 --> 00:42:00,960
음, 만화 슬라이드의 이 줄에서

944
00:42:00,960 --> 00:42:03,780


945
00:42:03,780 --> 00:42:06,060
캔이나 연속으로 이동하는 방법의 예를 보여드리겠습니다.

946
00:42:06,060 --> 00:42:08,040


947
00:42:08,040 --> 00:42:11,160


948
00:42:11,160 --> 00:42:13,260


949
00:42:13,260 --> 00:42:16,320
이것은

950
00:42:16,320 --> 00:42:17,640
불연속 방식으로 수행되며

951
00:42:17,640 --> 00:42:19,920
일단 완료되면

952
00:42:19,920 --> 00:42:21,480


953
00:42:21,480 --> 00:42:24,240
착취 탐색 이동을 수행할지 여부를 결정합니다.

954
00:42:24,240 --> 00:42:25,619


955
00:42:25,619 --> 00:42:27,780
음, 우리가 탐색 이동을 수행하기로 결정한 이 예는

956
00:42:27,780 --> 00:42:30,060


957
00:42:30,060 --> 00:42:34,020


958
00:42:34,020 --> 00:42:38,520
다음 각도와 반경을 결정합니다.  작업이 완료되면 해당 레이어에 대한 할당이 진행되고

959
00:42:38,520 --> 00:42:41,160


960
00:42:41,160 --> 00:42:43,680
해당 위치로 이동한 다음

961
00:42:43,680 --> 00:42:45,060


962
00:42:45,060 --> 00:42:47,460
착취를 수행할 것인지 또는 다음 이동이

963
00:42:47,460 --> 00:42:50,040
착취 탐색 이동이 될 것인지 결정합니다. 이

964
00:42:50,040 --> 00:42:51,619
예제

965
00:42:51,619 --> 00:42:55,460
착취 이동은

966
00:42:55,460 --> 00:42:58,380
공식적인

967
00:42:58,380 --> 00:43:00,359
이전에 다른

968
00:43:00,359 --> 00:43:04,319
팬이 검색 공간에 배치한 Vermont를 추적하므로

969
00:43:04,319 --> 00:43:06,599


970
00:43:06,599 --> 00:43:08,280
이전에 각 끝을 통해 정의된 감지 반경을 사용하고

971
00:43:08,280 --> 00:43:12,180


972
00:43:12,180 --> 00:43:12,780


973
00:43:12,780 --> 00:43:16,560
음 호르몬 흔적의 질량 중심을 찾은

974
00:43:16,560 --> 00:43:19,859
다음 한 번  그것이

975
00:43:19,859 --> 00:43:21,780


976
00:43:21,780 --> 00:43:24,119


977
00:43:24,119 --> 00:43:26,460
다음 위치에 있는 것으로 간주할 호르몬의 질량 중심을 계산한

978
00:43:26,460 --> 00:43:29,520
다음 해당 위치로 이동한

979
00:43:29,520 --> 00:43:31,800
다음

980
00:43:31,800 --> 00:43:34,079
다음 이동이 착취

981
00:43:34,079 --> 00:43:37,079
탐색 이동이 8인지 여부를 결정하고

982
00:43:37,079 --> 00:43:39,240


983
00:43:39,240 --> 00:43:41,579


984
00:43:41,579 --> 00:43:43,740
착취 순환이라면 단계의 유형에 대해 결정하기 전에 각 위치에서

985
00:43:43,740 --> 00:43:45,839


986
00:43:45,839 --> 00:43:48,599
같은 시간에 같은 수준에 머물 것인지 또는 점프할지 여부도 결정합니다. uh

987
00:43:48,599 --> 00:43:53,060
다음 타임 라인으로

988
00:43:53,640 --> 00:43:56,760
um 점프 또는  운동은

989
00:43:56,760 --> 00:43:58,440
같은 수준에 있습니다

990
00:43:58,440 --> 00:43:59,220
음 음

991
00:43:59,220 --> 00:44:02,220
만약 운동이 같은

992
00:44:02,220 --> 00:44:05,220
수준에 있다면 끝일 때 S가

993
00:44:05,220 --> 00:44:07,200
착취 운동을하고 있다면 그것보다

994
00:44:07,200 --> 00:44:09,780
하나의 구절에서 만 고려할 것입니다

995
00:44:09,780 --> 00:44:13,140
음 음 그것보다 앞서

996
00:44:13,140 --> 00:44:15,420
음 할 수 있기 때문에'  그렇지

997
00:44:15,420 --> 00:44:17,540


998
00:44:17,540 --> 00:44:20,520
않으면 같은 시간에 뒤로 이동하지 않으면 네트워크

999
00:44:20,520 --> 00:44:23,880
에서 허용되지 않는 역방향 단계를 수행하게 되지만

1000
00:44:23,880 --> 00:44:26,420


1001
00:44:26,520 --> 00:44:28,740


1002
00:44:28,740 --> 00:44:31,260


1003
00:44:31,260 --> 00:44:34,800
위 레이어 위의 다른 시간 지연으로 이동하면

1004
00:44:34,800 --> 00:44:36,780
반복되는 에지를 수행할 수 있습니다.

1005
00:44:36,780 --> 00:44:41,940
따라서 현재 가장자리는 시간을 거슬러 올라갈 수 있습니다.

1006
00:44:41,940 --> 00:44:44,220
아 죄송합니다

1007
00:44:44,220 --> 00:44:49,140
이전 슬라이드의 구조로 돌아가 어 레이어 그래서 이제

1008
00:44:49,140 --> 00:44:51,720
개미는

1009
00:44:51,720 --> 00:44:53,760
긴장 상태일 때 모든 형식적 흔적을 고려할 수 있고 자신의

1010
00:44:53,760 --> 00:44:55,619
앞에 있는 것과

1011
00:44:55,619 --> 00:44:58,619
뒤에 있는 것을 반경으로 지정할 수 있습니다  따라서 이 예에서 그는

1012
00:44:58,619 --> 00:45:00,540


1013
00:45:00,540 --> 00:45:02,460
이 단계에서 um을 고려할 것입니다.

1014
00:45:02,460 --> 00:45:04,079
감지 반경이 질량 중심을 계산할 수 있을 때 모든 원격 추적을 고려

1015
00:45:04,079 --> 00:45:06,540


1016
00:45:06,540 --> 00:45:08,839
하고 다음

1017
00:45:08,839 --> 00:45:11,880
위치로 간주한 다음 계속 수행하려면

1018
00:45:11,880 --> 00:45:14,400
이 작업을 계속 수행해야 합니다.  그것은

1019
00:45:14,400 --> 00:45:17,880
출력 노드의 근접성에 도달하고

1020
00:45:17,880 --> 00:45:19,740
이것이 완료되면 입력에서 출력까지의 경로에서

1021
00:45:19,740 --> 00:45:23,099


1022
00:45:23,099 --> 00:45:26,400
최종 위치로 간주할 출력 노드를 결정할 시간을 고려하고

1023
00:45:26,400 --> 00:45:29,599


1024
00:45:29,599 --> 00:45:31,140


1025
00:45:31,140 --> 00:45:34,680
다른 끝도 동일하게 수행합니다.

1026
00:45:34,680 --> 00:45:38,040
그런 다음

1027
00:45:38,040 --> 00:45:42,300
일부 입력 및 일부 출력에서 ​​다른 경로를 가지게 됩니다. 그런 다음

1028
00:45:42,300 --> 00:45:45,180
계정은 이러한 경로를 선택한 다음

1029
00:45:45,180 --> 00:45:47,400


1030
00:45:47,400 --> 00:45:49,560


1031
00:45:49,560 --> 00:45:52,200
노드가 너무 많지 않고 서로 매우 가깝도록 노드를 응축하도록 설득하려고 합니다.

1032
00:45:52,200 --> 00:45:54,300


1033
00:45:54,300 --> 00:45:57,599
특정 근접 내에 있는 하나의 노드는 uh

1034
00:45:57,599 --> 00:46:00,300
DB 스캔을 사용하여 함께 클러스터링되어

1035
00:46:00,300 --> 00:46:04,619
um 노드 수를 줄인 다음

1036
00:46:04,619 --> 00:46:07,440
경로가 될 것입니다. 경로는

1037
00:46:07,440 --> 00:46:08,240


1038
00:46:08,240 --> 00:46:11,700
수집되어 구조에

1039
00:46:11,700 --> 00:46:15,660
충분히 새로운 구조를 넣고 um

1040
00:46:15,660 --> 00:46:18,000
으로 전송  작업자 프로세스를 훈련하고 테스트한

1041
00:46:18,000 --> 00:46:20,040
다음 모집단과 비교합니다.

1042
00:46:20,040 --> 00:46:22,500
최고 성능의 RN과 플러스는

1043
00:46:22,500 --> 00:46:26,400
이 시점에서 거의 동일할 것입니다.

1044
00:46:26,400 --> 00:46:29,819
일단

1045
00:46:29,819 --> 00:46:32,280
구조가 구성되고

1046
00:46:32,280 --> 00:46:34,079
훈련 및 테스트 프로세스는 개미와 거의 동일

1047
00:46:34,079 --> 00:46:36,839
할 것입니다.  우리가

1048
00:46:36,839 --> 00:46:39,560
댄스에서 논의한 것과 동일

1049
00:46:40,740 --> 00:46:43,500
음 그래서 이것은 또한 개미가

1050
00:46:43,500 --> 00:46:47,579
이러한 경로를 취하는 방법을 보여주는 애니메이션이기도 합니다.

1051
00:46:47,579 --> 00:46:51,060


1052
00:46:51,060 --> 00:46:53,339


1053
00:46:53,339 --> 00:46:54,420


1054
00:46:54,420 --> 00:46:57,480


1055
00:46:57,480 --> 00:47:01,020
마치 우리가 끝을 보는 것처럼 어 개미는

1056
00:47:01,020 --> 00:47:04,140
어 단 8개의 조정 가능한 하이퍼 매개변수를 가지고 있습니다.

1057
00:47:04,140 --> 00:47:06,540


1058
00:47:06,540 --> 00:47:08,640
이것을 끝과 시험과 비교할 때 그것은

1059
00:47:08,640 --> 00:47:10,859
하이퍼플래너 및 다른

1060
00:47:10,859 --> 00:47:13,800
방법의 수의 절반입니다. 이 하이퍼 매개변수는

1061
00:47:13,800 --> 00:47:15,599
검색 공간의 레이어가

1062
00:47:15,599 --> 00:47:17,760
다리 종류 수

1063
00:47:17,760 --> 00:47:20,520
검색 공간에 얼마나 많은 다리가 있는지

1064
00:47:20,520 --> 00:47:22,920
에이전트 수 개미 수 유사한 것과

1065
00:47:22,920 --> 00:47:25,859


1066
00:47:25,859 --> 00:47:28,140
비슷한 개미 수 어 하이퍼 매개 변수와 개미 음 에이전트

1067
00:47:28,140 --> 00:47:30,680


1068
00:47:30,839 --> 00:47:32,339


1069
00:47:32,339 --> 00:47:34,980
또는

1070
00:47:34,980 --> 00:47:36,240
개미의 감지 반경 음

1071
00:47:36,240 --> 00:47:38,400
에이전트가

1072
00:47:38,400 --> 00:47:43,619
새 노드를 생성할 확률은 어가 매개변수를

1073
00:47:43,619 --> 00:47:45,540
착취하는 대신 탐색을 나타내거나

1074
00:47:45,540 --> 00:47:48,060


1075
00:47:48,060 --> 00:47:50,640
산업에서 다시 추적하는 것입니다.

1076
00:47:50,640 --> 00:47:53,160
음 노드 보상

1077
00:47:53,160 --> 00:47:56,880
음 매개변수 또는 어 어 요인은

1078
00:47:56,880 --> 00:47:58,440


1079
00:47:58,440 --> 00:48:01,200
변수입니다.  DB 스캔에 표시되는

1080
00:48:01,200 --> 00:48:03,900
하이퍼

1081
00:48:03,900 --> 00:48:06,660
매개변수 하이퍼 매개변수로 간주되며

1082
00:48:06,660 --> 00:48:07,920


1083
00:48:07,920 --> 00:48:09,900
음 하나의 업데이트 매개변수와

1084
00:48:09,900 --> 00:48:11,940
하나의 변동성 프라이머에 대해 암에 있으며 이들은

1085
00:48:11,940 --> 00:48:14,280


1086
00:48:14,280 --> 00:48:18,660
음 및 SEO 기반 문제에도 존재합니다.

1087
00:48:18,660 --> 00:48:21,259
솔루션 죄송합니다

1088
00:48:22,140 --> 00:48:23,640
음 3년 동안 사용된 실험

1089
00:48:23,640 --> 00:48:25,319


1090
00:48:25,319 --> 00:48:28,200
음  다른 수의 매개 변수와

1091
00:48:28,200 --> 00:48:30,919
다른 크기

1092
00:48:31,140 --> 00:48:33,900
음 결과에 따르면 따라서

1093
00:48:33,900 --> 00:48:35,900
음

1094
00:48:36,260 --> 00:48:39,060
우리가 캔에서 얻은 결과는

1095
00:48:39,060 --> 00:48:41,460
매우 음 개미와 경쟁하고

1096
00:48:41,460 --> 00:48:44,339
테스트 음

1097
00:48:44,339 --> 00:48:47,160
그들은 반드시

1098
00:48:47,160 --> 00:48:49,260
음 더 나은 것은 아니지만 경쟁했습니다. 그들은

1099
00:48:49,260 --> 00:48:50,819
같은 수준이었습니다

1100
00:48:50,819 --> 00:48:55,560
음 하지만  또한 uh 하지 않았다

1101
00:48:55,560 --> 00:48:58,500
uh 데이터베이스 중 하나에서 그들의

1102
00:48:58,500 --> 00:49:04,440
데이터 세트 그러나 그것은 어 비교의

1103
00:49:04,440 --> 00:49:06,960
성능을

1104
00:49:06,960 --> 00:49:10,200
주요 절대 오류로 비교했지만 uh

1105
00:49:10,200 --> 00:49:13,200
암 결과를 비교 uh에서 음 음

1106
00:49:13,200 --> 00:49:13,920


1107
00:49:13,920 --> 00:49:15,359


1108
00:49:15,359 --> 00:49:17,339


1109
00:49:17,339 --> 00:49:19,880
죄송합니다

1110
00:49:25,319 --> 00:49:28,260
uh 크기에서

1111
00:49:28,260 --> 00:49:31,880
우리가 Cairns에서 얻은 새로운 네트워크의

1112
00:49:31,880 --> 00:49:35,160
경우 우리는 우리 구조가

1113
00:49:35,160 --> 00:49:37,380
음 희박해서

1114
00:49:37,380 --> 00:49:39,480
성능이 어 따라서

1115
00:49:39,480 --> 00:49:42,420
및 시험과 경쟁하고 있었지만 구조

1116
00:49:42,420 --> 00:49:45,420
도 개미와 비교되었습니다.

1117
00:49:45,420 --> 00:49:49,800


1118
00:49:49,800 --> 00:49:52,740


1119
00:49:52,740 --> 00:49:55,859
우리가 시험에서 얻은 구조의 크기 기억 시험은

1120
00:49:55,859 --> 00:49:57,960
음 유전 기반 의미 즉 구조 시작

1121
00:49:57,960 --> 00:50:00,000


1122
00:50:00,000 --> 00:50:01,740
최소 구조 요소를 사용하여 구조 최적화 프로세스

1123
00:50:01,740 --> 00:50:03,599


1124
00:50:03,599 --> 00:50:06,060
음 그러나

1125
00:50:06,060 --> 00:50:08,480
로컬 Minimus

1126
00:50:08,480 --> 00:50:10,800
트랩 트랩

1127
00:50:10,800 --> 00:50:14,160
음과 시제에 취약했습니다.  이 문제에 적합하지 않지만

1128
00:50:14,160 --> 00:50:17,099
우리에게

1129
00:50:17,099 --> 00:50:19,740
음 작은 구조와

1130
00:50:19,740 --> 00:50:21,420


1131
00:50:21,420 --> 00:50:25,020
다른 메시지 검사기와 경쟁하는 성능을 제공하므로

1132
00:50:28,680 --> 00:50:32,579
암의 장점은 개미에

1133
00:50:32,579 --> 00:50:35,700
비해 언밸런스 공간이 있다는 것입니다

1134
00:50:35,700 --> 00:50:37,079


1135
00:50:37,079 --> 00:50:40,020
음 결과 결과 비교 어

1136
00:50:40,020 --> 00:50:42,900
결과  나왔던 것은

1137
00:50:42,900 --> 00:50:45,599
개미와 시험 하이퍼 매개변수에 비해 좋았습니다.

1138
00:50:45,599 --> 00:50:47,760
조정 가능한 하이퍼 매개변수는

1139
00:50:47,760 --> 00:50:50,520
시험 개미에서 이들의 절반이며 음

1140
00:50:50,520 --> 00:50:53,220
또한 간접적으로

1141
00:50:53,220 --> 00:50:56,040
신경 토폴로지를 3D 검색 공간에 인코딩하므로

1142
00:50:56,040 --> 00:50:57,720
이것이 그 중 하나일

1143
00:50:57,720 --> 00:51:00,960
수 있습니다.

1144
00:51:00,960 --> 00:51:04,220


1145
00:51:04,380 --> 00:51:07,440
음 지금까지 목표와 캔은

1146
00:51:07,440 --> 00:51:08,880


1147
00:51:08,880 --> 00:51:11,839


1148
00:51:11,839 --> 00:51:14,940


1149
00:51:14,940 --> 00:51:16,380


1150
00:51:16,380 --> 00:51:19,859


1151
00:51:19,859 --> 00:51:21,780
최적화

1152
00:51:21,780 --> 00:51:24,079
과정이나 진화 과정에서 신경망의 시냅스 매개변수를 최적화하지 않았음을 의미하는 뉴럴 골드 아키텍처 검색을 적용한 솔루션입니다.

1153
00:51:24,079 --> 00:51:25,680


1154
00:51:25,680 --> 00:51:28,559


1155
00:51:28,559 --> 00:51:31,440


1156
00:51:31,440 --> 00:51:34,680
또한 신경망을 훈련시키거나

1157
00:51:34,680 --> 00:51:37,920
시냅스 가중치를 최적화하기 위해 어

1158
00:51:37,920 --> 00:51:39,420


1159
00:51:39,420 --> 00:51:42,660
최적화 프로세스 동안 신경망 구조의 가중치 구조

1160
00:51:42,660 --> 00:51:45,000
최적화 프로세스 그래서

1161
00:51:45,000 --> 00:51:47,280
우리는 검색 공간에 네 번째 차원을 추가했습니다.

1162
00:51:47,280 --> 00:51:48,920


1163
00:51:48,920 --> 00:51:51,960


1164
00:51:51,960 --> 00:51:54,420
시냅스 매개변수의 가중치

1165
00:51:54,420 --> 00:52:00,740
음 그 맵에서 이 터미널은

1166
00:52:00,740 --> 00:52:03,440
새로운 차원에 있습니다

1167
00:52:03,440 --> 00:52:07,380


1168
00:52:07,380 --> 00:52:10,200


1169
00:52:10,200 --> 00:52:12,380


1170
00:52:12,380 --> 00:52:15,540


1171
00:52:15,540 --> 00:52:18,839


1172
00:52:18,839 --> 00:52:21,900
음 그들이

1173
00:52:21,900 --> 00:52:23,819
우리에게

1174
00:52:23,819 --> 00:52:25,500
더 나은 성능을 제공할 수 있도록 스스로 적응합니다

1175
00:52:25,500 --> 00:52:28,020
음 우리는

1176
00:52:28,020 --> 00:52:29,760


1177
00:52:29,760 --> 00:52:32,819
그들이 이전에 가지고 있던 감지 반경과 같은 특성의 동작을 변경하기를 원합니다

1178
00:52:32,819 --> 00:52:35,579
예를 들어

1179
00:52:35,579 --> 00:52:38,220
반복을 통해 변경할 수 있는 변수가 될 수 있습니다.

1180
00:52:38,220 --> 00:52:40,380
장식 음

1181
00:52:40,380 --> 00:52:43,140
각 끝은 그들의 uh 이러한 특성을 변경할 수 있습니다

1182
00:52:43,140 --> 00:52:47,339
uh 그들이

1183
00:52:47,339 --> 00:52:49,040


1184
00:52:49,040 --> 00:52:52,079


1185
00:52:52,079 --> 00:52:55,460
생성하는 신경망의 성능을 기반으로 진화가 진행됨에 따라

1186
00:53:00,920 --> 00:53:05,339
um 이렇게 하는 이점은

1187
00:53:05,339 --> 00:53:08,220
역

1188
00:53:08,220 --> 00:53:10,559
전파 프로세스를 제거했다는 것입니다.  진화 과정

1189
00:53:10,559 --> 00:53:13,260
에서 가장 비용이 많이 드는 부분을 컴파일

1190
00:53:13,260 --> 00:53:15,359
하고 프로에서

1191
00:53:15,359 --> 00:53:18,000
지금까지 시험에서 사용하는 방법을 사용하고 음

1192
00:53:18,000 --> 00:53:21,119


1193
00:53:21,119 --> 00:53:22,980
그래서 그 전파가

1194
00:53:22,980 --> 00:53:26,819
우리에게 훨씬 더 빠른

1195
00:53:26,819 --> 00:53:30,079
혁명 과정을 주도록 제거하는

1196
00:53:30,300 --> 00:53:32,640
것도 있습니다.

1197
00:53:32,640 --> 00:53:34,920


1198
00:53:34,920 --> 00:53:36,839
먼저 오른쪽의 그래프에 대해 논의하겠습니다. 이 그래프는

1199
00:53:36,839 --> 00:53:39,240


1200
00:53:39,240 --> 00:53:41,339


1201
00:53:41,339 --> 00:53:42,839
음

1202
00:53:42,839 --> 00:53:45,720
역전파 무료 암에서 얻은 결과의 의미 있는 오류에 대해 논의하고 4

1203
00:53:45,720 --> 00:53:48,359
차원 캔을

1204
00:53:48,359 --> 00:53:50,339
역전파 캔

1205
00:53:50,339 --> 00:53:52,319
과 음 종료하는 일반적인 확률과 비교하여

1206
00:53:52,319 --> 00:53:54,540
음 그래서  결과는

1207
00:53:54,540 --> 00:53:58,200
특정 데이터베이스에서

1208
00:53:58,200 --> 00:54:00,900
번식이 가능하고

1209
00:54:00,900 --> 00:54:03,059
번식이 자유로운 기회가

1210
00:54:03,059 --> 00:54:06,059
상당히 유사한 작업을 수행했음을 보여 주었지만

1211
00:54:06,059 --> 00:54:08,339
둘 다 이

1212
00:54:08,339 --> 00:54:11,160
특정 데이터베이스에서 개미보다 낫지

1213
00:54:11,160 --> 00:54:13,800
만 실제로 주요 기여

1214
00:54:13,800 --> 00:54:16,440
또는 주요  사례 적용의 이점은

1215
00:54:16,440 --> 00:54:19,619
왼쪽 그래프에 표시됩니다.

1216
00:54:19,619 --> 00:54:23,099


1217
00:54:23,099 --> 00:54:25,140
결과를 비교하면

1218
00:54:25,140 --> 00:54:28,200
진화 시간을

1219
00:54:28,200 --> 00:54:31,020
기반으로 한 진화 시간을 기준으로 결과를 비교하면

1220
00:54:31,020 --> 00:54:32,280


1221
00:54:32,280 --> 00:54:35,520
음 따라서 많은 시간이 걸렸다는 것을 알 수 있습니다.

1222
00:54:35,520 --> 00:54:39,660


1223
00:54:39,660 --> 00:54:44,220
캔의 역전파 버전보다 훨씬 적은 시간입니다. 음

1224
00:54:44,220 --> 00:54:46,319


1225
00:54:46,319 --> 00:54:47,579


1226
00:54:47,579 --> 00:54:50,780
음과 암페어의 수를 사용하는 개미

1227
00:54:51,260 --> 00:54:55,380
도 이 그래프는 일반 캔과 비교하여 얼마나 빠르고 그

1228
00:54:55,380 --> 00:54:57,900
전파가 사전 캔스인지 보여줍니다

1229
00:54:57,900 --> 00:55:00,359


1230
00:55:00,359 --> 00:55:04,020
음 우리는 이 그림에서 곡선을 볼 수 있습니다.

1231
00:55:04,020 --> 00:55:08,760
데이터 라인은

1232
00:55:08,760 --> 00:55:11,280
역전파 무료 캔과

1233
00:55:11,280 --> 00:55:14,099
캔이 신경망을 준비하거나 생성하는 데 걸린 시간을 보여줍니다.

1234
00:55:14,099 --> 00:55:17,099
또는 우리는

1235
00:55:17,099 --> 00:55:19,920
전파 무료 캔이 정상적인 경우인 Mac 전파 암에 비해 신경망을 준비하거나 생성하는 데 더 많은 시간이 걸렸다는 것을 알 수 있습니다.

1236
00:55:19,920 --> 00:55:22,500


1237
00:55:22,500 --> 00:55:24,599


1238
00:55:24,599 --> 00:55:26,520
그리고

1239
00:55:26,520 --> 00:55:28,800
그것은 4차원이 있기 때문에

1240
00:55:28,800 --> 00:55:31,619


1241
00:55:31,619 --> 00:55:33,780
반복을 통해 에이전트의 끝을 회전해야 하므로 그렇게 하는 데 더 많은 시간이 필요하지만

1242
00:55:33,780 --> 00:55:35,579


1243
00:55:35,579 --> 00:55:37,559
음

1244
00:55:37,559 --> 00:55:39,480
다른 곡선은 여기 점선으로 표시된 다른 두 개의 곡선이 다음을

1245
00:55:39,480 --> 00:55:42,180


1246
00:55:42,180 --> 00:55:44,520
나타내는 선입니다.

1247
00:55:44,520 --> 00:55:47,240
두 가지 방법이

1248
00:55:47,240 --> 00:55:49,619


1249
00:55:49,619 --> 00:55:51,780
신경망을 많이 훈련하고 검증하는 데 걸린 시간이므로

1250
00:55:51,780 --> 00:55:52,800


1251
00:55:52,800 --> 00:55:55,500
Mac 전파 무료 캔은

1252
00:55:55,500 --> 00:55:57,359
신경망을 훈련할 필요가 없습니다

1253
00:55:57,359 --> 00:55:58,740


1254
00:55:58,740 --> 00:56:01,260
음 어 그 전파를 수행하지 않으므로

1255
00:56:01,260 --> 00:56:03,960
다음에서 볼 수 있습니다.

1256
00:56:03,960 --> 00:56:06,240
걸리는 시간은 암의

1257
00:56:06,240 --> 00:56:07,380


1258
00:56:07,380 --> 00:56:09,240
역전파 버전보다 훨씬 적습니다.

1259
00:56:09,240 --> 00:56:10,260


1260
00:56:10,260 --> 00:56:12,720
이 실선은

1261
00:56:12,720 --> 00:56:15,960
두 방법 모두에 걸리는 누적 시간을 보여줍니다.

1262
00:56:15,960 --> 00:56:18,359
물론 전파

1263
00:56:18,359 --> 00:56:20,160
전암이 암의 역전파 버전

1264
00:56:20,160 --> 00:56:21,480
보다 훨씬 적은 시간이 걸렸다는 것을 보여줍니다.

1265
00:56:21,480 --> 00:56:24,720
전파 세 캔은

1266
00:56:24,720 --> 00:56:25,920
훨씬 적은 시간이 걸렸고

1267
00:56:25,920 --> 00:56:29,880
역전파는

1268
00:56:29,880 --> 00:56:32,460
음 우리가 걱정하는 미래의 방향을 취소합니다

1269
00:56:32,460 --> 00:56:34,619


1270
00:56:34,619 --> 00:56:36,660


1271
00:56:36,660 --> 00:56:38,400
죄송합니다 우리가

1272
00:56:38,400 --> 00:56:41,579
미래 작업을 위해 고려하고 있는 요점은

1273
00:56:41,579 --> 00:56:44,579
완전한 연속 공간 그래서 음

1274
00:56:44,579 --> 00:56:45,839
당신이 본 것처럼

1275
00:56:45,839 --> 00:56:49,680
음 우리는 세 번째

1276
00:56:49,680 --> 00:56:53,579
캔에 대한 검색 공간은 순전히

1277
00:56:53,579 --> 00:56:56,460
음 어 연속적이지 않습니다. 왜냐하면 다음 시간은

1278
00:56:56,460 --> 00:56:59,520


1279
00:56:59,520 --> 00:57:01,319


1280
00:57:01,319 --> 00:57:03,240
불연속 레이어로 표현되기 때문입니다. 어 우리는 이것을 연속적인 차원 연속

1281
00:57:03,240 --> 00:57:05,640
음 레이어로 대체하고 싶습니다.  지연 어

1282
00:57:05,640 --> 00:57:09,240
rnns의 시간 지연 그러나 이것은

1283
00:57:09,240 --> 00:57:11,460


1284
00:57:11,460 --> 00:57:14,819
시간 길이의 숫자가 어

1285
00:57:14,819 --> 00:57:18,900
어떤 최적화 프로세스보다 먼저 알려져야 하기 때문에 조금 어렵습니다.

1286
00:57:18,900 --> 00:57:21,780
왜냐하면 음 우리가 전체를 매핑할 것이기 때문입니다.

1287
00:57:21,780 --> 00:57:25,260


1288
00:57:25,260 --> 00:57:29,180
시계열 어 음 시간 경과로 그런 다음

1289
00:57:29,180 --> 00:57:31,559


1290
00:57:31,559 --> 00:57:32,460


1291
00:57:32,460 --> 00:57:34,500
실행 가능하지 않은 다음 시간을 선택하므로

1292
00:57:34,500 --> 00:57:36,960
이것이 우리가 향후 작업에서

1293
00:57:36,960 --> 00:57:39,059
조사하기 위해 고려하고 있는 첫 번째 지점이고

1294
00:57:39,059 --> 00:57:42,480
두 번째는 음 이

1295
00:57:42,480 --> 00:57:45,540
발견을 조사하는 것입니다.  우리는 우리가 발견한

1296
00:57:45,540 --> 00:57:49,380


1297
00:57:49,380 --> 00:57:51,420
결과에서

1298
00:57:51,420 --> 00:57:54,059
음 개미에서

1299
00:57:54,059 --> 00:57:55,740
가장 성능이 좋은 구조에서 반복 연결이 사라지는 것을 발견했습니다.

1300
00:57:55,740 --> 00:57:58,619


1301
00:57:58,619 --> 00:58:00,540
음 그리고 우리가 가진 이론은

1302
00:58:00,540 --> 00:58:03,720
메모리 기반 세포가 이러한 연결을 대체하여

1303
00:58:03,720 --> 00:58:05,040
우리에게 정보를 제공한다는 것입니다.

1304
00:58:05,040 --> 00:58:08,040
지난 9단계에서 필요합니다.

1305
00:58:08,040 --> 00:58:11,400
그래서 그들은 연결에

1306
00:58:11,400 --> 00:58:14,040
비해 이 작업을 더 효율적으로 수행할 수 있습니다.

1307
00:58:14,040 --> 00:58:16,260
그래서 우리는 이것을 해야 합니다. 이것에 대해

1308
00:58:16,260 --> 00:58:20,640
확장하고 더 조사해야 합니다.

1309
00:58:20,640 --> 00:58:22,740
음 우리가 고려하고 싶은 마지막 사항은

1310
00:58:22,740 --> 00:58:25,980
이것이 다음 중 하나임을 의미합니다

1311
00:58:25,980 --> 00:58:27,599
우리가 원하는 가장 중요한 것은 벽에 있는 이 세 지점입니다.

1312
00:58:27,599 --> 00:58:30,480
목록의 맨 위

1313
00:58:30,480 --> 00:58:32,520
음 세 번째는

1314
00:58:32,520 --> 00:58:34,200
실제로

1315
00:58:34,200 --> 00:58:38,940
음

1316
00:58:38,940 --> 00:58:42,480
Deborah Gordon 박사의 책에서 만들어진 개념 중 하나를 고려하는 것입니다. 음

1317
00:58:42,480 --> 00:58:43,740


1318
00:58:43,740 --> 00:58:47,040
그녀가 언급한 곳에서

1319
00:58:47,040 --> 00:58:50,099
음,

1320
00:58:50,099 --> 00:58:53,400
개미의 세계에서 살아있는 유기체는

1321
00:58:53,400 --> 00:58:55,440
시대 자체가 아니라

1322
00:58:55,440 --> 00:58:57,480
식민지가 있습니다. 식민지는 유기체입니다.

1323
00:58:57,480 --> 00:58:59,640


1324
00:58:59,640 --> 00:59:03,240
음, 시작이며 성장하고 상호 작용하는

1325
00:59:03,240 --> 00:59:04,980


1326
00:59:04,980 --> 00:59:06,960
생태계의 환경과 상호 작용합니다.  그들은

1327
00:59:06,960 --> 00:59:09,359
다른 군체와 함께 있고 그들은 어느 시점에서 죽고

1328
00:59:09,359 --> 00:59:12,359
따라서 개미 자체는

1329
00:59:12,359 --> 00:59:14,339
조직화되지 않습니다. 개미는 이러한 유기체의 세포입니다.

1330
00:59:14,339 --> 00:59:17,400
군체 유기체 그래서

1331
00:59:17,400 --> 00:59:19,799
우리는 그 개념을 취하여

1332
00:59:19,799 --> 00:59:22,859
여러 군체가 함께 사는 우리의 방법에 적용하고 싶습니다.

1333
00:59:22,859 --> 00:59:26,839
병렬로

1334
00:59:26,839 --> 00:59:29,339
진화하고 서로 소통하여

1335
00:59:29,339 --> 00:59:32,339
우리와 우리는

1336
00:59:32,339 --> 00:59:34,740
이것이 우리에게 더 나은 성능을 제공하는지 확인하고 싶지만

1337
00:59:34,740 --> 00:59:36,480
결국 우리는 우리가 시도하는 솔루션에서 자연을 모방하려고 노력하고 있기 때문입니다.

1338
00:59:36,480 --> 00:59:39,540


1339
00:59:39,540 --> 00:59:41,040


1340
00:59:41,040 --> 00:59:43,520


1341
00:59:44,520 --> 00:59:46,500
음 조사해봐 그럼 이것으로 음

1342
00:59:46,500 --> 00:59:49,140
내 발표는 끝났고

1343
00:59:49,140 --> 00:59:52,279
질문이 있다면

1344
00:59:53,819 --> 00:59:56,059
외국인 굉장 와우 정말

1345
00:59:56,059 --> 00:59:58,319


1346
00:59:58,319 --> 01:00:00,299
멋진 발표는

1347
01:00:00,299 --> 01:00:03,299
어때 Travis와 Alexander

1348
01:00:03,299 --> 01:00:04,799
둘 중 먼저 가고 싶은 사람은

1349
01:00:04,799 --> 01:00:06,900
자유롭게 소개

1350
01:00:06,900 --> 01:00:09,359
와 기본  당신이

1351
01:00:09,359 --> 01:00:11,540


1352
01:00:16,559 --> 01:00:18,780
괜찮다는 말을 할 수 있습니다. 더할 말이 많지 않습니다. 돌아 다니며

1353
01:00:18,780 --> 01:00:20,460


1354
01:00:20,460 --> 01:00:23,579
꽤 잘한 것 같습니다.

1355
01:00:23,579 --> 01:00:25,680
작업의 핵심 부분을 검토하는 것을 알고 있습니다

1356
01:00:25,680 --> 01:00:27,960
음 저는 Alex rorbia입니다.  저는

1357
01:00:27,960 --> 01:00:31,260


1358
01:00:31,260 --> 01:00:33,240


1359
01:00:33,240 --> 01:00:34,980


1360
01:00:34,980 --> 01:00:37,079


1361
01:00:37,079 --> 01:00:40,020
Rochester Institute of Technology의 컴퓨터 과학 부교수이자 심리학 부교수이자 전산 신경과학 부교수이며 저는

1362
01:00:40,020 --> 01:00:42,599
많은 일을 하지만

1363
01:00:42,599 --> 01:00:44,400
주로 예측 코딩 능동적

1364
01:00:44,400 --> 01:00:47,040
추론 변형 자유 에너지를 많이 사용합니다.

1365
01:00:47,040 --> 01:00:48,059
실제로

1366
01:00:48,059 --> 01:00:51,299
이 그룹에 관심이 있는 것들 그리고 어 어 그래 그리고 이것은

1367
01:00:51,299 --> 01:00:52,680


1368
01:00:52,680 --> 01:00:54,599
나에게 특히 흥미로운 프로젝트였습니다. 왜냐하면 제 연구의 한 분야가

1369
01:00:54,599 --> 01:00:56,700


1370
01:00:56,700 --> 01:00:59,280
신경 진화 방법 또는 심지어

1371
01:00:59,280 --> 01:01:01,500
자연에서 영감을 받은 메타 휴리스틱

1372
01:01:01,500 --> 01:01:04,619
최적화에서 작업하고 있기 때문입니다.  압둘 라만(

1373
01:01:04,619 --> 01:01:06,660
Abdul

1374
01:01:06,660 --> 01:01:09,839
Rahman)이 RIT에서 박사 과정을 밟고 있을 때 그와 함께 일한 기쁨은 우리가

1375
01:01:09,839 --> 01:01:11,880


1376
01:01:11,880 --> 01:01:14,460
콜로니 기반

1377
01:01:14,460 --> 01:01:16,319
최적화 접근 방식에 대해 많은 이야기를 나눴다는 것을 알고 있습니다.

1378
01:01:16,319 --> 01:01:19,440


1379
01:01:19,440 --> 01:01:21,240


1380
01:01:21,240 --> 01:01:23,520
물리적인 개미가 어떻게 행동하는지 실제로 이해하려고 노력합니다. 그래서

1381
01:01:23,520 --> 01:01:25,920
항상 매력적이었습니다.

1382
01:01:25,920 --> 01:01:27,960
음 기술적인 부분에서 편집할 것이 많지 않습니다.

1383
01:01:27,960 --> 01:01:29,460
그가

1384
01:01:29,460 --> 01:01:31,440
모든 핵심 결과를 다루었다고 생각하고

1385
01:01:31,440 --> 01:01:33,839
제가 생각하고 싶은 유일한 것입니다.

1386
01:01:33,839 --> 01:01:36,780
실제로

1387
01:01:36,780 --> 01:01:38,880
활동적인 영아 연구소에서

1388
01:01:38,880 --> 01:01:41,880
콜로니 방법에 대한 관심과

1389
01:01:41,880 --> 01:01:43,619
특히 흥미로웠던 점을 듣고 더 매료되었습니다.

1390
01:01:43,619 --> 01:01:47,280


1391
01:01:47,280 --> 01:01:49,619


1392
01:01:49,619 --> 01:01:51,480


1393
01:01:51,480 --> 01:01:53,819
특히

1394
01:01:53,819 --> 01:01:55,980
흥미롭고 생각이 깊고

1395
01:01:55,980 --> 01:01:57,599
이것이

1396
01:01:57,599 --> 01:02:00,180
청중의 내 질문인지 모르겠다는 생각까지 들었습니다.

1397
01:02:00,180 --> 01:02:02,579
작은 개미 에이전트 또는

1398
01:02:02,579 --> 01:02:04,319


1399
01:02:04,319 --> 01:02:06,359
이전에 구축하고 설명할 캔트 에이전트는 음

1400
01:02:06,359 --> 01:02:08,520
거기에 무엇이 있는지 알 것입니다.

1401
01:02:08,520 --> 01:02:10,559


1402
01:02:10,559 --> 01:02:12,359


1403
01:02:12,359 --> 01:02:15,119
다양한 자유 에너지 양을 최적화하는 다중 에이전트 시스템처럼 보기 시작하는 방법 어 그리고

1404
01:02:15,119 --> 01:02:16,440
당신은

1405
01:02:16,440 --> 01:02:18,660
Carl의 작업과 같은 많은 것을 알고 있기 때문에 나는 그와 협력한다는 것을 의미합니다.

1406
01:02:18,660 --> 01:02:20,460


1407
01:02:20,460 --> 01:02:22,380


1408
01:02:22,380 --> 01:02:25,260
집단 지성 및 사회

1409
01:02:25,260 --> 01:02:27,119
조직에 어떤 일이 발생하는지 그리고

1410
01:02:27,119 --> 01:02:30,059
이러한 매우

1411
01:02:30,059 --> 01:02:32,339
높은 수준의 관점에서

1412
01:02:32,339 --> 01:02:34,799
세분화된 세포 활동에 이르기까지 자유 에너지를 살펴볼 수 있습니다. 그래서

1413
01:02:34,799 --> 01:02:37,740
실제로

1414
01:02:37,740 --> 01:02:39,480
Daniel과  활성 입구에 있는 다른 사람

1415
01:02:39,480 --> 01:02:41,400
이

1416
01:02:41,400 --> 01:02:43,319
특히 관심이 있고

1417
01:02:43,319 --> 01:02:45,480
기반 최적화 및 메타 휴리스틱

1418
01:02:45,480 --> 01:02:47,040
최적화에 대해 설명할 수 있는 사람이 있는지 궁금합니다.

1419
01:02:47,040 --> 01:02:48,720
하지만 자유 에너지가 무엇인지 알 수 있는 몇 가지 흥미로운 관점이 있을 수 있습니다.

1420
01:02:48,720 --> 01:02:51,599


1421
01:02:51,599 --> 01:02:53,220
개미

1422
01:02:53,220 --> 01:02:56,760
자체는 매우 단순합니다. 즉, 개미를

1423
01:02:56,760 --> 01:02:58,260
더 똑똑하게 만들었다는 뜻입니다.

1424
01:02:58,260 --> 01:02:59,940
로마인에 대해 잘 알고 있고

1425
01:02:59,940 --> 01:03:02,400


1426
01:03:02,400 --> 01:03:04,020
예를 들어 개미를 강화

1427
01:03:04,020 --> 01:03:06,240
학습 제어 시스템과 같이 만들면

1428
01:03:06,240 --> 01:03:08,280
어떨까에 대해 길게 이야기했습니다.  캔

1429
01:03:08,280 --> 01:03:11,579
자체는 시스템에 대해 어떻게 생겼는지

1430
01:03:11,579 --> 01:03:14,220
스스로 능동적 추론의 형태에 참여하고

1431
01:03:14,220 --> 01:03:16,020


1432
01:03:16,020 --> 01:03:17,940
자신의 자유 에너지를 최적화하고 있습니다.

1433
01:03:17,940 --> 01:03:20,640
그것들은 단지 재미있는 작은 사고

1434
01:03:20,640 --> 01:03:22,740
실험입니다. 저는 분명히

1435
01:03:22,740 --> 01:03:25,260
그들에 대해 작업하지 않았습니다. 어 적어도 Abdul Rahman

1436
01:03:25,260 --> 01:03:28,140


1437
01:03:28,140 --> 01:03:31,680
제 세계의 그 부분에 제가 노출된 적이 없습니다. 어 아시다시피 생체모방

1438
01:03:31,680 --> 01:03:34,140
지능에 있어서 제 의견입니다.

1439
01:03:34,140 --> 01:03:35,579
특히

1440
01:03:35,579 --> 01:03:37,920
도움이 될지는 모르겠지만 매우 일반적입니다.

1441
01:03:37,920 --> 01:03:39,900


1442
01:03:39,900 --> 01:03:42,059
inference Institute uh 그들의

1443
01:03:42,059 --> 01:03:43,799
관심과 당신은 그것이 아마도 교차하는 곳을 알고 있습니다.

1444
01:03:43,799 --> 01:03:45,780


1445
01:03:45,780 --> 01:03:47,280


1446
01:03:47,280 --> 01:03:49,559


1447
01:03:49,559 --> 01:03:52,319


1448
01:03:52,319 --> 01:03:55,079


1449
01:03:55,079 --> 01:03:57,000


1450
01:03:57,000 --> 01:03:59,359


1451
01:04:00,240 --> 01:04:02,099


1452
01:04:02,099 --> 01:04:03,200


1453
01:04:03,200 --> 01:04:05,940
여기 White Jungle에서 누군가 나를 조금 볼 수 있기를 바랍니다. 안녕하세요 저는 Travis의

1454
01:04:05,940 --> 01:04:07,920
세포입니다. 저는 RIT의 부교수이고

1455
01:04:07,920 --> 01:04:10,079


1456
01:04:10,079 --> 01:04:11,579
데이터 과학 석사 과정의 대학원 프로그램 디렉터이기도 합니다.

1457
01:04:11,579 --> 01:04:13,140


1458
01:04:13,140 --> 01:04:15,000
이 작업이나 데이터 과학에 관심이 있으신 분은 저

1459
01:04:15,000 --> 01:04:16,799
에게 이메일을 보내주세요

1460
01:04:16,799 --> 01:04:18,359
음 알다시피 저는 이 작업이

1461
01:04:18,359 --> 01:04:21,480
여러 면에서 정말 매우 흥미로웠다고 생각했기

1462
01:04:21,480 --> 01:04:23,760
때문에 많은 Dollarama가 작업하고 있었습니다

1463
01:04:23,760 --> 01:04:25,559
음 제 생각에  그것에 관한 가장 멋진 부분은

1464
01:04:25,559 --> 01:04:28,440
인기있는 신경 진화 알고리즘입니다

1465
01:04:28,440 --> 01:04:29,880


1466
01:04:29,880 --> 01:04:31,380
음 내 뒤에 나온 것은

1467
01:04:31,380 --> 01:04:35,460
hyperneat라고하며 그것은

1468
01:04:35,460 --> 01:04:37,859
신경 구조 검색의 음 불연속 검색 공간을

1469
01:04:37,859 --> 01:04:39,599
연속적인 공간으로 변환

1470
01:04:39,599 --> 01:04:40,559


1471
01:04:40,559 --> 01:04:42,299
하고 그것은 꽤

1472
01:04:42,299 --> 01:04:44,099
강력한 방법으로 나타났습니다. 이

1473
01:04:44,099 --> 01:04:46,140
버전  개미 군체 최적화의

1474
01:04:46,140 --> 01:04:48,180
새로운 것은

1475
01:04:48,180 --> 01:04:50,280
검색 공간을 연속적으로 만드는 것과 동일한 일을 하지만 제가

1476
01:04:50,280 --> 01:04:52,740
발견한 정말 멋진 점은

1477
01:04:52,740 --> 01:04:55,200


1478
01:04:55,200 --> 01:04:56,760
그래프가 있고

1479
01:04:56,760 --> 01:04:58,859
가장자리를 따라 앰프를 보내는 기존 개미 군체 최적화와 반대라는 것입니다.  그리고

1480
01:04:58,859 --> 01:05:00,839
당신은 할 수 있고 당신은

1481
01:05:00,839 --> 01:05:02,280
최선의 경로를 택하고 그 후에 그래프를 구성할 수 있습니다

1482
01:05:02,280 --> 01:05:04,200
음 여기

1483
01:05:04,200 --> 01:05:06,180
실제 세계에서 개미처럼 실제로 작동하는 대답은

1484
01:05:06,180 --> 01:05:09,180


1485
01:05:09,180 --> 01:05:11,520
A지점에서 B지점으로 뿐만 아니라

1486
01:05:11,520 --> 01:05:13,380
실제로 떨어지는 공간을 연속적으로 이동합니다.  페로몬

1487
01:05:13,380 --> 01:05:16,200
과

1488
01:05:16,200 --> 01:05:18,480
실제 세계에서 개미가 어떻게 움직이는지에 대한 실제 시뮬레이션에 더 가깝습니다. 음,

1489
01:05:18,480 --> 01:05:19,619


1490
01:05:19,619 --> 01:05:21,540


1491
01:05:21,540 --> 01:05:24,660
예전 방법보다 더 나은 결과를 얻고 있습니다.

1492
01:05:24,660 --> 01:05:27,660


1493
01:05:27,660 --> 01:05:30,180
그것을 보고

1494
01:05:30,180 --> 01:05:32,640
매우 흥미로운 작업으로 만들었다고 생각했습니다.

1495
01:05:32,640 --> 01:05:34,819


1496
01:05:35,940 --> 01:05:37,980
음 Ahmed는

1497
01:05:37,980 --> 01:05:39,960
무엇이든 추가하고 싶거나

1498
01:05:39,960 --> 01:05:41,760
개미에 대해 생각하고 라이브 채팅에서 몇 가지 질문을 할 수 있어 기쁩니다.

1499
01:05:41,760 --> 01:05:43,380


1500
01:05:43,380 --> 01:05:45,000
오 좋은데요

1501
01:05:45,000 --> 01:05:46,680
음 생각하려고 합니다

1502
01:05:46,680 --> 01:05:49,140
우리가 말하고 싶었던 모든 것을 다루었습니다 음 음 음

1503
01:05:49,140 --> 01:05:52,020


1504
01:05:52,020 --> 01:05:55,260
알렉스가 우리가 요원에게 더 높은 지능을 제공한다고 언급한 한 가지는

1505
01:05:55,260 --> 01:05:56,819


1506
01:05:56,819 --> 01:05:59,819
우리가 논의한 것이고 나는 거의 음

1507
01:05:59,819 --> 01:06:01,619
내가 시작한 것에 대해 개방적입니다  실제로

1508
01:06:01,619 --> 01:06:02,940
그것에 대해 생각했지만 그들은 아직 아무것도 구현하지 않았지만

1509
01:06:02,940 --> 01:06:06,180


1510
01:06:06,180 --> 01:06:07,619
향후 방향에서 마지막으로 논의한 것은

1511
01:06:07,619 --> 01:06:09,540
내가 실제로

1512
01:06:09,540 --> 01:06:11,880
작업을 시작했지만 실험 환자를 시작하지 않은 것입니다.

1513
01:06:11,880 --> 01:06:13,920
예 그래서

1514
01:06:13,920 --> 01:06:16,260
우리가 뭔가를 볼 수 있기를 바랍니다.

1515
01:06:16,260 --> 01:06:18,380
그

1516
01:06:18,660 --> 01:06:21,780
굉장한 것에는 갈 수 있는 방법이 많고 순수한 에이전트 스티그

1517
01:06:21,780 --> 01:06:23,880


1518
01:06:23,880 --> 01:06:25,740


1519
01:06:25,740 --> 01:06:29,160
머지

1520
01:06:29,160 --> 01:06:32,099
상호 작용 또는 다중 에이전트와 같은 대화형 설정에서와 같은 근본적인 질문 중 하나가 아니지만 궁극적으로

1521
01:06:32,099 --> 01:06:34,319


1522
01:06:34,319 --> 01:06:36,480
읽기 및 쓰기와 같은 여러 스티그마 G를 통해 중재됩니다.

1523
01:06:36,480 --> 01:06:38,819
오류 수정 코드 그래서 그

1524
01:06:38,819 --> 01:06:41,339
통신 설정에서

1525
01:06:41,339 --> 01:06:43,819
음 나는 이전에 멀티 에이징에 접근했던 작업이

1526
01:06:43,819 --> 01:06:46,700
여러 차원을 따라 일반화되는 것처럼 느꼈고

1527
01:06:46,700 --> 01:06:50,220


1528
01:06:50,220 --> 01:06:51,900


1529
01:06:51,900 --> 01:06:54,420
연속

1530
01:06:54,420 --> 01:06:56,819
시간 기능 및 기타 여러

1531
01:06:56,819 --> 01:06:58,859
기능과 같은 종류의 유연성이 없었습니다.

1532
01:06:58,859 --> 01:07:00,980


1533
01:07:01,079 --> 01:07:02,880
개미

1534
01:07:02,880 --> 01:07:04,079
자신에게

1535
01:07:04,079 --> 01:07:07,559
음 저는 애리조나의 미국 남서부에서 개미와 함께 5번의 여름 현장 작업을 했고

1536
01:07:07,559 --> 01:07:11,460


1537
01:07:11,460 --> 01:07:14,400
많은 먹이 활동을 관찰했습니다.

1538
01:07:14,400 --> 01:07:15,780


1539
01:07:15,780 --> 01:07:19,880


1540
01:07:19,880 --> 01:07:22,980


1541
01:07:22,980 --> 01:07:25,740


1542
01:07:25,740 --> 01:07:28,020
활동적이고

1543
01:07:28,020 --> 01:07:30,599
어 살아있을 것인데

1544
01:07:30,599 --> 01:07:33,859
왜 전반적으로 채집 유형 알고리즘을 추구했으며

1545
01:07:33,859 --> 01:07:38,700
이 수업에는 고든

1546
01:07:38,700 --> 01:07:42,420


1547
01:07:42,420 --> 01:07:45,299


1548
01:07:45,299 --> 01:07:47,280
교수가 개미와의 만남에서 강조한 직접 에이전트 접촉과의 상호작용 기반 방법이 포함되어 있습니까?

1549
01:07:47,280 --> 01:07:50,000


1550
01:07:50,280 --> 01:07:54,119


1551
01:07:54,119 --> 01:07:56,220
저는

1552
01:07:56,220 --> 01:07:58,619
영국인이 이 지도에 대해

1553
01:07:58,619 --> 01:08:01,200
실제로 생각했다고 언급하기 위해 행동하는 법을 배웠습니다. 실제로 Travis는 더 간단한 신경망에 이 방법을 적용하여

1554
01:08:01,200 --> 01:08:03,420
당신의 버전에서

1555
01:08:03,420 --> 01:08:05,700
우리의 새로운 아키텍처 검색을 사용하고 양자화하는 것에 대한 아이디어를 시작했습니다.

1556
01:08:05,700 --> 01:08:08,339


1557
01:08:08,339 --> 01:08:10,200


1558
01:08:10,200 --> 01:08:12,299


1559
01:08:12,299 --> 01:08:14,160
거기에서 믿고 내 작품, 내 환자 작품 작업을 시작했습니다.

1560
01:08:14,160 --> 01:08:18,238
그래서 어 우리는

1561
01:08:18,238 --> 01:08:20,520
이 아이디어에 대해 생각했습니다. 이전 슬라이드에서 우리가

1562
01:08:20,520 --> 01:08:22,979
어와 양자화를 사용한 이유에 대해 조금 언급한 것 같지만

1563
01:08:22,979 --> 01:08:24,779


1564
01:08:24,779 --> 01:08:28,679
청중이

1565
01:08:28,679 --> 01:08:30,719
내가  맙소사 우리가

1566
01:08:30,719 --> 01:08:33,238
이 아이디어에 대해 생각한 이유는

1567
01:08:33,238 --> 01:08:36,620
음 임의화가 어 그래프로 적용되었기 때문입니다.

1568
01:08:36,620 --> 01:08:39,779
이것은 어 그래프 최적화

1569
01:08:39,779 --> 01:08:43,679
솔루션이고 우리는 비즈니스

1570
01:08:43,679 --> 01:08:45,600
에 있기 때문에 네트워크가

1571
01:08:45,600 --> 01:08:47,339


1572
01:08:47,339 --> 01:08:50,219
방향이 지정되어 있으므로 방향 부여 보조금이 아닌 이유가 무엇인지 생각했습니다.

1573
01:08:50,219 --> 01:08:52,799


1574
01:08:52,799 --> 01:08:54,420
정보의 흐름이 한 방향에서

1575
01:08:54,420 --> 01:08:56,040
다른 방향으로 이동하기 때문에 방향이 지정될 수 있지만

1576
01:08:56,040 --> 01:08:57,719


1577
01:08:57,719 --> 01:09:01,859
주소와 연결된 노드이기 때문에 그래프도 표시되며 궁극적인

1578
01:09:01,859 --> 01:09:04,859
목표 또는 목표는 상태 요소를

1579
01:09:04,859 --> 01:09:06,779
제거하고 추가하여 구조를 최적화하는 것입니다.

1580
01:09:06,779 --> 01:09:08,580
우리에게

1581
01:09:08,580 --> 01:09:10,080
더 나은 성능을 제공합니다 굉장합니다

1582
01:09:10,080 --> 01:09:11,160


1583
01:09:11,160 --> 01:09:14,040
그리고

1584
01:09:14,040 --> 01:09:15,839
Gordon 교수와 다른 사람들이

1585
01:09:15,839 --> 01:09:18,960


1586
01:09:18,960 --> 01:09:20,219


1587
01:09:20,219 --> 01:09:21,779
컴퓨터 과학과 수학 및

1588
01:09:21,779 --> 01:09:24,238
분석 공식 사이의 양방향 어 학습 관계에 대해 이야기 한 한 가지 방법은

1589
01:09:24,238 --> 01:09:26,520
현장 작업과 실제 행동이기

1590
01:09:26,520 --> 01:09:29,219
때문입니다.  수천 종의 개미들이

1591
01:09:29,219 --> 01:09:33,238


1592
01:09:33,238 --> 01:09:35,939
다양한

1593
01:09:35,939 --> 01:09:38,339
패턴의 규칙성을 지닌 거대한 범위의 생태계 속에서 일하고 있습니다. 이 모든

1594
01:09:38,339 --> 01:09:40,020
다양한 자원 분포와 먹이

1595
01:09:40,020 --> 01:09:42,420
찾아다니는 것이 얼마나 일반적인지 놀랍지만,

1596
01:09:42,420 --> 01:09:44,219
또한 측면

1597
01:09:44,219 --> 01:09:46,319
에서 발생해야 하는 기능 중 하나일 뿐입니다.  더

1598
01:09:46,319 --> 01:09:47,460
빠른

1599
01:09:47,460 --> 01:09:51,238
프로세스에 조직을 할당하는 것과 같은 더 느린 프로세스와 같은 것,

1600
01:09:51,238 --> 01:09:53,880
심지어

1601
01:09:53,880 --> 01:09:56,219
알람 페로몬에 대한 유사한 응답과 같은 것이므로 이

1602
01:09:56,219 --> 01:09:59,100
알고리즘의 한 클래스는

1603
01:09:59,100 --> 01:10:02,400
시야에서 명확하게 확장되는 것과 같습니다.

1604
01:10:02,400 --> 01:10:04,800
궁극적으로 이러한 채집

1605
01:10:04,800 --> 01:10:08,100
알고리즘 중 일부는 법 집행관입니다.

1606
01:10:08,100 --> 01:10:09,420
그래서

1607
01:10:09,420 --> 01:10:11,100


1608
01:10:11,100 --> 01:10:14,160
긍정적인 페로몬 하나를 남기거나 그 때 떠나는 아이디어도 있지만

1609
01:10:14,160 --> 01:10:15,600


1610
01:10:15,600 --> 01:10:17,400
시간 여행 페로몬 무손실 인식처럼 개미가 할 수 없는 모델이 할 수 있는 일도 있습니다.

1611
01:10:17,400 --> 01:10:21,000


1612
01:10:21,000 --> 01:10:24,060


1613
01:10:24,060 --> 01:10:25,980


1614
01:10:25,980 --> 01:10:28,380
분자의 그리고

1615
01:10:28,380 --> 01:10:31,140
음 이제 그들은 행동 규모에서

1616
01:10:31,140 --> 01:10:34,260


1617
01:10:34,260 --> 01:10:36,420
변화하는 자유 에너지를 가진 한 세대 내에서

1618
01:10:36,420 --> 01:10:38,159


1619
01:10:38,159 --> 01:10:39,360


1620
01:10:39,360 --> 01:10:42,540


1621
01:10:42,540 --> 01:10:43,739


1622
01:10:43,739 --> 01:10:46,320
활성 에이전트로서 그들의 경로를 지속하고 있습니다.

1623
01:10:46,320 --> 01:10:48,360


1624
01:10:48,360 --> 01:10:51,000
슬래시 구현을 설명하는 두 가지 방법과 비슷합니다.

1625
01:10:51,000 --> 01:10:53,460


1626
01:10:53,460 --> 01:10:54,900
능동적

1627
01:10:54,900 --> 01:10:57,960
추론이 작동하는 위치 또는

1628
01:10:57,960 --> 01:11:00,719


1629
01:11:00,719 --> 01:11:02,940
신경망 기반 접근 방식과 능동적 추론 간의 궁극적인 유사점과 차이점을 어떻게 보는지에 대한 귀하의 생각을 듣고 싶습니다.

1630
01:11:02,940 --> 01:11:05,340
추론 기반

1631
01:11:05,340 --> 01:11:08,640
접근 방식은 상호보완적 중첩과 동일합니다.

1632
01:11:08,640 --> 01:11:11,640


1633
01:11:12,360 --> 01:11:16,280
여러분이 이것을 고수하고 싶습니다. 솔직히

1634
01:11:16,560 --> 01:11:17,940
알렉스 질문에 더 가깝다고 생각합니다.

1635
01:11:17,940 --> 01:11:21,080


1636
01:11:22,340 --> 01:11:26,100
예,

1637
01:11:26,100 --> 01:11:27,600
능동적 추론을 유지하고 싶다면 Travis가 가고 있다고 생각합니다.

1638
01:11:27,600 --> 01:11:28,980


1639
01:11:28,980 --> 01:11:30,719


1640
01:11:30,719 --> 01:11:33,900


1641
01:11:33,900 --> 01:11:36,540
Dan Colony

1642
01:11:36,540 --> 01:11:39,360
최적화를 좀 더 글로벌한 관점에서 볼 수 있기 때문에 실제 및 Colony 세부 사항과 같은 매우 세부적인 내용을 알고 싶을 때 태그를 추가해야 합니다.

1643
01:11:39,360 --> 01:11:41,520


1644
01:11:41,520 --> 01:11:44,760
명확하게 하기 위해 이 특정 작업을 의미합니다.

1645
01:11:44,760 --> 01:11:46,440
나는 숫양의 길도

1646
01:11:46,440 --> 01:11:48,480


1647
01:11:48,480 --> 01:11:50,699
당신의 질문에 완전히 눈이 멀지 않도록 할 것입니다 Daniel 비록

1648
01:11:50,699 --> 01:11:53,100
이름이 연구소 자체에 있지만 어 이것은

1649
01:11:53,100 --> 01:11:55,560
적극적인 추론 작업이 아니므로 당신이 지적한 것처럼

1650
01:11:55,560 --> 01:11:57,420
분명히 있지만 다시 알고 있습니다.

1651
01:11:57,420 --> 01:11:59,580


1652
01:11:59,580 --> 01:12:01,620
예를 들어

1653
01:12:01,620 --> 01:12:03,600
개미가 탐색을 수행할 때

1654
01:12:03,600 --> 01:12:05,460


1655
01:12:05,460 --> 01:12:07,199
반복되는 네트워크에 대해 생각해 봅시다. 그리고 그들은

1656
01:12:07,199 --> 01:12:10,340


1657
01:12:10,340 --> 01:12:13,560


1658
01:12:13,560 --> 01:12:15,540
페로몬

1659
01:12:15,540 --> 01:12:17,940
트레일을 따라 반복하면서 어떤 노드와 상부 구조를 올바르게 설명하는지 파악하고 있습니다.  내가 반복적으로 연결하려는 노드가 무엇인지 파악하고 순방향

1660
01:12:17,940 --> 01:12:20,100


1661
01:12:20,100 --> 01:12:23,400
연결 건너뛰기 연결 등 음

1662
01:12:23,400 --> 01:12:25,380
당신은 괜찮다고 말할 것입니다.

1663
01:12:25,380 --> 01:12:27,000


1664
01:12:27,000 --> 01:12:30,239


1665
01:12:30,239 --> 01:12:32,760


1666
01:12:32,760 --> 01:12:34,320
그런 식으로 Ramen과 Travis를 구축할 것입니다.

1667
01:12:34,320 --> 01:12:37,260
전문 용어에 의해 뒤처지지 않습니다. Epi

1668
01:12:37,260 --> 01:12:40,020
Summit은 능동적 추론을 단조합니다.

1669
01:12:40,020 --> 01:12:42,060
큰 일반 프레임워크입니다.

1670
01:12:42,060 --> 01:12:45,179
RL에 대한 생물학적 신경생물학적 과정과 같고

1671
01:12:45,179 --> 01:12:47,340
인식론은

1672
01:12:47,340 --> 01:12:49,020
Travis와 같은 종류의 불확실성을 나타냅니다.

1673
01:12:49,020 --> 01:12:51,659
나는

1674
01:12:51,659 --> 01:12:55,440
내 세계를 이해하고 싶고

1675
01:12:55,440 --> 01:12:58,080
내 세계를 더 많이 탐험할수록

1676
01:12:58,080 --> 01:13:00,420


1677
01:13:00,420 --> 01:13:02,760
덜 놀라울 것입니다. 하지만 생성 세계 모델을

1678
01:13:02,760 --> 01:13:05,460
구축할 때 정말 이상한 정보를 만나면

1679
01:13:05,460 --> 01:13:07,500
또는

1680
01:13:07,500 --> 01:13:09,600
매우 놀라운 예측 세계 모델을

1681
01:13:09,600 --> 01:13:11,640
탐구해야 할 것 같습니다.

1682
01:13:11,640 --> 01:13:14,040
음, 그래서 물론

1683
01:13:14,040 --> 01:13:15,719
개념을

1684
01:13:15,719 --> 01:13:18,600
탐색 익스플로잇 트레이드오프의 탐색 부분과 같은 것으로 압축하고 있습니다.  그것이

1685
01:13:18,600 --> 01:13:21,540


1686
01:13:21,540 --> 01:13:23,219


1687
01:13:23,219 --> 01:13:24,540
바로

1688
01:13:24,540 --> 01:13:27,000
우리가 인식적 또는 인식적 채집이라고 말할 때 의미하는 것입니다.

1689
01:13:27,000 --> 01:13:28,980
분명히 여러분이

1690
01:13:28,980 --> 01:13:31,560
알고 있는 라면

1691
01:13:31,560 --> 01:13:32,699
채집은 개미가 자신의

1692
01:13:32,699 --> 01:13:34,260
환경을 탐색하는 것이 옳은 일에 비유될 수 있습니다.

1693
01:13:34,260 --> 01:13:37,260


1694
01:13:37,260 --> 01:13:38,880


1695
01:13:38,880 --> 01:13:40,920
여기 같은 페이지에 있는 일종의

1696
01:13:40,920 --> 01:13:43,440


1697
01:13:43,440 --> 01:13:45,780
능동적 추론에 대한 일반적인 신경 기반

1698
01:13:45,780 --> 01:13:48,120
접근 방식과 이것이 어떻게 작동하는지에 대한 차이점에 대한 질문을 얻으려면 저는

1699
01:13:48,120 --> 01:13:50,219
해당 범주에 속할 것입니다. 오 저는

1700
01:13:50,219 --> 01:13:52,440
신경 모델을 구축합니다 생물학적 프로세스

1701
01:13:52,440 --> 01:13:55,080
모델 어 그것들은

1702
01:13:55,080 --> 01:13:57,900


1703
01:13:57,900 --> 01:13:59,340


1704
01:13:59,340 --> 01:14:00,960
예를 들어 역

1705
01:14:00,960 --> 01:14:03,960
전파 기반 어 부분적으로

1706
01:14:03,960 --> 01:14:06,840
관찰 가능한 마르코프 결정 프로세스를 구축할 때 내가 알고 있는 것들은 개별 수준에서 말할 수 있습니다. 어,

1707
01:14:06,840 --> 01:14:08,940


1708
01:14:08,940 --> 01:14:10,260
단일 에이전트와 같은 능동적 추론을 알고 있습니다.  보상 신호나

1709
01:14:10,260 --> 01:14:12,420


1710
01:14:12,420 --> 01:14:15,420


1711
01:14:15,420 --> 01:14:17,880


1712
01:14:17,880 --> 01:14:19,860


1713
01:14:19,860 --> 01:14:22,199


1714
01:14:22,199 --> 01:14:24,780
이전 선호도 또는 이전

1715
01:14:24,780 --> 01:14:27,000
분포와 같은 라면과 트래비스의 또 다른 전문 용어인 도구 용어와 인식적 양의 균형을 맞추려고 노력하는 이 구성을 구축하려고 합니다.  목표 상태

1716
01:14:27,000 --> 01:14:29,520
와 에이전트는 이러한

1717
01:14:29,520 --> 01:14:31,980
트레이드 오프를 처리하는 것과 비슷하지만

1718
01:14:31,980 --> 01:14:33,780
개별 에이전트 수준에서 이제 다시

1719
01:14:33,780 --> 01:14:35,699


1720
01:14:35,699 --> 01:14:37,159


1721
01:14:37,159 --> 01:14:40,739
개미 기반 접근 방식을 다른 관점에서 해석할 수 있다고 확신합니다.

1722
01:14:40,739 --> 01:14:43,260
이것은

1723
01:14:43,260 --> 01:14:45,120
최소한 Bob the 라면이 능동적 추론을 명확하게 했다는 최소한의 명시적 형식이나 연결을 가지고

1724
01:14:45,120 --> 01:14:47,280


1725
01:14:47,280 --> 01:14:49,500
있지만 아이디어는

1726
01:14:49,500 --> 01:14:51,300
이것이 능동적 추론에 대한 다중 에이전트 접근 방식과 같다는 것입니다.  거의

1727
01:14:51,300 --> 01:14:54,000


1728
01:14:54,000 --> 01:14:56,219


1729
01:14:56,219 --> 01:14:58,920
틀림없이 매우

1730
01:14:58,920 --> 01:15:01,920
간단한 모델이며 각각의 Anton은

1731
01:15:01,920 --> 01:15:04,500
본질적으로

1732
01:15:04,500 --> 01:15:06,600
알고 있는 계수와 몇 가지

1733
01:15:06,600 --> 01:15:09,300
하드 코딩된 규칙을 알고 있습니다.

1734
01:15:09,300 --> 01:15:11,280


1735
01:15:11,280 --> 01:15:13,380


1736
01:15:13,380 --> 01:15:15,179


1737
01:15:15,179 --> 01:15:17,340
상부 구조의 어떤 부분이 유용한지 그래서 저는 그것이 다르다고 말하고 싶습니다. 물론

1738
01:15:17,340 --> 01:15:19,620


1739
01:15:19,620 --> 01:15:21,780
어떤 방식으로든

1740
01:15:21,780 --> 01:15:23,580
개미를 더 복잡하게 만들고

1741
01:15:23,580 --> 01:15:26,159
이점을 잃을 수 있습니다. 저는

1742
01:15:26,159 --> 01:15:27,840
이것을 대규모로 병렬화할 수 있다고 말하려고 합니다.

1743
01:15:27,840 --> 01:15:29,640


1744
01:15:29,640 --> 01:15:33,420
예를 들어

1745
01:15:33,420 --> 01:15:36,060
실제로 발생한 많은 최적화

1746
01:15:36,060 --> 01:15:39,000
알고리즘과 콜로니 최적화에서 자연스럽다고 생각하는 핵심 강점 중 하나는

1747
01:15:39,000 --> 01:15:40,860
Abdul 라면이

1748
01:15:40,860 --> 01:15:43,800
수백 개의 CPU를 사용하고 있으며

1749
01:15:43,800 --> 01:15:45,300
이 개미를 자체 개별 프로세서에 배치할 수 있다는 것입니다.

1750
01:15:45,300 --> 01:15:47,820


1751
01:15:47,820 --> 01:15:49,739
그들이

1752
01:15:49,739 --> 01:15:51,540
정보를 교환할 때 발생하는 커뮤니케이션은

1753
01:15:51,540 --> 01:15:53,640
페로몬 트레일을 통해 알 수 있습니다.

1754
01:15:53,640 --> 01:15:55,260
간접 메커니즘이 있다는 것을 알고 있습니다.

1755
01:15:55,260 --> 01:15:57,719
촉진하기가 그리 복잡하지 않습니다.

1756
01:15:57,719 --> 01:15:59,699


1757
01:15:59,699 --> 01:16:01,679


1758
01:16:01,679 --> 01:16:04,260


1759
01:16:04,260 --> 01:16:06,659
Travis와 Travis가 여기에 추가할 수 있는 추가 최적화를 알고 있습니다.

1760
01:16:06,659 --> 01:16:08,580


1761
01:16:08,580 --> 01:16:10,860
자원 봉사 컴퓨팅을 통해 시민 과학 및 분산

1762
01:16:10,860 --> 01:16:12,659
컴퓨팅

1763
01:16:12,659 --> 01:16:14,940
과 대규모 글로벌 비동기 네트워크를

1764
01:16:14,940 --> 01:16:16,739
통해 이것을 배포할 수 있는 방법을 통해 어

1765
01:16:16,739 --> 01:16:19,199


1766
01:16:19,199 --> 01:16:22,620
적응을 상상할 수 있습니다.  개미 형태

1767
01:16:22,620 --> 01:16:24,719
죄송합니다 개미 식민지 최적화

1768
01:16:24,719 --> 01:16:27,360
접근 방식은 분산된

1769
01:16:27,360 --> 01:16:29,520
대규모 분산 버전의 능동적

1770
01:16:29,520 --> 01:16:31,440
추론과 같이 기본적으로

1771
01:16:31,440 --> 01:16:33,900
변동 자유

1772
01:16:33,900 --> 01:16:36,480
에너지를 기록해야 하며 이에 대한 인용문을 인용하겠습니다.

1773
01:16:36,480 --> 01:16:38,640


1774
01:16:38,640 --> 01:16:41,280
라면의 작업에서 내

1775
01:16:41,280 --> 01:16:43,080
말은 우리가

1776
01:16:43,080 --> 01:16:44,820
이것을 능동적

1777
01:16:44,820 --> 01:16:46,800
추론 관점에서 직접 보지 않았기 때문입니다. 각 개미는

1778
01:16:46,800 --> 01:16:48,659
자신의 변형 자유 에너지를 최적화하고 있지만

1779
01:16:48,659 --> 01:16:50,340


1780
01:16:50,340 --> 01:16:52,980
실제로는

1781
01:16:52,980 --> 01:16:55,739


1782
01:16:55,739 --> 01:16:58,199
개별 핸드 에이전트의 페로몬 트레일

1783
01:16:58,199 --> 01:16:59,520
음, 그리고 물론

1784
01:16:59,520 --> 01:17:03,120
착취 용어 또는 도구 또는

1785
01:17:03,120 --> 01:17:04,679


1786
01:17:04,679 --> 01:17:07,440


1787
01:17:07,440 --> 01:17:09,900


1788
01:17:09,900 --> 01:17:13,320
각 후보에 대한 실제 에이전트의 성능에 의해 구동되는 일종의 RL 용어를 제공하는 보상 신호가 무엇인지 알고 있습니다.

1789
01:17:13,320 --> 01:17:15,540
라면의 작업 오른쪽에 있는 에이전트는 시계열 예측을

1790
01:17:15,540 --> 01:17:16,860
수행할 때 평균 제곱 오차처럼 계산하므로

1791
01:17:16,860 --> 01:17:19,380
어떤 의미에서

1792
01:17:19,380 --> 01:17:22,080
우리는 우리가 사용하는 보상 함수를 내장하고 있으며

1793
01:17:22,080 --> 01:17:24,900


1794
01:17:24,900 --> 01:17:27,300
여기에서 활성 추론 그룹의 사람들을 위해 다시 사용합니다.  당신은

1795
01:17:27,300 --> 01:17:28,800
완전한 클래스 정리를 사용할 수 있다는 것을 알고

1796
01:17:28,800 --> 01:17:31,199
있고 당신이

1797
01:17:31,199 --> 01:17:33,120
오 잘 보상이

1798
01:17:33,120 --> 01:17:34,980
실제로 기술적으로 이전 선호라고 말하는 이전 선호도를 알고 있다는 것을 알고 있습니다

1799
01:17:34,980 --> 01:17:38,100
그것은 로그 확률과 같으므로

1800
01:17:38,100 --> 01:17:40,560
당신이 곁눈질할 수

1801
01:17:40,560 --> 01:17:43,140
있고 콜로니 최적화 그리고 나는

1802
01:17:43,140 --> 01:17:45,360
큰 이점은

1803
01:17:45,360 --> 01:17:47,100


1804
01:17:47,100 --> 01:17:49,920


1805
01:17:49,920 --> 01:17:52,679
단일 에이전트 신경 기반

1806
01:17:52,679 --> 01:17:54,000
접근 방식을 알고 있다면 실제로 그리 쉽지 않을 대규모 병렬화에서 비롯됩니다.

1807
01:17:54,000 --> 01:17:55,380
음, 구축하기에 흥미로운 장소가 될 수 있습니다.

1808
01:17:55,380 --> 01:17:57,960


1809
01:17:57,960 --> 01:17:59,400
이 시점에서 장황하게 말하지 않겠습니다.  그것이 도움이 되었는지 잘 모르겠습니다.

1810
01:17:59,400 --> 01:18:01,759


1811
01:18:02,640 --> 01:18:05,640
오늘

1812
01:18:05,640 --> 01:18:08,280


1813
01:18:08,280 --> 01:18:10,920
정보 처리 과정으로서 물리학의 Chris Fields는

1814
01:18:10,920 --> 01:18:12,860


1815
01:18:12,860 --> 01:18:15,120


1816
01:18:15,120 --> 01:18:17,520
페로몬 지각 및 증착

1817
01:18:17,520 --> 01:18:19,620
페로몬 수정 및

1818
01:18:19,620 --> 01:18:22,140
지각 감각과 같은 담요에 새겨진 고전적인 정보에 대해 이야기했습니다.

1819
01:18:22,140 --> 01:18:24,719
우리는 둥지 동료 인지 시스템과 같이 연관시킬 수 있으므로

1820
01:18:24,719 --> 01:18:27,719


1821
01:18:27,719 --> 01:18:29,400
둥지

1822
01:18:29,400 --> 01:18:32,460
동료에 대한 통과처럼 간단할 수 있습니다. 담요로 설명되는 임의의 관계가 될 수 있습니다.

1823
01:18:32,460 --> 01:18:35,159
단순 둥지

1824
01:18:35,159 --> 01:18:37,620
동료 정교한 둥지 동료 음

1825
01:18:37,620 --> 01:18:39,719
다른 수준의 시계열 모델링처럼

1826
01:18:39,719 --> 01:18:41,040


1827
01:18:41,040 --> 01:18:43,560
환경

1828
01:18:43,560 --> 01:18:46,679
시계열 모델링이 있고 그것은 단지 개미에 있고

1829
01:18:46,679 --> 01:18:48,780


1830
01:18:48,780 --> 01:18:49,920
음

1831
01:18:49,920 --> 01:18:52,739
4차원은

1832
01:18:52,739 --> 01:18:55,380
하위

1833
01:18:55,380 --> 01:18:57,780
차원의 고전적 낙인 화면에서

1834
01:18:57,780 --> 01:19:01,500
양자 정보 공간으로 이동하는 양자 회전과 같습니다.

1835
01:19:01,500 --> 01:19:03,600


1836
01:19:03,600 --> 01:19:06,000
지금은

1837
01:19:06,000 --> 01:19:08,840
양자 형식주의를 매크로에 연결하기 위한 훨씬 이전의 접근 방식에 관한 것입니다.

1838
01:19:08,840 --> 01:19:11,900


1839
01:19:11,900 --> 01:19:14,840


1840
01:19:14,840 --> 01:19:17,820


1841
01:19:17,820 --> 01:19:19,860
분자 전자

1842
01:19:19,860 --> 01:19:23,400
버블링과 같은 타당성에 기반한 신경 현상을 말하겠습니다.

1843
01:19:23,400 --> 01:19:26,940


1844
01:19:26,940 --> 01:19:29,820


1845
01:19:29,820 --> 01:19:31,260


1846
01:19:31,260 --> 01:19:33,300
물리적 정보는

1847
01:19:33,300 --> 01:19:34,679
그것의 유한성을 전달합니다.

1848
01:19:34,679 --> 01:19:37,560
양자 형식론은 다른 전자 현상에 의존하거나

1849
01:19:37,560 --> 01:19:40,140
의존하지 않고 그 자체로 유용해집니다.

1850
01:19:40,140 --> 01:19:41,580


1851
01:19:41,580 --> 01:19:44,760


1852
01:19:44,760 --> 01:19:46,560


1853
01:19:46,560 --> 01:19:48,239


1854
01:19:48,239 --> 01:19:51,000


1855
01:19:51,000 --> 01:19:53,340
또는 이 특정 항목으로 시끄러울 수

1856
01:19:53,340 --> 01:19:56,340
있지만 silico에서는

1857
01:19:56,340 --> 01:19:57,360


1858
01:19:57,360 --> 01:20:00,239
양쪽에서 재생하고 항목을

1859
01:20:00,239 --> 01:20:02,219
위아래로 확장하고 임의의 공간 위에서 이러한 메타 휴리스틱을 수행하면

1860
01:20:02,219 --> 01:20:04,739


1861
01:20:04,739 --> 01:20:07,199
학습이 정말 간단할 수 있습니다.

1862
01:20:07,199 --> 01:20:10,080
그런 다음

1863
01:20:10,080 --> 01:20:11,760
개미 군체 알고리즘이

1864
01:20:11,760 --> 01:20:14,480
궁극적으로 구현을 통해 연합되는 것처럼

1865
01:20:14,480 --> 01:20:17,820
속성은 생체 모방에 정말 유용한 후보가 됩니다.

1866
01:20:17,820 --> 01:20:20,159


1867
01:20:20,159 --> 01:20:21,300


1868
01:20:21,300 --> 01:20:22,980


1869
01:20:22,980 --> 01:20:24,500
물고기

1870
01:20:24,500 --> 01:20:27,239
와 그것들은 물론 집단

1871
01:20:27,239 --> 01:20:29,400
시스템과 집단 행동 그리고

1872
01:20:29,400 --> 01:20:31,140
이러한 모든 종류의 복잡한 시스템

1873
01:20:31,140 --> 01:20:32,100
속성은

1874
01:20:32,100 --> 01:20:33,600
해당 유형의 시스템에서 연구될 수

1875
01:20:33,600 --> 01:20:37,320
있지만 또한 낙인 G를 사용하여 적어도 분석적 자유도를 무시하고 있습니다.

1876
01:20:37,320 --> 01:20:39,000


1877
01:20:39,000 --> 01:20:40,199


1878
01:20:40,199 --> 01:20:44,580


1879
01:20:44,580 --> 01:20:46,739
양자, 고전적 정보

1880
01:20:46,739 --> 01:20:49,880
또는 틈새 수정과

1881
01:20:49,880 --> 01:20:54,120
행동 어 및 인지 모델링 모두

1882
01:20:54,120 --> 01:20:56,280
추가할 수 있습니다. 제가 생각하기 때문에

1883
01:20:56,280 --> 01:20:59,219
노드가

1884
01:20:59,219 --> 01:21:02,159
이질적이거나 알 수 없거나

1885
01:21:02,159 --> 01:21:03,719
다른 방식으로 적합하거나 설계 프로세스를 통해 고정될 수 있습니다.

1886
01:21:03,719 --> 01:21:06,239
개미 군집이

1887
01:21:06,239 --> 01:21:08,640
유연하여

1888
01:21:08,640 --> 01:21:11,460
모든 종류의 장소에서 살 수 있는 것처럼 서로 상호 작용하기 위해 이러한 모든 종류

1889
01:21:11,460 --> 01:21:13,620
의 내포된 결정을 내립니다.

1890
01:21:13,620 --> 01:21:15,480


1891
01:21:15,480 --> 01:21:17,699
그 유연성은

1892
01:21:17,699 --> 01:21:19,800
우리가 설명할 수 있는 것의 빙산의 일각과 같습니다.

1893
01:21:19,800 --> 01:21:21,900
항상

1894
01:21:21,900 --> 01:21:23,940
우리가 개미 식민지로 시도하지 않은 실제 환경이므로

1895
01:21:23,940 --> 01:21:25,380


1896
01:21:25,380 --> 01:21:27,960


1897
01:21:27,960 --> 01:21:30,540
개미 시스템의 모든 레퍼토리와 역학과 같은 전체 범위를 알 수 없지만

1898
01:21:30,540 --> 01:21:35,040


1899
01:21:35,040 --> 01:21:38,480
새로운 수학적 통계

1900
01:21:38,480 --> 01:21:40,560
분포 프레임 워크로 납치할 수 있습니다.

1901
01:21:40,560 --> 01:21:42,000


1902
01:21:42,000 --> 01:21:43,500
메타 학습 과정에서 학습 수준을 설정하고

1903
01:21:43,500 --> 01:21:47,280
거기에서 시작한 다음 음 거의 아이러니하게도 또는

1904
01:21:47,280 --> 01:21:49,560
음 개미

1905
01:21:49,560 --> 01:21:51,840
식민지 비디오

1906
01:21:51,840 --> 01:21:55,320
데이터나 이동 데이터 또는 채집

1907
01:21:55,320 --> 01:21:57,659
활동 자체에 적용할 수 있는 것과 반대일 수도 있지만

1908
01:21:57,659 --> 01:21:59,699
일종의

1909
01:21:59,699 --> 01:22:01,920
영감과

1910
01:22:01,920 --> 01:22:03,960
병렬 또는 대화로 발전하므로

1911
01:22:03,960 --> 01:22:06,659
실제 개미가 할 수 있는 균형과 같지 않거나

1912
01:22:06,659 --> 01:22:08,880


1913
01:22:08,880 --> 01:22:12,120
실제 개미가

1914
01:22:12,120 --> 01:22:13,620
이러한 특정 방식으로만 상호 작용할 수 있는 속성이 있도록 제한하거나

1915
01:22:13,620 --> 01:22:15,719
실제로 이만큼

1916
01:22:15,719 --> 01:22:18,960
많은 페로몬이 있는 것처럼 제한할 수 있습니다.  모델 비교는

1917
01:22:18,960 --> 01:22:21,840
매우 자유도가 높기 때문에

1918
01:22:21,840 --> 01:22:23,940
여러분 모두가

1919
01:22:23,940 --> 01:22:26,640
개미 군체 모델링에 대해 마음을 열고 있고

1920
01:22:26,640 --> 01:22:28,199
다중 에이전트 시뮬레이션의 도전적인 부분 중 하나는

1921
01:22:28,199 --> 01:22:30,000


1922
01:22:30,000 --> 01:22:33,000
설계 공간의 개방형과 같은 종류입니다.

1923
01:22:33,000 --> 01:22:35,699


1924
01:22:35,699 --> 01:22:37,320
때로 창의적인 아이디어조차도 당신이 발견한 것에 여전히 필요한 올바른

1925
01:22:37,320 --> 01:22:39,840
컴퓨팅 리소스를 찾는 것은 매우 어렵습니다.

1926
01:22:39,840 --> 01:22:41,940


1927
01:22:41,940 --> 01:22:43,500


1928
01:22:43,500 --> 01:22:46,560
여기 분석을 통해

1929
01:22:46,560 --> 01:22:49,080
채팅에서 Bert의 멋진 질문을 확인하고

1930
01:22:49,080 --> 01:22:52,500
싶습니다.  어

1931
01:22:52,500 --> 01:22:54,600
내가 올바른 용어를 가지고 있는지 확인하고

1932
01:22:54,600 --> 01:22:57,060
확실히 Abdullah Ramen과 Travis 당신이

1933
01:22:57,060 --> 01:22:58,440
그것을 찾고 싶을 수도 있습니다 당신이

1934
01:22:58,440 --> 01:22:59,820
담요라고 말할 때 당신은

1935
01:22:59,820 --> 01:23:03,179
Markov 담요를 언급했습니다 맞습니다 예 그래서

1936
01:23:03,179 --> 01:23:05,580
Markov 담요의 기술적 정의는

1937
01:23:05,580 --> 01:23:08,520
베이지안이있을 때입니다  여기서

1938
01:23:08,520 --> 01:23:10,080
노드는 변수이고 가장자리는 주어진 관심 노드에 대한

1939
01:23:10,080 --> 01:23:11,520
이러한 변수 간의 관계입니다.

1940
01:23:11,520 --> 01:23:14,159
우리는

1941
01:23:14,159 --> 01:23:15,659
이를 내부 상태라고 부르므로 이들은

1942
01:23:15,659 --> 01:23:16,980
세계의 기능이 아니며 세계의

1943
01:23:16,980 --> 01:23:19,260
실제 Nest mate의 일부 조직에 태그가 지정되지 않습니다.

1944
01:23:19,260 --> 01:23:20,760
이것은

1945
01:23:20,760 --> 01:23:22,500


1946
01:23:22,500 --> 01:23:24,420
우리가 기본 그래프의 모든 노드에서 취할 수 있는 관점에 태그가 지정되거나 유사한 것입니다.

1947
01:23:24,420 --> 01:23:26,520
그런 다음

1948
01:23:26,520 --> 01:23:29,880
공동 부모에서 이를 격리하는 모든 노드는

1949
01:23:29,880 --> 01:23:32,219


1950
01:23:32,219 --> 01:23:35,159
하나의 레이어 절연체와 같다는 의미에서 블랭킷으로 알려져 있습니다.

1951
01:23:35,159 --> 01:23:36,659
그것에 대한 더 많은 논의와

1952
01:23:36,659 --> 01:23:38,640
철학적 의미 및 모든

1953
01:23:38,640 --> 01:23:41,340
일반화

1954
01:23:41,340 --> 01:23:43,500
이지만 광범위하게 Markov 블랭킷은

1955
01:23:43,500 --> 01:23:45,780
우리가 주의를 기울이고 인식하는 인식과 연관시키는 인바운드 종속성

1956
01:23:45,780 --> 01:23:47,460


1957
01:23:47,460 --> 01:23:50,340
이며

1958
01:23:50,340 --> 01:23:53,520


1959
01:23:53,520 --> 01:23:55,380
우리가 유사한 행동과 연관시키는 에이전트에 대한 나가는 종속성입니다.

1960
01:23:55,380 --> 01:23:57,659


1961
01:23:57,659 --> 01:24:00,360
일부 다운스트림 포인팅 방식에 영향을 미쳤습니다.

1962
01:24:00,360 --> 01:24:02,340
감사합니다.

1963
01:24:02,340 --> 01:24:04,860
Abdul Rahman과

1964
01:24:04,860 --> 01:24:06,600
Travis가 해당 용어에 익숙하지 않을 수 있다고 생각하기 때문에

1965
01:24:06,600 --> 01:24:09,480


1966
01:24:09,480 --> 01:24:11,460
매우 활발한 추론 종류의 전문 용어를 알고 있기

1967
01:24:11,460 --> 01:24:13,560
때문에

1968
01:24:13,560 --> 01:24:15,239
그들은 물리학의 관점에서 그것을 얻었습니다.

1969
01:24:15,239 --> 01:24:18,179
감사합니다 예 예 완전히 좋은

1970
01:24:18,179 --> 01:24:20,520
점입니다. 새

1971
01:24:20,520 --> 01:24:24,960
저녁 식사에서 지금 질문을 하면

1972
01:24:24,960 --> 01:24:27,360


1973
01:24:27,360 --> 01:24:29,219
더 많은 생성 모델로 생성 모델을 해결하는 것이 매우 인상적이라고 합니다.

1974
01:24:29,219 --> 01:24:31,199


1975
01:24:31,199 --> 01:24:35,239
개미를 컨볼루션으로 대체하는 것에 대해 매우 유망한 것

1976
01:24:38,300 --> 01:24:42,000
같습니다.

1977
01:24:42,000 --> 01:24:43,860


1978
01:24:43,860 --> 01:24:47,480
다른 신경망을 최적화하는 방법을 배우는 신경망을 갖는 것과 같은 알고리즘 예 제

1979
01:24:48,239 --> 01:24:51,199
생각에 이 개념은 기계 일반에서

1980
01:24:51,199 --> 01:24:53,400
어느 시점에서 인터뷰되는 것 같지만

1981
01:24:53,400 --> 01:24:56,520
우리는 어머니처럼 모방하는

1982
01:24:56,520 --> 01:25:01,140
자연 기반 어 방법을 적용하고 싶었습니다.

1983
01:25:01,140 --> 01:25:04,260
네이처

1984
01:25:04,260 --> 01:25:08,040
는 어 아시다시피 네이처는 가장

1985
01:25:08,040 --> 01:25:10,320
효율적인 최적화 혁명 시스템입니다.

1986
01:25:10,320 --> 01:25:11,760


1987
01:25:11,760 --> 01:25:14,219


1988
01:25:14,219 --> 01:25:16,199
네이처에 기반한 방법을 암시하는 네이처에 있을 수 있는 결과를 보고 있습니다.

1989
01:25:16,199 --> 01:25:18,840
어 그들은

1990
01:25:18,840 --> 01:25:21,420
다른 어떤 방법보다 우월했고

1991
01:25:21,420 --> 01:25:22,980
우리가 얻은 결과도 있습니다.

1992
01:25:22,980 --> 01:25:25,020
방금 지적한 것은

1993
01:25:25,020 --> 01:25:27,719


1994
01:25:27,719 --> 01:25:29,580
우리의 결과

1995
01:25:29,580 --> 01:25:31,380
와 다른 방법의 이전 결과에서 우리가 매우 좋은 성과를 내고 있다는 점을 지적했기

1996
01:25:31,380 --> 01:25:32,820


1997
01:25:32,820 --> 01:25:35,520
때문에 신경 구조 연구의 경우 여기에서 약간 뛰어 들었습니다.

1998
01:25:35,520 --> 01:25:36,900


1999
01:25:36,900 --> 01:25:39,300


2000
01:25:39,300 --> 01:25:40,620


2001
01:25:40,620 --> 01:25:42,540
접근 방식에는 몇 가지 클래스가 있습니다. 하나는 건설적이므로 우리가 점점

2002
01:25:42,540 --> 01:25:44,580


2003
01:25:44,580 --> 01:25:47,580
더 큰 네트워크를 구축하고

2004
01:25:47,580 --> 01:25:49,800
네트워크 크기를 최소로 유지하여

2005
01:25:49,800 --> 01:25:52,320
최적의 솔루션을 찾으려고 노력하는 것과 같습니다. 다른

2006
01:25:52,320 --> 01:25:54,120
유형의 신경 아키텍처 검색

2007
01:25:54,120 --> 01:25:56,400
접근 방식은 다음과 같이 사용합니다.  상부 구조 그리고

2008
01:25:56,400 --> 01:25:58,500
이것은 일종의 초기

2009
01:25:58,500 --> 01:26:00,780
반복에서

2010
01:26:00,780 --> 01:26:02,699
검색 공간의 경계가 있고

2011
01:26:02,699 --> 01:26:04,139
그 경계 내에서 최적의 네트워크를 찾으려고 시도하는 것과 같습니다.

2012
01:26:04,139 --> 01:26:05,940
그래서 하나는

2013
01:26:05,940 --> 01:26:07,320
처음부터 물건을 만들고 다른

2014
01:26:07,320 --> 01:26:10,260
하나는  큰

2015
01:26:10,260 --> 01:26:12,300
네트워크를 작은 네트워크로 줄이는 것을 좋아하려고 합니다.

2016
01:26:12,300 --> 01:26:14,840
컨볼루션에 대해 질문해 보세요.

2017
01:26:14,840 --> 01:26:17,880


2018
01:26:17,880 --> 01:26:19,560
최근에 별도의 그래프 검색 공간

2019
01:26:19,560 --> 01:26:21,719


2020
01:26:21,719 --> 01:26:24,960
처럼 컨볼루션을 사용할 수 있는 그래프 기반 신경망에 대한 상당한 연구가 있었습니다.

2021
01:26:24,960 --> 01:26:27,179
그리고

2022
01:26:27,179 --> 01:26:28,920
잠재적으로 다른 그래프를 생성할 수 있습니다. 저는

2023
01:26:28,920 --> 01:26:30,239


2024
01:26:30,239 --> 01:26:32,580


2025
01:26:32,580 --> 01:26:35,580
이것을 사용하는 일부 신경 설계 아키텍처 검색 작업이 있다고 생각하지만 주된 것 중 하나는

2026
01:26:35,580 --> 01:26:37,440


2027
01:26:37,440 --> 01:26:39,420
여기 접근 방식에 대한 멋진 점은

2028
01:26:39,420 --> 01:26:40,800
그래프

2029
01:26:40,800 --> 01:26:42,659
기반 신경망이 있더라도

2030
01:26:42,659 --> 01:26:44,219


2031
01:26:44,219 --> 01:26:45,960
어떤 노드가 서로 연결되어 있는지에 따라 사물이 꺼져 있거나 켜져 있는 일종의 매트릭스로 정의된 검색 기반이 있습니다.

2032
01:26:45,960 --> 01:26:47,580


2033
01:26:47,580 --> 01:26:49,080


2034
01:26:49,080 --> 01:26:51,600


2035
01:26:51,600 --> 01:26:53,520
충분히 크지 않거나

2036
01:26:53,520 --> 01:26:55,199
올바른 검색 공간이 아닐 수 있는 고정된 검색 공간이 있습니다.  이 신경

2037
01:26:55,199 --> 01:26:57,179
구조 검색 문제의 경우

2038
01:26:57,179 --> 01:26:59,880
여기 이 방법은 모두 연속적입니다. 그래서 음 이

2039
01:26:59,880 --> 01:27:01,440
연속 검색 공간 내에서

2040
01:27:01,440 --> 01:27:03,300
알고리즘에

2041
01:27:03,300 --> 01:27:04,860
많은 자유를 제공합니다. 어쩌면 너무 많은 자유일 수도

2042
01:27:04,860 --> 01:27:07,620
있지만 음 다양한 유형을 생성하는 정말 개방형 방법입니다.

2043
01:27:07,620 --> 01:27:10,199


2044
01:27:10,199 --> 01:27:12,900


2045
01:27:12,900 --> 01:27:16,199
고정된

2046
01:27:16,199 --> 01:27:18,120
이산 상부 구조 내에서 작동하도록 알고리즘을 미리 제한하면 발견하지 못할 수도 있는 신경 구조입니다.

2047
01:27:18,120 --> 01:27:19,800


2048
01:27:19,800 --> 01:27:22,139


2049
01:27:22,139 --> 01:27:24,480


2050
01:27:24,480 --> 01:27:26,760
그 길로 가지만 거기에는

2051
01:27:26,760 --> 01:27:29,159
그래프 기반 신경 예술

2052
01:27:29,159 --> 01:27:30,659
아키텍처 검색 알고리즘이 있습니다.

2053
01:27:30,659 --> 01:27:31,860
여기서 기본적으로 아키텍처를 그래프로 가져옵니다.

2054
01:27:31,860 --> 01:27:34,260


2055
01:27:34,260 --> 01:27:36,000
신경망을 훈련하여 더 좋다고

2056
01:27:36,000 --> 01:27:37,320
생각할 수 있는 다른 그래프를 추출

2057
01:27:37,320 --> 01:27:39,559


2058
01:27:40,199 --> 01:27:42,960
하고 때로는 도움이 되는 컨볼루션을 사용합니다.

2059
01:27:42,960 --> 01:27:44,340


2060
01:27:44,340 --> 01:27:46,199
대단하네요 그래서 컨볼루션은

2061
01:27:46,199 --> 01:27:49,139
예처럼 들리고

2062
01:27:49,139 --> 01:27:52,199
개미는 이 모든 놀라운

2063
01:27:52,199 --> 01:27:54,420
패턴을 해결하고

2064
01:27:54,420 --> 01:27:56,820


2065
01:27:56,820 --> 01:27:59,280


2066
01:27:59,280 --> 01:28:02,340
우리 모두가 하는 것처럼 음

2067
01:28:02,340 --> 01:28:04,400


2068
01:28:06,060 --> 01:28:09,420
개미가 거래를 할 수 있도록 하는 것과 같은 정보 및 물리적 제한 속에서 놀라운 일을 합니다.  -

2069
01:28:09,420 --> 01:28:11,159


2070
01:28:11,159 --> 01:28:13,500


2071
01:28:13,500 --> 01:28:15,239


2072
01:28:15,239 --> 01:28:18,300
작업 공간 내에서 오프한

2073
01:28:18,300 --> 01:28:22,199
다음

2074
01:28:22,199 --> 01:28:24,840
해당 작업 공간을 일종의

2075
01:28:24,840 --> 01:28:27,199
페로몬 분포

2076
01:28:27,199 --> 01:28:31,860
또는 메타인지 개미를 만지는 것과 같게 만들고

2077
01:28:31,860 --> 01:28:34,500
본질적으로

2078
01:28:34,500 --> 01:28:37,080
음과 예를 들어 옥타브 추론을

2079
01:28:37,080 --> 01:28:38,520
미래 지향적으로 생각하고 다른 것을 통해 생각하는 것과 같은 것을 만드는 모델러로 다이얼을 갖습니다.

2080
01:28:38,520 --> 01:28:39,900


2081
01:28:39,900 --> 01:28:42,239
일종의 인지 식민지가 있을 수 있다는 마음은 인실

2082
01:28:42,239 --> 01:28:43,440


2083
01:28:43,440 --> 01:28:47,100
리코

2084
01:28:47,100 --> 01:28:49,560
전체 사고 실험 식민지를 가능하게

2085
01:28:49,560 --> 01:28:54,420
하고 데이터 기반 프로세스를 통해

2086
01:28:54,420 --> 01:28:56,820
해당 모델과의 연속성을 유지하고

2087
01:28:56,820 --> 01:28:58,739
아마도 문자 그대로

2088
01:28:58,739 --> 01:29:02,100
모델과의 연속성을 유지한 다음 경험적으로 연결됩니다.

2089
01:29:02,100 --> 01:29:04,679


2090
01:29:04,679 --> 01:29:05,219


2091
01:29:05,219 --> 01:29:08,580
에이전트 기반 모델링의 경우 매우 어렵습니다.

2092
01:29:08,580 --> 01:29:11,580


2093
01:29:11,580 --> 01:29:14,699
특정 고정 축을 설정하는 경우가 많기 때문에 하나의 메커니즘을 스윕하는 것처럼 수행하고

2094
01:29:14,699 --> 01:29:15,960


2095
01:29:15,960 --> 01:29:18,179


2096
01:29:18,179 --> 01:29:20,699


2097
01:29:20,699 --> 01:29:24,120
학습 및 내부 및 세대 간

2098
01:29:24,120 --> 01:29:26,940
및 이러한 모든 시간 효과와 같은 가능한 모든 메커니즘을 보지 않습니다.

2099
01:29:26,940 --> 01:29:30,840
이것이 다른 연구 또는 응용 분야에서 사용되는 것을 어떻게 보십니까?

2100
01:29:30,840 --> 01:29:32,460


2101
01:29:32,460 --> 01:29:35,460


2102
01:29:38,340 --> 01:29:39,719


2103
01:29:39,719 --> 01:29:44,880
와우, 우리가 생각하고 있는 주요 사용 사례는

2104
01:29:44,880 --> 01:29:46,739
새로운

2105
01:29:46,739 --> 01:29:49,260
혁신적인 아키텍처 검색이었습니다. 어

2106
01:29:49,260 --> 01:29:52,380


2107
01:29:52,380 --> 01:29:55,440
북극 검색 이외의 다른 도메인에 적용하기 위한 것입니다.

2108
01:29:55,440 --> 01:29:58,440
이해가 안 돼요 예 어 알렉스가 설명해줄 수 있을 것 같아요 저도

2109
01:29:58,440 --> 01:30:00,719


2110
01:30:00,719 --> 01:30:03,179
조금 뛰어들 수 있어요 내 말은

2111
01:30:03,179 --> 01:30:06,060
기본적으로

2112
01:30:06,060 --> 01:30:08,219
그래프를 생성해야 하고 해당 그래프에 대해

2113
01:30:08,219 --> 01:30:10,560
고정된 구조가 필요하지 않은 경우 기본적으로 이 유형의 알고리즘을 의미합니다

2114
01:30:10,560 --> 01:30:12,960
그리고 내가 그래프라고 말할 때

2115
01:30:12,960 --> 01:30:14,219
나는 노드 이미지가 있는 컴퓨터 과학 그래프와 같다는 것을 의미합니다

2116
01:30:14,219 --> 01:30:16,860


2117
01:30:16,860 --> 01:30:19,320
음 그래프 구성과 관련된 거의 모든 것입니다.

2118
01:30:19,320 --> 01:30:21,480
이러한 유형

2119
01:30:21,480 --> 01:30:23,699
의 방법은 아니요 아니요 내부적으로 작동하는 방법은

2120
01:30:23,699 --> 01:30:25,560


2121
01:30:25,560 --> 01:30:28,020
그래프로 표시될 수 있다는 것을 알고 있으며 일반적으로

2122
01:30:28,020 --> 01:30:30,000


2123
01:30:30,000 --> 01:30:32,699
정말 인기가 있기 때문에 우리는 그것을 신경망에 사용하고 있다고 생각합니다. 하지만

2124
01:30:32,699 --> 01:30:34,620
음 당신은

2125
01:30:34,620 --> 01:30:36,420


2126
01:30:36,420 --> 01:30:39,060
전통적인 어 여행 세일즈맨을 아는 것처럼 다른 다른 알고리즘이 있다는 것을 알고 있습니다.

2127
01:30:39,060 --> 01:30:40,560


2128
01:30:40,560 --> 01:30:41,880


2129
01:30:41,880 --> 01:30:43,739


2130
01:30:43,739 --> 01:30:47,040
스마트한 방법으로 그래프를 생성해 봅시다. 예,

2131
01:30:47,040 --> 01:30:48,540


2132
01:30:48,540 --> 01:30:49,739
여기에서 정말 멋진 것이 무엇인지 생각하고

2133
01:30:49,739 --> 01:30:51,420
Thunder 주위를 훔치고 싶지는 않지만 다른 지점을 살펴보겠습니다. 하지만

2134
01:30:51,420 --> 01:30:52,800
미래 방향에 대한 그의 마지막 지점은

2135
01:30:52,800 --> 01:30:54,179


2136
01:30:54,179 --> 01:30:56,760
음이고 특정 버전은

2137
01:30:56,760 --> 01:30:58,440
이 개미 식민지 최적화 검색은

2138
01:30:58,440 --> 01:30:59,880
최적의 신경망을 찾기 위해 실행되고 있습니다.

2139
01:30:59,880 --> 01:31:03,480
식민지는 작동하는 고정 매개변수를 가지고

2140
01:31:03,480 --> 01:31:06,659
있지만

2141
01:31:06,659 --> 01:31:08,699
개미가 유기체가 아니라 식민지를 유기체로 생각하면 식민지를

2142
01:31:08,699 --> 01:31:10,739


2143
01:31:10,739 --> 01:31:15,659
최적화하는 방법을 최적화하는 식민지를 진화시킬 수 있습니다.

2144
01:31:15,659 --> 01:31:17,880
개미 자체가 행동하여

2145
01:31:17,880 --> 01:31:21,719
작은 의미에서 그들이 생성하는 에이전트에 대한

2146
01:31:21,719 --> 01:31:25,139


2147
01:31:25,139 --> 01:31:26,760
처방된 어 매개 변수 내에서 수행하는 작업을 진화하거나 최적화하는 진화하는 식민지를 가질

2148
01:31:26,760 --> 01:31:29,699


2149
01:31:29,699 --> 01:31:31,199
수 있도록

2150
01:31:31,199 --> 01:31:34,860
메타 정확도가 정말

2151
01:31:34,860 --> 01:31:37,199
멋집니다.  내 말은

2152
01:31:37,199 --> 01:31:40,320
앰프 동작에 대한 왜 질문에 대한 진화론적 설명은

2153
01:31:40,320 --> 01:31:42,900
오늘날 그 대답의 한 부분이

2154
01:31:42,900 --> 01:31:45,659


2155
01:31:45,659 --> 01:31:48,600
그 규칙성이나 제약 조건 하에서 살아남을 수 없는 식민지가

2156
01:31:48,600 --> 01:31:51,120
우리가 테이블에서 그것들을 닦아내는 데 오랜 시간이 걸렸기 때문에 같다는 것을 의미합니다.

2157
01:31:51,120 --> 01:31:53,219
생물학적

2158
01:31:53,219 --> 01:31:54,540
시스템은 2021년에 그런 종류의

2159
01:31:54,540 --> 01:31:56,639
다중 규모 주문을 가져야 합니다.

2160
01:31:56,639 --> 01:32:00,840
우리는 인식적 채집 시각적 주의 작업에서 수정된 활성 인프라 개미 논문을 만들었습니다.

2161
01:32:00,840 --> 01:32:03,120


2162
01:32:03,120 --> 01:32:07,139


2163
01:32:07,139 --> 01:32:07,860


2164
01:32:07,860 --> 01:32:11,580
주변을 스캔한 다음 인식적 채집과

2165
01:32:11,580 --> 01:32:14,040
관련된 매미 정책을 학습하지만

2166
01:32:14,040 --> 01:32:16,080


2167
01:32:16,080 --> 01:32:17,940
흔적을 남기지 않고

2168
01:32:17,940 --> 01:32:20,040
활성 추론 인식적

2169
01:32:20,040 --> 01:32:22,860
시각적 채집 모델을 활성 어

2170
01:32:22,860 --> 01:32:25,800
추론 설정으로 가져오기 위한 주요 수정은 설명하신 대로 페로몬 규칙을 추가하는 것이었습니다.

2171
01:32:25,800 --> 01:32:27,540


2172
01:32:27,540 --> 01:32:28,739
물론 그것이

2173
01:32:28,739 --> 01:32:30,540
유일한 페로몬 규칙은 아니지만 그것은 단지

2174
01:32:30,540 --> 01:32:32,100
우리가 일반화할 수 있는 가장 간단한 페로몬 규칙

2175
01:32:32,100 --> 01:32:34,080


2176
01:32:34,080 --> 01:32:37,800
이며

2177
01:32:37,800 --> 01:32:39,719
이러한 다중 규모

2178
01:32:39,719 --> 01:32:41,940
활성 추론 모델을 모델링하는 새로운 방법이 많이 있으므로 상호 작용을 통해 발생하는 일의 종류와 더

2179
01:32:41,940 --> 01:32:44,400
연관될 수 있는 레이어를 구성할 수 있습니다.

2180
01:32:44,400 --> 01:32:46,760


2181
01:32:46,760 --> 01:32:48,900


2182
01:32:48,900 --> 01:32:52,199
그런 다음 Mike Levin이

2183
01:32:52,199 --> 01:32:54,260


2184
01:32:54,260 --> 01:32:58,560


2185
01:32:58,560 --> 01:33:00,239


2186
01:33:00,239 --> 01:33:04,440
어떤 형태의 인지 형태의 기억 유지 구성 요소를 가진 일종의 시간 다이아몬드 시스템과 함께 보여주듯이

2187
01:33:04,440 --> 01:33:06,420


2188
01:33:06,420 --> 01:33:10,139


2189
01:33:10,139 --> 01:33:11,880
그것을 설명하는 데 사용할 수 있는 전 긴장 음 인식 또는 기관 또는 기타 속성은

2190
01:33:11,880 --> 01:33:14,699
통계적으로 순응적인

2191
01:33:14,699 --> 01:33:18,420
방식입니다.  사물을 설명하기 위해

2192
01:33:18,420 --> 01:33:20,100


2193
01:33:20,100 --> 01:33:22,920
주어진 통계

2194
01:33:22,920 --> 01:33:24,659
문제 또는 연합 컴퓨팅

2195
01:33:24,659 --> 01:33:26,820
아키텍처에 대한 다양한 구현이 있습니다. 다른 구성 요소를 능동적으로 추론하는 초기 Matlab 코드처럼 표시되는

2196
01:33:26,820 --> 01:33:29,300
순수한 매트릭스 곱셈처럼 실행하지 않는 경우일 수 있습니다.

2197
01:33:29,300 --> 01:33:32,460


2198
01:33:32,460 --> 01:33:34,560


2199
01:33:34,560 --> 01:33:36,480


2200
01:33:36,480 --> 01:33:37,920
기계 학습 시스템의 종류는 일종의

2201
01:33:37,920 --> 01:33:41,580
함께 구성될 수 있습니다. 또한

2202
01:33:41,580 --> 01:33:44,040
이러한 통신 패턴을 준수하는 것과 같은 방식

2203
01:33:44,040 --> 01:33:45,600
이지만, 음

2204
01:33:45,600 --> 01:33:48,420
우리가 여전히 설명할 수 있는 추상화 수준이 있지만

2205
01:33:48,420 --> 01:33:49,920
능동적

2206
01:33:49,920 --> 01:33:52,080
추론이 일종의

2207
01:33:52,080 --> 01:33:53,699
그것이

2208
01:33:53,699 --> 01:33:54,900
많은 유연성을 제공하는 것입니다. 그리고

2209
01:33:54,900 --> 01:33:58,080


2210
01:33:58,080 --> 01:34:00,600
당신의 배경 Alexander와

2211
01:34:00,600 --> 01:34:03,020
작업, 그리고

2212
01:34:03,020 --> 01:34:05,639


2213
01:34:05,639 --> 01:34:07,320


2214
01:34:07,320 --> 01:34:10,260
이러한 모든 다른 보기와 함께 다중 에이전트 모델링에 대한 능동적 추론 관점을 좋아하는 이러한 종류의 협업을 통해

2215
01:34:10,260 --> 01:34:11,820
적어도 상대적으로 함께 모일 수 있다는 것은 정말 멋집니다.

2216
01:34:11,820 --> 01:34:12,679


2217
01:34:12,679 --> 01:34:14,580


2218
01:34:14,580 --> 01:34:17,400
그런 다음 이

2219
01:34:17,400 --> 01:34:20,639


2220
01:34:20,639 --> 01:34:22,800
전체

2221
01:34:22,800 --> 01:34:26,760
조직 유형 또는 콜로니 유형을

2222
01:34:26,760 --> 01:34:29,280
위와 모델 내에서 생각하는 데 적용하는 것은 매우 흥미로운 상호 교환이 될 것이라고 생각합니다.

2223
01:34:29,280 --> 01:34:31,380


2224
01:34:31,380 --> 01:34:34,320
당신이 말한 것처럼 많은 자유도가 너무 높을 수 있습니다. 내 말은

2225
01:34:34,320 --> 01:34:36,300
다른 방법이 있다고 생각합니다.  제 생각에는

2226
01:34:36,300 --> 01:34:38,699
당신이 개미 비유를 어떻게 받아들이고 싶은지에 달려 있다고 생각합니다.

2227
01:34:38,699 --> 01:34:41,460
다시 한 번 아시겠지만,

2228
01:34:41,460 --> 01:34:43,620


2229
01:34:43,620 --> 01:34:45,239
당신이 다니엘을 만들고 있는 질문이나 의견 중 일부

2230
01:34:45,239 --> 01:34:47,400
와 당신에 대한 청중의 일부는 일종의 흥미로운 일입니다.

2231
01:34:47,400 --> 01:34:50,100
어, 당신이 아는 이것이 어떻게 생각하는지

2232
01:34:50,100 --> 01:34:51,780
인지적 관점에서 그것에 대해

2233
01:34:51,780 --> 01:34:53,460
제 말은 제가 인지 아키텍처에서 작업한다는 것을 의미합니다.

2234
01:34:53,460 --> 01:34:55,860
물론

2235
01:34:55,860 --> 01:34:58,679
여러분이 알고 있는 전체 단일 에이전트 또는

2236
01:34:58,679 --> 01:35:01,679
단일 엔터티에서 작업하고

2237
01:35:01,679 --> 01:35:03,960
다른 영역에서 단일 뇌를 모델링하는 것을 알고 있지만 제

2238
01:35:03,960 --> 01:35:07,440
생각에 여러분이 알고 계시다면

2239
01:35:07,440 --> 01:35:11,040
자연에서 영감을 받은 어 최적화 접근 방식은

2240
01:35:11,040 --> 01:35:13,739
Abdel Ramen이 붙들고 있는 개미 은유와 같습니다. 개미가

2241
01:35:13,739 --> 01:35:16,260


2242
01:35:16,260 --> 01:35:17,960


2243
01:35:17,960 --> 01:35:21,000


2244
01:35:21,000 --> 01:35:23,520
자신의 세계와

2245
01:35:23,520 --> 01:35:26,460
상호작용하는 방식의 원리를 그가 공식화하는 방식과 비슷합니다. 어  그런 다음

2246
01:35:26,460 --> 01:35:28,920


2247
01:35:28,920 --> 01:35:31,800
특정 개념을 단계별로 수학적으로 모델링하는 것을 알고 있습니다.

2248
01:35:31,800 --> 01:35:34,500
은유를 구부리고 잘 말하면

2249
01:35:34,500 --> 01:35:36,540
개미 식민지 은유가

2250
01:35:36,540 --> 01:35:39,900
다중 인간 에이전트 시스템에 올바르게 적용될 수 있습니까?

2251
01:35:39,900 --> 01:35:42,480


2252
01:35:42,480 --> 01:35:44,460


2253
01:35:44,460 --> 01:35:46,860
일반화

2254
01:35:46,860 --> 01:35:51,000
어 압둘라흐만이 초기 은유를 기반으로 한 물리적 생물을 아는 것 외에는

2255
01:35:51,000 --> 01:35:52,440


2256
01:35:52,440 --> 01:35:54,300
흥미로운 철학적 종류가 있습니다.

2257
01:35:54,300 --> 01:35:57,239
그런 다음

2258
01:35:57,239 --> 01:35:59,100
다중 에이전트

2259
01:35:59,100 --> 01:36:01,080
인지 시스템을 구축하는 데 어떻게 적용할 수 있는지 그리고 물론

2260
01:36:01,080 --> 01:36:03,480
Travis가 논의하고 있다고 말합니다.  당신과 당신은

2261
01:36:03,480 --> 01:36:05,820
메타인지에 대해 언급하고 있었고 당신은

2262
01:36:05,820 --> 01:36:07,380


2263
01:36:07,380 --> 01:36:09,000
개미 식민지의 개미 식민지를 생각할 수 있다는 것을 알고 있지만 개미라는 단어를 대체할 수도 있습니다.

2264
01:36:09,000 --> 01:36:11,159


2265
01:36:11,159 --> 01:36:13,260


2266
01:36:13,260 --> 01:36:15,719


2267
01:36:15,719 --> 01:36:17,760
라면의

2268
01:36:17,760 --> 01:36:20,159


2269
01:36:20,159 --> 01:36:22,440


2270
01:36:22,440 --> 01:36:24,360
맥락에서 함께 일한 개미 에이전트와 적어도 그들은 할 수 없다는 점을 다시 한 번 강조하고 싶기 때문에

2271
01:36:24,360 --> 01:36:26,280
그들이 각자 자신 안에 있지 않다는 것을 알고 있습니다.

2272
01:36:26,280 --> 01:36:29,040


2273
01:36:29,040 --> 01:36:31,739


2274
01:36:31,739 --> 01:36:34,920
생성 모델 또는 매우 매우

2275
01:36:34,920 --> 01:36:38,100
간단한 제어 시스템에는

2276
01:36:38,100 --> 01:36:39,540
각 시스템 아래에 신경망이 없습니다.

2277
01:36:39,540 --> 01:36:41,159


2278
01:36:41,159 --> 01:36:43,139


2279
01:36:43,139 --> 01:36:44,580
프레임워크 내에서 이러한 각 개미를 계산적으로 시뮬레이션해야 하기 때문에 저는 항상

2280
01:36:44,580 --> 01:36:47,280
좋은 실용적인 기계 학습 유형의

2281
01:36:47,280 --> 01:36:48,780
관점이 있다고 생각합니다.

2282
01:36:48,780 --> 01:36:50,820


2283
01:36:50,820 --> 01:36:53,040
CPU로 작업하는 것이 명백하다는 것을 알고 있다는 것을 항상 시뮬레이션하는 방법이 있다는 것을 알고 있습니다.

2284
01:36:53,040 --> 01:36:55,980


2285
01:36:55,980 --> 01:36:57,840


2286
01:36:57,840 --> 01:36:59,699
자원이 있다면 다시 컨볼루션 네트워크로 대체할 GPU 군대가 있는 것과는

2287
01:36:59,699 --> 01:37:02,159


2288
01:37:02,159 --> 01:37:03,900
다릅니다.  이 행성에 제약이

2289
01:37:03,900 --> 01:37:05,340
있지만

2290
01:37:05,340 --> 01:37:07,260


2291
01:37:07,260 --> 01:37:10,260


2292
01:37:10,260 --> 01:37:13,139
음 개미 은유에서 영감을 얻어 갈 수 있는 흥미로운 관점과 흥미로운 방향이 있다고 생각합니다.

2293
01:37:13,139 --> 01:37:15,420
페로몬의 개념을 알고

2294
01:37:15,420 --> 01:37:18,000


2295
01:37:18,000 --> 01:37:20,699
다른 실제 신호로 변환하고

2296
01:37:20,699 --> 01:37:23,100
예를 들어 여러분 사이의 통신 패턴을 알고 있습니다.

2297
01:37:23,100 --> 01:37:25,020
다른 동물 독립체나 다른

2298
01:37:25,020 --> 01:37:26,940
인간 매개체를 알고 있고 그것이 흥미로운 관점을 열어준다고 생각합니다.

2299
01:37:26,940 --> 01:37:28,920
만약

2300
01:37:28,920 --> 01:37:30,840
여러분이 계속해서 그것을

2301
01:37:30,840 --> 01:37:32,940
다시 연결하려고 한다면 여러분은 자유 에너지

2302
01:37:32,940 --> 01:37:35,340
최소화를 알고 있고 우리가 어떻게 균형을 잡고 있는지 잘 말하려고 노력합니다.

2303
01:37:35,340 --> 01:37:38,159


2304
01:37:38,159 --> 01:37:40,500
그것을 인식론과 도구로 분해할 수

2305
01:37:40,500 --> 01:37:42,480
있고 이것들이 어떻게

2306
01:37:42,480 --> 01:37:45,239
균형을 이루고 있으며

2307
01:37:45,239 --> 01:37:48,540
우리가 지정하는 이러한 물리적 프로세스는 어떻게 되는가 어

2308
01:37:48,540 --> 01:37:50,280
당신은

2309
01:37:50,280 --> 01:37:52,139
매우 흥미로운 장소인 용어의 균형을 알고 있으며

2310
01:37:52,139 --> 01:37:53,940


2311
01:37:53,940 --> 01:37:56,159
개미의 능동적 추론 버전을 알고 있다고 언급했습니다.  그것은 매혹적

2312
01:37:56,159 --> 01:37:58,739
이며 그 자체로 uh 마지막 의견은

2313
01:37:58,739 --> 01:38:01,320
다시 모델링의 정도와 사회 또는 조직을

2314
01:38:01,320 --> 01:38:03,420
모델링하는 경우 모델링하는 것이 무엇인지

2315
01:38:03,420 --> 01:38:05,639
알고 있습니다. 그것이

2316
01:38:05,639 --> 01:38:07,500
당신이 사용할 수있는 한 가지 방법입니다.

2317
01:38:07,500 --> 01:38:10,320
개미 식민지 프레임 워크를 알고 있다면

2318
01:38:10,320 --> 01:38:12,199
최적화하십시오.  또는 당신이 알고 있는 메타 휴리스틱

2319
01:38:12,199 --> 01:38:14,760
최적화 프레임워크는 당신이

2320
01:38:14,760 --> 01:38:17,820
알고 있는 시스템을 능동적 추론 종류로 알고 있는 모든

2321
01:38:17,820 --> 01:38:20,940
유형의 복잡한 다중 에이전트 시스템을 알고 있습니다.

2322
01:38:20,940 --> 01:38:22,920


2323
01:38:22,920 --> 01:38:25,620


2324
01:38:25,620 --> 01:38:27,719


2325
01:38:27,719 --> 01:38:30,120
몸에서 또는

2326
01:38:30,120 --> 01:38:32,820
기관이나 소기관을 구성하는 단위를 알고 있습니다.

2327
01:38:32,820 --> 01:38:34,560
이것을 사용하여

2328
01:38:34,560 --> 01:38:36,600


2329
01:38:36,600 --> 01:38:38,760
인간이나 동물 독립체와 같은 세분화 수준을 모델링할 수 있습니까?

2330
01:38:38,760 --> 01:38:39,900


2331
01:38:39,900 --> 01:38:41,880


2332
01:38:41,880 --> 01:38:44,340
이 은유가 어떻게

2333
01:38:44,340 --> 01:38:45,960
다양한 시간 척도와 다양한

2334
01:38:45,960 --> 01:38:48,719
수준에서 나타납니다. 어떻게 모델링하고 있는지에 대한 관점을 정확히 알고 있습니다.

2335
01:38:48,719 --> 01:38:50,520
무엇을

2336
01:38:50,520 --> 01:38:52,320
보고 있는지 무엇을 보고 있는지

2337
01:38:52,320 --> 01:38:53,940
에뮬레이트하고 싶은 그림이 무엇인지 그리고 물론 계산 비용에

2338
01:38:53,940 --> 01:38:55,560


2339
01:38:55,560 --> 01:38:57,780
대한 실질적인 고려 사항이 항상 있습니다.

2340
01:38:57,780 --> 01:39:00,420
그들은 할당하고

2341
01:39:00,420 --> 01:39:02,219
실제로 그

2342
01:39:02,219 --> 01:39:04,020
시뮬레이션을 충분히 오래 실행할 수 있습니까? 왜냐하면

2343
01:39:04,020 --> 01:39:06,600
내가

2344
01:39:06,600 --> 01:39:08,280
틀렸다면 당신이 언급한

2345
01:39:08,280 --> 01:39:10,560
실험 중 하나가 더 큰 시스템에 대한 것이라고 생각하는 실험 중 하나처럼 언급했다면 모든 라면이 나를 틀렸다고 생각하기 때문입니다.

2346
01:39:10,560 --> 01:39:12,480
물론 이것은 한 달이 걸렸습니다.

2347
01:39:12,480 --> 01:39:15,300
CPU에서 어 당신은

2348
01:39:15,300 --> 01:39:17,880
당신이

2349
01:39:17,880 --> 01:39:19,560
그것보다 더 큰 것을 원한다면 꽤 어 엄청나게 커질 수 있다는 것을 알고 있지만

2350
01:39:19,560 --> 01:39:21,659
다시 말하지만 그것은

2351
01:39:21,659 --> 01:39:23,400
당신이 태양을 시뮬레이트하기 위해 어떤 하드웨어를 가지고 있는지 아는 것에 달려 있다고 생각합니다 예 예

2352
01:39:23,400 --> 01:39:27,239
그리고 또한 어

2353
01:39:27,239 --> 01:39:29,159
고성능 컴퓨팅을 사용하는 것을 의미합니다

2354
01:39:29,159 --> 01:39:31,739
더 작은 음에 대해 항상 실현 가능한 것은 아니므로

2355
01:39:31,739 --> 01:39:34,320


2356
01:39:34,320 --> 01:39:36,239
작은 신경망과 같은 개미의 뇌를 모델링하려고 하면

2357
01:39:36,239 --> 01:39:39,300
GPU를 사용하는 것은

2358
01:39:39,300 --> 01:39:41,760
실현 가능한 솔루션이 아닐 수 있으며 Travis는 여기서

2359
01:39:41,760 --> 01:39:43,260
고성능 컴퓨팅 전문가입니다.

2360
01:39:43,260 --> 01:39:46,639
전문가 가치이지만

2361
01:39:46,639 --> 01:39:49,920
데이터를 GPU로 보내고 다시 가져오는 것은

2362
01:39:49,920 --> 01:39:52,440
시간이 많이 걸리고 리소스가 계속해서 소모될 수 있으므로

2363
01:39:52,440 --> 01:39:55,500


2364
01:39:55,500 --> 01:39:58,260


2365
01:39:58,260 --> 01:40:00,960


2366
01:40:00,960 --> 01:40:04,440
메인 메모리와 GPU 간의 통신이

2367
01:40:04,440 --> 01:40:08,880
오버헤드와 같을 것이기 때문에 해결하기보다는 시간 소모를 악화시킬 것입니다.

2368
01:40:08,880 --> 01:40:11,820


2369
01:40:11,820 --> 01:40:17,780
그러한 솔루션에서 이 GPU를 실제로 활용하는 것은 충분히 큰 문제여야 합니다. 예, 음,

2370
01:40:20,760 --> 01:40:23,040


2371
01:40:23,040 --> 01:40:25,980


2372
01:40:25,980 --> 01:40:28,639
컴퓨터 비전을 위한 초대형 언어 모델이나 대형 모델을 알고 있는 것처럼 그들은 기본적으로

2373
01:40:28,639 --> 01:40:32,100
텐서에서 많은 대규모 작업을 수행합니다.

2374
01:40:32,100 --> 01:40:33,840
다차원 행렬이

2375
01:40:33,840 --> 01:40:36,780
맞고 정말 크고 넓은 텐서가 있을 때

2376
01:40:36,780 --> 01:40:39,540


2377
01:40:39,540 --> 01:40:42,139
GPU 전체에서 작업을 정말 훌륭하게 병렬화할 수 있습니다.

2378
01:40:42,139 --> 01:40:45,659


2379
01:40:45,659 --> 01:40:47,699


2380
01:40:47,699 --> 01:40:50,400


2381
01:40:50,400 --> 01:40:52,800
Power Systems와 같이

2382
01:40:52,800 --> 01:40:55,380
대규모

2383
01:40:55,380 --> 01:40:57,360
언어 모델에 대한 입력에서 천 개 이상이 될 수 있음을

2384
01:40:57,360 --> 01:40:58,320


2385
01:40:58,320 --> 01:41:01,080
알 수 있습니다. 단어 임베딩의 단어 길이는

2386
01:41:01,080 --> 01:41:03,900
실제로 크지 않지만

2387
01:41:03,900 --> 01:41:05,880
컴퓨터

2388
01:41:05,880 --> 01:41:08,520
비전 모델로 올라가는 경우에만 입력 이미지가

2389
01:41:08,520 --> 01:41:09,960
1,500개의 픽셀이 있고

2390
01:41:09,960 --> 01:41:11,580


2391
01:41:11,580 --> 01:41:12,420


2392
01:41:12,420 --> 01:41:13,679


2393
01:41:13,679 --> 01:41:15,900


2394
01:41:15,900 --> 01:41:17,159
50에서

2395
01:41:17,159 --> 01:41:19,320
100개의 입력이 있을 수 있는 항공기 발전소의 센서 시스템으로 작업할 때 실제로 백만 개의 입력과 같은 것을 제공하며 이러한 유형으로 작업할 때

2396
01:41:19,320 --> 01:41:20,940
시계열 데이터의 경우

2397
01:41:20,940 --> 01:41:24,179
대규모 초광대 신경망이 필요하지 않습니다.

2398
01:41:24,179 --> 01:41:26,159
그런 다음

2399
01:41:26,159 --> 01:41:27,540
시간이 지남에 따라 문제를 역행해야 하는 반복성을 추가

2400
01:41:27,540 --> 01:41:28,800
하고 이와 같은 다른 작업을 수행하면

2401
01:41:28,800 --> 01:41:30,239
실제로 GPU에서 제대로 병렬화할 수 없습니다.

2402
01:41:30,239 --> 01:41:32,880
우리에게는 CPU가

2403
01:41:32,880 --> 01:41:34,440
실제로 더 효율적입니다. 압둘 라만(

2404
01:41:34,440 --> 01:41:36,179
Abdul Rahman)이

2405
01:41:36,179 --> 01:41:38,400
오래 전에 이 물건을 gpus에 넣기 위해 많은 코드를 작성했지만

2406
01:41:38,400 --> 01:41:39,900


2407
01:41:39,900 --> 01:41:42,119


2408
01:41:42,119 --> 01:41:43,679
신경망으로 수행하는 작업에 따라 상당히 느려지는 것을 발견했습니다.  GPU는 실제로 정답이 아닙니다.

2409
01:41:43,679 --> 01:41:45,060


2410
01:41:45,060 --> 01:41:46,500
하지만 이것에 대한 또 다른 멋진 점은 잠재적인

2411
01:41:46,500 --> 01:41:48,360


2412
01:41:48,360 --> 01:41:51,179
가능성이 있다는 것입니다.

2413
01:41:51,179 --> 01:41:54,179


2414
01:41:54,179 --> 01:41:55,739
기계 학습에서 언급되지 않은 큰 문제 중 하나는

2415
01:41:55,739 --> 01:41:58,260
역전파가 가장 빠르다는 것입니다.

2416
01:41:58,260 --> 01:42:00,659
우리가 알고 있는 것은 본질적으로

2417
01:42:00,659 --> 01:42:03,239
확장성이 없습니다. 더

2418
01:42:03,239 --> 01:42:05,520
큰 GPU를 사용하여 네트워크의 비트를

2419
01:42:05,520 --> 01:42:07,260
병렬로 수행하여 작업 속도를 높일 수 있지만

2420
01:42:07,260 --> 01:42:09,179


2421
01:42:09,179 --> 01:42:11,040


2422
01:42:11,040 --> 01:42:12,659
훈련 프로세스의 속도를 높이려면 더 큰 네트워크가 있는 경우에만 더 좋아집니다.

2423
01:42:12,659 --> 01:42:16,440
다른 CPU 또는 다른 GPU를 추가하고

2424
01:42:16,440 --> 01:42:18,840
백드롭을 더 빠르게 만들 수는 없습니다. 신경망을

2425
01:42:18,840 --> 01:42:20,219
통해 앞으로 및 뒤로 패스를

2426
01:42:20,219 --> 01:42:22,260
더 빠르게 만들 수 있지만 여전히

2427
01:42:22,260 --> 01:42:24,239
해야 하지만 back prop의 모든 Epoch는

2428
01:42:24,239 --> 01:42:25,980
반복적으로

2429
01:42:25,980 --> 01:42:28,380
음 우리가 있는 곳에서 이와 같은 방법입니다.

2430
01:42:28,380 --> 01:42:30,060
생성 우리는 우리가 아니다 그것은

2431
01:42:30,060 --> 01:42:31,800
백프롭 3이므로 백프롭을 사용하지 않습니다.

2432
01:42:31,800 --> 01:42:34,440
자연 영감 또는

2433
01:42:34,440 --> 01:42:36,179
다른 방법을 사용하여 수백 대의

2434
01:42:36,179 --> 01:42:37,619
컴퓨터를 사용할 수 있으며 두 배의

2435
01:42:37,619 --> 01:42:39,119
컴퓨터를 투입하고

2436
01:42:39,119 --> 01:42:41,820
두 배의 결과를 얻을 수 있습니다.  그 두 배 빠른 반면 그

2437
01:42:41,820 --> 01:42:43,679
문제는 그렇게 할 수 없습니다. 그래서

2438
01:42:43,679 --> 01:42:45,480
실제로

2439
01:42:45,480 --> 01:42:47,820
신경망을 더 빠르게 훈련시킬 수 있다고 생각한다면

2440
01:42:47,820 --> 01:42:49,920
음 그 작물은 실제로 우리가 해야 할 일에

2441
01:42:49,920 --> 01:42:52,380
대해 상당히 낮은 속도 제한이 있다는 것을 알고 있습니다.

2442
01:42:52,380 --> 01:42:54,420


2443
01:42:54,420 --> 01:42:55,320


2444
01:42:55,320 --> 01:42:56,400
사람들이 말하기 싫어하는 기계 학습 커뮤니티의 큰 문제는 다음과

2445
01:42:56,400 --> 01:42:57,239
같기 때문입니다.

2446
01:42:57,239 --> 01:43:00,239
다음 큰 Nvidia GPU를 구입하면

2447
01:43:00,239 --> 01:43:01,320
작업이 더 빨라져서

2448
01:43:01,320 --> 01:43:02,580


2449
01:43:02,580 --> 01:43:05,159
매우 흥미로울 것입니다.

2450
01:43:05,159 --> 01:43:08,100
심지어

2451
01:43:08,100 --> 01:43:10,380
그래픽 시각화와 같은 것이 물론

2452
01:43:10,380 --> 01:43:13,260
GPU가 잘 작동하는 일종의 관계를 가져옵니다. 그것은

2453
01:43:13,260 --> 01:43:15,659


2454
01:43:15,659 --> 01:43:18,840


2455
01:43:18,840 --> 01:43:22,860
대규모로 펼칠 수 있는 고전적인 프로세스

2456
01:43:22,860 --> 01:43:26,100
와 궁극적으로

2457
01:43:26,100 --> 01:43:28,139
다시 할 수 있는 둥지 동료의 인지 모델로 시간이 지남에 따라 화면이 변화하는 것과 같습니다.

2458
01:43:28,139 --> 01:43:29,880
중첩되지만 인지적인 것은

2459
01:43:29,880 --> 01:43:31,920


2460
01:43:31,920 --> 01:43:35,580


2461
01:43:35,580 --> 01:43:38,159
마음이

2462
01:43:38,159 --> 01:43:40,679
낙인을 통해서를 제외하고는 서로 영향을 미치지 않기 때문에 병렬로 수행할 수 있는 것과 같은 Quantum보다 인지적인 모델입니다.

2463
01:43:40,679 --> 01:43:43,080
그러면 CPU는 식민지의 크기에 제한을 받지만

2464
01:43:43,080 --> 01:43:44,100


2465
01:43:44,100 --> 01:43:46,440
음, 그러면 그래픽과 같은 다른 것을 사용할 수 있습니다.  예를 들어

2466
01:43:46,440 --> 01:43:48,600


2467
01:43:48,600 --> 01:43:53,580


2468
01:43:53,580 --> 01:43:55,560


2469
01:43:55,560 --> 01:43:58,619


2470
01:43:58,619 --> 01:44:01,619


2471
01:44:01,619 --> 01:44:04,080
아르헨티나 개미와 함께 캘리포니아 전역에 존재하는 규모가 어느 정도인지 철학적인 질문입니다. 예를 들어 아르헨티나 개미와

2472
01:44:04,080 --> 01:44:05,639
같은 종류의 메쉬

2473
01:44:05,639 --> 01:44:08,639
작업 인지를 어떻게 처리합니까?  시스템은

2474
01:44:08,639 --> 01:44:11,340
도토리에서 50까지 계속 진행됩니다. 이

2475
01:44:11,340 --> 01:44:12,960
모든 다른

2476
01:44:12,960 --> 01:44:15,900
절충안이 만들어지고 있으며

2477
01:44:15,900 --> 01:44:18,659
특징이 없는 사막에서와 같이 음

2478
01:44:18,659 --> 01:44:21,840
다른 길 찾기 경로 찾기

2479
01:44:21,840 --> 01:44:24,060
음 센서 통합 빛의 편광은

2480
01:44:24,060 --> 01:44:25,380
다른 인지 전략과 같습니다.

2481
01:44:25,380 --> 01:44:28,139


2482
01:44:28,139 --> 01:44:31,020


2483
01:44:31,020 --> 01:44:32,639


2484
01:44:32,639 --> 01:44:34,739
더 이상 음식을 가질 가능성이 없기 때문에 어떤 페로몬을 남기지 않고 거리를 두고 무언가를 집으로 끌고 가는 것입니다.

2485
01:44:34,739 --> 01:44:36,900
따라서 낙인 G는

2486
01:44:36,900 --> 01:44:40,199
기본적으로 최소이거나 본질적으로 전혀 없으며

2487
01:44:40,199 --> 01:44:42,239
다른 상황에서는 분포

2488
01:44:42,239 --> 01:44:45,239
에 매우 충실한 무언가를 가질 수 있습니다.

2489
01:44:45,239 --> 01:44:47,100


2490
01:44:47,100 --> 01:44:49,560


2491
01:44:49,560 --> 01:44:53,159
일종의 규범적 경로에 적합

2492
01:44:53,159 --> 01:44:55,280
하지만

2493
01:44:55,280 --> 01:44:58,380
다양한 컴퓨팅

2494
01:44:58,380 --> 01:45:00,179
아키텍처,

2495
01:45:00,179 --> 01:45:03,360
다양한 정보 아키텍처

2496
01:45:03,360 --> 01:45:06,440
및 궁극적으로 다양한 생물학적

2497
01:45:06,440 --> 01:45:09,719
구현이 생물학적 알고리즘의 다양성의 다양성을

2498
01:45:09,719 --> 01:45:12,360
다시 한 번 유익하게 살펴볼 수 있는 수준에서 발생합니다.

2499
01:45:12,360 --> 01:45:14,639


2500
01:45:14,639 --> 01:45:17,159


2501
01:45:17,159 --> 01:45:19,500


2502
01:45:19,500 --> 01:45:20,880
Gordon 교수와 다른 사람들이 매우 다양한

2503
01:45:20,880 --> 01:45:22,980
각도에서 연구했지만 때로는

2504
01:45:22,980 --> 01:45:24,780
다중 에이전트 모델이 항상

2505
01:45:24,780 --> 01:45:27,179
Square One에서 시작하는 것처럼 느껴질 수 있는 집단 행동은 몇 가지

2506
01:45:27,179 --> 01:45:29,100
개념 증명 현상을 입증한

2507
01:45:29,100 --> 01:45:31,080
다음 다음과 같은 일부로 활용됩니다.

2508
01:45:31,080 --> 01:45:33,420
더 큰 관점이지만

2509
01:45:33,420 --> 01:45:36,900
그 모델이

2510
01:45:36,900 --> 01:45:39,719
최대 성능으로 조정되었다고 주장한 것과는 다릅니다.

2511
01:45:39,719 --> 01:45:41,219
우리가 의사 결정을 내린 것과 같습니다.

2512
01:45:41,219 --> 01:45:42,600
행동을

2513
01:45:42,600 --> 01:45:43,980


2514
01:45:43,980 --> 01:45:46,260
꿀벌 의사

2515
01:45:46,260 --> 01:45:48,060
결정 또는 이와 유사한 것으로 그룹 의사 결정으로 옮길 수

2516
01:45:48,060 --> 01:45:49,260
있지만

2517
01:45:49,260 --> 01:45:51,719
여전히 큰 격차가 있습니다.

2518
01:45:51,719 --> 01:45:53,820
하지만 제 생각에 당신이 캔에 대해 설명하고 있는 것은

2519
01:45:53,820 --> 01:45:55,619


2520
01:45:55,619 --> 01:45:57,900
불가능할 수 있기 때문에 재미있지만 캔은 사용되는 방언이기도 합니다.

2521
01:45:57,900 --> 01:45:59,460


2522
01:45:59,460 --> 01:46:01,619


2523
01:46:01,619 --> 01:46:03,780


2524
01:46:03,780 --> 01:46:06,300


2525
01:46:06,300 --> 01:46:08,280


2526
01:46:08,280 --> 01:46:10,980


2527
01:46:10,980 --> 01:46:13,139


2528
01:46:13,139 --> 01:46:15,840
단어의 의미는 인지적으로

2529
01:46:15,840 --> 01:46:17,040
4차원에서 일어나는 일이기 때문에 클래식 화면에서 여러 관점을 전환할 수 있습니다.

2530
01:46:17,040 --> 01:46:19,320


2531
01:46:19,320 --> 01:46:21,659


2532
01:46:21,659 --> 01:46:24,960


2533
01:46:24,960 --> 01:46:26,219


2534
01:46:26,219 --> 01:46:28,380


2535
01:46:28,380 --> 01:46:30,179
그것은 제한된 시스템과 같으며

2536
01:46:30,179 --> 01:46:31,320


2537
01:46:31,320 --> 01:46:32,580
그런 종류의 제약이 없는 인지 시스템을 모델링하면

2538
01:46:32,580 --> 01:46:33,780


2539
01:46:33,780 --> 01:46:36,420


2540
01:46:36,420 --> 01:46:39,600


2541
01:46:39,600 --> 01:46:41,699
일종의 담요가 있는 지도로 표현됩니다.

2542
01:46:41,699 --> 01:46:43,139


2543
01:46:43,139 --> 01:46:45,420
통계 모델의 제약 당신이

2544
01:46:45,420 --> 01:46:46,880
무시하고 있는 지도 모델링의 근본적인 제약 중 하나

2545
01:46:46,880 --> 01:46:50,219


2546
01:46:50,219 --> 01:46:51,659


2547
01:46:51,659 --> 01:46:53,639
구체화된 방식으로 일이 발생하는 방식 아마도 전체 슬램 덩크와 같은

2548
01:46:53,639 --> 01:46:55,260
특정 문제에 대한 추상적인 공간이 있을 수 있지만

2549
01:46:55,260 --> 01:46:58,020


2550
01:46:58,020 --> 01:47:00,960
적어도 완전한 일반성을 위해

2551
01:47:00,960 --> 01:47:02,580
우리가 알고 있는

2552
01:47:02,580 --> 01:47:04,860
생물학적 생명체와 그들의

2553
01:47:04,860 --> 01:47:07,679
참여, 생태학적

2554
01:47:07,679 --> 01:47:08,540


2555
01:47:08,540 --> 01:47:10,980
참여와 같은 공간에 대해 하나의 행동 내에서 뿐만 아니라

2556
01:47:10,980 --> 01:47:15,420
공간이 너무 방대

2557
01:47:15,420 --> 01:47:17,159
하고 다른 시스템으로

2558
01:47:17,159 --> 01:47:19,560
다시 유인하기 위해 두 개의

2559
01:47:19,560 --> 01:47:21,300


2560
01:47:21,300 --> 01:47:22,880
다른 시스템에 걸쳐 배울 것이 너무 많습니다.  정보

2561
01:47:22,880 --> 01:47:25,860
아키텍처와 능동적 추론은

2562
01:47:25,860 --> 01:47:29,280
그 중 일부 하위 집합 유형이므로

2563
01:47:29,280 --> 01:47:31,560
멋진 작업입니다.

2564
01:47:31,560 --> 01:47:34,760
마지막 의견이 있습니까? 음

2565
01:47:37,320 --> 01:47:40,320
저는

2566
01:47:40,320 --> 01:47:42,600
친구가 이 환경에 대해 자각하고 잘 인식할 수 있는 기능을 제공하고 있습니다.

2567
01:47:42,600 --> 01:47:43,860
실제로

2568
01:47:43,860 --> 01:47:46,020
우리가 구현한 것입니다.

2569
01:47:46,020 --> 01:47:49,320
BP 무료 계정을 사용한 마지막 작업에서

2570
01:47:49,320 --> 01:47:50,760


2571
01:47:50,760 --> 01:47:53,520
음 그들은 자신의 환경에 대해 간접적으로 인식

2572
01:47:53,520 --> 01:47:55,619
하고 이론

2573
01:47:55,619 --> 01:47:58,199
음 적응은 유전 기반 알고리즘을

2574
01:47:58,199 --> 01:48:00,659


2575
01:48:00,659 --> 01:48:03,900
사용하여 진화하고 있다는 기소된 의미로 임상 환경의 변화에 ​​적응하고

2576
01:48:03,900 --> 01:48:07,080


2577
01:48:07,080 --> 01:48:09,540
음 어떻게 행동을 바꾸는지

2578
01:48:09,540 --> 01:48:12,540
이런 것들은

2579
01:48:12,540 --> 01:48:14,760


2580
01:48:14,760 --> 01:48:16,920
발걸음을 내딛을 때의 단어 페로몬이나 다른 때 또는

2581
01:48:16,920 --> 01:48:18,960
그들이 가지고 있는 다른 캐릭터들이

2582
01:48:18,960 --> 01:48:22,440
적응하고 있지만 음

2583
01:48:22,440 --> 01:48:26,699
지능적인 어 어 방법에서는 일종의 견과류 같지만

2584
01:48:26,699 --> 01:48:28,560
당신이 진화를 통해 그것을 통해

2585
01:48:28,560 --> 01:48:32,580
실제로 우리는

2586
01:48:32,580 --> 01:48:34,440
이러한 에이전트 각각에 두뇌를 넣는 것을 고려하고

2587
01:48:34,440 --> 01:48:37,879
있지만 신경망을 진화함에 따라

2588
01:48:46,340 --> 01:48:49,860


2589
01:48:49,860 --> 01:48:52,080
각 두뇌를 훈련시키는 데 시간이 걸릴 것이라는 마비를 좋아하지 않기 때문에 디자인으로 다시 말하고 싶습니다.

2590
01:48:52,080 --> 01:48:54,119


2591
01:48:54,119 --> 01:48:56,480


2592
01:48:58,500 --> 01:49:01,139
멋진

2593
01:49:01,139 --> 01:49:05,540
알렉산더  또는 Travis 마지막 생각

2594
01:49:11,480 --> 01:49:14,219
오 오케이 um

2595
01:49:14,219 --> 01:49:15,179


2596
01:49:15,179 --> 01:49:18,179
jeez I I I'm just really really happy 내

2597
01:49:18,179 --> 01:49:19,500
말은 이 작업이 정말

2598
01:49:19,500 --> 01:49:22,080
흥미롭고 우리가 있는 지점에 도달할 수 있다면

2599
01:49:22,080 --> 01:49:24,719
다시 음 꽤 멋진 Avenues를 많이 열 수 있다는 것입니다.

2600
01:49:24,719 --> 01:49:27,420


2601
01:49:27,420 --> 01:49:29,400
개미를 생산하고

2602
01:49:29,400 --> 01:49:30,960


2603
01:49:30,960 --> 01:49:33,840
어디로 갈 수 있는지 볼 수 있으므로

2604
01:49:33,840 --> 01:49:35,219
신경 구조 검색의 큰 문제 중 하나는

2605
01:49:35,219 --> 01:49:37,320


2606
01:49:37,320 --> 01:49:38,940
최적의 신경망이 무엇이고

2607
01:49:38,940 --> 01:49:40,980
최적의 신경망이 무엇인지에 대한 전체 질문입니다.

2608
01:49:40,980 --> 01:49:43,440


2609
01:49:43,440 --> 01:49:44,940
작업마다 다르지만 동일한

2610
01:49:44,940 --> 01:49:47,520
데이터 세트이더라도

2611
01:49:47,520 --> 01:49:49,380
해당 신경망을 사용하는 방법에

2612
01:49:49,380 --> 01:49:51,719


2613
01:49:51,719 --> 01:49:53,520
따라 신경망이 최적이 아닌 최적의 신경망으로 이어질 수 있습니다.

2614
01:49:53,520 --> 01:49:55,199


2615
01:49:55,199 --> 01:49:57,540
더 에너지 효율적인 것이 필요할 수도 있습니다.

2616
01:49:57,540 --> 01:49:59,159
에너지 효율적인

2617
01:49:59,159 --> 01:50:00,900
효율성이나 성능에 신경 쓰지 않고

2618
01:50:00,900 --> 01:50:02,219
더 느린 신경망을 사용하지만

2619
01:50:02,219 --> 01:50:05,159
더 많은 정확도가 필요하므로

2620
01:50:05,159 --> 01:50:07,860
이 전체

2621
01:50:07,860 --> 01:50:10,260
프로세스를 자동화하고 실제로 신경망을 사용하려는 것에 맞게 조정할 수 있는 알고리즘을 가질 수 있습니다.

2622
01:50:10,260 --> 01:50:11,340


2623
01:50:11,340 --> 01:50:14,219
for는 정말 중요하고 하나는

2624
01:50:14,219 --> 01:50:16,080


2625
01:50:16,080 --> 01:50:17,580


2626
01:50:17,580 --> 01:50:19,080
문제에 대해 네트워크를 최적화할 수 있는 개미 식민지 최적화가 훌륭했지만 두 가지는

2627
01:50:19,080 --> 01:50:21,179
알고리즘 자체가

2628
01:50:21,179 --> 01:50:24,239
자체 최적화되도록 만들 수 있다면 이 전체 프로세스를 간소화할 수 있습니다.

2629
01:50:24,239 --> 01:50:27,600


2630
01:50:27,600 --> 01:50:28,980
머신 러닝을 하고 있다면

2631
01:50:28,980 --> 01:50:31,020
좀 비참할 수 있습니다. 신경망 아키텍처를 만드는 것을 좋아합니다.

2632
01:50:31,020 --> 01:50:32,639
시도해보고

2633
01:50:32,639 --> 01:50:34,500
얼마나 잘되는지 확인해보세요. 오, 잘 하지 못했어요.

2634
01:50:34,500 --> 01:50:37,199
몇 가지 손잡이를 조정하겠습니다

2635
01:50:37,199 --> 01:50:40,320
음 해당 프로세스를 자동화하는 중입니다.

2636
01:50:40,320 --> 01:50:42,540
컴퓨터 과학자로서의 평생은

2637
01:50:42,540 --> 01:50:44,719
그것에 대해 똑똑해지는 것에 대해 게을러지는 것입니다. 그래서

2638
01:50:44,719 --> 01:50:47,760


2639
01:50:47,760 --> 01:50:49,619
계속해서 할 필요가 없도록 최적화할 수 있는 것은 무엇이든

2640
01:50:49,619 --> 01:50:52,020
제 시간을 잘 활용하는 것 같습니다.

2641
01:50:52,020 --> 01:50:54,000


2642
01:50:54,000 --> 01:50:56,840
앞으로 할 수 있는 일을 최대한 적게 해야 하니까 어머 거기에

2643
01:50:57,719 --> 01:51:00,540


2644
01:51:00,540 --> 01:51:02,880
더할 게 별로 없는 것 같아요

2645
01:51:02,880 --> 01:51:05,760
이미 좋은 논의가 많이 있었고

2646
01:51:05,760 --> 01:51:08,719
다양한 의미와 보는 방법에 대해 이야기를 나눴어요.

2647
01:51:08,719 --> 01:51:11,400
및 콜로니

2648
01:51:11,400 --> 01:51:13,260
최적화는

2649
01:51:13,260 --> 01:51:15,000
능동적

2650
01:51:15,000 --> 01:51:17,340
추론 관점을 포함하여 다른 관점을 알고 있으므로 마지막

2651
01:51:17,340 --> 01:51:19,980
으로 제 생각에서 정말 더 많은 것은

2652
01:51:19,980 --> 01:51:23,159
흥미로울 것입니다. 또는

2653
01:51:23,159 --> 01:51:25,800


2654
01:51:25,800 --> 01:51:28,260
이전에 말했거나 제안한 것처럼 생각하기에 흥미로운 방향입니다

2655
01:51:28,260 --> 01:51:30,719


2656
01:51:30,719 --> 01:51:34,020
다른 시스템에 대한 은유의 적응과

2657
01:51:34,020 --> 01:51:36,300
모델링하려는 것이 무엇인지

2658
01:51:36,300 --> 01:51:38,580
과학적 및

2659
01:51:38,580 --> 01:51:40,619
철학적 관점에서 목표가 무엇인지 알고 답을

2660
01:51:40,619 --> 01:51:41,820
찾고자 하는 질문은 무엇이며

2661
01:51:41,820 --> 01:51:43,739


2662
01:51:43,739 --> 01:51:46,260
다시 주어진다면 매우 흥미로울 것이라고 생각합니다.  다른

2663
01:51:46,260 --> 01:51:48,119
개발 및 당신은 알고 있습니다 컴퓨팅

2664
01:51:48,119 --> 01:51:50,760
기술 어 당신이 생각하는

2665
01:51:50,760 --> 01:51:53,880
병렬화를 구현하는 방식으로

2666
01:51:53,880 --> 01:51:56,280
그것은 입자 떼와 같은 많은 메타 휴리스틱 알고리즘에 저를 가장 매료 시켰고

2667
01:51:56,280 --> 01:51:58,380


2668
01:51:58,380 --> 01:52:00,780


2669
01:52:00,780 --> 01:52:03,060


2670
01:52:03,060 --> 01:52:05,400
몇 년 전에 Travis와 함께 일했을 때 알 수 있습니다  시험

2671
01:52:05,400 --> 01:52:07,739
알고리즘에서 당신은 그것에 우리 이름을 보았고

2672
01:52:07,739 --> 01:52:10,440
어 그런 종류의 일을 하고 있습니다.

2673
01:52:10,440 --> 01:52:12,060
항상 제 관심을 끌었던 부분은

2674
01:52:12,060 --> 01:52:13,739
제가

2675
01:52:13,739 --> 01:52:16,139
이러한 엔터티를 당신이 알고 있는 다른 처리에 넣을 수 있다고 말할 수 있는 능력입니다.

2676
01:52:16,139 --> 01:52:18,600
컴퓨팅 처리 당신은

2677
01:52:18,600 --> 01:52:21,420
리소스나 장치를 알고 있습니다.  그들은

2678
01:52:21,420 --> 01:52:23,880


2679
01:52:23,880 --> 01:52:26,340
어떤 식으로든 상호 작용하거나 상호 작용하고 결과를 교환하여 최적화를 시도할 것입니다.

2680
01:52:26,340 --> 01:52:29,900
여러분이 알고 있는 일부는 종종 복잡한

2681
01:52:29,900 --> 01:52:32,820
다목적 비용 함수를 최적화하기 위해

2682
01:52:32,820 --> 01:52:35,040
우리가 보게 될 부분 또는 메타와 같은

2683
01:52:35,040 --> 01:52:37,860
더 광범위한 채택을 장려할 부분이라고 생각합니다.  -

2684
01:52:37,860 --> 01:52:40,500
휴리스틱

2685
01:52:40,500 --> 01:52:42,119
알고리즘은 일반적으로 예를 들어 엔지니어링 도메인

2686
01:52:42,119 --> 01:52:43,800
에서 많이 사용되지 않는다고 말하지 않는 것이

2687
01:52:43,800 --> 01:52:46,440
다시

2688
01:52:46,440 --> 01:52:48,300
병렬

2689
01:52:48,300 --> 01:52:50,100
컴퓨팅 처리 시스템의 개발이며

2690
01:52:50,100 --> 01:52:52,139
비동기 컴퓨팅과 같은 것을 활용하는 것이

2691
01:52:52,139 --> 01:52:53,760
다시

2692
01:52:53,760 --> 01:52:55,860
제 관심을 끌었던 또 다른 각도라고 생각합니다.  Travis에서 당신은

2693
01:52:55,860 --> 01:52:57,780
그가 많은 작업을 수행했다는 것을 알고 있습니다. 당신은 비동기식 관점에서

2694
01:52:57,780 --> 01:52:59,940
그들의 진화에서 유전자 최적화를 알고 있으며,

2695
01:52:59,940 --> 01:53:01,980


2696
01:53:01,980 --> 01:53:04,440


2697
01:53:04,440 --> 01:53:06,540
당신이 알고 있고 당신이 알고 있는 사용 가능한 자원을 어떻게 할당할 수 있는지 알고 있습니다.  규모를 확장할 수 있는

2698
01:53:06,540 --> 01:53:09,179


2699
01:53:09,179 --> 01:53:11,940
기회

2700
01:53:11,940 --> 01:53:14,340


2701
01:53:14,340 --> 01:53:16,440
지금 우리가 얻은 것과 함께 봅시다

2702
01:53:16,440 --> 01:53:18,679
연간 양자 기술에 대해 다시 언급하셨을 수도 있습니다.

2703
01:53:18,679 --> 01:53:20,940
양자 컴퓨팅은 게임을 변화시키는 것과 같은 또 다른 흥미로운 장소입니다.

2704
01:53:20,940 --> 01:53:23,699


2705
01:53:23,699 --> 01:53:25,800


2706
01:53:25,800 --> 01:53:28,320
반드시

2707
01:53:28,320 --> 01:53:30,540
지금 이 순간에 정확히 최선을 다해야 합니다.

2708
01:53:30,540 --> 01:53:32,040


2709
01:53:32,040 --> 01:53:34,880
시민 시민 과학 또는

2710
01:53:34,880 --> 01:53:38,100
분산 컴퓨팅 또는 P2P

2711
01:53:38,100 --> 01:53:40,159
유형의 통신을 어떻게 활용하고 다중 에이전트 은유와 같이 구현하는

2712
01:53:40,159 --> 01:53:42,960
대규모 능동 추론 시스템을 구축할 수 있는지 알고 있습니다.

2713
01:53:42,960 --> 01:53:45,380


2714
01:53:45,380 --> 01:53:48,540
콜로니 최적화 또는

2715
01:53:48,540 --> 01:53:51,239
기타 자연에서 영감을 받은 프레임워크 및

2716
01:53:51,239 --> 01:53:54,659
음 여러분이 알고 있는 이 시스템이 Evolution이 실제로 다른 작업을 수행한 것처럼 매우 오랜 시간에 걸쳐 진화할 수 있습니까?

2717
01:53:54,659 --> 01:53:57,119


2718
01:53:57,119 --> 01:53:59,760


2719
01:53:59,760 --> 01:54:02,580


2720
01:54:02,580 --> 01:54:05,639


2721
01:54:05,639 --> 01:54:09,179


2722
01:54:09,179 --> 01:54:11,460


2723
01:54:11,460 --> 01:54:13,920
예를 들어 인간 에이전트 아기가

2724
01:54:13,920 --> 01:54:15,540
이미 작동할 수 있도록 하는 구조를 제공한 귀납적 편향 아기는

2725
01:54:15,540 --> 01:54:18,000
이미 얼굴을 올바르게 인식할 수 있습니다.

2726
01:54:18,000 --> 01:54:20,400


2727
01:54:20,400 --> 01:54:22,139


2728
01:54:22,139 --> 01:54:24,600


2729
01:54:24,600 --> 01:54:26,699


2730
01:54:26,699 --> 01:54:29,159
이것의 상호 작용은 무엇입니까 당신은 진화

2731
01:54:29,159 --> 01:54:31,619
의 인공 형태를 시뮬레이션하는 아이디어를 알고 있을 것입니다

2732
01:54:31,619 --> 01:54:33,900
DNA

2733
01:54:33,900 --> 01:54:35,780
구조가 매우 매우 단순화된

2734
01:54:35,780 --> 01:54:37,679
계산 구조라는 것을 알고 있을 것입니다

2735
01:54:37,679 --> 01:54:40,139
Abdel rahman의 우려에 대한 답이 될 것입니다

2736
01:54:40,139 --> 01:54:41,940
아마도 우리는 에이전트가 너무

2737
01:54:41,940 --> 01:54:43,739
똑똑하고

2738
01:54:43,739 --> 01:54:45,960


2739
01:54:45,960 --> 01:54:48,600
시뮬레이터를 실행하는 데 10년 정도의 시간을 주지 않는 한 실제로 시뮬레이션할 수 없기 때문에 음,

2740
01:54:48,600 --> 01:54:50,219
하지만

2741
01:54:50,219 --> 01:54:51,960
더 근본적인 프리미티브를 생각해낸 다음

2742
01:54:51,960 --> 01:54:54,239
그것을 신경망의 시작점으로 사용할 수 있습니다.

2743
01:54:54,239 --> 01:54:56,219
Daniel이 있다고 가정해 보겠습니다.  다시 당신은

2744
01:54:56,219 --> 01:54:58,380
이미지 분할에서 몇 가지 작업을 수행하고 싶고

2745
01:54:58,380 --> 01:55:00,960
괜찮다는 것을 알고 있습니다. 그러나

2746
01:55:00,960 --> 01:55:03,000
당신의 진화적 프레임워크가 저에게 무엇을

2747
01:55:03,000 --> 01:55:04,980
잘 줄 수 있는지 여기에서 시작할 템플릿이 있다고 말할 것입니다.

2748
01:55:04,980 --> 01:55:07,380
이것은

2749
01:55:07,380 --> 01:55:09,239
프레임워크를 구축하고  당신은

2750
01:55:09,239 --> 01:55:11,940
그것이 DNA 구조와 같다는 것을 알고 있고 이것은

2751
01:55:11,940 --> 01:55:13,980
수년 동안

2752
01:55:13,980 --> 01:55:16,380
분산된 P2P

2753
01:55:16,380 --> 01:55:18,360
컴퓨팅을 알고 있으며 진화하는 이 Mammoth를 구축하는 것을 상상할 수 있습니다.

2754
01:55:18,360 --> 01:55:22,020
지속적인 학습

2755
01:55:22,020 --> 01:55:25,320
스타일 진화 알고리즘이

2756
01:55:25,320 --> 01:55:27,719
어 유전자

2757
01:55:27,719 --> 01:55:29,940
알고리즘 브랜드 콜로니를 기반으로 하는지 여부를 알고 있습니다.  그리고 당신은

2758
01:55:29,940 --> 01:55:31,619
그것이 그것에 대해 생각하는 흥미로운 방법이 될 수 있다고 상상할 수 있습니다.

2759
01:55:31,619 --> 01:55:33,420
그리고 그 방식으로

2760
01:55:33,420 --> 01:55:36,060


2761
01:55:36,060 --> 01:55:38,639
내가 어떻게 할 것인지 알 수 없는 새로운 컴퓨팅 시스템을 발명하지 않고 확장 가능한 형태를 상상할 수 있는 방법에 대한 아이디어를 내뱉고 생성하고 있습니다.

2762
01:55:38,639 --> 01:55:41,280


2763
01:55:41,280 --> 01:55:43,500


2764
01:55:43,500 --> 01:55:46,739
왜냐하면 Quantum은 초전도와 같이

2765
01:55:46,739 --> 01:55:48,480
여전히 해결해야 할 문제가 많기 때문입니다.

2766
01:55:48,480 --> 01:55:50,580


2767
01:55:50,580 --> 01:55:54,719
내가 배운 것처럼 초고온이나 포톤 포획이 있습니다.

2768
01:55:54,719 --> 01:55:55,860


2769
01:55:55,860 --> 01:55:57,300
흥미로운 방향이 될 수 있으며

2770
01:55:57,300 --> 01:55:59,100


2771
01:55:59,100 --> 01:56:01,679
특히 실용적인 끝에서 이것의 스케일링이

2772
01:56:01,679 --> 01:56:03,600
될 것이라고 생각합니다.  가장 중요한 것은

2773
01:56:03,600 --> 01:56:05,219


2774
01:56:05,219 --> 01:56:08,100
이전에 언급한 것처럼 우리가 가지고 있는 모든 도구를 함께 가져와야 하기

2775
01:56:08,100 --> 01:56:10,380
때문에 여기서도 멈출 것입니다.

2776
01:56:10,380 --> 01:56:12,239


2777
01:56:12,239 --> 01:56:13,980


2778
01:56:13,980 --> 01:56:17,820


2779
01:56:17,820 --> 01:56:20,460
작업에 행운을 빕니다 여러분 모두

2780
01:56:20,460 --> 01:56:23,820
환영합니다 어

2781
01:56:23,820 --> 01:56:25,800
우리가 집중할 수 있는 또 다른 작품을 제안하거나

2782
01:56:25,800 --> 01:56:27,840
토론을 계속할 수 있지만

2783
01:56:27,840 --> 01:56:30,659
매우 흥미롭기 때문에 적절하다고 생각합니다 방향 그래서

2784
01:56:30,659 --> 01:56:33,659
다음 시간까지 감사합니다 정말

2785
01:56:33,659 --> 01:56:38,820
감사합니다 안녕

