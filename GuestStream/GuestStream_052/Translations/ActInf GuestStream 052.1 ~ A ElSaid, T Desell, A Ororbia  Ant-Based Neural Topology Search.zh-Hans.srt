1
00:00:06,319 --> 00:00:09,420
您好，欢迎光临，这里是

2
00:00:09,420 --> 00:00:13,440
2023 年 8 月 10 日活跃的客房 52.1，我们有

3
00:00:13,440 --> 00:00:15,900
Ahmed al-said Alexandra aurobia 和

4
00:00:15,900 --> 00:00:17,460
Travis de cell 将

5
00:00:17,460 --> 00:00:20,400
进行演讲，

6
00:00:20,400 --> 00:00:22,680
接下来我们将进行一些思考

7
00:00:22,680 --> 00:00:25,080
和讨论，感谢大家的

8
00:00:25,080 --> 00:00:27,240
加入，阿门

9
00:00:27,240 --> 00:00:29,779


10
00:00:30,480 --> 00:00:34,079
好的，非常感谢您

11
00:00:34,079 --> 00:00:38,160
今天邀请我，我将在这里讨论

12
00:00:38,160 --> 00:00:39,300
我们的

13
00:00:39,300 --> 00:00:42,300
解决

14
00:00:42,300 --> 00:00:44,160
新架构搜索和新

15
00:00:44,160 --> 00:00:46,500
进化问题的方法以及

16
00:00:46,500 --> 00:00:48,180


17
00:00:48,180 --> 00:00:50,579
基于群体优化的

18
00:00:50,579 --> 00:00:52,140
解决方案

19
00:00:52,140 --> 00:00:56,100
嗯，正如标题提到的，嗯，

20
00:00:56,100 --> 00:00:58,199
以及针对神经

21
00:00:58,199 --> 00:01:00,660
架构搜索和革命的殖民地优化，嗯，

22
00:01:00,660 --> 00:01:03,080
这项工作，这项工作是

23
00:01:03,080 --> 00:01:06,659
我之间的合作，嗯，我的呃，

24
00:01:06,659 --> 00:01:09,600
前任顾问干了细胞，我的

25
00:01:09,600 --> 00:01:11,580
代码顾问，

26
00:01:11,580 --> 00:01:15,119
奥拉博士和参议员，

27
00:01:15,119 --> 00:01:16,979
我目前是

28
00:01:16,979 --> 00:01:19,140
嗯 大学

29
00:01:19,140 --> 00:01:20,520
和

30
00:01:20,520 --> 00:01:23,159
北卡罗来纳大学的助理教授北卡罗来纳州

31
00:01:23,159 --> 00:01:25,080
惠灵顿

32
00:01:25,080 --> 00:01:26,520
嗯，

33
00:01:26,520 --> 00:01:29,640
然后转到下一张幻灯片

34
00:01:29,640 --> 00:01:31,920
嗯，作为我

35
00:01:31,920 --> 00:01:35,040
今天要讨论的事情的概述，我将尝试采取

36
00:01:35,040 --> 00:01:38,400
嗯给嗯鸟冰视图来了解什么 是一场

37
00:01:38,400 --> 00:01:40,020
革命，嗯，

38
00:01:40,020 --> 00:01:43,619
为什么我们为什么需要它，从

39
00:01:43,619 --> 00:01:46,680
那里我将尝试讨论

40
00:01:46,680 --> 00:01:50,280
我们的方法，这是基于

41
00:01:50,280 --> 00:01:52,200
并调用优化，

42
00:01:52,200 --> 00:01:54,540
称为基于末端的神经策略搜索或

43
00:01:54,540 --> 00:01:57,479
短暂结束，之后 我将

44
00:01:57,479 --> 00:02:01,979
讨论我们如何

45
00:02:01,979 --> 00:02:04,280
通过

46
00:02:04,280 --> 00:02:06,719
引入连续的蚂蚁或癌症

47
00:02:06,719 --> 00:02:08,699
控制来推进这个想法，这是

48
00:02:08,699 --> 00:02:11,220
这个

49
00:02:11,220 --> 00:02:14,160
研究空间的好线索，并将其替换为

50
00:02:14,160 --> 00:02:17,220
连续的空间，之后

51
00:02:17,220 --> 00:02:20,220
我还要说我们做了什么 与

52
00:02:20,220 --> 00:02:22,379
三维连续蚂蚁

53
00:02:22,379 --> 00:02:24,980
有一个反向传播自由类，

54
00:02:24,980 --> 00:02:28,620
稍后我将讨论

55
00:02:28,620 --> 00:02:31,319
我们为未来工作回答的三点，

56
00:02:31,319 --> 00:02:33,000


57
00:02:33,000 --> 00:02:35,220
所以

58
00:02:35,220 --> 00:02:35,819


59
00:02:35,819 --> 00:02:39,780
在机器学习中学习

60
00:02:39,780 --> 00:02:41,459
神经网络结构的结构 越来越

61
00:02:41,459 --> 00:02:43,620
深入，

62
00:02:43,620 --> 00:02:45,900
人们试图优化

63
00:02:45,900 --> 00:02:47,220
结构以获得更好的性能，

64
00:02:47,220 --> 00:02:49,379
不同

65
00:02:49,379 --> 00:02:51,480
领域或不同

66
00:02:51,480 --> 00:02:53,700
问题领域的人们

67
00:02:53,700 --> 00:02:55,019
习惯于

68
00:02:55,019 --> 00:02:57,660
借用性能最好的神经

69
00:02:57,660 --> 00:03:00,680
架构或结构，并尝试

70
00:03:00,680 --> 00:03:04,140
稍微修改一下以使其工作 对于

71
00:03:04,140 --> 00:03:06,599
他们的问题，他们试图

72
00:03:06,599 --> 00:03:09,480
调整结构的一些图片

73
00:03:09,480 --> 00:03:12,180
并比较

74
00:03:12,180 --> 00:03:14,459
这些不同的调整，然后他们

75
00:03:14,459 --> 00:03:16,080
说我们找到了性能最好的

76
00:03:16,080 --> 00:03:17,940
结构，但是

77
00:03:17,940 --> 00:03:18,659


78
00:03:18,659 --> 00:03:22,140
实际上找到了一个绝对的

79
00:03:22,140 --> 00:03:23,700
开放结构，

80
00:03:23,700 --> 00:03:26,040
它会呃 关于该解决方案，

81
00:03:26,040 --> 00:03:28,319
这将是一个 NPR 问题，因为为了

82
00:03:28,319 --> 00:03:31,379
达到该解决方案，我们必须

83
00:03:31,379 --> 00:03:34,319
嗯尝试

84
00:03:34,319 --> 00:03:37,319
正确的不同结构元素的所有组合，

85
00:03:37,319 --> 00:03:40,739
这是因为我们

86
00:03:40,739 --> 00:03:43,379
在这些深层神经网络中拥有大量的结构，

87
00:03:43,379 --> 00:03:44,519


88
00:03:44,519 --> 00:03:47,519
嗯它们可能是 一个 NPR 问题，因为

89
00:03:47,519 --> 00:03:50,760
我们没有计算能力或

90
00:03:50,760 --> 00:03:53,459
足够的时间来实际

91
00:03:53,459 --> 00:03:56,159
训练和测试所有这些

92
00:03:56,159 --> 00:03:58,080
结构，所有这些结构都是

93
00:03:58,080 --> 00:03:59,459
由这些不同的

94
00:03:59,459 --> 00:04:01,080


95
00:04:01,080 --> 00:04:03,780
施工手组合构建的，所以

96
00:04:03,780 --> 00:04:06,239
实现这一点的替代方法是实际上尝试这样做

97
00:04:06,239 --> 00:04:09,900
应用流星方法

98
00:04:09,900 --> 00:04:12,180
并转换为耳朵开放

99
00:04:12,180 --> 00:04:15,239
解决方案，这比不

100
00:04:15,239 --> 00:04:17,339
优化结构或依赖

101
00:04:17,339 --> 00:04:19,738
随机搜索之类的方法要好得多，

102
00:04:19,738 --> 00:04:21,478
随机搜索可以为我们带来更好的

103
00:04:21,478 --> 00:04:23,340
神经网络性能，

104
00:04:23,340 --> 00:04:26,340
但它不会 给

105
00:04:26,340 --> 00:04:28,740
我们一个静音最佳解决方案或通过

106
00:04:28,740 --> 00:04:30,000
接近最佳

107
00:04:30,000 --> 00:04:31,759
解决方案收敛

108
00:04:31,759 --> 00:04:33,660
所以

109
00:04:33,660 --> 00:04:34,680
嗯

110
00:04:34,680 --> 00:04:36,660
所以我的意思是启发式方法将为我们提供

111
00:04:36,660 --> 00:04:40,020
一个自动化方法

112
00:04:40,020 --> 00:04:43,259
嗯而且我们还可以收敛到

113
00:04:43,259 --> 00:04:45,479
接近这个呃结构问题的开放解决方案的新文档结构

114
00:04:45,479 --> 00:04:49,039


115
00:04:49,919 --> 00:04:52,680
嗯，所以人们接近

116
00:04:52,680 --> 00:04:55,919
Nas 的方式是尝试模仿

117
00:04:55,919 --> 00:04:58,740
自然中如何进行优化，

118
00:04:58,740 --> 00:05:02,400
所以第一种方法是第一种方式，

119
00:05:02,400 --> 00:05:05,220
想法是嗯，这是

120
00:05:05,220 --> 00:05:08,400
尝试模仿

121
00:05:08,400 --> 00:05:13,080
生物体在自然界中如何进化

122
00:05:13,080 --> 00:05:14,400
嗯 使用

123
00:05:14,400 --> 00:05:16,500
嗯基于遗传的算法，如

124
00:05:16,500 --> 00:05:20,000
达尔文动力学进化

125
00:05:20,000 --> 00:05:23,520
，它以一个整洁的

126
00:05:23,520 --> 00:05:24,660
嗯或

127
00:05:24,660 --> 00:05:27,660
嗯它开始，它是

128
00:05:27,660 --> 00:05:33,680
嗯嗯新革命呃外国的缩写，

129
00:05:41,960 --> 00:05:45,060
这个概念也应用于

130
00:05:45,060 --> 00:05:48,600
大多数 nas 的正常运动方法

131
00:05:48,600 --> 00:05:52,680
，考试是其中之一 他们试图

132
00:05:52,680 --> 00:05:55,380
想出这种方法，它成为最先进

133
00:05:55,380 --> 00:05:58,020
的方法之一，而不是

134
00:05:58,020 --> 00:06:02,460
在 Nas um 中的艺术方法，

135
00:06:02,460 --> 00:06:06,600
所以在这种方法中，我们试图通过

136
00:06:06,600 --> 00:06:09,720


137
00:06:09,720 --> 00:06:11,699
引入新的结构元素来再次模仿遗传进化 或者

138
00:06:11,699 --> 00:06:13,979


139
00:06:13,979 --> 00:06:15,180


140
00:06:15,180 --> 00:06:17,639
通过进化迭代

141
00:06:17,639 --> 00:06:20,460
和进化世代来删除结构元素或改变结构，因此

142
00:06:20,460 --> 00:06:24,120
我们可以通过分割

143
00:06:24,120 --> 00:06:25,680
边缘

144
00:06:25,680 --> 00:06:29,460
或添加边缘或显示禁用

145
00:06:29,460 --> 00:06:31,919
边缘来应用突变，我们显示边缘我们

146
00:06:31,919 --> 00:06:33,479
禁用边缘将禁用一些

147
00:06:33,479 --> 00:06:34,979
结构元素，因此 我们不会

148
00:06:34,979 --> 00:06:37,919
失去这个成分，这样我们以后就可以

149
00:06:37,919 --> 00:06:41,520
使用它，就像

150
00:06:41,520 --> 00:06:44,039
基因组中休眠的基因一样，这样我们就可以

151
00:06:44,039 --> 00:06:45,960
在后代中出现，而不是

152
00:06:45,960 --> 00:06:49,380
完全摆脱它，这样我们就可以在突变中我

153
00:06:49,380 --> 00:06:51,419
可以 禁用边缘，我们可以

154
00:06:51,419 --> 00:06:53,580
在以后的几代中启用它们，如果我们发现我们

155
00:06:53,580 --> 00:06:55,800
想尝试

156
00:06:55,800 --> 00:06:58,380
这个选项，

157
00:06:58,380 --> 00:07:00,300
我们还可以添加循环边缘或

158
00:07:00,300 --> 00:07:03,419
删除召回或或或启用或禁用

159
00:07:03,419 --> 00:07:06,060
当前边缘呃我们可以我们可以分割

160
00:07:06,060 --> 00:07:07,979
节点我们可以采取 上一代中的一些节点，

161
00:07:07,979 --> 00:07:11,460


162
00:07:11,460 --> 00:07:13,800
我们可以将其拆分为两个节点，

163
00:07:13,800 --> 00:07:16,620
然后获取连接到

164
00:07:16,620 --> 00:07:18,720
该节点的边，并

165
00:07:18,720 --> 00:07:21,060
尝试将其划分为

166
00:07:21,060 --> 00:07:23,340
从前一个节点生成的新统计数据

167
00:07:23,340 --> 00:07:27,199
上一代

168
00:07:27,199 --> 00:07:31,500
呃我们也可以添加节点到

169
00:07:31,500 --> 00:07:33,479
结构和结构中，所以所有这些

170
00:07:33,479 --> 00:07:35,639
都是遗传过程中突变类的一部分

171
00:07:35,639 --> 00:07:38,580


172
00:07:38,580 --> 00:07:41,160
嗯如果你不想尝试的话，你也可以禁用注释

173
00:07:41,160 --> 00:07:43,080


174
00:07:43,080 --> 00:07:45,120
删除其中一个音符并禁用一个

175
00:07:45,120 --> 00:07:47,759
或多个节点也会禁用

176
00:07:47,759 --> 00:07:50,940
连接到该音符的边，

177
00:07:50,940 --> 00:07:52,979
嗯，除了突变之外，我们是嗯的另

178
00:07:52,979 --> 00:07:55,020
一边，

179
00:07:55,020 --> 00:07:58,620
遗传过程是进行交叉，

180
00:07:58,620 --> 00:08:00,360
其中我们有两个

181
00:08:00,360 --> 00:08:03,840
性能最好的群体 呃，

182
00:08:03,840 --> 00:08:06,000
一起带来后代，而

183
00:08:06,000 --> 00:08:07,740
后代将拥有

184
00:08:07,740 --> 00:08:10,319


185
00:08:10,319 --> 00:08:12,900
来自父母的特征，

186
00:08:12,900 --> 00:08:14,160
所以它将

187
00:08:14,160 --> 00:08:15,840
从父母那里获取一些特征，并

188
00:08:15,840 --> 00:08:17,940
从另一个父母那里获取其他特征，

189
00:08:17,940 --> 00:08:21,680
希望这会给我们带来

190
00:08:21,680 --> 00:08:24,840
不好的表现 神经网络呃或

191
00:08:24,840 --> 00:08:27,799
平台生成

192
00:08:28,680 --> 00:08:30,780
嗯所以主要问题

193
00:08:30,780 --> 00:08:33,500
抱歉

194
00:08:33,958 --> 00:08:36,719
所以

195
00:08:36,719 --> 00:08:39,179
嗯呃基于遗传的算法的主要问题是

196
00:08:39,179 --> 00:08:41,399
它们从最小的结构开始，

197
00:08:41,399 --> 00:08:43,559
就像我们可以看到的那样，这意味着

198
00:08:43,559 --> 00:08:47,160
输入和输出，嗯你

199
00:08:47,160 --> 00:08:49,740
从优化开始

200
00:08:49,740 --> 00:08:53,160
最小搜索空间可以通过优化过程将方法捕获

201
00:08:53,160 --> 00:08:55,620
在局部最小值中，

202
00:08:55,620 --> 00:08:57,720
因此我们正在考虑

203
00:08:57,720 --> 00:09:00,720
如何摆脱这个障碍，并从

204
00:09:00,720 --> 00:09:03,899
一个更大或更大的空间开始

205
00:09:03,899 --> 00:09:06,060
，然后我们可以

206
00:09:06,060 --> 00:09:07,800
从那个

207
00:09:07,800 --> 00:09:09,200


208
00:09:09,200 --> 00:09:12,839
更大的空间中采样一些解决方案， 我们环顾四周，

209
00:09:12,839 --> 00:09:15,600
我们我们关注结束调用

210
00:09:15,600 --> 00:09:18,779
优化，我会说为什么

211
00:09:18,779 --> 00:09:21,180
我会首先尝试介绍

212
00:09:21,180 --> 00:09:23,279
嗯该方法，所以该方法

213
00:09:23,279 --> 00:09:25,680
首先被引入为嗯图形

214
00:09:25,680 --> 00:09:27,720
优化方法

215
00:09:27,720 --> 00:09:30,420
嗯图形优化方法抱歉

216
00:09:30,420 --> 00:09:32,339
嗯它被介绍了 90 年代中期，

217
00:09:32,339 --> 00:09:35,000
玛格丽特河 (Margaret River)

218
00:09:35,000 --> 00:09:37,680
应用了这种方法，

219
00:09:37,680 --> 00:09:40,500
呃，解决了一个糟糕的销售质量

220
00:09:40,500 --> 00:09:42,720
问题，问题主要是关于

221
00:09:42,720 --> 00:09:45,000
一个旅行推销员，他想要访问

222
00:09:45,000 --> 00:09:46,920
该国的多个城市，你

223
00:09:46,920 --> 00:09:48,779
认为这是乔治的员工吗？

224
00:09:48,779 --> 00:09:50,640
如果我们有的话，会考虑这个问题

225
00:09:50,640 --> 00:09:52,620
不同的数字，如果

226
00:09:52,620 --> 00:09:55,560
城市数量增加，那么结合

227
00:09:55,560 --> 00:09:57,839
这些数字的实现就会

228
00:09:57,839 --> 00:09:59,760
更新，我们必须考虑找到

229
00:09:59,760 --> 00:10:01,500
开放的解决方案，

230
00:10:01,500 --> 00:10:03,779
嗯，如果这个数字说得很严重，那么我们

231
00:10:03,779 --> 00:10:05,580
最终将遇到 npmr 问题，

232
00:10:05,580 --> 00:10:08,160
因为我们做到了，我们赢了。 没有足够的时间

233
00:10:08,160 --> 00:10:12,060
或计算能力来完成

234
00:10:12,060 --> 00:10:16,380
这个紧凑的爆炸解决方案

235
00:10:16,380 --> 00:10:19,260
或完成这个像素步骤搜索，

236
00:10:19,260 --> 00:10:21,180
所以他

237
00:10:21,180 --> 00:10:24,180
从他的观察到

238
00:10:24,180 --> 00:10:24,959


239
00:10:24,959 --> 00:10:29,580
在自然界中进步，他发现他

240
00:10:29,580 --> 00:10:33,060
可以应用他们如何锻造来寻找食物

241
00:10:33,060 --> 00:10:33,959
自然

242
00:10:33,959 --> 00:10:37,440
和嗯，然后采取

243
00:10:37,440 --> 00:10:39,720
这个概念，这个观察

244
00:10:39,720 --> 00:10:42,660
应用于算法中，以找到

245
00:10:42,660 --> 00:10:46,500
从一点出发的不是最佳路径，

246
00:10:46,500 --> 00:10:49,200
并

247
00:10:49,200 --> 00:10:53,240
在一个最短的计划中访问所有城市，

248
00:10:53,640 --> 00:10:58,019
所以这些方法 观察，

249
00:10:58,019 --> 00:11:00,120
所以漫画幻灯片中的这句话

250
00:11:00,120 --> 00:11:02,180
只是试图

251
00:11:02,180 --> 00:11:06,300
向我们展示如何

252
00:11:06,300 --> 00:11:07,019


253
00:11:07,019 --> 00:11:09,480
在自然界中种植食物，

254
00:11:09,480 --> 00:11:12,180
然后市场雷鬼如何将这个概念

255
00:11:12,180 --> 00:11:15,060
应用到查尔斯的

256
00:11:15,060 --> 00:11:17,640
杀手问题中，所以

257
00:11:17,640 --> 00:11:19,380
嗯因此

258
00:11:19,380 --> 00:11:22,079
遵守 资金，并

259
00:11:22,079 --> 00:11:24,360
从他们的天然植物食物中出去，

260
00:11:24,360 --> 00:11:25,680


261
00:11:25,680 --> 00:11:27,300
嗯，在底特律不同的

262
00:11:27,300 --> 00:11:28,860
方向，

263
00:11:28,860 --> 00:11:31,320
嗯，当他们找到食物时，最终

264
00:11:31,320 --> 00:11:33,120
找到食物，他们会拿走一些

265
00:11:33,120 --> 00:11:35,700
食物，然后他们会回到自己的

266
00:11:35,700 --> 00:11:38,640
巢穴，并在回来的路上 它们会

267
00:11:38,640 --> 00:11:40,980
沉积一些其他物质，称为

268
00:11:40,980 --> 00:11:42,240
信息素，

269
00:11:42,240 --> 00:11:45,360
所以它们沉积这种

270
00:11:45,360 --> 00:11:47,040
物质，以便

271
00:11:47,040 --> 00:11:49,820
通过食物资源与其他蚂蚁进行交流，

272
00:11:49,820 --> 00:11:54,000
所以实际上其他蚂蚁确实利用这种物质来获取

273
00:11:54,000 --> 00:11:57,120
更多其他物质，当它们

274
00:11:57,120 --> 00:11:59,279
感觉到它时，它们会尝试它们，它们会跟随 第一个

275
00:11:59,279 --> 00:12:02,100
末端从

276
00:12:02,100 --> 00:12:04,620
警察那里走的那条路是通往

277
00:12:04,620 --> 00:12:05,940
巢穴的，

278
00:12:05,940 --> 00:12:07,860
希望他们能在

279
00:12:07,860 --> 00:12:10,620
那段时间结束时找到食物，当他们

280
00:12:10,620 --> 00:12:13,019
真正在路径尽头找到食物时，

281
00:12:13,019 --> 00:12:14,640
他们将采取的路线 一些食物并

282
00:12:14,640 --> 00:12:17,220
做同样的事情，它们会从同

283
00:12:17,220 --> 00:12:19,740
一条路径的草坪上存放更多的食物，它们可以

284
00:12:19,740 --> 00:12:21,540
对其他接受这些食物的蚂蚁更具吸引力，

285
00:12:21,540 --> 00:12:23,100
这样它们就可以给巢穴带来更多的食物，

286
00:12:23,100 --> 00:12:24,240


287
00:12:24,240 --> 00:12:27,839
所以这个过程中的这一过程向我们展示了

288
00:12:27,839 --> 00:12:31,200
利用蚂蚁的行为，但

289
00:12:31,200 --> 00:12:33,600
有时

290
00:12:33,600 --> 00:12:35,940
其他蚂蚁也会尝试探索其他一些

291
00:12:35,940 --> 00:12:38,220
完整的资源，潜在的食物

292
00:12:38,220 --> 00:12:41,760
资源，它们有点抵制

293
00:12:41,760 --> 00:12:45,660
遵循正式的短语，

294
00:12:45,660 --> 00:12:48,540
并且它们试图找到离开

295
00:12:48,540 --> 00:12:52,800
并为他们也探索的巢穴开发者找到一些新的食物资源，

296
00:12:52,800 --> 00:12:55,219


297
00:12:57,740 --> 00:13:00,540


298
00:13:00,540 --> 00:13:02,519
这两个概念

299
00:13:02,519 --> 00:13:05,220
被市场愤怒者用来

300
00:13:05,220 --> 00:13:06,000


301
00:13:06,000 --> 00:13:09,779
平衡搜索位以获得

302
00:13:09,779 --> 00:13:12,240
更好的呃更好或更快的路径

303
00:13:12,240 --> 00:13:13,620
之间的

304
00:13:13,620 --> 00:13:15,800
路径

305
00:13:15,800 --> 00:13:20,359
特朗普推销员问题所在的城市

306
00:13:21,060 --> 00:13:23,040
嗯，他们

307
00:13:23,040 --> 00:13:25,860
在海伦的体育运动和自然界中也观察到的第三件事

308
00:13:25,860 --> 00:13:28,680
是，更多

309
00:13:28,680 --> 00:13:30,720
其他物质的气味，激素也会

310
00:13:30,720 --> 00:13:34,860
蒸发，因此，每当获得完整资源的路径不畅通时，

311
00:13:34,860 --> 00:13:37,079


312
00:13:37,079 --> 00:13:39,300
充分的资源不再有吸引力，是排他性的，不再有

313
00:13:39,300 --> 00:13:41,459
蚂蚁会走那条路，或者当他们

314
00:13:41,459 --> 00:13:43,800
走这条路并到达它时，暴露的

315
00:13:43,800 --> 00:13:47,279
全部资源表明他们

316
00:13:47,279 --> 00:13:49,079
不会走同样的路到达

317
00:13:49,079 --> 00:13:50,880
纳斯达克，他们会尝试思考和

318
00:13:50,880 --> 00:13:53,519
寻找更多新的食物资源，并且

319
00:13:53,519 --> 00:13:55,620
因为它们不再走那条路，

320
00:13:55,620 --> 00:13:58,200
并且不依赖于这条路径上任何形式的信息素，

321
00:13:58,200 --> 00:14:01,019
激素最终会

322
00:14:01,019 --> 00:14:03,600
蒸发并消失，并使其

323
00:14:03,600 --> 00:14:05,820
越来越不吸引其他

324
00:14:05,820 --> 00:14:08,480
蚂蚁采取

325
00:14:08,519 --> 00:14:09,959
所以

326
00:14:09,959 --> 00:14:10,770
嗯

327
00:14:10,770 --> 00:14:12,060
[音乐 ]

328
00:14:12,060 --> 00:14:15,300
所以这就是 Marco Durango

329
00:14:15,300 --> 00:14:16,980
当他想到旅行

330
00:14:16,980 --> 00:14:18,839
太空人的问题时所看到的，

331
00:14:18,839 --> 00:14:22,139
嗯，他希望他将这个问题应用于

332
00:14:22,139 --> 00:14:24,779
联邦推销员的问题，让一名

333
00:14:24,779 --> 00:14:25,980
代理人

334
00:14:25,980 --> 00:14:29,760
尝试不同的任务，然后

335
00:14:29,760 --> 00:14:31,680
在每次迭代中进行比较，

336
00:14:31,680 --> 00:14:34,440
以便代理人 将在正确的城市之间选择一条路径，

337
00:14:34,440 --> 00:14:38,279
然后将该

338
00:14:38,279 --> 00:14:41,760


339
00:14:41,760 --> 00:14:43,800
路径的长度与之前的呃经验

340
00:14:43,800 --> 00:14:46,440
与其他路径进行比较，如果它较短，它将

341
00:14:46,440 --> 00:14:49,019
尝试在

342
00:14:49,019 --> 00:14:52,199
该路径的各个部分上存储数月，最终 他

343
00:14:52,199 --> 00:14:54,060
希望，他希望的时候他是对的，

344
00:14:54,060 --> 00:14:56,519
他希望

345
00:14:56,519 --> 00:14:59,040
最终越多，

346
00:14:59,040 --> 00:15:00,959
总模式越短，越短，

347
00:15:00,959 --> 00:15:03,839
给出最终

348
00:15:03,839 --> 00:15:05,279
更短的

349
00:15:05,279 --> 00:15:07,079
路径，

350
00:15:07,079 --> 00:15:11,040
从一次存款中获得越来越多的信息，

351
00:15:11,040 --> 00:15:12,959
使其变得越来越多

352
00:15:12,959 --> 00:15:14,519
对于代理来说，通过

353
00:15:14,519 --> 00:15:15,680
迭代更有吸引力，

354
00:15:15,680 --> 00:15:20,160
所以我们考虑了这个概念，

355
00:15:20,160 --> 00:15:21,839
我们认为将

356
00:15:21,839 --> 00:15:24,360
其应用于 Nas

357
00:15:24,360 --> 00:15:27,920
问题非常有吸引力，因为

358
00:15:28,519 --> 00:15:32,100
解决方案应用于呃图

359
00:15:32,100 --> 00:15:34,500
优化问题，并且呃神经

360
00:15:34,500 --> 00:15:36,600
网络在它们的

361
00:15:36,600 --> 00:15:38,160
方向图，

362
00:15:38,160 --> 00:15:41,040
所以我们也考虑了脚踝

363
00:15:41,040 --> 00:15:42,800
优化，因为它是完全去

364
00:15:42,800 --> 00:15:46,139
中心化和可扩展的，而且它也

365
00:15:46,139 --> 00:15:48,240
很容易追踪，

366
00:15:48,240 --> 00:15:52,019
并且认为回到去

367
00:15:52,019 --> 00:15:55,019
中心化呃它给了我们它使它使它成为它

368
00:15:55,019 --> 00:15:58,079
使这个呃

369
00:15:58,079 --> 00:16:01,139
嗯方法成为一个完美的方法 朋友

370
00:16:01,139 --> 00:16:02,760
和高性能计算的候选者呃

371
00:16:02,760 --> 00:16:04,260
解决方案

372
00:16:04,260 --> 00:16:06,660
嗯，所以这最终将

373
00:16:06,660 --> 00:16:08,940
加速优化问题，

374
00:16:08,940 --> 00:16:12,120
我将在下一张幻灯片中我认为

375
00:16:12,120 --> 00:16:15,000
在下一张幻灯片之后，我将

376
00:16:15,000 --> 00:16:16,620
讨论我们

377
00:16:16,620 --> 00:16:18,779
如何利用或使用这个

378
00:16:18,779 --> 00:16:19,940
嗯

379
00:16:19,940 --> 00:16:23,100
最终连接化的特征

380
00:16:23,100 --> 00:16:25,440
嗯加速我们提出的解决方案

381
00:16:25,440 --> 00:16:26,940
或者我们提出的方法，即

382
00:16:26,940 --> 00:16:29,339
蚂蚁和游戏

383
00:16:29,339 --> 00:16:33,420
所以嗯这个方案或蚂蚁

384
00:16:33,420 --> 00:16:35,760
应用蚂蚁的方案或结束呼叫适应

385
00:16:35,760 --> 00:16:39,060
呃在神经中或抱歉 神经网络

386
00:16:39,060 --> 00:16:41,459
架构搜索

387
00:16:41,459 --> 00:16:45,120
在这个 um

388
00:16:45,120 --> 00:16:49,259
uh 流程图中进行了描述或说明，因此我们从一个用上层建筑表示的

389
00:16:49,259 --> 00:16:51,420
巨大搜索空间

390
00:16:51,420 --> 00:16:52,579
um 开始，

391
00:16:52,579 --> 00:16:57,120
它

392
00:16:57,120 --> 00:16:57,980
um

393
00:16:57,980 --> 00:17:03,360
表达或 um 它体现了一个

394
00:17:03,360 --> 00:17:05,880
如此大规模 uh

395
00:17:05,880 --> 00:17:08,400
连接的神经网络，这意味着每个节点

396
00:17:08,400 --> 00:17:09,780
上层结构

397
00:17:09,780 --> 00:17:12,599
通过边和循环

398
00:17:12,599 --> 00:17:15,119
边向后、向前和向后当前

399
00:17:15,119 --> 00:17:17,339
边与其他节点连接，

400
00:17:17,339 --> 00:17:22,859
然后我们让许多智能体

401
00:17:22,859 --> 00:17:26,579
从输入节点

402
00:17:26,579 --> 00:17:29,220
到输出节点聚集在结构上，这样每个

403
00:17:29,220 --> 00:17:31,740
智能体都会选择一个 输入节点，然后

404
00:17:31,740 --> 00:17:34,980
它从该节点开始徘徊，穿过

405
00:17:34,980 --> 00:17:36,860
当前边和

406
00:17:36,860 --> 00:17:39,980
循环边

407
00:17:39,980 --> 00:17:42,299
以及隐藏层之间的节点之间的连接，

408
00:17:42,299 --> 00:17:44,940
直到它获取并选择

409
00:17:44,940 --> 00:17:47,640
输出节点之一，然后我们获取

410
00:17:47,640 --> 00:17:51,660
不同代理的所有这些路径，然后我们 将

411
00:17:51,660 --> 00:17:54,660
它们放在一起以格式化我们的结构

412
00:17:54,660 --> 00:17:56,940
和神经网络结构，我们

413
00:17:56,940 --> 00:17:59,160
采用该结构并耗尽它并

414
00:17:59,160 --> 00:18:00,720
测试它，

415
00:18:00,720 --> 00:18:03,360
然后通过该性能结构将其性能与

416
00:18:03,360 --> 00:18:05,100
神经网络中表现最佳的群体进行比较，

417
00:18:05,100 --> 00:18:06,360


418
00:18:06,360 --> 00:18:09,360
并且它比神经网络

419
00:18:09,360 --> 00:18:12,360
中最差的表现要好 然后我们奖励

420
00:18:12,360 --> 00:18:14,700
蚂蚁采取的路径，

421
00:18:14,700 --> 00:18:16,860
代理在

422
00:18:16,860 --> 00:18:19,679
我们与激素一起工作的上层建筑中接管

423
00:18:19,679 --> 00:18:22,559
呃，这样它可能会使这些路径

424
00:18:22,559 --> 00:18:25,140


425
00:18:25,140 --> 00:18:27,960
通过进化过程或

426
00:18:27,960 --> 00:18:29,880
优化过程对以后的迭代有吸引力

427
00:18:29,880 --> 00:18:33,000
持续的结构

428
00:18:33,000 --> 00:18:34,980
比群体中最差的结构最好，如果

429
00:18:34,980 --> 00:18:37,380
不是，如果它实际上更糟，然后是

430
00:18:37,380 --> 00:18:39,900
群体中最差的，那么

431
00:18:39,900 --> 00:18:42,660
我们会丢弃该结构或

432
00:18:42,660 --> 00:18:44,820
网络中的结构，并且我们不会奖励

433
00:18:44,820 --> 00:18:49,280
蚂蚁所采取的任何路径，并且

434
00:18:49,280 --> 00:18:52,919
热蒸发将帮助我们摆脱沉积

435
00:18:52,919 --> 00:18:55,020


436
00:18:55,020 --> 00:18:56,880
在边缘的信息素，这些信息素不会给

437
00:18:56,880 --> 00:19:01,440
我们提供越来越好的结构，

438
00:19:01,679 --> 00:19:03,600


439
00:19:03,600 --> 00:19:06,900
而且由于末端群体是

440
00:19:06,900 --> 00:19:09,120
分散的，我们通过

441
00:19:09,120 --> 00:19:10,080


442
00:19:10,080 --> 00:19:11,940
异步解决方案或

443
00:19:11,940 --> 00:19:14,280
异步进化来利用这一点

444
00:19:14,280 --> 00:19:17,340
有一个主要进程负责

445
00:19:17,340 --> 00:19:18,480


446
00:19:18,480 --> 00:19:21,059
um 生成新结构，并

447
00:19:21,059 --> 00:19:23,100
更新测试

448
00:19:23,100 --> 00:19:25,860
执行结构的总体，并更新上层建筑

449
00:19:25,860 --> 00:19:28,740
上可怜的月亮，因此

450
00:19:28,740 --> 00:19:31,919
主进程将生成

451
00:19:31,919 --> 00:19:33,539
um 结构并将它们发送到工作

452
00:19:33,539 --> 00:19:35,520
进程，工作进程将 根据

453
00:19:35,520 --> 00:19:38,160


454
00:19:38,160 --> 00:19:41,100
我们拥有的解决问题的数据来训练和测试神经网络，

455
00:19:41,100 --> 00:19:43,799
然后将结果或

456
00:19:43,799 --> 00:19:46,260
神经网络的厚度发送回

457
00:19:46,260 --> 00:19:47,940
主流程，并基于

458
00:19:47,940 --> 00:19:50,760
该流程的适应度，

459
00:19:50,760 --> 00:19:53,640
要么丢弃它，

460
00:19:53,640 --> 00:19:55,980
要么我们' 将采用该适应度并将

461
00:19:55,980 --> 00:19:57,960
其与群体中表现最好的进行比较，

462
00:19:57,960 --> 00:19:59,760
如果它比最差的更好，

463
00:19:59,760 --> 00:20:02,460
它将

464
00:20:02,460 --> 00:20:04,080
通过沉积运动模式来奖励在上层建筑上结束的路径，

465
00:20:04,080 --> 00:20:05,940
或者如果它比

466
00:20:05,940 --> 00:20:07,200
群体中最差的更差，则会

467
00:20:07,200 --> 00:20:10,740
丢弃它 它会不断生成

468
00:20:10,740 --> 00:20:13,020
新的结构并将它们发送到

469
00:20:13,020 --> 00:20:17,160
进程，因为

470
00:20:17,160 --> 00:20:20,340
依赖于传播的训练是

471
00:20:20,340 --> 00:20:22,740


472
00:20:22,740 --> 00:20:26,100
这个过程中计算成本最高的部分，如果我们有许多

473
00:20:26,100 --> 00:20:28,080
可以并行工作的工作进程

474
00:20:28,080 --> 00:20:31,620
来训练和 评估这些

475
00:20:31,620 --> 00:20:33,900
呃神经网络这个更新的新

476
00:20:33,900 --> 00:20:36,000
结构我们可以

477
00:20:36,000 --> 00:20:37,020


478
00:20:37,020 --> 00:20:38,940
通过在异步污染方案内部同时

479
00:20:38,940 --> 00:20:41,220
训练和评估不同的

480
00:20:41,220 --> 00:20:44,820
结构来加速这个过程

481
00:20:44,820 --> 00:20:49,159


482
00:20:50,160 --> 00:20:52,020
嗯这实际上是

483
00:20:52,020 --> 00:20:53,580
嗯这是一个动画但它

484
00:20:53,580 --> 00:20:56,460
在这个版本中不起作用 幻灯片

485
00:20:56,460 --> 00:20:58,740
嗯，因为我们使用的是 PDF，但它

486
00:20:58,740 --> 00:21:01,260
主要是一个结构，

487
00:21:01,260 --> 00:21:02,820
您会看到

488
00:21:02,820 --> 00:21:06,120
这些节点之间的边缘或连接

489
00:21:06,120 --> 00:21:07,679


490
00:21:07,679 --> 00:21:10,940
嗯褪色和/或根据迭代中的

491
00:21:10,940 --> 00:21:13,320
每月值具有较暗的颜色，

492
00:21:13,320 --> 00:21:15,539
因此

493
00:21:15,539 --> 00:21:17,460
此中的每个帧嗯

494
00:21:17,460 --> 00:21:21,360
呃 在这个动画中，是

495
00:21:21,360 --> 00:21:24,840


496
00:21:24,840 --> 00:21:27,660
基于

497
00:21:27,660 --> 00:21:30,240
神经网络版本的性能对边缘信息素值的更新，该神经网络版本是

498
00:21:30,240 --> 00:21:32,400
由亚洲人

499
00:21:32,400 --> 00:21:34,860
从起始节点蜂拥而至并采用其中

500
00:21:34,860 --> 00:21:36,600
一个输入节点时生成的。 中间

501
00:21:36,600 --> 00:21:38,640
层，然后从那里转到我们这里的

502
00:21:38,640 --> 00:21:40,559
隐藏层中的一个隐藏层，

503
00:21:40,559 --> 00:21:42,780
然后从那里

504
00:21:42,780 --> 00:21:45,678
转到输出，

505
00:21:47,100 --> 00:21:50,039
所以嗯，这就是应用

506
00:21:50,039 --> 00:21:53,400
ATO 和当前优化的概念，

507
00:21:53,400 --> 00:21:57,539
嗯 Nas，现在我' 我要

508
00:21:57,539 --> 00:21:59,340
谈谈我们提出的实际方法，

509
00:21:59,340 --> 00:22:01,580


510
00:22:01,980 --> 00:22:05,580
所以它更引人注目，更强大，嗯，

511
00:22:05,580 --> 00:22:08,280
神经检测搜索方法，呃，

512
00:22:08,280 --> 00:22:10,500
更全面，如果我可以说，

513
00:22:10,500 --> 00:22:11,640


514
00:22:11,640 --> 00:22:13,220
嗯，我们我们

515
00:22:13,220 --> 00:22:17,580
选择应用该方法，呃，

516
00:22:17,580 --> 00:22:20,220
呃，嗯 我们需要神经网络，

517
00:22:20,220 --> 00:22:23,700
因为它们往往

518
00:22:23,700 --> 00:22:25,500
比

519
00:22:25,500 --> 00:22:28,140
其他 C 或神经网络

520
00:22:28,140 --> 00:22:30,299
结构更大，因为它们当前的

521
00:22:30,299 --> 00:22:32,880
连接，所以我们认为，如果我们

522
00:22:32,880 --> 00:22:35,760
开始这个问题，则构建

523
00:22:35,760 --> 00:22:37,200
适用于任何神经

524
00:22:37,200 --> 00:22:39,360
网络的方法或常数，但将其应用于 循环

525
00:22:39,360 --> 00:22:40,740
网络

526
00:22:40,740 --> 00:22:43,620
使得测量我们想到的方法的性能变得更具吸引力，

527
00:22:43,620 --> 00:22:45,600


528
00:22:45,600 --> 00:22:47,600


529
00:22:47,700 --> 00:22:49,679


530
00:22:49,679 --> 00:22:52,400


531
00:22:52,500 --> 00:22:55,500
因此接下来的这一行将

532
00:22:55,500 --> 00:22:58,500
讨论蚂蚁方法的不同启发式，

533
00:22:58,500 --> 00:23:01,280
其特征是

534
00:23:01,280 --> 00:23:03,600
上层结构本身，

535
00:23:03,600 --> 00:23:05,760
并且正如我们一样 之前提到过，它

536
00:23:05,760 --> 00:23:08,400
是一个方法搜索空间，并且是一个

537
00:23:08,400 --> 00:23:10,980
尽可能用我们正在研究的

538
00:23:10,980 --> 00:23:14,100
机器或硬件来处理的方法，

539
00:23:14,100 --> 00:23:15,840


540
00:23:15,840 --> 00:23:18,299
上层建筑由一个

541
00:23:18,299 --> 00:23:19,740
大规模连接的神经网络组成，这

542
00:23:19,740 --> 00:23:22,020
意味着该结构中的每个节点

543
00:23:22,020 --> 00:23:23,520
与

544
00:23:23,520 --> 00:23:27,240
它们所在的其他节点相连，或者通过边 前向

545
00:23:27,240 --> 00:23:30,059
边和循环边 后向前

546
00:23:30,059 --> 00:23:32,820
向边和后向角边

547
00:23:32,820 --> 00:23:34,860
嗯，我们这里的这个简单结构

548
00:23:34,860 --> 00:23:37,200
代表了

549
00:23:37,200 --> 00:23:39,600
我们在

550
00:23:39,600 --> 00:23:42,780
蚂蚁中应用的上层结构的概念之一 有三个

551
00:23:42,780 --> 00:23:45,059
输入节点，呃，三个隐藏层，每个隐藏层

552
00:23:45,059 --> 00:23:47,400
在输出层中有三个节点和一个输出节点

553
00:23:47,400 --> 00:23:51,020
，我们只是显示

554
00:23:51,020 --> 00:23:53,640
一个通过边连接到其他节点的节点，

555
00:23:53,640 --> 00:23:56,220
这些边是

556
00:23:56,220 --> 00:23:59,100
用绿色

557
00:23:59,100 --> 00:24:01,380
前向循环表示的，

558
00:24:01,380 --> 00:24:02,520


559
00:24:02,520 --> 00:24:05,159
抱歉，边是 一个是灰色的，

560
00:24:05,159 --> 00:24:06,659
然后是绿色的正向电流和反向

561
00:24:06,659 --> 00:24:09,360
电流，红色是红色，

562
00:24:09,360 --> 00:24:13,620


563
00:24:13,620 --> 00:24:15,419
如果我们在这个例子中看的话，循环边缘 um 的概念可能会有点令人困惑，

564
00:24:15,419 --> 00:24:18,419
因为

565
00:24:18,419 --> 00:24:20,460
边缘

566
00:24:20,460 --> 00:24:22,740
um 怎么会出现电流进入和 来自

567
00:24:22,740 --> 00:24:26,460
同一节点或

568
00:24:26,460 --> 00:24:29,280
同一时间步骤中的音符，但这种结构可能会

569
00:24:29,280 --> 00:24:32,760
使其更加清晰，

570
00:24:32,760 --> 00:24:34,380
所以这里我们有

571
00:24:34,380 --> 00:24:37,620
一个结构，其中三个

572
00:24:37,620 --> 00:24:39,419
与我们之前看到的结构非常相似，但

573
00:24:39,419 --> 00:24:41,700
这里我们有三个输入 节点 两个

574
00:24:41,700 --> 00:24:43,200
隐藏层

575
00:24:43,200 --> 00:24:45,059
在第三章节点中有三个 in 层，然后输出

576
00:24:45,059 --> 00:24:46,860
它们有两个音符

577
00:24:46,860 --> 00:24:49,260
um 然后我们还有三个时间

578
00:24:49,260 --> 00:24:51,900
步长 t 为零的当前时间和 T

579
00:24:51,900 --> 00:24:53,640
减一之前的时间 T

580
00:24:53,640 --> 00:24:56,280
减之前的时间

581
00:24:56,280 --> 00:25:01,080
这里的两条边是使用

582
00:25:01,080 --> 00:25:04,440
黑实线

583
00:25:04,440 --> 00:25:07,799
um 来说明的，当然这些边

584
00:25:07,799 --> 00:25:10,440
存在于当前时间步中，

585
00:25:10,440 --> 00:25:12,059
将通过神经

586
00:25:12,059 --> 00:25:16,140
网络传播，然后当前的 uh

587
00:25:16,140 --> 00:25:18,600
连接这些边将

588
00:25:18,600 --> 00:25:20,520
带来信息

589
00:25:20,520 --> 00:25:22,500
um 或提供 来自

590
00:25:22,500 --> 00:25:25,200
先前时间步骤的信息 先前的

591
00:25:25,200 --> 00:25:28,260
um uh 输入或先前的 uh 数据，以

592
00:25:28,260 --> 00:25:31,440
先前的语言发射到节点，

593
00:25:31,440 --> 00:25:32,520


594
00:25:32,520 --> 00:25:36,299
这些是当前边缘，

595
00:25:36,299 --> 00:25:39,240
此处以红色和橙色检测到 四个边缘

596
00:25:39,240 --> 00:25:42,539
以红色和橙色表示更好 红色是

597
00:25:42,539 --> 00:25:44,039
来自 T 减一，橙色

598
00:25:44,039 --> 00:25:46,860
来自 T 减二

599
00:25:46,860 --> 00:25:50,520
，向后的当前边缘是

600
00:25:50,520 --> 00:25:55,740
蓝色和绿色的点线，嗯，

601
00:25:55,740 --> 00:25:56,940
你可以看到它们正在

602
00:25:56,940 --> 00:25:59,279
向后移动，所以它们剪切了

603
00:25:59,279 --> 00:26:03,659
向后和向后层

604
00:26:03,659 --> 00:26:04,340
um

605
00:26:04,340 --> 00:26:08,220
但是呃但是我们但是因为他们

606
00:26:08,220 --> 00:26:09,960
已经是当前的我们可以做到这一点因为

607
00:26:09,960 --> 00:26:12,360
他们正在处理信息他们

608
00:26:12,360 --> 00:26:14,220
带来了已经处理过的信息

609
00:26:14,220 --> 00:26:16,520
所以我们不必担心

610
00:26:16,520 --> 00:26:19,320
通过

611
00:26:19,320 --> 00:26:20,700
时间

612
00:26:20,700 --> 00:26:23,039
或结构返回信息但我们可以

613
00:26:23,039 --> 00:26:24,840
做到这一点 如果它来自上一个

614
00:26:24,840 --> 00:26:27,439
时间戳，则

615
00:26:27,779 --> 00:26:30,840
第二个启发式和蚂蚁是

616
00:26:30,840 --> 00:26:35,400
殖民地权重共享，我们想使用

617
00:26:35,400 --> 00:26:38,700
嗯，那么我们不想使用初始品牌来

618
00:26:38,700 --> 00:26:41,520
初始化权重或突触权

619
00:26:41,520 --> 00:26:45,179
重并生成神经网络，呃

620
00:26:45,179 --> 00:26:48,539
我们想使用训练权重

621
00:26:48,539 --> 00:26:51,600
来初始化 新

622
00:26:51,600 --> 00:26:55,140
生成的神经网络的权重，我们

623
00:26:55,140 --> 00:26:57,240
通过将这些神经网络保存在上层建筑上来做到这一点，

624
00:26:57,240 --> 00:26:58,880


625
00:26:58,880 --> 00:27:02,520
我们使用最后一个

626
00:27:02,520 --> 00:27:05,700
um 方程来进行更新，这样我们就可以在

627
00:27:05,700 --> 00:27:07,740


628
00:27:07,740 --> 00:27:11,100
之前保存的方式和我们现在的方式之间取得平衡

629
00:27:11,100 --> 00:27:13,260
来自经过训练或评估的

630
00:27:13,260 --> 00:27:16,440
神经网络，我们还使用了两个

631
00:27:16,440 --> 00:27:19,500
中文来进行此更新，我们使用了

632
00:27:19,500 --> 00:27:25,020
固定参数文件，或者如果我们

633
00:27:25,020 --> 00:27:27,659
发现这是第一个策略，则

634
00:27:27,659 --> 00:27:29,700
第二个策略是

635
00:27:29,700 --> 00:27:33,380
通过应用这两个方程来获得 Fly，这两个方程

636
00:27:33,380 --> 00:27:36,600
依赖于 关于

637
00:27:36,600 --> 00:27:38,159
以前

638
00:27:38,159 --> 00:27:40,740
一般的神经网络的性能哦，对不起，以前的

639
00:27:40,740 --> 00:27:43,380
相关入口，所以它依赖于

640
00:27:43,380 --> 00:27:45,539


641
00:27:45,539 --> 00:27:49,500
经过训练、验证或测试的神经网络的性能，

642
00:27:49,500 --> 00:27:51,480
所以如果

643
00:27:51,480 --> 00:27:54,000
嗯，如果承诺是好的，那么

644
00:27:54,000 --> 00:27:57,600
我们会让 这个呃

645
00:27:57,600 --> 00:28:00,120
神经网络的权重对

646
00:28:00,120 --> 00:28:04,340
呃

647
00:28:04,340 --> 00:28:06,600
初始化的方式做出了更多的贡献，所以新

648
00:28:06,600 --> 00:28:08,580
生成的RNs如果它表现得

649
00:28:08,580 --> 00:28:11,279
不好那么为什么这个方程

650
00:28:11,279 --> 00:28:13,919
不允许它做出那么大的贡献

651
00:28:13,919 --> 00:28:15,360


652
00:28:15,360 --> 00:28:18,240
好吗？ 第三个元启发式是

653
00:28:18,240 --> 00:28:20,640
多个记忆单元，

654
00:28:20,640 --> 00:28:23,520
因此每个节点上的每个记忆单元

655
00:28:23,520 --> 00:28:26,760
当代理或

656
00:28:26,760 --> 00:28:28,919
蚂蚁到达上层建筑中的节点时，

657
00:28:28,919 --> 00:28:31,679
它将进行本地

658
00:28:31,679 --> 00:28:33,179
搜索

659
00:28:33,179 --> 00:28:36,779
以选择新节点的类型

660
00:28:36,779 --> 00:28:40,080
来自

661
00:28:40,080 --> 00:28:42,059
这三种不同类型的记忆

662
00:28:42,059 --> 00:28:45,600
细胞的神经元或节点类型，因此在生成的 RNN 中，

663
00:28:45,600 --> 00:28:47,880
生成结构中的节点

664
00:28:47,880 --> 00:28:50,279
并不完全相同，它们

665
00:28:50,279 --> 00:28:52,200
会根据代理的局部搜索而有所不同

666
00:28:52,200 --> 00:28:54,299


667
00:28:54,299 --> 00:28:55,260


668
00:28:55,260 --> 00:28:57,240
会做或结束会

669
00:28:57,240 --> 00:28:59,520
在他们通过上层建筑中从输入到输出的路径到达的每个节点上做是的，

670
00:28:59,520 --> 00:29:02,039


671
00:29:02,039 --> 00:29:03,419


672
00:29:03,419 --> 00:29:04,860


673
00:29:04,860 --> 00:29:07,799
第四个主要是多重

674
00:29:07,799 --> 00:29:10,140
反物种，所以我们应用了

675
00:29:10,140 --> 00:29:12,480
嗯不同的物种呃或者

676
00:29:12,480 --> 00:29:14,460
为蚂蚁想出了不同的物种

677
00:29:14,460 --> 00:29:16,860
嗯 第一个物种是那些

678
00:29:16,860 --> 00:29:19,320
将仅遍历边缘的

679
00:29:19,320 --> 00:29:21,720
边缘，因此它们只会向前穿过

680
00:29:21,720 --> 00:29:26,039
呃质量

681
00:29:26,039 --> 00:29:27,720
神经网络的边缘，上层建筑

682
00:29:27,720 --> 00:29:29,100


683
00:29:29,100 --> 00:29:32,640
，这些将定义

684
00:29:32,640 --> 00:29:34,440
节点的数量 生成的

685
00:29:34,440 --> 00:29:36,720
结构我还将定义

686
00:29:36,720 --> 00:29:39,120
上层建筑中节点的类型

687
00:29:39,120 --> 00:29:40,799
，当它们完成工作时，

688
00:29:40,799 --> 00:29:43,559
社会或第二个物种就是

689
00:29:43,559 --> 00:29:45,500
社会蚂蚁，

690
00:29:45,500 --> 00:29:50,039
在这些节点之间遍历，但

691
00:29:50,039 --> 00:29:53,460
它们将使用它们当前的边缘

692
00:29:53,460 --> 00:29:56,279
做在这些节点之间移动的事情，

693
00:29:56,279 --> 00:29:59,220
这样它们就会

694
00:29:59,220 --> 00:30:01,020
为它们创建循环边缘，真正

695
00:30:01,020 --> 00:30:03,539
生成RNA，我们为这些社会蚂蚁提供了两种不同的

696
00:30:03,539 --> 00:30:06,600
物种，或者三种

697
00:30:06,600 --> 00:30:10,020
不同的物种亚型，其中一个是前

698
00:30:10,020 --> 00:30:13,320
向，所以前向 呃，

699
00:30:13,320 --> 00:30:16,200
社会目标，我们这些人只能

700
00:30:16,200 --> 00:30:19,919
在呃，他们

701
00:30:19,919 --> 00:30:22,500
从输入到输出的不良连接上取得进展，但

702
00:30:22,500 --> 00:30:25,860
只能在当前边缘上

703
00:30:25,860 --> 00:30:28,080
，然后回到

704
00:30:28,080 --> 00:30:30,659
所有向后的社交蚂蚁这些蚂蚁

705
00:30:30,659 --> 00:30:33,720
去的地方 从输出到输入以及

706
00:30:33,720 --> 00:30:36,299
对侦察连接的遍历

707
00:30:36,299 --> 00:30:39,240
以及我们思考

708
00:30:39,240 --> 00:30:41,100
这些不同物种的原因是我们

709
00:30:41,100 --> 00:30:43,200
想要控制

710
00:30:43,200 --> 00:30:46,919
蚂蚁在上层建筑中徘徊的趋势，

711
00:30:46,919 --> 00:30:48,779
利用

712
00:30:48,779 --> 00:30:51,240
令人费解的嗯

713
00:30:51,240 --> 00:30:52,919


714
00:30:52,919 --> 00:30:54,840


715
00:30:54,840 --> 00:30:57,480
嗯，循环连接的网格，所以我们想控制它，所以我们

716
00:30:57,480 --> 00:31:00,299
想出了这个策略，这样我们就

717
00:31:00,299 --> 00:31:01,080
可以

718
00:31:01,080 --> 00:31:04,020
使用

719
00:31:04,020 --> 00:31:05,820
探索结束来定义结构，然后

720
00:31:05,820 --> 00:31:07,679
可以

721
00:31:07,679 --> 00:31:11,539
使用社交答案

722
00:31:11,640 --> 00:31:15,240
第五个第五个UM来定义循环连接 流星是

723
00:31:15,240 --> 00:31:17,760
呃促销声明的正规化，

724
00:31:17,760 --> 00:31:19,980
我们希望它能

725
00:31:19,980 --> 00:31:22,380
给予先进的激励，以

726
00:31:22,380 --> 00:31:24,799
带来更

727
00:31:24,799 --> 00:31:30,059
稀疏且性能良好的神经

728
00:31:30,059 --> 00:31:31,200
网络，

729
00:31:31,200 --> 00:31:34,620
我们通过惩罚他们，

730
00:31:34,620 --> 00:31:38,220
如果他们建造了更密集或

731
00:31:38,220 --> 00:31:40,260
更大的结构，

732
00:31:40,260 --> 00:31:45,179
所以我们补充道 这个正则化项和

733
00:31:45,179 --> 00:31:47,340
更新激素值的公式，

734
00:31:47,340 --> 00:31:49,620


735
00:31:49,620 --> 00:31:52,380
正如你所看到的，正则化

736
00:31:52,380 --> 00:31:54,779
项依赖于性能，

737
00:31:54,779 --> 00:31:56,159
这里的 Ada 是神经网络的性能

738
00:31:56,159 --> 00:31:58,980
，也依赖于结构的大小，

739
00:31:58,980 --> 00:32:02,539


740
00:32:06,299 --> 00:32:09,120
um 最后一个厚的和最后一个 是 um

741
00:32:09,120 --> 00:32:12,480
是 是 跳跃和跳跃结束 这是

742
00:32:12,480 --> 00:32:14,760
我们想要实验的

743
00:32:14,760 --> 00:32:18,179
如果我们让 um 的末端

744
00:32:18,179 --> 00:32:20,940
如果我们让名字

745
00:32:20,940 --> 00:32:23,100
um 跳过层 当它们

746
00:32:23,100 --> 00:32:25,620
穿过 呃

747
00:32:25,620 --> 00:32:28,559
穿过上层建筑

748
00:32:28,559 --> 00:32:30,539
um 如果我们让它们跳过这些

749
00:32:30,539 --> 00:32:31,740
构建神经网络的层

750
00:32:31,740 --> 00:32:34,140
与如果我们限制它们的

751
00:32:34,140 --> 00:32:37,399
运动每次跳跃一层相比，

752
00:32:37,399 --> 00:32:41,100


753
00:32:41,100 --> 00:32:44,039
如果它们会给我们

754
00:32:44,039 --> 00:32:46,919
解析器并且在执行呃

755
00:32:46,919 --> 00:32:49,320
结构时，或者他们会这样做，那么这个呃最终

756
00:32:49,320 --> 00:32:51,899
会如何表现呢？

757
00:32:51,899 --> 00:32:56,279
通过保持较弱的 uh 结构来提高性能，

758
00:32:56,279 --> 00:32:59,279
所以

759
00:32:59,940 --> 00:33:00,679


760
00:33:00,679 --> 00:33:05,039
我们使用

761
00:33:05,039 --> 00:33:07,799
属于燃煤电厂的时间序列数据 uh 我们将

762
00:33:07,799 --> 00:33:11,940
数据划分为 uh 7200

763
00:33:11,940 --> 00:33:15,179
um 记录进行训练和测试，

764
00:33:15,179 --> 00:33:18,000
这里的绘图显示了数据 我们

765
00:33:18,000 --> 00:33:21,059
可以看到它是非线性的，

766
00:33:21,059 --> 00:33:24,659
嗯，它是一个周期，而不是

767
00:33:24,659 --> 00:33:26,580
季节性的，所以这

768
00:33:26,580 --> 00:33:31,019
对于非嗯呃神经网络

769
00:33:31,019 --> 00:33:33,059
解决方案或回归线性

770
00:33:33,059 --> 00:33:36,120
回归解决方案来说是一个难题，所以

771
00:33:36,120 --> 00:33:38,820
输入由 12 个参数组成，当

772
00:33:38,820 --> 00:33:40,500
当我们试图

773
00:33:40,500 --> 00:33:45,019
只预测一个参数时，火焰强度

774
00:33:46,640 --> 00:33:48,840
实验涵盖了

775
00:33:48,840 --> 00:33:51,899
蚂蚁的所有启发法，

776
00:33:51,899 --> 00:33:53,820
嗯，为这些不同的参数给出了不同的值，

777
00:33:53,820 --> 00:33:56,600


778
00:33:56,940 --> 00:33:59,159
上层建筑由 12 个

779
00:33:59,159 --> 00:34:00,659
非常好的节点、三个隐藏层

780
00:34:00,659 --> 00:34:03,299
和第 12 章注释组成

781
00:34:03,299 --> 00:34:05,340
输出播放器中的一一输出节点

782
00:34:05,340 --> 00:34:07,740
um 循环连接花费了超过

783
00:34:07,740 --> 00:34:10,260
um 三个时间步骤 1 2 和 3

784
00:34:10,260 --> 00:34:11,639
次步骤

785
00:34:11,639 --> 00:34:14,339
um 直到上层结构有 49 个

786
00:34:14,339 --> 00:34:19,739
节点 uh 9924 个边和几乎 3.5

787
00:34:19,739 --> 00:34:20,760
000

788
00:34:20,760 --> 00:34:22,859
um 循环地址，因此如果您将

789
00:34:22,859 --> 00:34:26,820
结构展开超过 30  72 个时间步长，

790
00:34:26,820 --> 00:34:28,980
在时间传播中将

791
00:34:28,980 --> 00:34:34,199
有大约 3.5 个抱歉 352

792
00:34:34,199 --> 00:34:36,659
um 千，你知道大约 650

793
00:34:36,659 --> 00:34:40,739
万条边和 20 个大约 2600 万条

794
00:34:40,739 --> 00:34:42,119
重复边，

795
00:34:42,119 --> 00:34:44,940
我们在经验中还

796
00:34:44,940 --> 00:34:47,219
使用相同的数据集比较了蚂蚁的性能

797
00:34:47,219 --> 00:34:51,060
我们将它与考试进行比较，

798
00:34:51,060 --> 00:34:56,940
因此考试是最先进的

799
00:34:56,940 --> 00:34:59,760
神经纹理搜索，这是

800
00:34:59,760 --> 00:35:01,680
基于遗传

801
00:35:01,680 --> 00:35:04,800
的方法，我们也将它与整洁进行比较，

802
00:35:04,800 --> 00:35:07,980
因为它就像新

803
00:35:07,980 --> 00:35:11,700
革命的基准，纳斯呃好吧，我们也

804
00:35:11,700 --> 00:35:13,680
我们 将其转换为固定结构

805
00:35:13,680 --> 00:35:16,920
未优化的结构，即一

806
00:35:16,920 --> 00:35:18,900
二三呃，具有一

807
00:35:18,900 --> 00:35:21,300
二三隐藏层以及不同

808
00:35:21,300 --> 00:35:24,020
类型的

809
00:35:24,260 --> 00:35:27,960
基于记忆的细胞

810
00:35:27,960 --> 00:35:30,359
实验涵盖了 1600 个实验，

811
00:35:30,359 --> 00:35:31,859
涵盖了

812
00:35:31,859 --> 00:35:33,540
过早启发法和蚂蚁启发法的所有组合

813
00:35:33,540 --> 00:35:35,579


814
00:35:35,579 --> 00:35:38,400
um 这些实验中的每一个都

815
00:35:38,400 --> 00:35:41,760
重复了 10 次，用于

816
00:35:41,760 --> 00:35:44,599
统计分析，

817
00:35:45,300 --> 00:35:47,300
嗯，

818
00:35:47,300 --> 00:35:51,300
很好地说明了每个实验 2000 个 rnn，

819
00:35:51,300 --> 00:35:55,200
每个实验总共训练了 10 个 Apex，

820
00:35:55,200 --> 00:35:58,680
生成了一个与

821
00:35:58,680 --> 00:36:01,220
梦相关的训练，并评估了

822
00:36:01,220 --> 00:36:05,640
3200 万个 rnn，花费了一个月的时间

823
00:36:05,640 --> 00:36:08,339
好吧，还有一千个CPU来完成

824
00:36:08,339 --> 00:36:10,619
实验，

825
00:36:10,619 --> 00:36:14,579
我们得到的结果表明，最终结果当然是

826
00:36:14,579 --> 00:36:16,440
来自

827
00:36:16,440 --> 00:36:18,560
非结构化

828
00:36:18,560 --> 00:36:21,359
非结构化结构呃非结构化

829
00:36:21,359 --> 00:36:23,880
呃抱歉未优化优化的

830
00:36:23,880 --> 00:36:26,880
结构并且它也优于呃

831
00:36:26,880 --> 00:36:28,200
需要

832
00:36:28,200 --> 00:36:31,020
然后一些蚂蚁的组合表现

833
00:36:31,020 --> 00:36:34,500
优于 感觉所以这里的考试是

834
00:36:34,500 --> 00:36:36,420
从左数第四个，

835
00:36:36,420 --> 00:36:38,820
我们可以看到平均

836
00:36:38,820 --> 00:36:41,579
绝对误差或

837
00:36:41,579 --> 00:36:44,099
健康和启发式的一些版本或组合

838
00:36:44,099 --> 00:36:46,140


839
00:36:46,140 --> 00:36:49,460
从考试中出来，

840
00:36:49,920 --> 00:36:53,220
所以我们尝试做一些

841
00:36:53,220 --> 00:36:54,780
统计

842
00:36:54,780 --> 00:36:55,619


843
00:36:55,619 --> 00:36:59,220
研究或 我们从蚂蚁那里得到的结果，所以

844
00:36:59,220 --> 00:37:02,880
我们试图查看结果中

845
00:37:02,880 --> 00:37:05,460
表现最好的神经网络，

846
00:37:05,460 --> 00:37:08,400
所以我们尝试查看

847
00:37:08,400 --> 00:37:14,339
前 10 25 120 200 250 和 500 个结果

848
00:37:14,339 --> 00:37:16,980
，我们可以看看

849
00:37:16,980 --> 00:37:19,079
这些启发式的贡献

850
00:37:19,079 --> 00:37:22,500
在这个表现最佳的神经

851
00:37:22,500 --> 00:37:24,839
网络或结构中，

852
00:37:24,839 --> 00:37:28,260
我们发现这些启发式方法

853
00:37:28,260 --> 00:37:31,440
在大多数结果中都做出了有效的贡献，

854
00:37:31,440 --> 00:37:35,060
但

855
00:37:35,060 --> 00:37:37,560
真正让

856
00:37:37,560 --> 00:37:40,140


857
00:37:40,140 --> 00:37:42,140


858
00:37:43,140 --> 00:37:46,320
我们感兴趣或让

859
00:37:46,320 --> 00:37:48,780
我们感到惊讶的是，

860
00:37:48,780 --> 00:37:52,260
我们看到的是 他们

861
00:37:52,260 --> 00:37:54,000
当前的连接

862
00:37:54,000 --> 00:37:55,920
在这个结果中消失了，因为

863
00:37:55,920 --> 00:37:58,260
性能最好的神经网络

864
00:37:58,260 --> 00:38:00,839
没有那么多的侦察

865
00:38:00,839 --> 00:38:02,579
连接，

866
00:38:02,579 --> 00:38:06,119
这对我们来说意味着

867
00:38:06,119 --> 00:38:09,180
基于记忆的细胞完成了

868
00:38:09,180 --> 00:38:11,099
来自前次的循环信息的工作

869
00:38:11,099 --> 00:38:13,619
测试，但我们

870
00:38:13,619 --> 00:38:16,619
只想扩展这一层，

871
00:38:16,619 --> 00:38:19,740
但它在我们讨论未来研究的列表中，

872
00:38:19,740 --> 00:38:23,899


873
00:38:25,800 --> 00:38:28,920
所以这只是

874
00:38:28,920 --> 00:38:31,320
基于

875
00:38:31,320 --> 00:38:34,380
我们从

876
00:38:34,380 --> 00:38:37,339
外国

877
00:38:52,339 --> 00:38:54,540
利用循环实验中获得的实验结果对蚂蚁的成就进行的总结 连接证明是

878
00:38:54,540 --> 00:38:56,760
成功的，因为

879
00:38:56,760 --> 00:38:59,300
呃

880
00:38:59,300 --> 00:39:01,800
组织启发式的正则化部分

881
00:39:01,800 --> 00:39:04,260


882
00:39:04,260 --> 00:39:06,780
可能会给我们更好的结果，

883
00:39:06,780 --> 00:39:09,079
在此表中显示，

884
00:39:09,079 --> 00:39:13,079
而且与非王牌离子

885
00:39:13,079 --> 00:39:15,359
相比，这里的跳跃蚂蚁给我们带来了更好的性能，

886
00:39:15,359 --> 00:39:18,560


887
00:39:19,079 --> 00:39:22,160


888
00:39:24,359 --> 00:39:27,780
并且实现也 嗯，

889
00:39:27,780 --> 00:39:28,940


890
00:39:28,940 --> 00:39:30,680


891
00:39:30,680 --> 00:39:35,280
环策略的数据也证明了

892
00:39:35,280 --> 00:39:38,099
嗯有效，当我们看它时，

893
00:39:38,099 --> 00:39:40,260
这里也有与如果我们

894
00:39:40,260 --> 00:39:44,240
不应用呃工资听证会相比的情况，

895
00:39:46,260 --> 00:39:48,619
好吧，所以

896
00:39:54,660 --> 00:39:58,220
最终化和策略呃是

897
00:39:58,220 --> 00:40:00,500
通用的，所以

898
00:40:00,500 --> 00:40:03,000
我们的策略 使用

899
00:40:03,000 --> 00:40:05,220
足够通用，可以将其应用于任何

900
00:40:05,220 --> 00:40:08,220


901
00:40:08,220 --> 00:40:10,020
基于最终殖民地和最终呼叫优化的任何问题或解决方案，以及

902
00:40:10,020 --> 00:40:11,579
基于

903
00:40:11,579 --> 00:40:12,420


904
00:40:12,420 --> 00:40:15,180
佛蒙特沉积的

905
00:40:15,180 --> 00:40:17,280
方法，我们提出的方法也是

906
00:40:17,280 --> 00:40:18,900


907
00:40:18,900 --> 00:40:21,839
之前在任何插画家中都没有引入的价值 与该领域的其他基准和艺术水平

908
00:40:21,839 --> 00:40:23,640
相比，生物嗯和广告的表现

909
00:40:23,640 --> 00:40:26,099


910
00:40:26,099 --> 00:40:28,680
也

911
00:40:28,680 --> 00:40:30,599
非常出色，

912
00:40:30,599 --> 00:40:31,859
所以

913
00:40:31,859 --> 00:40:35,339
展望未来，我们认为并且

914
00:40:35,339 --> 00:40:39,000
确实为我们提供了很好的资源，但

915
00:40:39,000 --> 00:40:42,260
蚂蚁的主要缺点是

916
00:40:42,260 --> 00:40:44,700
生物 空间

917
00:40:44,700 --> 00:40:48,180
嗯，所以蚂蚁在这个大规模

918
00:40:48,180 --> 00:40:50,300
连接的嗯嗯

919
00:40:50,300 --> 00:40:53,280
连接的上层建筑上工作，但

920
00:40:53,280 --> 00:40:56,760
它是巨大的，是的，但它仍然是嗯

921
00:40:56,760 --> 00:40:58,200
离散的

922
00:40:58,200 --> 00:41:01,200
嗯蚂蚁可以在这些嗯节点之间自由移动

923
00:41:01,200 --> 00:41:04,380
，或者它们被迫在

924
00:41:04,380 --> 00:41:06,960
这些嗯

925
00:41:06,960 --> 00:41:10,260
预定义的嗯连接之间移动，无论它们是

926
00:41:10,260 --> 00:41:14,599
是伪造的边缘或当前边缘，

927
00:41:14,599 --> 00:41:16,140


928
00:41:16,140 --> 00:41:19,320
所以我们考虑删除

929
00:41:19,320 --> 00:41:21,540


930
00:41:21,540 --> 00:41:23,040
空间街道的连续搜索并将其替换为连续

931
00:41:23,040 --> 00:41:25,440
空间，

932
00:41:25,440 --> 00:41:29,640
因此我们设计了一个 3D 搜索空间，

933
00:41:29,640 --> 00:41:31,680
其中

934
00:41:31,680 --> 00:41:34,560
搜索位具有

935
00:41:34,560 --> 00:41:37,800
代表时间长度的层 长度

936
00:41:37,800 --> 00:41:40,500
um，然后蚂蚁可以在

937
00:41:40,500 --> 00:41:44,280
这些层之间跳跃，必须给我们

938
00:41:44,280 --> 00:41:46,859
循环连接，并且在

939
00:41:46,859 --> 00:41:50,099
每个um层上，因此只会

940
00:41:50,099 --> 00:41:52,859
给我们转发和端口抱歉

941
00:41:52,859 --> 00:41:54,599
节点之间的边缘和

942
00:41:54,599 --> 00:41:57,680
节点之间的边缘

943
00:41:58,800 --> 00:42:00,960
嗯，所以在漫画幻灯片的这一行中，

944
00:42:00,960 --> 00:42:03,780
我们将展示一个示例，说明我如何在

945
00:42:03,780 --> 00:42:06,060
罐头或连续和

946
00:42:06,060 --> 00:42:08,040
嗯或连续结束中移动，

947
00:42:08,040 --> 00:42:11,160
因此代理或蚂蚁将首先

948
00:42:11,160 --> 00:42:13,260
拾取将继续

949
00:42:13,260 --> 00:42:16,320
移动的一层 这是以

950
00:42:16,320 --> 00:42:17,640
离散的方式完成的

951
00:42:17,640 --> 00:42:19,920
，一旦完成，它将

952
00:42:19,920 --> 00:42:21,480
决定是否要进行

953
00:42:21,480 --> 00:42:24,240
开发探索运动，在

954
00:42:24,240 --> 00:42:25,619
这个

955
00:42:25,619 --> 00:42:27,780
示例中，我们决定进行

956
00:42:27,780 --> 00:42:30,060
探索运动，因此它将

957
00:42:30,060 --> 00:42:34,020
决定其下一个的角度和半径 完成

958
00:42:34,020 --> 00:42:38,520
该层上的分配

959
00:42:38,520 --> 00:42:41,160
后，它将继续

960
00:42:41,160 --> 00:42:43,680
前进并到达该位置，然后

961
00:42:43,680 --> 00:42:45,060
决定是否要进行

962
00:42:45,060 --> 00:42:47,460
利用，或者下一步是否是

963
00:42:47,460 --> 00:42:50,040
利用探索移动，并且此

964
00:42:50,040 --> 00:42:51,619
示例

965
00:42:51,619 --> 00:42:55,460
利用移动，因此它将尝试

966
00:42:55,460 --> 00:42:58,380
利用正式的 追踪

967
00:42:58,380 --> 00:43:00,359
其他

968
00:43:00,359 --> 00:43:04,319
粉丝之前在搜索空间中放置的佛蒙特州，因此它将

969
00:43:04,319 --> 00:43:06,599
使用之前

970
00:43:06,599 --> 00:43:08,280
通过

971
00:43:08,280 --> 00:43:12,180
每一端定义的传感半径，然后它将

972
00:43:12,180 --> 00:43:12,780


973
00:43:12,780 --> 00:43:16,560
找到激素痕迹的质心，

974
00:43:16,560 --> 00:43:19,859
然后一旦它 发现它将

975
00:43:19,859 --> 00:43:21,780
计算激素的质心，

976
00:43:21,780 --> 00:43:24,119
它将认为它处于

977
00:43:24,119 --> 00:43:26,460
下一个位置

978
00:43:26,460 --> 00:43:29,520
，然后它将移动到该位置，

979
00:43:29,520 --> 00:43:31,800
然后它将决定

980
00:43:31,800 --> 00:43:34,079
它的下一个移动是否是开发

981
00:43:34,079 --> 00:43:37,079
探索移动八和并且 在

982
00:43:37,079 --> 00:43:39,240
每个位置，在决定

983
00:43:39,240 --> 00:43:41,579
步骤的类型（如果是

984
00:43:41,579 --> 00:43:43,740
剥削性循环）之前，它还将

985
00:43:43,740 --> 00:43:45,839
决定是否要同时保持在

986
00:43:45,839 --> 00:43:48,599
同一水平，例如或跳转

987
00:43:48,599 --> 00:43:53,060
到下一个时间线，

988
00:43:53,640 --> 00:43:56,760
如果跳转或 运动处于

989
00:43:56,760 --> 00:43:58,440
同一水平，

990
00:43:58,440 --> 00:43:59,220


991
00:43:59,220 --> 00:44:02,220
嗯，如果运动处于同一

992
00:44:02,220 --> 00:44:05,220
水平，则结束时，如果 S 正在进行

993
00:44:05,220 --> 00:44:07,200
剥削运动，它只会

994
00:44:07,200 --> 00:44:09,780
考虑在

995
00:44:09,780 --> 00:44:13,140
它前面的一个短语，

996
00:44:13,140 --> 00:44:15,420
因为它可以' 不要同时向后移动，

997
00:44:15,420 --> 00:44:17,540


998
00:44:17,540 --> 00:44:20,520
否则它将执行向后

999
00:44:20,520 --> 00:44:23,880
步骤，这在您的网络中是不允许的，

1000
00:44:23,880 --> 00:44:26,420


1001
00:44:26,520 --> 00:44:28,740
但是如果它要在

1002
00:44:28,740 --> 00:44:31,260


1003
00:44:31,260 --> 00:44:34,800
上层之上再有一个时间延迟，那么它可以是这样，

1004
00:44:34,800 --> 00:44:36,780
那么它将执行一个循环边缘

1005
00:44:36,780 --> 00:44:41,940
并且 所以当前的边缘可以及时返回哦，

1006
00:44:41,940 --> 00:44:44,220
抱歉，回到上

1007
00:44:44,220 --> 00:44:49,140
一张幻灯片的结构中，所以现在

1008
00:44:49,140 --> 00:44:51,720
蚂蚁可以在紧张时考虑所有形式

1009
00:44:51,720 --> 00:44:53,760
痕迹，并半径其

1010
00:44:53,760 --> 00:44:55,619
前面和

1011
00:44:55,619 --> 00:44:58,619
后面的痕迹 所以在这个例子中，他

1012
00:44:58,619 --> 00:45:00,540
将考虑

1013
00:45:00,540 --> 00:45:02,460
嗯，在这一步中，

1014
00:45:02,460 --> 00:45:04,079
当它的感测

1015
00:45:04,079 --> 00:45:06,540
半径可以计算质心时，他将考虑所有远程轨迹，

1016
00:45:06,540 --> 00:45:08,839
然后将其视为下一个

1017
00:45:08,839 --> 00:45:11,880
位置，然后

1018
00:45:11,880 --> 00:45:14,400
继续这样做，直到 它到达

1019
00:45:14,400 --> 00:45:17,880
输出节点的附近，一旦

1020
00:45:17,880 --> 00:45:19,740
完成，它将考虑

1021
00:45:19,740 --> 00:45:23,099
决定哪个输出节点

1022
00:45:23,099 --> 00:45:26,400
将被视为

1023
00:45:26,400 --> 00:45:29,599
其从输入到输出的路径中的最终位置

1024
00:45:29,599 --> 00:45:31,140
，

1025
00:45:31,140 --> 00:45:34,680
然后其他端也会做同样的事情

1026
00:45:34,680 --> 00:45:38,040
然后我们将有来自

1027
00:45:38,040 --> 00:45:42,300
一些输入和一些输出的不同路径，然后

1028
00:45:42,300 --> 00:45:45,180
帐户将采用这些路径，然后

1029
00:45:45,180 --> 00:45:47,400
尝试说服压缩

1030
00:45:47,400 --> 00:45:49,560
节点，这样我们就没有那么

1031
00:45:49,560 --> 00:45:52,200
多节点，并且它们彼此非常接近，

1032
00:45:52,200 --> 00:45:54,300
所以 在

1033
00:45:54,300 --> 00:45:57,599
一定距离内的一个节点将

1034
00:45:57,599 --> 00:46:00,300
使用数据库扫描聚集在一起，

1035
00:46:00,300 --> 00:46:04,619
以减少节点数量，然后

1036
00:46:04,619 --> 00:46:07,440
路径将被

1037
00:46:07,440 --> 00:46:08,240


1038
00:46:08,240 --> 00:46:11,700
收集并放入一个结构中，

1039
00:46:11,700 --> 00:46:15,660
一个足够新的结构，然后发送

1040
00:46:15,660 --> 00:46:18,000
到 训练和测试的工作进程，

1041
00:46:18,000 --> 00:46:20,040
然后将其与群体进行比较，

1042
00:46:20,040 --> 00:46:22,500
表现最好的 RN 和加号

1043
00:46:22,500 --> 00:46:26,400
将几乎相同，从这一点来看，

1044
00:46:26,400 --> 00:46:29,819
一旦

1045
00:46:29,819 --> 00:46:32,280
结构构建完成，

1046
00:46:32,280 --> 00:46:34,079
训练和测试过程

1047
00:46:34,079 --> 00:46:36,839
将与蚂蚁几乎相同 与我们

1048
00:46:36,839 --> 00:46:39,560
在舞蹈中讨论的相同，

1049
00:46:40,740 --> 00:46:43,500
所以这也是一个动画，

1050
00:46:43,500 --> 00:46:47,579
它显示了

1051
00:46:47,579 --> 00:46:51,060
蚂蚁如何采取这些路径呃看起来呃

1052
00:46:51,060 --> 00:46:53,339
从 3D 空间中的输入到输出

1053
00:46:53,339 --> 00:46:54,420


1054
00:46:54,420 --> 00:46:57,480
它是 3D 搜索空间

1055
00:46:57,480 --> 00:47:01,020
所以 就好像我们看看末端，蚂蚁

1056
00:47:01,020 --> 00:47:04,140
只有 8 个可调超

1057
00:47:04,140 --> 00:47:06,540
参数相比，当

1058
00:47:06,540 --> 00:47:08,640
将此与末端进行比较并检查时，它是

1059
00:47:08,640 --> 00:47:10,859
超级规划器和其他

1060
00:47:10,859 --> 00:47:13,800
方法数量的一半，这些超参数是

1061
00:47:13,800 --> 00:47:15,599
搜索空间的层数

1062
00:47:15,599 --> 00:47:17,760
腿种类的数量

1063
00:47:17,760 --> 00:47:20,520
我们在搜索空间中有多少条腿

1064
00:47:20,520 --> 00:47:22,920
代理数量 与

1065
00:47:22,920 --> 00:47:25,859
我们类似的蚂蚁数量相似 我们

1066
00:47:25,859 --> 00:47:28,140
有一个类似的 uh 超参数和

1067
00:47:28,140 --> 00:47:30,680
蚂蚁

1068
00:47:30,839 --> 00:47:32,339
um

1069
00:47:32,339 --> 00:47:34,980
代理或蚂蚁的感知半径 um

1070
00:47:34,980 --> 00:47:36,240


1071
00:47:36,240 --> 00:47:38,400
以及代理创建

1072
00:47:38,400 --> 00:47:43,619
新节点的概率 uh 代表

1073
00:47:43,619 --> 00:47:45,540
探索而不是利用

1074
00:47:45,540 --> 00:47:48,060
参数或

1075
00:47:48,060 --> 00:47:50,640
来自行业中的一个 uh 回溯的所有参数

1076
00:47:50,640 --> 00:47:53,160
um 节点补偿

1077
00:47:53,160 --> 00:47:56,880
um 参数或 uh uh 因素，这些

1078
00:47:56,880 --> 00:47:58,440


1079
00:47:58,440 --> 00:48:01,200
变量是

1080
00:48:01,200 --> 00:48:03,900
数据库扫描中表示的也被认为是超

1081
00:48:03,900 --> 00:48:06,660
参数 超参数和癌症中的

1082
00:48:06,660 --> 00:48:07,920


1083
00:48:07,920 --> 00:48:09,900
嗯用于一个更新参数和

1084
00:48:09,900 --> 00:48:11,940
一个波动性引物，这些也

1085
00:48:11,940 --> 00:48:14,280
存在于

1086
00:48:14,280 --> 00:48:18,660
嗯和基于 SEO 的问题呃

1087
00:48:18,660 --> 00:48:21,259
解决方案抱歉

1088
00:48:22,140 --> 00:48:23,640
嗯实验使用了三年

1089
00:48:23,640 --> 00:48:25,319


1090
00:48:25,319 --> 00:48:28,200
嗯 不同数量的参数和

1091
00:48:28,200 --> 00:48:30,919
不同的大小，

1092
00:48:31,140 --> 00:48:33,900
结果表明，因此，

1093
00:48:33,900 --> 00:48:35,900


1094
00:48:36,260 --> 00:48:39,060
我们从罐头得到的结果

1095
00:48:39,060 --> 00:48:41,460
非常呃，与

1096
00:48:41,460 --> 00:48:44,339
蚂蚁竞争，考试，

1097
00:48:44,339 --> 00:48:47,160
他们不一定

1098
00:48:47,160 --> 00:48:49,260
更好，但他们竞争，他们的

1099
00:48:49,260 --> 00:48:50,819
水平相同，

1100
00:48:50,819 --> 00:48:55,560
但它 呃，

1101
00:48:55,560 --> 00:48:58,500
在他们的数据集之一的数据库上也没有做得很好，

1102
00:48:58,500 --> 00:49:04,440
但是呃，比较的

1103
00:49:04,440 --> 00:49:06,960
是

1104
00:49:06,960 --> 00:49:10,200
主要绝对误差的性能，但是呃比较了

1105
00:49:10,200 --> 00:49:13,200
癌症结果，呃，呃，

1106
00:49:13,200 --> 00:49:13,920


1107
00:49:13,920 --> 00:49:15,359


1108
00:49:15,359 --> 00:49:17,339


1109
00:49:17,339 --> 00:49:19,880
对不起，

1110
00:49:25,319 --> 00:49:28,260
呃，从大小来看 在

1111
00:49:28,260 --> 00:49:31,880
我们从凯恩斯获得的新网络中，我们看到这种

1112
00:49:31,880 --> 00:49:35,160
情况，我们的结构

1113
00:49:35,160 --> 00:49:37,380
更加稀疏，

1114
00:49:37,380 --> 00:49:39,480
因此性能与

1115
00:49:39,480 --> 00:49:42,420
呃因此和考试竞争，但结构

1116
00:49:42,420 --> 00:49:45,420
也与蚂蚁相比，

1117
00:49:45,420 --> 00:49:49,800
更加稀疏呃类似于萨姆

1118
00:49:49,800 --> 00:49:52,740
呃

1119
00:49:52,740 --> 00:49:55,859
我们从考试中获得的结构的大小记住考试是

1120
00:49:55,859 --> 00:49:57,960
基于遗传的，这意味着

1121
00:49:57,960 --> 00:50:00,000


1122
00:50:00,000 --> 00:50:01,740
使用最小结构元素开始结构优化过程，

1123
00:50:01,740 --> 00:50:03,599


1124
00:50:03,599 --> 00:50:06,060
但它很容易受到

1125
00:50:06,060 --> 00:50:08,480
局部最小

1126
00:50:08,480 --> 00:50:10,800
陷阱陷阱

1127
00:50:10,800 --> 00:50:14,160
和时态的影响 不适合这个

1128
00:50:14,160 --> 00:50:17,099
问题，但它也给了我们

1129
00:50:17,099 --> 00:50:19,740
更小的结构，并且具有

1130
00:50:19,740 --> 00:50:21,420
我们与

1131
00:50:21,420 --> 00:50:25,020
其他消息检查者竞争的性能，

1132
00:50:28,680 --> 00:50:32,579
所以癌症的优点是，

1133
00:50:32,579 --> 00:50:35,700


1134
00:50:35,700 --> 00:50:37,079
与蚂蚁相比，它有一个不平衡的空间，

1135
00:50:37,079 --> 00:50:40,020
嗯结果结果与呃结果相比

1136
00:50:40,020 --> 00:50:42,900


1137
00:50:42,900 --> 00:50:45,599
与蚂蚁和检查超参数相比，结果很好，

1138
00:50:45,599 --> 00:50:47,760
可调超参数是

1139
00:50:47,760 --> 00:50:50,520
检查蚂蚁中的一半，

1140
00:50:50,520 --> 00:50:53,220
并且还间接将

1141
00:50:53,220 --> 00:50:56,040
神经拓扑编码到 3D 搜索空间，所以

1142
00:50:56,040 --> 00:50:57,720
这是其中之一，

1143
00:50:57,720 --> 00:51:00,960
也许重要贡献的贡献

1144
00:51:00,960 --> 00:51:04,220
取决于

1145
00:51:04,380 --> 00:51:07,440
嗯，到目前为止，目标和罐子是

1146
00:51:07,440 --> 00:51:08,880


1147
00:51:08,880 --> 00:51:11,839
应用神经

1148
00:51:11,839 --> 00:51:14,940
黄金架构搜索的解决方案，这意味着

1149
00:51:14,940 --> 00:51:16,380
他们没有

1150
00:51:16,380 --> 00:51:19,859


1151
00:51:19,859 --> 00:51:21,780
在优化

1152
00:51:21,780 --> 00:51:24,079
过程或进化过程中优化神经网络的突触参数，

1153
00:51:24,079 --> 00:51:25,680
所以

1154
00:51:25,680 --> 00:51:28,559
嗯，我们认为我们认为实际上能够

1155
00:51:28,559 --> 00:51:31,440
实现目标 这样做

1156
00:51:31,440 --> 00:51:34,680
也是为了训练神经网络或

1157
00:51:34,680 --> 00:51:37,920
优化突触权重，

1158
00:51:37,920 --> 00:51:39,420


1159
00:51:39,420 --> 00:51:42,660
在优化过程中神经网络结构的权重，结构

1160
00:51:42,660 --> 00:51:45,000
优化过程，所以

1161
00:51:45,000 --> 00:51:47,280
我们在搜索空间中添加了第四个维度，

1162
00:51:47,280 --> 00:51:48,920


1163
00:51:48,920 --> 00:51:51,960
我们将其嵌入到嵌入中

1164
00:51:51,960 --> 00:51:54,420
突触参数的权重，

1165
00:51:54,420 --> 00:52:00,740
在映射中，这个终端在

1166
00:52:00,740 --> 00:52:03,440
新的维度中，

1167
00:52:03,440 --> 00:52:07,380
我们也希望最终能够有

1168
00:52:07,380 --> 00:52:10,200
自我意识，并尝试

1169
00:52:10,200 --> 00:52:12,380


1170
00:52:12,380 --> 00:52:15,540
通过它们

1171
00:52:15,540 --> 00:52:18,839
进化过程来进化自己，以便它们能够

1172
00:52:18,839 --> 00:52:21,900
适应变化等 嗯，

1173
00:52:21,900 --> 00:52:23,819
它们可以自我调整，以便为我们提供

1174
00:52:23,819 --> 00:52:25,500
更好的性能，

1175
00:52:25,500 --> 00:52:28,020
嗯，我们希望它们改变

1176
00:52:28,020 --> 00:52:29,760
其特征的行为，例如

1177
00:52:29,760 --> 00:52:32,819
它们之前的传感半径，

1178
00:52:32,819 --> 00:52:35,579
例如，它们可以是一个变量，

1179
00:52:35,579 --> 00:52:38,220
可以通过迭代来改变，

1180
00:52:38,220 --> 00:52:40,380
事物可以通过进化来改变 装饰

1181
00:52:40,380 --> 00:52:43,140
嗯每一端都可以改变它们的呃这些

1182
00:52:43,140 --> 00:52:47,339
特征呃，因为它们是

1183
00:52:47,339 --> 00:52:49,040


1184
00:52:49,040 --> 00:52:52,079
根据

1185
00:52:52,079 --> 00:52:55,460
它们生成的神经网络的性能进行进化的，

1186
00:53:00,920 --> 00:53:05,339
所以嗯这样做的好处

1187
00:53:05,339 --> 00:53:08,220
是它消除了反向

1188
00:53:08,220 --> 00:53:10,559
传播过程 进化过程

1189
00:53:10,559 --> 00:53:13,260
中最昂贵的编译部分，

1190
00:53:13,260 --> 00:53:15,359
在 Pro 中，

1191
00:53:15,359 --> 00:53:18,000
我们在考试中到目前为止使用的方法结束了，

1192
00:53:18,000 --> 00:53:21,119
并且可以

1193
00:53:21,119 --> 00:53:22,980
消除，因此传播

1194
00:53:22,980 --> 00:53:26,819
给了我们更快的

1195
00:53:26,819 --> 00:53:30,079
革命过程，

1196
00:53:30,300 --> 00:53:32,640
也得到了

1197
00:53:32,640 --> 00:53:34,920
um 我将首先讨论右侧的图表，

1198
00:53:34,920 --> 00:53:36,839
该图讨论了

1199
00:53:36,839 --> 00:53:39,240


1200
00:53:39,240 --> 00:53:41,339
我们从

1201
00:53:41,339 --> 00:53:42,839


1202
00:53:42,839 --> 00:53:45,720
反向传播无癌症四维

1203
00:53:45,720 --> 00:53:48,359
罐中得到的结果的厚度或损伤有意义的误差，与

1204
00:53:48,359 --> 00:53:50,339
反向传播罐

1205
00:53:50,339 --> 00:53:52,319
和嗯结束的正常机会相比，

1206
00:53:52,319 --> 00:53:54,540
所以 结果再次向我们表明，

1207
00:53:54,540 --> 00:53:58,200
在一个特定的数据库上，

1208
00:53:58,200 --> 00:54:00,900
传播呃手杖和

1209
00:54:00,900 --> 00:54:03,059
传播自由机会

1210
00:54:03,059 --> 00:54:06,059
做了一个非常相似的工作，

1211
00:54:06,059 --> 00:54:08,339
但它们

1212
00:54:08,339 --> 00:54:11,160
在这个特定的数据库上都比蚂蚁更好，

1213
00:54:11,160 --> 00:54:13,800
但它们实际上是主要贡献

1214
00:54:13,800 --> 00:54:16,440
或主要贡献 应用案例的优点

1215
00:54:16,440 --> 00:54:19,619
它显示在左侧的图表中，

1216
00:54:19,619 --> 00:54:23,099
因为我们可以看到，如果您

1217
00:54:23,099 --> 00:54:25,140


1218
00:54:25,140 --> 00:54:28,200
根据进化时间比较结果，

1219
00:54:28,200 --> 00:54:31,020
基于进化时间，我们会看到，

1220
00:54:31,020 --> 00:54:32,280


1221
00:54:32,280 --> 00:54:35,520
因此，他们花了很多时间

1222
00:54:35,520 --> 00:54:39,660
比罐头的反向传播

1223
00:54:39,660 --> 00:54:44,220
版本要少得多，而且蚂蚁

1224
00:54:44,220 --> 00:54:46,319
使用这些不同的

1225
00:54:46,319 --> 00:54:47,579
um

1226
00:54:47,579 --> 00:54:50,780
um 和安培数，

1227
00:54:51,260 --> 00:54:55,380
该图还显示了

1228
00:54:55,380 --> 00:54:57,900
与

1229
00:54:57,900 --> 00:55:00,359
正常罐头相比，

1230
00:55:00,359 --> 00:55:04,020
我们可以有多快和传播预传播，所以在这个图中的曲线

1231
00:55:04,020 --> 00:55:08,760
数据行显示了

1232
00:55:08,760 --> 00:55:11,280
反向传播自由罐和

1233
00:55:11,280 --> 00:55:14,099
罐子准备或生成

1234
00:55:14,099 --> 00:55:17,099
神经网络所花费的时间，或者我们可以看到，

1235
00:55:17,099 --> 00:55:19,920


1236
00:55:19,920 --> 00:55:22,500


1237
00:55:22,500 --> 00:55:24,599
与 Mac 传播

1238
00:55:24,599 --> 00:55:26,520
癌症正常情况相比，无传播罐花费了更多时间准备或生成神经网络 那是

1239
00:55:26,520 --> 00:55:28,800
因为它有第四个维度，也

1240
00:55:28,800 --> 00:55:31,619
必须通过迭代旋转代理的末端，

1241
00:55:31,619 --> 00:55:33,780
所以它需要更多的

1242
00:55:33,780 --> 00:55:35,579
时间来做到这一点，

1243
00:55:35,579 --> 00:55:37,559
但

1244
00:55:37,559 --> 00:55:39,480
嗯另一条曲线，另外两条曲线

1245
00:55:39,480 --> 00:55:42,180
以虚线表示，这些线

1246
00:55:42,180 --> 00:55:44,520
显示了 time

1247
00:55:44,520 --> 00:55:47,240
两种方法

1248
00:55:47,240 --> 00:55:49,619
验证大量

1249
00:55:49,619 --> 00:55:51,780
um 训练和验证神经

1250
00:55:51,780 --> 00:55:52,800
网络所花费的时间，

1251
00:55:52,800 --> 00:55:55,500
因此 Mac 传播自由罐

1252
00:55:55,500 --> 00:55:57,359
不需要训练神经网络，不会

1253
00:55:57,359 --> 00:55:58,740
进行

1254
00:55:58,740 --> 00:56:01,260
um 呃传播，

1255
00:56:01,260 --> 00:56:03,960
因此您可以在 所

1256
00:56:03,960 --> 00:56:06,240
花费的时间比癌症的反向传播版本要少一个数量级，

1257
00:56:06,240 --> 00:56:07,380


1258
00:56:07,380 --> 00:56:09,240


1259
00:56:09,240 --> 00:56:10,260


1260
00:56:10,260 --> 00:56:12,720
这些实线显示了

1261
00:56:12,720 --> 00:56:15,960
两种方法所花费的累积时间，

1262
00:56:15,960 --> 00:56:18,359
当然它表明

1263
00:56:18,359 --> 00:56:20,160
传播前所花费的

1264
00:56:20,160 --> 00:56:21,480
时间比

1265
00:56:21,480 --> 00:56:24,720
反向传播要少得多 传播三个罐子花费的

1266
00:56:24,720 --> 00:56:25,920
时间要少得多，

1267
00:56:25,920 --> 00:56:29,880
然后反向传播取消了

1268
00:56:29,880 --> 00:56:32,460
嗯，我们正在考虑的未来方向，

1269
00:56:32,460 --> 00:56:34,619


1270
00:56:34,619 --> 00:56:36,660
呃，

1271
00:56:36,660 --> 00:56:38,400
抱歉，我们正在考虑

1272
00:56:38,400 --> 00:56:41,579
的未来工作是转向

1273
00:56:41,579 --> 00:56:44,579
完整的连续空间，所以正如

1274
00:56:44,579 --> 00:56:45,839
你所看到的，

1275
00:56:45,839 --> 00:56:49,680
我们第三个

1276
00:56:49,680 --> 00:56:53,579
罐头的搜索空间不是纯粹的

1277
00:56:53,579 --> 00:56:56,460
连续的，因为接下来的时间

1278
00:56:56,460 --> 00:56:59,520
由离散层表示，我们

1279
00:56:59,520 --> 00:57:01,319
想用代表连续

1280
00:57:01,319 --> 00:57:03,240
维度的连续

1281
00:57:03,240 --> 00:57:05,640
层来替换它 滞后呃

1282
00:57:05,640 --> 00:57:09,240
RNNS中的时间滞后，但是这

1283
00:57:09,240 --> 00:57:11,460
有点具有挑战性，因为在任何优化过程

1284
00:57:11,460 --> 00:57:14,819
之前必须知道时间长度的数量，

1285
00:57:14,819 --> 00:57:18,900
因为

1286
00:57:18,900 --> 00:57:21,780
除此之外我们我们将

1287
00:57:21,780 --> 00:57:25,260
映射整个呃我们整个 时间

1288
00:57:25,260 --> 00:57:29,180
序列呃作为时间流逝，然后从中

1289
00:57:29,180 --> 00:57:31,559
选择下一个时间，这是

1290
00:57:31,559 --> 00:57:32,460


1291
00:57:32,460 --> 00:57:34,500
不可行的，所以

1292
00:57:34,500 --> 00:57:36,960
这是我们的第一件事，

1293
00:57:36,960 --> 00:57:39,059
我们正在考虑

1294
00:57:39,059 --> 00:57:42,480
在未来的工作中调查的第一点，第二点是

1295
00:57:42,480 --> 00:57:45,540
调查这一发现 我们

1296
00:57:45,540 --> 00:57:49,380
发现我们在蚂蚁的结果中找到了，

1297
00:57:49,380 --> 00:57:51,420


1298
00:57:51,420 --> 00:57:54,059
其中循环

1299
00:57:54,059 --> 00:57:55,740
连接从性能最佳的呃结构中消失了，

1300
00:57:55,740 --> 00:57:58,619


1301
00:57:58,619 --> 00:58:00,540
我们的理论是

1302
00:58:00,540 --> 00:58:03,720
基于记忆的细胞取代了这些

1303
00:58:03,720 --> 00:58:05,040
连接，为我们提供了

1304
00:58:05,040 --> 00:58:08,040
我们需要的信息。 需要过去的 9 个步骤，

1305
00:58:08,040 --> 00:58:11,400
以便与他们的连接

1306
00:58:11,400 --> 00:58:14,040
相比，它们在执行此操作时更加有效，

1307
00:58:14,040 --> 00:58:16,260
因此我们必须对此

1308
00:58:16,260 --> 00:58:20,640
进行扩展并进行更多调查，

1309
00:58:20,640 --> 00:58:22,740
我们要考虑的最后一件事

1310
00:58:22,740 --> 00:58:25,980
也意味着这是其中之一 我们想要的最重要的事情就是

1311
00:58:25,980 --> 00:58:27,599
墙上的这三点

1312
00:58:27,599 --> 00:58:30,480
我们清单上的顶部

1313
00:58:30,480 --> 00:58:32,520
嗯第三点实际上是

1314
00:58:32,520 --> 00:58:34,200


1315
00:58:34,200 --> 00:58:38,940
嗯你认为

1316
00:58:38,940 --> 00:58:42,480
黛博拉·戈登博士在一本书中创造的概念之一

1317
00:58:42,480 --> 00:58:43,740


1318
00:58:43,740 --> 00:58:47,040
我们在她提到的地方

1319
00:58:47,040 --> 00:58:50,099
嗯，

1320
00:58:50,099 --> 00:58:53,400
蚂蚁世界中的生物体不是

1321
00:58:53,400 --> 00:58:55,440
时代本身，而是存在着群落，群落

1322
00:58:55,440 --> 00:58:57,480
是生物体，它们是

1323
00:58:57,480 --> 00:58:59,640


1324
00:58:59,640 --> 00:59:03,240
开始时的生物体，它们生长，

1325
00:59:03,240 --> 00:59:04,980
并且与

1326
00:59:04,980 --> 00:59:06,960
它们相互作用的生态系统的环境相互作用。 它们

1327
00:59:06,960 --> 00:59:09,359
与其他蚁群在一起，它们会在某个

1328
00:59:09,359 --> 00:59:12,359
时候死亡，所以蚂蚁本身

1329
00:59:12,359 --> 00:59:14,339
没有组织起来，它们是

1330
00:59:14,339 --> 00:59:17,400
这些生物体的细胞。蚁群生物体，所以

1331
00:59:17,400 --> 00:59:19,799
我们想采用这个概念，并将

1332
00:59:19,799 --> 00:59:22,859
其应用到我们的方法中，让许多

1333
00:59:22,859 --> 00:59:26,839
蚁群生活在一起 并行

1334
00:59:26,839 --> 00:59:29,339
发展和相互沟通，

1335
00:59:29,339 --> 00:59:32,339
这样我们和我们想看看

1336
00:59:32,339 --> 00:59:34,740
这是否会给我们带来更好的表现，

1337
00:59:34,740 --> 00:59:36,480
但因为毕竟我们试图在

1338
00:59:36,480 --> 00:59:39,540


1339
00:59:39,540 --> 00:59:41,040
我们正在尝试的解决方案中模仿自然

1340
00:59:41,040 --> 00:59:43,520
调查

1341
00:59:44,520 --> 00:59:46,500
嗯，所以，

1342
00:59:46,500 --> 00:59:49,140
嗯，我的演示已经完成，如果

1343
00:59:49,140 --> 00:59:52,279
您有任何问题，

1344
00:59:53,819 --> 00:59:56,059
外国

1345
00:59:56,059 --> 00:59:58,319
真棒哇，

1346
00:59:58,319 --> 01:00:00,299


1347
01:00:00,299 --> 01:00:03,299
真是一个很棒的演示，特拉维斯和亚历山大，

1348
01:00:03,299 --> 01:00:04,799
你们中的任何一个想先进行，

1349
01:00:04,799 --> 01:00:06,900
请随时提供介绍

1350
01:00:06,900 --> 01:00:09,359
和任何主要内容 你对此的评论

1351
01:00:09,359 --> 01:00:11,540


1352
01:00:16,559 --> 01:00:18,780
好吧，我可以说一些我没有

1353
01:00:18,780 --> 01:00:20,460
太多要补充的东西，我想我会四处走走，做得

1354
01:00:20,460 --> 01:00:23,579
很好，你知道，回顾

1355
01:00:23,579 --> 01:00:25,680
了工作的核心部分，

1356
01:00:25,680 --> 01:00:27,960
嗯，我是亚历克斯·罗比亚（Alex rorbia） 我是罗彻斯特理工学院计算机科学系助理

1357
01:00:27,960 --> 01:00:31,260


1358
01:00:31,260 --> 01:00:33,240
教授，

1359
01:00:33,240 --> 01:00:34,980
心理学系副教授和计算神经科学系副教授，

1360
01:00:34,980 --> 01:00:37,079


1361
01:00:37,079 --> 01:00:40,020
我

1362
01:00:40,020 --> 01:00:42,599
从事很多工作，但

1363
01:00:42,599 --> 01:00:44,400
主要是预测编码、主动推理、

1364
01:00:44,400 --> 01:00:47,040
变分自由能、

1365
01:00:47,040 --> 01:00:48,059
很多 这个小组实际上感兴趣的东西，

1366
01:00:48,059 --> 01:00:51,299
呃呃，是的，这

1367
01:00:51,299 --> 01:00:52,680


1368
01:00:52,680 --> 01:00:54,599
对我来说是一个特别有趣的项目，因为我自己的研究的一个分支

1369
01:00:54,599 --> 01:00:56,700
正在研究

1370
01:00:56,700 --> 01:00:59,280
神经进化方法，甚至只是

1371
01:00:59,280 --> 01:01:01,500
自然启发的元启发式

1372
01:01:01,500 --> 01:01:04,619
优化，呃你知道当我得到的时候

1373
01:01:04,619 --> 01:01:06,660


1374
01:01:06,660 --> 01:01:09,839
当阿卜杜勒·拉赫曼 (Abdul Rahman) 还是 RIT 的博士生时，我很高兴与他一起工作，我们

1375
01:01:09,839 --> 01:01:11,880
谈论了很多

1376
01:01:11,880 --> 01:01:14,460
基于群体的

1377
01:01:14,460 --> 01:01:16,319
优化方法，我鼓励

1378
01:01:16,319 --> 01:01:19,440
他做一些研究，比如

1379
01:01:19,440 --> 01:01:21,240
起源，以及 我实际上尝试了解

1380
01:01:21,240 --> 01:01:23,520
蚂蚁的物理行为，

1381
01:01:23,520 --> 01:01:25,920
这对我来说总是很着迷，

1382
01:01:25,920 --> 01:01:27,960
嗯，在技术部分方面我没有太多要编辑的内容，

1383
01:01:27,960 --> 01:01:29,460
我认为他

1384
01:01:29,460 --> 01:01:31,440
涵盖了所有核心结果，这是

1385
01:01:31,440 --> 01:01:33,839
我唯一喜欢思考的事情，我

1386
01:01:33,839 --> 01:01:36,780
实际上，我更感兴趣的是

1387
01:01:36,780 --> 01:01:38,880
活跃婴儿的声音，他们

1388
01:01:38,880 --> 01:01:41,880
对殖民地方法感兴趣，

1389
01:01:41,880 --> 01:01:43,619
特别是

1390
01:01:43,619 --> 01:01:47,280
他们感兴趣的东西，因为呃，思考什么是

1391
01:01:47,280 --> 01:01:49,619
优化，我认为你

1392
01:01:49,619 --> 01:01:51,480
如何从积极推理的

1393
01:01:51,480 --> 01:01:53,819
角度看待它 特别

1394
01:01:53,819 --> 01:01:55,980
有趣和思考，我什至有

1395
01:01:55,980 --> 01:01:57,599
一个想法，我不知道这是否是

1396
01:01:57,599 --> 01:02:00,180
观众的一个问题，

1397
01:02:00,180 --> 01:02:02,579


1398
01:02:02,579 --> 01:02:04,319
我将围绕我之前构建和描述的小蚂蚁特工或不能特工做，

1399
01:02:04,319 --> 01:02:06,359


1400
01:02:06,359 --> 01:02:08,520
嗯你知道那里有什么 一种开始将

1401
01:02:08,520 --> 01:02:10,559
它们视为一个多智能体

1402
01:02:10,559 --> 01:02:12,359
系统的方法，该系统正在优化一些

1403
01:02:12,359 --> 01:02:15,119
变化的自由能量呃，

1404
01:02:15,119 --> 01:02:16,440
你知道，因为你知道很多，甚至

1405
01:02:16,440 --> 01:02:18,660
像卡尔的工作一样，我的意思是我

1406
01:02:18,660 --> 01:02:20,460
与他合作，你知道有点触及

1407
01:02:20,460 --> 01:02:22,380
这个领域 就像

1408
01:02:22,380 --> 01:02:25,260
集体智慧和社会

1409
01:02:25,260 --> 01:02:27,119
组织会发生什么一样，你可以

1410
01:02:27,119 --> 01:02:30,059
从这些非常非常

1411
01:02:30,059 --> 01:02:32,339
高水平的观点一直

1412
01:02:32,339 --> 01:02:34,799
到细粒度的细胞活动来看待自由能，所以

1413
01:02:34,799 --> 01:02:37,740
我实际上更好奇地知道

1414
01:02:37,740 --> 01:02:39,480
丹尼尔和 活跃入口中的任何其他人都

1415
01:02:39,480 --> 01:02:41,400
可以解释一下

1416
01:02:41,400 --> 01:02:43,319
他们对

1417
01:02:43,319 --> 01:02:45,480
基于优化和元启发式

1418
01:02:45,480 --> 01:02:47,040
优化特别感兴趣，我很想知道这一点，

1419
01:02:47,040 --> 01:02:48,720
但是您可能有一些有趣的

1420
01:02:48,720 --> 01:02:51,599
观点，例如

1421
01:02:51,599 --> 01:02:53,220
我认为的自由能是什么 蚂蚁

1422
01:02:53,220 --> 01:02:56,760
本身非常简单，我的意思是我们

1423
01:02:56,760 --> 01:02:58,260
已经让它们变得更加聪明，我了解

1424
01:02:58,260 --> 01:02:59,940
罗马人，我详细讨论了

1425
01:02:59,940 --> 01:03:02,400
如果我们甚至让它们

1426
01:03:02,400 --> 01:03:04,020
拥有强化

1427
01:03:04,020 --> 01:03:06,240
学习控制系统，你

1428
01:03:06,240 --> 01:03:08,280
现在甚至可以想象如果 罐头

1429
01:03:08,280 --> 01:03:11,579
本身，呃，你知道，他们自己参与某种形式

1430
01:03:11,579 --> 01:03:14,220
的主动推理，

1431
01:03:14,220 --> 01:03:16,020
系统会是什么样子，

1432
01:03:16,020 --> 01:03:17,940
它们正在优化自己的自由

1433
01:03:17,940 --> 01:03:20,640
能，这些只是有趣的小思想

1434
01:03:20,640 --> 01:03:22,740
实验，我显然没有对

1435
01:03:22,740 --> 01:03:25,260
它们进行过研究，呃，至少阿卜杜勒·拉赫曼 我从来

1436
01:03:25,260 --> 01:03:28,140
没有接触过我的世界的那一部分，

1437
01:03:28,140 --> 01:03:31,680
呃，你知道，还有仿生

1438
01:03:31,680 --> 01:03:34,140
智能，所以这些是我的评论，

1439
01:03:34,140 --> 01:03:35,579
我不确定它们是否特别

1440
01:03:35,579 --> 01:03:37,920
有帮助，但它们非常笼统，呃，

1441
01:03:37,920 --> 01:03:39,900
实际上更想从

1442
01:03:39,900 --> 01:03:42,059
主动中了解 推理研究所呃，他们

1443
01:03:42,059 --> 01:03:43,799
对此感兴趣，你知道

1444
01:03:43,799 --> 01:03:45,780
这可能在哪里交叉，或者

1445
01:03:45,780 --> 01:03:47,280
就像哦，我们喜欢你知道

1446
01:03:47,280 --> 01:03:49,559
有趣的话题和情报，

1447
01:03:49,559 --> 01:03:52,319
所以是的，

1448
01:03:52,319 --> 01:03:55,079
谢谢你，亚历山德拉·特拉维斯（Alexandra Travis），你想

1449
01:03:55,079 --> 01:03:57,000
打个招呼，并对我们的演讲做出任何思考

1450
01:03:57,000 --> 01:03:59,359


1451
01:04:00,240 --> 01:04:02,099
大家都来了，希望有人能

1452
01:04:02,099 --> 01:04:03,200


1453
01:04:03,200 --> 01:04:05,940
在白色丛林里看到我，我很嗨，我是特拉维斯的

1454
01:04:05,940 --> 01:04:07,920
细胞，我是 RIT 的副教授，

1455
01:04:07,920 --> 01:04:10,079
我也是

1456
01:04:10,079 --> 01:04:11,579
数据科学硕士学位的研究生项目主任，

1457
01:04:11,579 --> 01:04:13,140
所以如果 你们中的任何人对

1458
01:04:13,140 --> 01:04:15,000
这个或数据科学中的任何一个感兴趣，请给

1459
01:04:15,000 --> 01:04:16,799
我发一封电子邮件，

1460
01:04:16,799 --> 01:04:18,359
嗯，我认为这项工作

1461
01:04:18,359 --> 01:04:21,480
在很多方面都非常有趣，

1462
01:04:21,480 --> 01:04:23,760
所以很多 Dollarama 正在研究它，

1463
01:04:23,760 --> 01:04:25,559
嗯，我认为其中之一 最酷的部分

1464
01:04:25,559 --> 01:04:28,440
是一种流行的神经进化

1465
01:04:28,440 --> 01:04:29,880
算法，在

1466
01:04:29,880 --> 01:04:31,380
我之后被称为

1467
01:04:31,380 --> 01:04:35,460
hyperneat，它将

1468
01:04:35,460 --> 01:04:37,859
神经架构搜索的离散搜索空间转换

1469
01:04:37,859 --> 01:04:39,599
为连续的搜索空间，

1470
01:04:39,599 --> 01:04:40,559


1471
01:04:40,559 --> 01:04:42,299
并且在这个版本中它被证明是一种

1472
01:04:42,299 --> 01:04:44,099
非常强大的方法

1473
01:04:44,099 --> 01:04:46,140
蚁群优化的

1474
01:04:46,140 --> 01:04:48,180
新算法做了同样的事情，使

1475
01:04:48,180 --> 01:04:50,280
搜索空间连续，但我

1476
01:04:50,280 --> 01:04:52,740
发现它真的很酷，

1477
01:04:52,740 --> 01:04:55,200
与传统的蚁群优化相反，在传统的蚁群优化

1478
01:04:55,200 --> 01:04:56,760
中，你有一个图表，

1479
01:04:56,760 --> 01:04:58,859
你只需沿着边缘发送放大器

1480
01:04:58,859 --> 01:05:00,839
你可以采取

1481
01:05:00,839 --> 01:05:02,280
最好的路径并在它之后构建一个图表，

1482
01:05:02,280 --> 01:05:04,200
这里的答案实际上

1483
01:05:04,200 --> 01:05:06,180
像现实世界中的蚂蚁一样工作，会

1484
01:05:06,180 --> 01:05:09,180
移动连续的空间，而

1485
01:05:09,180 --> 01:05:11,520
不仅仅是从 A 点到 B 点，

1486
01:05:11,520 --> 01:05:13,380
并且实际上会下降 信息素，

1487
01:05:13,380 --> 01:05:16,200
它更像是对

1488
01:05:16,200 --> 01:05:18,480
蚂蚁在现实世界中如何移动的真实模拟，

1489
01:05:18,480 --> 01:05:19,619


1490
01:05:19,619 --> 01:05:21,540
我们从中得到的结果

1491
01:05:21,540 --> 01:05:24,660
比一些旧的方法更好，所以

1492
01:05:24,660 --> 01:05:27,660
我认为这真的让我

1493
01:05:27,660 --> 01:05:30,180
很高兴 看到这一点，并认为

1494
01:05:30,180 --> 01:05:32,640
它使它成为一个非常非常有趣的

1495
01:05:32,640 --> 01:05:34,819
工作，

1496
01:05:35,940 --> 01:05:37,980
太棒了，艾哈迈德想要添加

1497
01:05:37,980 --> 01:05:39,960
任何东西，或者我很高兴对蚂蚁进行思考，

1498
01:05:39,960 --> 01:05:41,760
并通过实时聊天提出一些问题哦，

1499
01:05:41,760 --> 01:05:43,380


1500
01:05:43,380 --> 01:05:45,000
我很好，嗯，

1501
01:05:45,000 --> 01:05:46,680
尝试思考 涵盖了

1502
01:05:46,680 --> 01:05:49,140
我想说的所有事情，

1503
01:05:49,140 --> 01:05:52,020
嗯，我想

1504
01:05:52,020 --> 01:05:55,260
亚历克斯提到的一件事是我们为特工提供了更高的

1505
01:05:55,260 --> 01:05:56,819
情报，这是

1506
01:05:56,819 --> 01:05:59,819
我们讨论过的事情，我

1507
01:05:59,819 --> 01:06:01,619
对此非常开放，我已经开始了 实际上

1508
01:06:01,619 --> 01:06:02,940
考虑过，但他们还没有实施

1509
01:06:02,940 --> 01:06:06,180
任何东西，但是

1510
01:06:06,180 --> 01:06:07,619
我在未来方向中讨论的最后一件事

1511
01:06:07,619 --> 01:06:09,540
是我实际上

1512
01:06:09,540 --> 01:06:11,880
开始研究的事情，但他们没有开始

1513
01:06:11,880 --> 01:06:13,920
实验患者是的，所以

1514
01:06:13,920 --> 01:06:16,260
希望我们能看到一些东西

1515
01:06:16,260 --> 01:06:18,380
那个

1516
01:06:18,660 --> 01:06:21,780
令人敬畏的井还有很多路要走

1517
01:06:21,780 --> 01:06:23,880
，这不是

1518
01:06:23,880 --> 01:06:25,740
像在

1519
01:06:25,740 --> 01:06:29,160
交互式环境中那样的基本问题之一，无论是纯代理

1520
01:06:29,160 --> 01:06:32,099
污名相互作用还是多代理，但

1521
01:06:32,099 --> 01:06:34,319
最终通过多个

1522
01:06:34,319 --> 01:06:36,480
污名G来介导，例如阅读和写作

1523
01:06:36,480 --> 01:06:38,819
以及 纠错码，所以在这种

1524
01:06:38,819 --> 01:06:41,339
通信设置中，

1525
01:06:41,339 --> 01:06:43,819
嗯，我觉得这项工作

1526
01:06:43,819 --> 01:06:46,700
概括了多个维度，而

1527
01:06:46,700 --> 01:06:50,220
以前的

1528
01:06:50,220 --> 01:06:51,900
多重老化方法只是没有

1529
01:06:51,900 --> 01:06:54,420
像连续

1530
01:06:54,420 --> 01:06:56,819
时间功能和其他几个

1531
01:06:56,819 --> 01:06:58,859
功能这样的灵活性，

1532
01:06:58,859 --> 01:07:00,980
嗯，

1533
01:07:01,079 --> 01:07:02,880
我想是尊重 对蚂蚁

1534
01:07:02,880 --> 01:07:04,079
本身来说，

1535
01:07:04,079 --> 01:07:07,559
嗯，我在美国西南部亚利桑那州对蚂蚁进行了五个夏天的实地考察，

1536
01:07:07,559 --> 01:07:11,460


1537
01:07:11,460 --> 01:07:14,400
观察到了很多觅食活动，

1538
01:07:14,400 --> 01:07:15,780
所以

1539
01:07:15,780 --> 01:07:19,880
肥胖问题或者环境或环境

1540
01:07:19,880 --> 01:07:22,980
确实是一个有趣的问题，并且

1541
01:07:22,980 --> 01:07:25,740
在任何一种生命系统中都普遍存在

1542
01:07:25,740 --> 01:07:28,020
任何会活跃

1543
01:07:28,020 --> 01:07:30,599
且有生命力的东西，那么

1544
01:07:30,599 --> 01:07:33,859
你为什么总体上追求觅食类型

1545
01:07:33,859 --> 01:07:38,700
算法？这门课是否

1546
01:07:38,700 --> 01:07:42,420
包括戈登教授在蚂蚁遭遇中强调的

1547
01:07:42,420 --> 01:07:45,299
基于直接代理接触的交互方法是的，

1548
01:07:45,299 --> 01:07:47,280


1549
01:07:47,280 --> 01:07:50,000


1550
01:07:50,280 --> 01:07:54,119
我不会尝试对此做出回应，

1551
01:07:54,119 --> 01:07:56,220
但是 我刚刚学会采取行动提到

1552
01:07:56,220 --> 01:07:58,619
英国人对这张地图的想法

1553
01:07:58,619 --> 01:08:01,200
实际上特拉维斯开始了这个关于

1554
01:08:01,200 --> 01:08:03,420
在你的版本中使用和量子化的想法

1555
01:08:03,420 --> 01:08:05,700
我们的新架构搜索通过

1556
01:08:05,700 --> 01:08:08,339
在更简单的神经网络中应用这种方法

1557
01:08:08,339 --> 01:08:10,200
呃埃尔玛和戈登神经网络你的

1558
01:08:10,200 --> 01:08:12,299
卡迪纳尔网络和我做了 从

1559
01:08:12,299 --> 01:08:14,160
那里相信并开始研究我的作品

1560
01:08:14,160 --> 01:08:18,238
我我的耐心作品所以呃我们考虑

1561
01:08:18,238 --> 01:08:20,520
了这个想法我想我提到了

1562
01:08:20,520 --> 01:08:22,979
一些关于为什么我们

1563
01:08:22,979 --> 01:08:24,779
在上一张幻灯片中使用呃和量子化但

1564
01:08:24,779 --> 01:08:28,679
只是向观众重复这一点以

1565
01:08:28,679 --> 01:08:30,719
确保我 天啊，我们想到

1566
01:08:30,719 --> 01:08:33,238
了这个想法，因为

1567
01:08:33,238 --> 01:08:36,620
嗯，任意化被应用于呃作为一个

1568
01:08:36,620 --> 01:08:39,779
图，这是一个图优化

1569
01:08:39,779 --> 01:08:43,679
解决方案，我们认为为什么不，

1570
01:08:43,679 --> 01:08:45,600
为什么不你的网络，因为它们在

1571
01:08:45,600 --> 01:08:47,339
商业中呃神经网络它们是有

1572
01:08:47,339 --> 01:08:50,219
方向的，所以它们有方向的拨款是

1573
01:08:50,219 --> 01:08:52,799
定向也许是因为

1574
01:08:52,799 --> 01:08:54,420
信息流从一个方向流向

1575
01:08:54,420 --> 01:08:56,040
另一个方向，因此方向如此，但

1576
01:08:56,040 --> 01:08:57,719
它们也绘制图形，因为它们是

1577
01:08:57,719 --> 01:09:01,859
与地址连接的节点，我们的最终

1578
01:09:01,859 --> 01:09:04,859
目的或目标是

1579
01:09:04,859 --> 01:09:06,779
通过删除和添加

1580
01:09:06,779 --> 01:09:08,580
元素状态来优化结构，以便它 给我们

1581
01:09:08,580 --> 01:09:10,080
更好的表现，

1582
01:09:10,080 --> 01:09:11,160
好吧，

1583
01:09:11,160 --> 01:09:14,040
太棒了，

1584
01:09:14,040 --> 01:09:15,839
戈登教授和其他人谈论

1585
01:09:15,839 --> 01:09:18,960


1586
01:09:18,960 --> 01:09:20,219


1587
01:09:20,219 --> 01:09:21,779
计算机科学和数学、

1588
01:09:21,779 --> 01:09:24,238
分析公式以及现场

1589
01:09:24,238 --> 01:09:26,520
工作和实际行为之间的双向呃学习关系的一种方式是

1590
01:09:26,520 --> 01:09:29,219
因为

1591
01:09:29,219 --> 01:09:33,238
它们在一个巨大的

1592
01:09:33,238 --> 01:09:35,939
生态系统中工作的数千种蚂蚁，具有所有这些不同的

1593
01:09:35,939 --> 01:09:38,339
规律模式，所有这些

1594
01:09:38,339 --> 01:09:40,020
不同的资源分布和

1595
01:09:40,020 --> 01:09:42,420
觅食，它的通用性令人惊讶，

1596
01:09:42,420 --> 01:09:44,219
但它也只是

1597
01:09:44,219 --> 01:09:46,319
需要发生的功能之一

1598
01:09:46,319 --> 01:09:47,460
其中包括更慢的

1599
01:09:47,460 --> 01:09:51,238
过程，比如将组织分配给

1600
01:09:51,238 --> 01:09:53,880
更快的过程，甚至是对

1601
01:09:53,880 --> 01:09:56,219
警报信息素的反应，所以就像这一

1602
01:09:56,219 --> 01:09:59,100
类算法

1603
01:09:59,100 --> 01:10:02,400
从视野中清晰地扩展一样，

1604
01:10:02,400 --> 01:10:04,800
最终其中一些觅食

1605
01:10:04,800 --> 01:10:08,100
算法是法律护林者，他们

1606
01:10:08,100 --> 01:10:09,420
不会离开费尔蒙特步道 所以这就像

1607
01:10:09,420 --> 01:10:11,100
留下一个

1608
01:10:11,100 --> 01:10:14,160
积极的信息素或离开然后离开的想法，但

1609
01:10:14,160 --> 01:10:15,600
也有一些模型可以做的事情，蚂蚁

1610
01:10:15,600 --> 01:10:17,400
不能做，比如时间旅行

1611
01:10:17,400 --> 01:10:21,000
信息素无损感知高

1612
01:10:21,000 --> 01:10:24,060
维呃信号轮廓，

1613
01:10:24,060 --> 01:10:25,980
不能只用有限的

1614
01:10:25,980 --> 01:10:28,380
数量发生 分子，

1615
01:10:28,380 --> 01:10:31,140
嗯，现在，它们只是在一代人中坚持其

1616
01:10:31,140 --> 01:10:34,260
作为活性剂的道路，

1617
01:10:34,260 --> 01:10:36,420


1618
01:10:36,420 --> 01:10:38,159
在行为尺度上具有变化的自由能，然后

1619
01:10:38,159 --> 01:10:39,360
在

1620
01:10:39,360 --> 01:10:42,540
进化层以及

1621
01:10:42,540 --> 01:10:43,739
神经网络

1622
01:10:43,739 --> 01:10:46,320
实现和主动推理

1623
01:10:46,320 --> 01:10:48,360
模型之间的关系中跨越几代人。 有点像

1624
01:10:48,360 --> 01:10:51,000
描述斜线实现的两种方式，

1625
01:10:51,000 --> 01:10:53,460
嗯，是的，我很想听听

1626
01:10:53,460 --> 01:10:54,900
您对主动

1627
01:10:54,900 --> 01:10:57,960
推理在哪里发挥作用的想法，或者您如何

1628
01:10:57,960 --> 01:11:00,719
看待基于神经网络的方法和主动推理之间旧的最终相似点和

1629
01:11:00,719 --> 01:11:02,940
差异

1630
01:11:02,940 --> 01:11:05,340
基于推理的

1631
01:11:05,340 --> 01:11:08,640
方法是否相同，互补

1632
01:11:08,640 --> 01:11:11,640
重叠，

1633
01:11:12,360 --> 01:11:16,280
你们想坚持这个，说实话，

1634
01:11:16,560 --> 01:11:17,940
我认为这可能更像是亚历克斯的

1635
01:11:17,940 --> 01:11:21,080
问题，是的，

1636
01:11:22,340 --> 01:11:26,100
我的意思是，如果您想保持

1637
01:11:26,100 --> 01:11:27,600
主动推理，但我认为特拉维斯

1638
01:11:27,600 --> 01:11:28,980
您会去 当你

1639
01:11:28,980 --> 01:11:30,719
想要了解

1640
01:11:30,719 --> 01:11:33,900
实际和殖民地细节等具体细节时，需要进行标记，

1641
01:11:33,900 --> 01:11:36,540
因为我再次

1642
01:11:36,540 --> 01:11:39,360
从更全局的角度看待丹殖民地优化，

1643
01:11:39,360 --> 01:11:41,520
我想说

1644
01:11:41,520 --> 01:11:44,760
清楚，我的意思是这项特定的

1645
01:11:44,760 --> 01:11:46,440
工作 我会这样，公羊的方式

1646
01:11:46,440 --> 01:11:48,480
也不会完全被

1647
01:11:48,480 --> 01:11:50,699
你的问题丹尼尔弄得措手不及，即使这个

1648
01:11:50,699 --> 01:11:53,100
名字是在研究所本身，呃，这

1649
01:11:53,100 --> 01:11:55,560
不是一个积极的推理工作，所以你

1650
01:11:55,560 --> 01:11:57,420
再知道，虽然显然有

1651
01:11:57,420 --> 01:11:59,580
很多，正如你指出的那样 有趣的

1652
01:11:59,580 --> 01:12:01,620
元素，例如，

1653
01:12:01,620 --> 01:12:03,600
蚂蚁在进行

1654
01:12:03,600 --> 01:12:05,460
探索时，让我们想想

1655
01:12:05,460 --> 01:12:07,199
循环网络，它们正在

1656
01:12:07,199 --> 01:12:10,340
弄清楚哪些节点和什么，

1657
01:12:10,340 --> 01:12:13,560
呃解释了上层建筑，因为

1658
01:12:13,560 --> 01:12:15,540
它们迭代了信息素

1659
01:12:15,540 --> 01:12:17,940
轨迹， 找出我

1660
01:12:17,940 --> 01:12:20,100
想要反复连接的节点 向前连接

1661
01:12:20,100 --> 01:12:23,400
跳过连接 等等 嗯，

1662
01:12:23,400 --> 01:12:25,380
你会说好吧，

1663
01:12:25,380 --> 01:12:27,000
这些蚂蚁正在做的事情是它们正在从事

1664
01:12:27,000 --> 01:12:30,239
认知觅食，这是

1665
01:12:30,239 --> 01:12:32,760
主动推理或 idid 中的一个关键概念，所以

1666
01:12:32,760 --> 01:12:34,320
这样我就可以构建 Ramen 和 Travis，

1667
01:12:34,320 --> 01:12:37,260
也不会被行话落在后面，呃 Epi

1668
01:12:37,260 --> 01:12:40,020
Summit 在主动推理中锻造它是

1669
01:12:40,020 --> 01:12:42,060
一个大的通用框架，就像

1670
01:12:42,060 --> 01:12:45,179
RL 的生物神经生物学过程，

1671
01:12:45,179 --> 01:12:47,340
而认知只是指的是

1672
01:12:47,340 --> 01:12:49,020
类似于你和 Travis 的不确定性

1673
01:12:49,020 --> 01:12:51,659
我的工作和它所说的想法很好，

1674
01:12:51,659 --> 01:12:55,440
好吧，我想了解我的世界，

1675
01:12:55,440 --> 01:12:58,080
我探索我的世界越多，

1676
01:12:58,080 --> 01:13:00,420
让我惊讶的事情就会越

1677
01:13:00,420 --> 01:13:02,760
少，但如果我

1678
01:13:02,760 --> 01:13:05,460
在构建

1679
01:13:05,460 --> 01:13:07,500
生成世界模型时遇到一些非常奇怪的信息 或者是一个

1680
01:13:07,500 --> 01:13:09,600
非常令人惊讶的预测世界模型，我

1681
01:13:09,600 --> 01:13:11,640
可能应该探索这个，

1682
01:13:11,640 --> 01:13:14,040
嗯，所以当然，我将这个

1683
01:13:14,040 --> 01:13:15,719
概念浓缩成类似于

1684
01:13:15,719 --> 01:13:18,600
探索利用

1685
01:13:18,600 --> 01:13:21,540
权衡的探索部分，我知道你知道，

1686
01:13:21,540 --> 01:13:23,219
但这表征了强化

1687
01:13:23,219 --> 01:13:24,540
学习，这就是我们

1688
01:13:24,540 --> 01:13:27,000
所说的认知或认知

1689
01:13:27,000 --> 01:13:28,980
觅食的意思，显然，

1690
01:13:28,980 --> 01:13:31,560
你知道的拉面觅食可以比作

1691
01:13:31,560 --> 01:13:32,699
蚂蚁正在做的事情，他们正在

1692
01:13:32,699 --> 01:13:34,260
探索他们的环境

1693
01:13:34,260 --> 01:13:37,260
，所以我想考虑到这一点，这样

1694
01:13:37,260 --> 01:13:38,880
每个人都会 有点在同一页

1695
01:13:38,880 --> 01:13:40,920
上，呃，为了回答你的问题，

1696
01:13:40,920 --> 01:13:43,440
关于它如何工作

1697
01:13:43,440 --> 01:13:45,780
与典型的基于神经的

1698
01:13:45,780 --> 01:13:48,120
主动推理方法之间的差异，我

1699
01:13:48,120 --> 01:13:50,219
会属于“哦，我

1700
01:13:50,219 --> 01:13:52,440
建立神经模型，生物过程

1701
01:13:52,440 --> 01:13:55,080
模型，呃，这些是”的类别 非常专注，

1702
01:13:55,080 --> 01:13:57,900
你可以在个人层面上说，

1703
01:13:57,900 --> 01:13:59,340
至少是我在构建时所知道的那些，

1704
01:13:59,340 --> 01:14:00,960
例如，甚至是

1705
01:14:00,960 --> 01:14:03,960
基于反向传播的、部分

1706
01:14:03,960 --> 01:14:06,840
可观察的马尔可夫决策过程，

1707
01:14:06,840 --> 01:14:08,940
你知道主动推理，就像

1708
01:14:08,940 --> 01:14:10,260
你的单个代理一样 正在尝试

1709
01:14:10,260 --> 01:14:12,420
构建这个构造，试图让

1710
01:14:12,420 --> 01:14:15,420
你知道平衡认知量

1711
01:14:15,420 --> 01:14:17,880
与其工具术语，顺便说一句，

1712
01:14:17,880 --> 01:14:19,860


1713
01:14:19,860 --> 01:14:22,199
拉面和特拉维斯的另一个行话术语就像你的

1714
01:14:22,199 --> 01:14:24,780
奖励信号或你的先验偏好

1715
01:14:24,780 --> 01:14:27,000
或先验分布一样 目标状态

1716
01:14:27,000 --> 01:14:29,520
和代理这些代理有点

1717
01:14:29,520 --> 01:14:31,980
像处理这种权衡，但

1718
01:14:31,980 --> 01:14:33,780
现在再次在个人代理级别上，我

1719
01:14:33,780 --> 01:14:35,699
确信

1720
01:14:35,699 --> 01:14:37,159
从

1721
01:14:37,159 --> 01:14:40,739
基于蚂蚁的方法的其他角度对这些进行了解释，尽管我

1722
01:14:40,739 --> 01:14:43,260
本身不会争论 这至少有

1723
01:14:43,260 --> 01:14:45,120
一个明确的形式或联系，

1724
01:14:45,120 --> 01:14:47,280
至少拉面鲍勃已经

1725
01:14:47,280 --> 01:14:49,500
明确了主动推理，但这个想法

1726
01:14:49,500 --> 01:14:51,300
是，这就像主动推理的多智能体

1727
01:14:51,300 --> 01:14:54,000
方法，因此

1728
01:14:54,000 --> 01:14:56,219
蚂蚁在进行认知

1729
01:14:56,219 --> 01:14:58,920
锻造时 可以说是一个非常非常

1730
01:14:58,920 --> 01:15:01,920
简单的模型，每个安东

1731
01:15:01,920 --> 01:15:04,500
本身都是你知道的，本质上是

1732
01:15:04,500 --> 01:15:06,600
一堆你知道的系数和一些

1733
01:15:06,600 --> 01:15:09,300
硬编码的规则，因为

1734
01:15:09,300 --> 01:15:11,280
他们的工作本质上是

1735
01:15:11,280 --> 01:15:13,380
与他们的信息素踪迹一起工作来

1736
01:15:13,380 --> 01:15:15,179
找出哦 上层建筑的哪些部分

1737
01:15:15,179 --> 01:15:17,340
是有用的，所以我想说

1738
01:15:17,340 --> 01:15:19,620
这是不同的，它

1739
01:15:19,620 --> 01:15:21,780
在某些方面很适合，当然你可以

1740
01:15:21,780 --> 01:15:23,580
让蚂蚁变得更复杂并失去

1741
01:15:23,580 --> 01:15:26,159
好处我只是想说你

1742
01:15:26,159 --> 01:15:27,840
可以大规模并行化它，

1743
01:15:27,840 --> 01:15:29,640
这是 我认为这些关键优势之一

1744
01:15:29,640 --> 01:15:33,420
是自然的，例如

1745
01:15:33,420 --> 01:15:36,060
许多实际发生的优化

1746
01:15:36,060 --> 01:15:39,000
算法，而殖民地优化

1747
01:15:39,000 --> 01:15:40,860
就是其中之一，你知道阿卜杜勒拉面

1748
01:15:40,860 --> 01:15:43,800
已经使用了数百个CPU，你可以将

1749
01:15:43,800 --> 01:15:45,300
这些蚂蚁放在他们自己的单独处理器上，

1750
01:15:45,300 --> 01:15:47,820


1751
01:15:47,820 --> 01:15:49,739
你知道，当它们交换信息时，它们之间发生的通信

1752
01:15:49,739 --> 01:15:51,540


1753
01:15:51,540 --> 01:15:53,640
是通过信息素路径知道的，

1754
01:15:53,640 --> 01:15:55,260
有一种间接的机制，它的实现并不是

1755
01:15:55,260 --> 01:15:57,719
非常复杂，我

1756
01:15:57,719 --> 01:15:59,699
确信有更好的方法可以

1757
01:15:59,699 --> 01:16:01,679
进行，例如异步形式的

1758
01:16:01,679 --> 01:16:04,260
通信等等 进一步

1759
01:16:04,260 --> 01:16:06,659
优化我知道特拉维斯和特拉维斯可以

1760
01:16:06,659 --> 01:16:08,580


1761
01:16:08,580 --> 01:16:10,860


1762
01:16:10,860 --> 01:16:12,659
通过你知道的

1763
01:16:12,659 --> 01:16:14,940
志愿者志愿者计算以及如何

1764
01:16:14,940 --> 01:16:16,739
通过

1765
01:16:16,739 --> 01:16:19,199
大规模的全球异步网络分发它来添加公民科学和呃分布式计算等方面的工作，以便

1766
01:16:19,199 --> 01:16:22,620
你可以想象适应呃 蚂蚁形式

1767
01:16:22,620 --> 01:16:24,719
抱歉，蚁群优化

1768
01:16:24,719 --> 01:16:27,360
方法类似于分布式

1769
01:16:27,360 --> 01:16:29,520
大规模分布式版本的主动

1770
01:16:29,520 --> 01:16:31,440
推理，你基本上必须

1771
01:16:31,440 --> 01:16:33,900
写下变分自由

1772
01:16:33,900 --> 01:16:36,480
能，我在这周围加上引号，

1773
01:16:36,480 --> 01:16:38,640
因为同样没有具体的

1774
01:16:38,640 --> 01:16:41,280
术语写在其中 我的

1775
01:16:41,280 --> 01:16:43,080
意思是，因为我们至少还

1776
01:16:43,080 --> 01:16:44,820
没有从主动

1777
01:16:44,820 --> 01:16:46,800
推理的角度直接看待这一点，每只蚂蚁

1778
01:16:46,800 --> 01:16:48,659
都在优化自己的变分自由

1779
01:16:48,659 --> 01:16:50,340
能，但可能存在一个

1780
01:16:50,340 --> 01:16:52,980
全局量，它实际上是

1781
01:16:52,980 --> 01:16:55,739


1782
01:16:55,739 --> 01:16:58,199
个体手中的信息素踪迹

1783
01:16:58,199 --> 01:16:59,520
嗯，当然还有

1784
01:16:59,520 --> 01:17:03,120
利用术语或工具或

1785
01:17:03,120 --> 01:17:04,679
呃，你知道

1786
01:17:04,679 --> 01:17:07,440
给出 RL 术语的奖励信号是什么，该信号在某种程度上是

1787
01:17:07,440 --> 01:17:09,900
由实际

1788
01:17:09,900 --> 01:17:13,320
代理在每个候选者上的表现驱动的 当您进行时间序列预测时，

1789
01:17:13,320 --> 01:17:15,540
您计算的拉面任务右侧的代理就像

1790
01:17:15,540 --> 01:17:16,860
均方误差一样，

1791
01:17:16,860 --> 01:17:19,380
因此从某种意义上说，

1792
01:17:19,380 --> 01:17:22,080
我们内置了您知道的奖励

1793
01:17:22,080 --> 01:17:24,900
函数，我们使用该函数，并再次针对此处

1794
01:17:24,900 --> 01:17:27,300
主动推理组中的人员 你

1795
01:17:27,300 --> 01:17:28,800
知道你可以使用完整的类

1796
01:17:28,800 --> 01:17:31,199
定理，看看你知道先验

1797
01:17:31,199 --> 01:17:33,120
偏好说哦，好吧，奖励

1798
01:17:33,120 --> 01:17:34,980
实际上是技术上的先验偏好，

1799
01:17:34,980 --> 01:17:38,100
它就像对数概率，所以考虑到

1800
01:17:38,100 --> 01:17:40,560
这一点，你可以眯着眼睛看一下

1801
01:17:40,560 --> 01:17:43,140
殖民地优化，我猜

1802
01:17:43,140 --> 01:17:45,360
巨大的好处来自于大规模的

1803
01:17:45,360 --> 01:17:47,100
并行化，

1804
01:17:47,100 --> 01:17:49,920
如果

1805
01:17:49,920 --> 01:17:52,679
你知道我们基于单代理神经的

1806
01:17:52,679 --> 01:17:54,000
方法的话，你实际上不会很容易地做到这一点，

1807
01:17:54,000 --> 01:17:55,380
这可能是一个有趣的

1808
01:17:55,380 --> 01:17:57,960
构建基础，在这一点上我将停止漫无目的的

1809
01:17:57,960 --> 01:17:59,400
我' 我不确定这是否有

1810
01:17:59,400 --> 01:18:01,759
帮助，

1811
01:18:02,640 --> 01:18:05,640
这真是太棒了，今天早些时候，

1812
01:18:05,640 --> 01:18:08,280
克里斯·菲尔德在物理学

1813
01:18:08,280 --> 01:18:10,920
信息处理课程中谈论了刻

1814
01:18:10,920 --> 01:18:12,860


1815
01:18:12,860 --> 01:18:15,120
在毯子上的经典信息，就像信息

1816
01:18:15,120 --> 01:18:17,520
素感知和沉积

1817
01:18:17,520 --> 01:18:19,620
信息素修改以及

1818
01:18:19,620 --> 01:18:22,140
感知意义做出动作

1819
01:18:22,140 --> 01:18:24,719
我们可以像巢友

1820
01:18:24,719 --> 01:18:27,719
认知系统一样将其关联起来，这样巢友就可以

1821
01:18:27,719 --> 01:18:29,400
像传递一样简单，可以

1822
01:18:29,400 --> 01:18:32,460
是

1823
01:18:32,460 --> 01:18:35,159
用一揽子简单的巢

1824
01:18:35,159 --> 01:18:37,620
友复杂的巢友描述的任意关系，

1825
01:18:37,620 --> 01:18:39,719
就像另一个级别的时间序列

1826
01:18:39,719 --> 01:18:41,040
建模一样

1827
01:18:41,040 --> 01:18:43,560
而环境时间

1828
01:18:43,560 --> 01:18:46,679
序列建模只是在蚂蚁中，

1829
01:18:46,679 --> 01:18:48,780
然后嗯

1830
01:18:48,780 --> 01:18:49,920


1831
01:18:49,920 --> 01:18:52,739
第四维度就像量子

1832
01:18:52,739 --> 01:18:55,380
旋转，它从较低

1833
01:18:55,380 --> 01:18:57,780
维度的经典斯蒂梅能屏幕

1834
01:18:57,780 --> 01:19:01,500
进入量子信息空间，

1835
01:19:01,500 --> 01:19:03,600
所以这是

1836
01:19:03,600 --> 01:19:06,000
关于 octinf right 的讨论之一 现在是关于将

1837
01:19:06,000 --> 01:19:08,840
量子

1838
01:19:08,840 --> 01:19:11,900
形式主义与

1839
01:19:11,900 --> 01:19:14,840
宏观联系起来的早期方法，让我们说

1840
01:19:14,840 --> 01:19:17,820
基于分子电子冒泡的合理性的神经现象，

1841
01:19:17,820 --> 01:19:19,860


1842
01:19:19,860 --> 01:19:23,400
而仅

1843
01:19:23,400 --> 01:19:26,940
通过决策和统计的研究以及

1844
01:19:26,940 --> 01:19:29,820
多视角建模以及与

1845
01:19:29,820 --> 01:19:31,260
相关的所有问题

1846
01:19:31,260 --> 01:19:33,300
物理性信息传递

1847
01:19:33,300 --> 01:19:34,679
它的有限性

1848
01:19:34,679 --> 01:19:37,560
量子形式本身就变得有用，

1849
01:19:37,560 --> 01:19:40,140
无论是否依赖

1850
01:19:40,140 --> 01:19:41,580
其他一些

1851
01:19:41,580 --> 01:19:44,760
电子现象，所以它只是

1852
01:19:44,760 --> 01:19:46,560
很多非常有趣的联系，比如

1853
01:19:46,560 --> 01:19:48,239
毯子上的自由度

1854
01:19:48,239 --> 01:19:51,000
可以是无噪声的和

1855
01:19:51,000 --> 01:19:53,340
四位的 或者这个

1856
01:19:53,340 --> 01:19:56,340
非常具体的东西可能会很吵，但在计算机中，你

1857
01:19:56,340 --> 01:19:57,360
可以

1858
01:19:57,360 --> 01:20:00,239
从两侧玩它，上下缩放东西，

1859
01:20:00,239 --> 01:20:02,219
并在任意空间之上进行这些元启发式，这

1860
01:20:02,219 --> 01:20:04,739


1861
01:20:04,739 --> 01:20:07,199
对于学习来说可能非常简单，也可能

1862
01:20:07,199 --> 01:20:10,080
非常多 然后就像

1863
01:20:10,080 --> 01:20:11,760
蚁群算法一样，

1864
01:20:11,760 --> 01:20:14,480
最终通过体现

1865
01:20:14,480 --> 01:20:17,820
这一属性使其成为生物模拟学真正有用的

1866
01:20:17,820 --> 01:20:20,159
候选者，所以很多

1867
01:20:20,159 --> 01:20:21,300
时候，当人们考虑收集

1868
01:20:21,300 --> 01:20:22,980
行为时，他们会想到像

1869
01:20:22,980 --> 01:20:24,500
鸟群和鸟群一样的行为。 鱼

1870
01:20:24,500 --> 01:20:27,239
和那些当然是集体

1871
01:20:27,239 --> 01:20:29,400
系统和集体行为，

1872
01:20:29,400 --> 01:20:31,140
所有这些类似的复杂系统

1873
01:20:31,140 --> 01:20:32,100
属性都

1874
01:20:32,100 --> 01:20:33,600
可以在该类型的系统中进行研究，

1875
01:20:33,600 --> 01:20:37,320
但它也忽略了它至少

1876
01:20:37,320 --> 01:20:39,000
具有柱头 G 的分析自由度，

1877
01:20:39,000 --> 01:20:40,199


1878
01:20:40,199 --> 01:20:44,580
因此真正开放 无论是

1879
01:20:44,580 --> 01:20:46,739
量子经典信息

1880
01:20:46,739 --> 01:20:49,880
还是利基修改和

1881
01:20:49,880 --> 01:20:54,120
行为呃以及认知建模，所以

1882
01:20:54,120 --> 01:20:56,280
只是补充一下，因为我认为

1883
01:20:56,280 --> 01:20:59,219
节点是什么甚至可以是

1884
01:20:59,219 --> 01:21:02,159
异构的或未知的或以

1885
01:21:02,159 --> 01:21:03,719
不同的方式适应或通过设计

1886
01:21:03,719 --> 01:21:06,239
过程固定 因此，就像蚁群

1887
01:21:06,239 --> 01:21:08,640
非常灵活，使它们能够生活在

1888
01:21:08,640 --> 01:21:11,460
各种地方，做出各种

1889
01:21:11,460 --> 01:21:13,620
嵌套的决定来相互交互，

1890
01:21:13,620 --> 01:21:15,480


1891
01:21:15,480 --> 01:21:17,699
这种灵活性就像

1892
01:21:17,699 --> 01:21:19,800
我们甚至可以描述的冰山一角，

1893
01:21:19,800 --> 01:21:21,900
因为 总是

1894
01:21:21,900 --> 01:21:23,940
真实的环境，我们还没有尝试

1895
01:21:23,940 --> 01:21:25,380
过蚁群，所以我们真的永远不会

1896
01:21:25,380 --> 01:21:27,960
知道

1897
01:21:27,960 --> 01:21:30,540
蚂蚁系统的所有技能和动力学的全部范围，

1898
01:21:30,540 --> 01:21:35,040
但我们可以将其归纳到

1899
01:21:35,040 --> 01:21:38,480
新的数学统计

1900
01:21:38,480 --> 01:21:40,560
分布框架中，然后拉回

1901
01:21:40,560 --> 01:21:42,000
不同的框架 元学习过程中的学习水平，然后从

1902
01:21:42,000 --> 01:21:43,500


1903
01:21:43,500 --> 01:21:47,280
那里开始，然后嗯，几乎讽刺的是，或者

1904
01:21:47,280 --> 01:21:49,560
或者嗯，也许相反，就像它

1905
01:21:49,560 --> 01:21:51,840
可以应用于蚁群视频

1906
01:21:51,840 --> 01:21:55,320
数据或运动数据或觅食

1907
01:21:55,320 --> 01:21:57,659
活动本身，但

1908
01:21:57,659 --> 01:21:59,699
它

1909
01:21:59,699 --> 01:22:01,920
需要灵感和

1910
01:22:01,920 --> 01:22:03,960
平行或在对话中发展，所以它

1911
01:22:03,960 --> 01:22:06,659
不像真正的蚂蚁可以做的平衡，或者

1912
01:22:06,659 --> 01:22:08,880
你可以限制它，这样

1913
01:22:08,880 --> 01:22:12,120
真正的蚂蚁就有一些属性，就像它们只能以

1914
01:22:12,120 --> 01:22:13,620
这种特定的

1915
01:22:13,620 --> 01:22:15,719
方式互动，或者就像真的只有这么

1916
01:22:15,719 --> 01:22:18,960
多信息素一样 模型比较，所以

1917
01:22:18,960 --> 01:22:21,840
它有很多自由度，我

1918
01:22:21,840 --> 01:22:23,940
觉得你们都在开放

1919
01:22:23,940 --> 01:22:26,640
蚁群建模，而且

1920
01:22:26,640 --> 01:22:28,199
多智能体模拟的挑战性部分之一

1921
01:22:28,199 --> 01:22:30,000
有点像

1922
01:22:30,000 --> 01:22:33,000
设计空间的开放性，

1923
01:22:33,000 --> 01:22:35,699
所以然后 即使是创造性的

1924
01:22:35,699 --> 01:22:37,320
想法也很难找到正确的

1925
01:22:37,320 --> 01:22:39,840
计算资源，这些资源显然

1926
01:22:39,840 --> 01:22:41,940
仍然是你发现的东西所需要的，嗯，

1927
01:22:41,940 --> 01:22:43,500


1928
01:22:43,500 --> 01:22:46,560
通过这里的分析，

1929
01:22:46,560 --> 01:22:49,080
伯特在聊天中提出了一个很棒的问题，

1930
01:22:49,080 --> 01:22:52,500
我只是想澄清一下 呃，

1931
01:22:52,500 --> 01:22:54,600
确保我得到了正确的术语，

1932
01:22:54,600 --> 01:22:57,060
当然，阿卜杜拉·拉曼和特拉维斯，你

1933
01:22:57,060 --> 01:22:58,440
可能想查一下，当你

1934
01:22:58,440 --> 01:22:59,820
说毯子时，你指的

1935
01:22:59,820 --> 01:23:03,179
是马尔可夫毯子，正确，是的，所以

1936
01:23:03,179 --> 01:23:05,580
马尔可夫毯子的技术定义

1937
01:23:05,580 --> 01:23:08,520
是当你有贝叶斯毯子时 图，其中

1938
01:23:08,520 --> 01:23:10,080
节点是变量，边是

1939
01:23:10,080 --> 01:23:11,520


1940
01:23:11,520 --> 01:23:14,159
任何给定感兴趣节点的这些变量之间的关系，我们将

1941
01:23:14,159 --> 01:23:15,659
其称为内部状态，因此这些

1942
01:23:15,659 --> 01:23:16,980
不是世界的特征，它不会

1943
01:23:16,980 --> 01:23:19,260
标记到世界上真正的巢友的某些组织上

1944
01:23:19,260 --> 01:23:20,760
这是被

1945
01:23:20,760 --> 01:23:22,500
标记到或类似于

1946
01:23:22,500 --> 01:23:24,420
我们可以在基本图中的任何节点上采取的透视图的东西

1947
01:23:24,420 --> 01:23:26,520
，然后将

1948
01:23:26,520 --> 01:23:29,880
其隔离在共同父级中的所有节点都被

1949
01:23:29,880 --> 01:23:32,219
称为毯子，因为它

1950
01:23:32,219 --> 01:23:35,159
就像一层绝缘体，并且有一个

1951
01:23:35,159 --> 01:23:36,659
关于它和

1952
01:23:36,659 --> 01:23:38,640
哲学含义以及所有这些

1953
01:23:38,640 --> 01:23:41,340
概括的更多讨论，

1954
01:23:41,340 --> 01:23:43,500
但广义上的马尔可夫毯子只是

1955
01:23:43,500 --> 01:23:45,780
我们

1956
01:23:45,780 --> 01:23:47,460
与意义建构和

1957
01:23:47,460 --> 01:23:50,340
感知学习注意力相关联的入站依赖关系，然后是

1958
01:23:50,340 --> 01:23:53,520


1959
01:23:53,520 --> 01:23:55,380
我们与类似行动相关联的代理的外向依赖关系

1960
01:23:55,380 --> 01:23:57,659
在

1961
01:23:57,659 --> 01:24:00,360
某些下游指向方式上的影响

1962
01:24:00,360 --> 01:24:02,340
谢谢你，我只是想澄清一下，

1963
01:24:02,340 --> 01:24:04,860
因为我认为阿卜杜勒·拉赫曼和

1964
01:24:04,860 --> 01:24:06,600
特拉维斯可能不熟悉这个

1965
01:24:06,600 --> 01:24:09,480
术语，这是非常呃福斯顿式的，你

1966
01:24:09,480 --> 01:24:11,460
知道非常活跃的推理类

1967
01:24:11,460 --> 01:24:13,560
术语，所以我想确保

1968
01:24:13,560 --> 01:24:15,239
他们从物理学的角度得到了这一点，

1969
01:24:15,239 --> 01:24:18,179
谢谢，是的，完全是伟大的

1970
01:24:18,179 --> 01:24:20,520
观点，嗯，

1971
01:24:20,520 --> 01:24:24,960
现在从鸟晚餐那里问一个问题，说

1972
01:24:24,960 --> 01:24:27,360
非常令人印象深刻，

1973
01:24:27,360 --> 01:24:29,219
用更多的生成模型解决生成模型听起来

1974
01:24:29,219 --> 01:24:31,199
很有希望，用

1975
01:24:31,199 --> 01:24:35,239
卷积代替蚂蚁怎么样，

1976
01:24:38,300 --> 01:24:42,000
我想要一个元学习 像

1977
01:24:42,000 --> 01:24:43,860
拥有一个学习如何

1978
01:24:43,860 --> 01:24:47,480
优化其他神经网络的神经网络

1979
01:24:48,239 --> 01:24:51,199
这样的算法是的，我的意思是这个概念我认为

1980
01:24:51,199 --> 01:24:53,400
在某些时候受到了采访，我的意思是在

1981
01:24:53,400 --> 01:24:56,520
机器常规中，但我们希望

1982
01:24:56,520 --> 01:25:01,140
申请基于自然的呃方法，

1983
01:25:01,140 --> 01:25:04,260
模仿母亲 自然，

1984
01:25:04,260 --> 01:25:08,040
你知道，自然是最

1985
01:25:08,040 --> 01:25:10,320
有效的优化革命系统，

1986
01:25:10,320 --> 01:25:11,760
所以

1987
01:25:11,760 --> 01:25:14,219
嗯，看看我们可以得到的结果，

1988
01:25:14,219 --> 01:25:16,199
这些自然意味着

1989
01:25:16,199 --> 01:25:18,840
基于自然的方法，它们

1990
01:25:18,840 --> 01:25:21,420
优于任何其他方法，

1991
01:25:21,420 --> 01:25:22,980
我们得到的结果也

1992
01:25:22,980 --> 01:25:25,020
刚刚指出指出，

1993
01:25:25,020 --> 01:25:27,719
我们如此优秀的表演者是

1994
01:25:27,719 --> 01:25:29,580
从我们的结果

1995
01:25:29,580 --> 01:25:31,380
以及之前其他方法的结果中得出的，

1996
01:25:31,380 --> 01:25:32,820


1997
01:25:32,820 --> 01:25:35,520
所以我在这里稍微跳了一下，

1998
01:25:35,520 --> 01:25:36,900


1999
01:25:36,900 --> 01:25:39,300
嗯，在神经架构

2000
01:25:39,300 --> 01:25:40,620
研究的情况下 有几类

2001
01:25:40,620 --> 01:25:42,540
方法，其中一种是

2002
01:25:42,540 --> 01:25:44,580
建设性的，就像我们

2003
01:25:44,580 --> 01:25:47,580
构建越来越大的网络，并尝试将

2004
01:25:47,580 --> 01:25:49,800
网络大小保持在最小，以

2005
01:25:49,800 --> 01:25:52,320
尝试找到最佳解决方案，其他

2006
01:25:52,320 --> 01:25:54,120
类型的神经架构搜索

2007
01:25:54,120 --> 01:25:56,400
方法使用的就像 上层建筑，

2008
01:25:56,400 --> 01:25:58,500
这就是早期

2009
01:25:58,500 --> 01:26:00,780
迭代的方式，你有一个

2010
01:26:00,780 --> 01:26:02,699
搜索空间的界限，你尝试

2011
01:26:02,699 --> 01:26:04,139
在这个界限内找到最佳网络，

2012
01:26:04,139 --> 01:26:05,940
所以一个就像尝试从头开始构建

2013
01:26:05,940 --> 01:26:07,320
东西，另一个就像尝试从头开始构建东西

2014
01:26:07,320 --> 01:26:10,260
试图将一个大

2015
01:26:10,260 --> 01:26:12,300
网络修剪成一个小网络，

2016
01:26:12,300 --> 01:26:14,840
嗯，问你关于卷积的问题，

2017
01:26:14,840 --> 01:26:17,880


2018
01:26:17,880 --> 01:26:19,560
最近在所谓的

2019
01:26:19,560 --> 01:26:21,719
基于图的神经网络中进行了相当多的研究，它可以

2020
01:26:21,719 --> 01:26:24,960
像

2021
01:26:24,960 --> 01:26:27,179
离散图搜索空间一样使用卷积 并且

2022
01:26:27,179 --> 01:26:28,920
可能会生成其他图表，我

2023
01:26:28,920 --> 01:26:30,239
相信已经有一些神经

2024
01:26:30,239 --> 01:26:32,580
架构师架构搜索工作使用了

2025
01:26:32,580 --> 01:26:35,580
它，但主要的之一，

2026
01:26:35,580 --> 01:26:37,440
我认为

2027
01:26:37,440 --> 01:26:39,420
这里的方法很酷，与那些不同的

2028
01:26:39,420 --> 01:26:40,800
是，即使你有一个

2029
01:26:40,800 --> 01:26:42,659
基于图表的神经网络并且 您将

2030
01:26:42,659 --> 01:26:44,219
搜索库

2031
01:26:44,219 --> 01:26:45,960
定义为某种矩阵，其中

2032
01:26:45,960 --> 01:26:47,580
事物处于关闭和打开状态，具体取决于哪些

2033
01:26:47,580 --> 01:26:49,080
节点相互连接您

2034
01:26:49,080 --> 01:26:51,600
有一个固定的搜索空间，该空间可能

2035
01:26:51,600 --> 01:26:53,520
不够大，或者可能不是

2036
01:26:53,520 --> 01:26:55,199
正确的搜索空间 对于这个神经

2037
01:26:55,199 --> 01:26:57,179
架构搜索问题，

2038
01:26:57,179 --> 01:26:59,880
这里的方法都是连续的，所以

2039
01:26:59,880 --> 01:27:01,440
嗯，在这个连续的搜索空间中，

2040
01:27:01,440 --> 01:27:03,300
你确实拥有它，它给算法

2041
01:27:03,300 --> 01:27:04,860
很大的自由度，也许太多的自由度，

2042
01:27:04,860 --> 01:27:07,620
但嗯，这是一种真正开放式的方式来

2043
01:27:07,620 --> 01:27:10,199
生成各种各样的内容。 神经

2044
01:27:10,199 --> 01:27:12,900
架构，如果你预先限制

2045
01:27:12,900 --> 01:27:16,199
你的算法在固定的

2046
01:27:16,199 --> 01:27:18,120
离散上层结构中工作，你甚至可能

2047
01:27:18,120 --> 01:27:19,800
找不到它们，因为它们甚至不存在，

2048
01:27:19,800 --> 01:27:22,139
甚至不可能，

2049
01:27:22,139 --> 01:27:24,480
所以这就是我们没有这样做的原因之一。

2050
01:27:24,480 --> 01:27:26,760
不要走这条路，但有

2051
01:27:26,760 --> 01:27:29,159
基于图的神经艺术

2052
01:27:29,159 --> 01:27:30,659
架构搜索算法，

2053
01:27:30,659 --> 01:27:31,860
基本上你把

2054
01:27:31,860 --> 01:27:34,260
架构当作一个图，你

2055
01:27:34,260 --> 01:27:36,000
训练一个神经网络来吐出

2056
01:27:36,000 --> 01:27:37,320
另一个它可能认为更好的图

2057
01:27:37,320 --> 01:27:39,559


2058
01:27:40,199 --> 01:27:42,960
，有时使用卷积

2059
01:27:42,960 --> 01:27:44,340
来帮助

2060
01:27:44,340 --> 01:27:46,199
这太棒了，所以卷积听起来是

2061
01:27:46,199 --> 01:27:49,139
的，嗯，一个想法是，

2062
01:27:49,139 --> 01:27:52,199
是的，蚂蚁解决了所有这些令人难以置信的

2063
01:27:52,199 --> 01:27:54,420
模式，并且

2064
01:27:54,420 --> 01:27:56,820
在信息和物理限制下做了一些令人惊奇的事情，

2065
01:27:56,820 --> 01:27:59,280


2066
01:27:59,280 --> 01:28:02,340
就像我们都

2067
01:28:02,340 --> 01:28:04,400


2068
01:28:06,060 --> 01:28:09,420
让蚂蚁能够

2069
01:28:09,420 --> 01:28:11,159


2070
01:28:11,159 --> 01:28:13,500


2071
01:28:13,500 --> 01:28:15,239
进行交易一样 -

2072
01:28:15,239 --> 01:28:18,300
在任务空间内进行关闭，

2073
01:28:18,300 --> 01:28:22,199
然后用一个刻度盘作为建模器，使

2074
01:28:22,199 --> 01:28:24,840
该任务空间有点像触摸

2075
01:28:24,840 --> 01:28:27,199
信息素分布

2076
01:28:27,199 --> 01:28:31,860
或元认知蚂蚁以及所有或

2077
01:28:31,860 --> 01:28:34,500
本质上模拟的东西，

2078
01:28:34,500 --> 01:28:37,080
例如八度推论具有前瞻性，

2079
01:28:37,080 --> 01:28:38,520
并且喜欢

2080
01:28:38,520 --> 01:28:39,900
通过其他方式进行思考 认为

2081
01:28:39,900 --> 01:28:42,239
可能存在一种认知

2082
01:28:42,239 --> 01:28:43,440
群体，

2083
01:28:43,440 --> 01:28:47,100
这样就可以在计算机中实现

2084
01:28:47,100 --> 01:28:49,560
总体思维实验群体，

2085
01:28:49,560 --> 01:28:54,420
并通过数据驱动的过程也可以

2086
01:28:54,420 --> 01:28:56,820
与该模型保持连续性，

2087
01:28:56,820 --> 01:28:58,739
也许是与模型字面意义上的连续性，

2088
01:28:58,739 --> 01:29:02,100
然后与经验联系起来，

2089
01:29:02,100 --> 01:29:04,679
这是

2090
01:29:04,679 --> 01:29:05,219
嗯

2091
01:29:05,219 --> 01:29:08,580
对于基于代理的建模来说是非常困难的，

2092
01:29:08,580 --> 01:29:11,580
当你经常

2093
01:29:11,580 --> 01:29:14,699
设置某些固定轴时，它会像扫描一样执行，

2094
01:29:14,699 --> 01:29:15,960


2095
01:29:15,960 --> 01:29:18,179
着眼于一种机制，而不考虑

2096
01:29:18,179 --> 01:29:20,699
所有这些可能的机制，例如

2097
01:29:20,699 --> 01:29:24,120
学习、内部和代际

2098
01:29:24,120 --> 01:29:26,940
以及所有这些时间效应，

2099
01:29:26,940 --> 01:29:30,840
所以 您如何看待它在

2100
01:29:30,840 --> 01:29:32,460
不同的研究或应用

2101
01:29:32,460 --> 01:29:35,460
领域中的使用

2102
01:29:38,340 --> 01:29:39,719
哇

2103
01:29:39,719 --> 01:29:44,880
好吧，我的意思是我们正在考虑的主要用例

2104
01:29:44,880 --> 01:29:46,739
是新的

2105
01:29:46,739 --> 01:29:49,260
革命性架构搜索呃，

2106
01:29:49,260 --> 01:29:52,380
它是为了将其应用于除

2107
01:29:52,380 --> 01:29:55,440
北极搜索之外的其他领域，我们没有 不

2108
01:29:55,440 --> 01:29:58,440
明白是的呃我想亚历克斯可以

2109
01:29:58,440 --> 01:30:00,719
解释一下我也

2110
01:30:00,719 --> 01:30:03,179
可以跳一点我的意思是

2111
01:30:03,179 --> 01:30:06,060
基本上这种类型的算法如果

2112
01:30:06,060 --> 01:30:08,219
你需要生成图表

2113
01:30:08,219 --> 01:30:10,560
并且你不一定有

2114
01:30:10,560 --> 01:30:12,960
该图表的固定结构 当我说

2115
01:30:12,960 --> 01:30:14,219
图表时，我的意思是像计算机科学

2116
01:30:14,219 --> 01:30:16,860
图表一样，其中有节点图像，

2117
01:30:16,860 --> 01:30:19,320
嗯，几乎所有涉及

2118
01:30:19,320 --> 01:30:21,480
图表构造的东西我认为这些类型

2119
01:30:21,480 --> 01:30:23,699
的方法不不在

2120
01:30:23,699 --> 01:30:25,560
幕后工作，你知道可以

2121
01:30:25,560 --> 01:30:28,020
表示为图表并且通常 所以

2122
01:30:28,020 --> 01:30:30,000
我认为我们将它用于神经

2123
01:30:30,000 --> 01:30:32,699
网络，因为它真的很受欢迎，但是

2124
01:30:32,699 --> 01:30:34,620
嗯你知道还有其他

2125
01:30:34,620 --> 01:30:36,420
算法，就像你知道

2126
01:30:36,420 --> 01:30:39,060
传统的旅行推销员

2127
01:30:39,060 --> 01:30:40,560
嗯有路由问题所有

2128
01:30:40,560 --> 01:30:41,880
你可能需要的任何类型的东西

2129
01:30:41,880 --> 01:30:43,739


2130
01:30:43,739 --> 01:30:47,040
以聪明的方式生成一个图表让我们去做吧是的，

2131
01:30:47,040 --> 01:30:48,540
尽管我认为

2132
01:30:48,540 --> 01:30:49,739
这里真的很酷，而且我不想

2133
01:30:49,739 --> 01:30:51,420
偷偷绕过那些雷霆，但你

2134
01:30:51,420 --> 01:30:52,800
知道他关于未来方向的最后一点

2135
01:30:52,800 --> 01:30:54,179
是

2136
01:30:54,179 --> 01:30:56,760
嗯，而特定版本

2137
01:30:56,760 --> 01:30:58,440
这个蚁群优化搜索的

2138
01:30:58,440 --> 01:30:59,880
运行是为了找到一个最佳的神经

2139
01:30:59,880 --> 01:31:03,480
网络，一个蚁群有固定的

2140
01:31:03,480 --> 01:31:06,659
运行参数，但如果你把

2141
01:31:06,659 --> 01:31:08,699
蚁群看作一个有机体，而

2142
01:31:08,699 --> 01:31:10,739
不是把蚂蚁看作一个有机体，你就可以进化出

2143
01:31:10,739 --> 01:31:15,659
优化蚁群运作方式的蚁群。

2144
01:31:15,659 --> 01:31:17,880
蚂蚁本身会采取行动，这样你就可以拥有

2145
01:31:17,880 --> 01:31:21,719
不断发展的蚁群，在较小的

2146
01:31:21,719 --> 01:31:25,139
意义上，它们也会

2147
01:31:25,139 --> 01:31:26,760
在为它们生成的代理规定的呃参数范围内进化或优化它们正在做的事情，

2148
01:31:26,760 --> 01:31:29,699


2149
01:31:29,699 --> 01:31:31,199
这样你就可以拥有像元一样的

2150
01:31:31,199 --> 01:31:34,860
元精度真的很酷，

2151
01:31:34,860 --> 01:31:37,199
太棒了 我的意思是，今天关于“

2152
01:31:37,199 --> 01:31:40,320
放大器行为”的“为什么”问题的进化解释，

2153
01:31:40,320 --> 01:31:42,900
答案的一部分就像是

2154
01:31:42,900 --> 01:31:45,659
因为在

2155
01:31:45,659 --> 01:31:48,600
这种规律或限制下无法生存的殖民地，

2156
01:31:48,600 --> 01:31:51,120
我们已经有很长一段时间来消除它们了，

2157
01:31:51,120 --> 01:31:53,219
所以每一个 生物

2158
01:31:53,219 --> 01:31:54,540
系统必须具有这种

2159
01:31:54,540 --> 01:31:56,639
多尺度排序，

2160
01:31:56,639 --> 01:32:00,840
嗯，我们在 2021 年制作了主动基础蚂蚁

2161
01:32:00,840 --> 01:32:03,120
论文，该论文是根据

2162
01:32:03,120 --> 01:32:07,139
认知觅食视觉注意任务修改的，

2163
01:32:07,139 --> 01:32:07,860
嗯，

2164
01:32:07,860 --> 01:32:11,580
关于扫描周围，然后学习与

2165
01:32:11,580 --> 01:32:14,040


2166
01:32:14,040 --> 01:32:16,080
认知觅食有关的蝉策略，但是 不留下

2167
01:32:16,080 --> 01:32:17,940
痕迹，然后将

2168
01:32:17,940 --> 01:32:20,040
主动推理认知视觉

2169
01:32:20,040 --> 01:32:22,860
觅食模型带入主动呃

2170
01:32:22,860 --> 01:32:25,800
推理蚂蚁设置的主要修改是添加

2171
01:32:25,800 --> 01:32:27,540
信息素规则，就像您所描述的那样，

2172
01:32:27,540 --> 01:32:28,739
尽管当然这不是

2173
01:32:28,739 --> 01:32:30,540
唯一的信息素规则，但这只是

2174
01:32:30,540 --> 01:32:32,100
最简单的信息素规则，我们

2175
01:32:32,100 --> 01:32:34,080
可以从中概括出来，就像您肯定

2176
01:32:34,080 --> 01:32:37,800
拥有的那样，并且有许多新兴

2177
01:32:37,800 --> 01:32:39,719
方法可以对这些多尺度

2178
01:32:39,719 --> 01:32:41,940
主动推理模型进行建模，因此可以

2179
01:32:41,940 --> 01:32:44,400
跨层进行组合，我们可能会

2180
01:32:44,400 --> 01:32:46,760
更多地将其与

2181
01:32:46,760 --> 01:32:48,900
通过交互发生的事物的偏侧性联系起来

2182
01:32:48,900 --> 01:32:52,199
然后也正如迈克·莱文（Mike Levin）所

2183
01:32:52,199 --> 01:32:54,260
展示的那样，钻石

2184
01:32:54,260 --> 01:32:58,560
系统具有

2185
01:32:58,560 --> 01:33:00,239


2186
01:33:00,239 --> 01:33:04,440
某种形状认知形状的记忆保留成分，然后是

2187
01:33:04,440 --> 01:33:06,420
前

2188
01:33:06,420 --> 01:33:10,139
张力意识或代理或其他

2189
01:33:10,139 --> 01:33:11,880
属性，您可以使用它来描述它，

2190
01:33:11,880 --> 01:33:14,699
这是一种统计上可行的

2191
01:33:14,699 --> 01:33:18,420
方式 来描述事物，

2192
01:33:18,420 --> 01:33:20,100
然后

2193
01:33:20,100 --> 01:33:22,920
对给定的统计

2194
01:33:22,920 --> 01:33:24,659
问题有多种实现，或者像联合计算架构一样，

2195
01:33:24,659 --> 01:33:26,820


2196
01:33:26,820 --> 01:33:29,300
您可能不会像

2197
01:33:29,300 --> 01:33:32,460


2198
01:33:32,460 --> 01:33:34,560
主动推理不同组件的早期 Matlab 代码中所示的纯矩阵乘法那样运行

2199
01:33:34,560 --> 01:33:36,480


2200
01:33:36,480 --> 01:33:37,920
机器学习系统的组合可能

2201
01:33:37,920 --> 01:33:41,580
也以

2202
01:33:41,580 --> 01:33:44,040
遵守这些

2203
01:33:44,040 --> 01:33:45,600
通信模式的方式组合在一起，但是

2204
01:33:45,600 --> 01:33:48,420
我们仍然可以描述一定程度的抽象，

2205
01:33:48,420 --> 01:33:49,920
但这并不意味着主动

2206
01:33:49,920 --> 01:33:52,080
推理会像

2207
01:33:52,080 --> 01:33:53,699
导致它，

2208
01:33:53,699 --> 01:33:54,900
这就是提供很大

2209
01:33:54,900 --> 01:33:58,080
灵活性的原因，而且

2210
01:33:58,080 --> 01:34:00,600
通过您的背景亚历山大和

2211
01:34:00,600 --> 01:34:03,020
工作以及这些类型的

2212
01:34:03,020 --> 01:34:05,639
合作（例如

2213
01:34:05,639 --> 01:34:07,320
多智能体建模的主动推理视角）

2214
01:34:07,320 --> 01:34:10,260
与所有其他观点

2215
01:34:10,260 --> 01:34:11,820
至少可以相对地结合在一起，这真的很酷

2216
01:34:11,820 --> 01:34:12,679


2217
01:34:12,679 --> 01:34:14,580


2218
01:34:14,580 --> 01:34:17,400
然后，我认为这将是

2219
01:34:17,400 --> 01:34:20,639
一个非常有趣的交换，应用

2220
01:34:20,639 --> 01:34:22,800
整个

2221
01:34:22,800 --> 01:34:26,760
组织类型或菌落类型，在

2222
01:34:26,760 --> 01:34:29,280
模型之上和内部进行思考，

2223
01:34:29,280 --> 01:34:31,380
就像你所说的那样，有很多自由度

2224
01:34:31,380 --> 01:34:34,320
可能太多了，我的意思是，我

2225
01:34:34,320 --> 01:34:36,300
认为有不同的方法 我认为

2226
01:34:36,300 --> 01:34:38,699
你取决于你想如何理解

2227
01:34:38,699 --> 01:34:41,460
蚂蚁的比喻，你再次知道，

2228
01:34:41,460 --> 01:34:43,620


2229
01:34:43,620 --> 01:34:45,239
你提出的一些问题或评论很有趣，

2230
01:34:45,239 --> 01:34:47,400
丹尼尔和一些观众关于

2231
01:34:47,400 --> 01:34:50,100
你知道呃，你知道这是怎么想的

2232
01:34:50,100 --> 01:34:51,780
从认知的角度来看，

2233
01:34:51,780 --> 01:34:53,460
我的意思是我确实在认知架构中工作，

2234
01:34:53,460 --> 01:34:55,860
当然，又是

2235
01:34:55,860 --> 01:34:58,679
从你知道的整个单一代理或

2236
01:34:58,679 --> 01:35:01,679
单一实体开始，你知道

2237
01:35:01,679 --> 01:35:03,960
在不同区域对单个大脑进行建模，

2238
01:35:03,960 --> 01:35:07,440
但我认为如果你知道的话 一种受

2239
01:35:07,440 --> 01:35:11,040
自然启发的优化方法，

2240
01:35:11,040 --> 01:35:13,739
就像阿卜杜勒·拉门（Abdel Ramen）所坚持的蚂蚁隐喻，

2241
01:35:13,739 --> 01:35:16,260


2242
01:35:16,260 --> 01:35:17,960
这有点像他形式化地阐述了蚂蚁

2243
01:35:17,960 --> 01:35:21,000
如何与世界互动的原则，或者说

2244
01:35:21,000 --> 01:35:23,520
蚂蚁如何与世界

2245
01:35:23,520 --> 01:35:26,460
互动的原则。 然后你

2246
01:35:26,460 --> 01:35:28,920
知道逐步对这些特定概念进行数学建模

2247
01:35:28,920 --> 01:35:31,800


2248
01:35:31,800 --> 01:35:34,500
我想如果你改变比喻并说

2249
01:35:34,500 --> 01:35:36,540
好吧，蚁群比喻可以

2250
01:35:36,540 --> 01:35:39,900
适用于多人类智能体系统吗？

2251
01:35:39,900 --> 01:35:42,480
或者其他实体，它

2252
01:35:42,480 --> 01:35:44,460
确实可以，蚂蚁一定可以吗？

2253
01:35:44,460 --> 01:35:46,860
概括超出你所知道的物理

2254
01:35:46,860 --> 01:35:51,000
生物，阿卜杜勒拉赫曼基于

2255
01:35:51,000 --> 01:35:52,440
他最初的隐喻，这是一种

2256
01:35:52,440 --> 01:35:54,300
有趣的哲学形式，

2257
01:35:54,300 --> 01:35:57,239
然后你如何应用它来

2258
01:35:57,239 --> 01:35:59,100
建立一个多智能体

2259
01:35:59,100 --> 01:36:01,080
认知系统，然后当然说

2260
01:36:01,080 --> 01:36:03,480
特拉维斯正在讨论 你

2261
01:36:03,480 --> 01:36:05,820
提到元认知，你

2262
01:36:05,820 --> 01:36:07,380
知道你可以想到蚁群的蚁群，

2263
01:36:07,380 --> 01:36:09,000
但你甚至可以替换“

2264
01:36:09,000 --> 01:36:11,159
蚂蚁”这个词，然后说，我们有

2265
01:36:11,159 --> 01:36:13,260
你知道的集群，你知道

2266
01:36:13,260 --> 01:36:15,719
智能代理，或者无论

2267
01:36:15,719 --> 01:36:17,760
我们建模的程度如何 这样做是因为

2268
01:36:17,760 --> 01:36:20,159
我确实想再次强调，

2269
01:36:20,159 --> 01:36:22,440
至少他们不能，而且我在拉面的背景下与蚂蚁代理

2270
01:36:22,440 --> 01:36:24,360
合作过，

2271
01:36:24,360 --> 01:36:26,280
你知道他们本身并不在其中，

2272
01:36:26,280 --> 01:36:29,040
即使我会争辩说，如果

2273
01:36:29,040 --> 01:36:31,739
没有其他的话，这是一个非常简化的过程

2274
01:36:31,739 --> 01:36:34,920
生成模型或非常非常

2275
01:36:34,920 --> 01:36:38,100
简单的控制系统，

2276
01:36:38,100 --> 01:36:39,540
每个模型下都没有神经网络，因为这样

2277
01:36:39,540 --> 01:36:41,159
你就必须

2278
01:36:41,159 --> 01:36:43,139
在框架内计算模拟每只蚂蚁，

2279
01:36:43,139 --> 01:36:44,580
所以我认为总有一种

2280
01:36:44,580 --> 01:36:47,280
很好的实用机器学习

2281
01:36:47,280 --> 01:36:48,780
观点 知道

2282
01:36:48,780 --> 01:36:50,820
总有一种方法可以模拟，因为你

2283
01:36:50,820 --> 01:36:53,040
知道明显与 CPU 一起工作，这

2284
01:36:53,040 --> 01:36:55,980
不像他有一支 GPU 军队可以

2285
01:36:55,980 --> 01:36:57,840
再次用卷积网络取代它们，

2286
01:36:57,840 --> 01:36:59,699
如果你有资源，这会

2287
01:36:59,699 --> 01:37:02,159
很棒，但呃你知道费用和

2288
01:37:02,159 --> 01:37:03,900
金钱是另一回事 这个星球上的限制，

2289
01:37:03,900 --> 01:37:05,340
但是

2290
01:37:05,340 --> 01:37:07,260
嗯，我认为，通过从蚂蚁比喻中汲取灵感，可以得出有趣的观点和

2291
01:37:07,260 --> 01:37:10,260
有趣的方向，

2292
01:37:10,260 --> 01:37:13,139


2293
01:37:13,139 --> 01:37:15,420
你知道信息素的概念，

2294
01:37:15,420 --> 01:37:18,000
并将它们转化为其他你知道的

2295
01:37:18,000 --> 01:37:20,699
其他现实世界信号，以及

2296
01:37:20,699 --> 01:37:23,100
例如你们之间的沟通模式

2297
01:37:23,100 --> 01:37:25,020
知道其他动物实体或其他

2298
01:37:25,020 --> 01:37:26,940
人类代理人，我认为这

2299
01:37:26,940 --> 01:37:28,920
打开了一个有趣的视角，如果

2300
01:37:28,920 --> 01:37:30,840
你不断尝试将其连接

2301
01:37:30,840 --> 01:37:32,940
回你知道的自由能

2302
01:37:32,940 --> 01:37:35,340
最小化并试图说清楚

2303
01:37:35,340 --> 01:37:38,159
我们如何平衡你知道

2304
01:37:38,159 --> 01:37:40,500
你知道的术语 可以将其分解为认知

2305
01:37:40,500 --> 01:37:42,480
和工具，这些是如何

2306
01:37:42,480 --> 01:37:45,239
平衡的，

2307
01:37:45,239 --> 01:37:48,540
我们指定的这些物理过程是如何平衡的，

2308
01:37:48,540 --> 01:37:50,280
你知道平衡这些术语，这是

2309
01:37:50,280 --> 01:37:52,139
一个非常有趣的地方，

2310
01:37:52,139 --> 01:37:53,940
你提到你知道

2311
01:37:53,940 --> 01:37:56,159
蚂蚁的主动推理版本和 这本身就很有趣，

2312
01:37:56,159 --> 01:37:58,739
呃，我最后的评论

2313
01:37:58,739 --> 01:38:01,320
再次是建模的程度以及

2314
01:38:01,320 --> 01:38:03,420
你正在建模的内容，如果你正在建模

2315
01:38:03,420 --> 01:38:05,639
一个社会或组织，你知道

2316
01:38:05,639 --> 01:38:07,500
这是你可以使用你知道的

2317
01:38:07,500 --> 01:38:10,320
蚁群框架的一种方式，如果你愿意的话或

2318
01:38:10,320 --> 01:38:12,199
优化 或元启发式

2319
01:38:12,199 --> 01:38:14,760
优化框架，然后将

2320
01:38:14,760 --> 01:38:17,820
你知道的系统投射为任何

2321
01:38:17,820 --> 01:38:20,940
类型的复杂多智能体系统，作为

2322
01:38:20,940 --> 01:38:22,920
主动推理类型的

2323
01:38:22,920 --> 01:38:25,620
参与过程，或者你可以进入

2324
01:38:25,620 --> 01:38:27,719
非常低的水平并考虑你

2325
01:38:27,719 --> 01:38:30,120
知道的细胞 在一个身体或你知道的

2326
01:38:30,120 --> 01:38:32,820
组成器官或细胞器的单位中，

2327
01:38:32,820 --> 01:38:34,560
我们可以用它来

2328
01:38:34,560 --> 01:38:36,600
模拟

2329
01:38:36,600 --> 01:38:38,760
人类或动物实体中的粒度水平，

2330
01:38:38,760 --> 01:38:39,900
我认为有一些

2331
01:38:39,900 --> 01:38:41,880
有趣的问题关于

2332
01:38:41,880 --> 01:38:44,340
这个隐喻是如何实现的 表现在

2333
01:38:44,340 --> 01:38:45,960
不同的时间尺度和不同的

2334
01:38:45,960 --> 01:38:48,719
程度，你

2335
01:38:48,719 --> 01:38:50,520
对如何建模的看法正确，你在

2336
01:38:50,520 --> 01:38:52,320
看什么，你想要模拟的图片是什么，

2337
01:38:52,320 --> 01:38:53,940
当然，在

2338
01:38:53,940 --> 01:38:55,560
幕后总是有

2339
01:38:55,560 --> 01:38:57,780


2340
01:38:57,780 --> 01:39:00,420
计算费用的实际考虑 他们分配，

2341
01:39:00,420 --> 01:39:02,219
你是否能够实际运行该

2342
01:39:02,219 --> 01:39:04,020
模拟足够长的时间，因为我认为

2343
01:39:04,020 --> 01:39:06,600
所有的拉面都不正确，如果我

2344
01:39:06,600 --> 01:39:08,280
错了，你提到的一个

2345
01:39:08,280 --> 01:39:10,560
实验我认为是针对更大的

2346
01:39:10,560 --> 01:39:12,480
系统花了一个月的时间，当然

2347
01:39:12,480 --> 01:39:15,300
这是 在CPU上，呃，你知道，

2348
01:39:15,300 --> 01:39:17,880
如果你想要比这更大的，那可能会变得相当呃令人望而却步，

2349
01:39:17,880 --> 01:39:19,560
但

2350
01:39:19,560 --> 01:39:21,659
我再次认为这取决于你

2351
01:39:21,659 --> 01:39:23,400
知道你需要什么硬件来模拟

2352
01:39:23,400 --> 01:39:27,239
太阳，是的，而且呃，我的意思是

2353
01:39:27,239 --> 01:39:29,159
使用高性能计算

2354
01:39:29,159 --> 01:39:31,739
对于较小的情况并不总是可行，所以如果

2355
01:39:31,739 --> 01:39:34,320
我们尝试对蚂蚁的大脑进行建模，例如

2356
01:39:34,320 --> 01:39:36,239
小型神经网络，

2357
01:39:36,239 --> 01:39:39,300
那么您使用的 GPU 可能不是

2358
01:39:39,300 --> 01:39:41,760
一个可行的解决方案，而 Travis 是

2359
01:39:41,760 --> 01:39:43,260


2360
01:39:43,260 --> 01:39:46,639
这里的高性能计算专家，它具有专家价值，但就像 将

2361
01:39:46,639 --> 01:39:49,920
数据发送到 GPU 并取回它

2362
01:39:49,920 --> 01:39:52,440
非常耗时，并且资源可以

2363
01:39:52,440 --> 01:39:55,500
继续使用，因此它会恶化

2364
01:39:55,500 --> 01:39:58,260
时间消耗而不是

2365
01:39:58,260 --> 01:40:00,960
解决它，因为

2366
01:40:00,960 --> 01:40:04,440
主内存和 GPU 之间的通信会

2367
01:40:04,440 --> 01:40:08,880
产生开销，所以

2368
01:40:08,880 --> 01:40:11,820


2369
01:40:11,820 --> 01:40:17,780
在此类解决方案中实际使用该 GPU 必须是一个足够大的问题，是的，

2370
01:40:20,760 --> 01:40:23,040
当您知道

2371
01:40:23,040 --> 01:40:25,980
超大型语言模型或

2372
01:40:25,980 --> 01:40:28,639
计算机视觉大型模型时，它们会对

2373
01:40:28,639 --> 01:40:32,100
张量进行大量大规模操作，这些操作

2374
01:40:32,100 --> 01:40:33,840
基本上是 多维矩阵，

2375
01:40:33,840 --> 01:40:36,780
当你有非常大的宽

2376
01:40:36,780 --> 01:40:39,540
张量时，你可以在

2377
01:40:39,540 --> 01:40:42,139
GPU 上很好地并行化操作，

2378
01:40:42,139 --> 01:40:45,659
很多这项工作都是基于嗯，

2379
01:40:45,659 --> 01:40:47,699
就像传感器数据上的时间序列预测时间

2380
01:40:47,699 --> 01:40:50,400
序列规范一样，我

2381
01:40:50,400 --> 01:40:52,800
认为这些东西来自 像Power Systems一样，所以

2382
01:40:52,800 --> 01:40:55,380
你知道大型

2383
01:40:55,380 --> 01:40:57,360
语言模型的输入可能有一千个或

2384
01:40:57,360 --> 01:40:58,320
更多，

2385
01:40:58,320 --> 01:41:01,080
嗯你知道词嵌入的字长

2386
01:41:01,080 --> 01:41:03,900
实际上并不是很大，

2387
01:41:03,900 --> 01:41:05,880
但只有当你进入计算机

2388
01:41:05,880 --> 01:41:08,520
视觉模型时，输入图像可能会 是

2389
01:41:08,520 --> 01:41:09,960
一千五千像素，这

2390
01:41:09,960 --> 01:41:11,580
实际上给了你一百万个输入，

2391
01:41:11,580 --> 01:41:12,420


2392
01:41:12,420 --> 01:41:13,679
嗯，当你使用

2393
01:41:13,679 --> 01:41:15,900
飞机发电厂的传感器系统时，

2394
01:41:15,900 --> 01:41:17,159
你可能有 50 到

2395
01:41:17,159 --> 01:41:19,320
100 个输入，当你使用

2396
01:41:19,320 --> 01:41:20,940
这种类型时 时间序列数据，你

2397
01:41:20,940 --> 01:41:24,179
不需要一个巨大的超宽神经网络

2398
01:41:24,179 --> 01:41:26,159
，然后如果你添加重复性，你必须随着

2399
01:41:26,159 --> 01:41:27,540
时间的推移

2400
01:41:27,540 --> 01:41:28,800
和其他类似的事情做回溯问题，你

2401
01:41:28,800 --> 01:41:30,239
实际上无法

2402
01:41:30,239 --> 01:41:32,880
在 GPU 上很好地并行化它，所以 对于我们来说，CPU

2403
01:41:32,880 --> 01:41:34,440
实际上更高效，我们尝试了

2404
01:41:34,440 --> 01:41:36,179
Abdul Rahman 很久以前写了一堆代码，

2405
01:41:36,179 --> 01:41:38,400
将这些东西放在 GPU 上，

2406
01:41:38,400 --> 01:41:39,900
我们发现它慢了很多，

2407
01:41:39,900 --> 01:41:42,119
所以这取决于你用

2408
01:41:42,119 --> 01:41:43,679
神经网络做什么 GPU 实际上不是

2409
01:41:43,679 --> 01:41:45,060
正确的答案，

2410
01:41:45,060 --> 01:41:46,500
但是我认为这方面的另一个很酷的事情甚至

2411
01:41:46,500 --> 01:41:48,360
可能是有

2412
01:41:48,360 --> 01:41:51,179
潜力的，

2413
01:41:51,179 --> 01:41:54,179
你知道

2414
01:41:54,179 --> 01:41:55,739
机器学习中未讨论的重大问题之一是

2415
01:41:55,739 --> 01:41:58,260
反向传播是最快的

2416
01:41:58,260 --> 01:42:00,659
我们知道这一点，但它本质上是不可

2417
01:42:00,659 --> 01:42:03,239
扩展的，就像你可以使用更大

2418
01:42:03,239 --> 01:42:05,520
更好的 GPU 来并行处理你的

2419
01:42:05,520 --> 01:42:07,260
网络部分以加快速度，

2420
01:42:07,260 --> 01:42:09,179
但

2421
01:42:09,179 --> 01:42:11,040
如果你想加快训练过程，只有拥有更大的网络，情况才会变得更好

2422
01:42:11,040 --> 01:42:12,659
不能只添加

2423
01:42:12,659 --> 01:42:16,440
另一个 CPU 或另一个 GPU 并使

2424
01:42:16,440 --> 01:42:18,840
背景速度更快，您可以使

2425
01:42:18,840 --> 01:42:20,219


2426
01:42:20,219 --> 01:42:22,260
神经网络的前向和后向传递更快，但您仍然

2427
01:42:22,260 --> 01:42:24,239
必须这样做，但是后向支撑的每个 Epoch 迭代

2428
01:42:24,239 --> 01:42:25,980


2429
01:42:25,980 --> 01:42:28,380
都是这样的方法，我们在这里

2430
01:42:28,380 --> 01:42:30,060
生成我们不是，我们不是一个，它是

2431
01:42:30,060 --> 01:42:31,800
后向支撑三，所以它不使用后向

2432
01:42:31,800 --> 01:42:34,440
支撑，我们可以使用自然启发或

2433
01:42:34,440 --> 01:42:36,179
其他方法来使用数百台

2434
01:42:36,179 --> 01:42:37,619
计算机，你可以

2435
01:42:37,619 --> 01:42:39,119
向它投入两倍的计算机，并得到

2436
01:42:39,119 --> 01:42:41,820
两倍的结果 速度是原来的两倍，而这个

2437
01:42:41,820 --> 01:42:43,679
问题你做不到，所以如果你

2438
01:42:43,679 --> 01:42:45,480
考虑实际上能够

2439
01:42:45,480 --> 01:42:47,820
更快地训练神经网络，

2440
01:42:47,820 --> 01:42:49,920
嗯，实际上你知道，

2441
01:42:49,920 --> 01:42:52,380
对于

2442
01:42:52,380 --> 01:42:54,420
我们需要做的事情来说，它的速度限制相当低，而且它是 这是

2443
01:42:54,420 --> 01:42:55,320
机器学习社区的一个大问题，

2444
01:42:55,320 --> 01:42:56,400
人们不喜欢

2445
01:42:56,400 --> 01:42:57,239
谈论这个问题，因为他们会想，哦，我会

2446
01:42:57,239 --> 01:43:00,239
购买下一个大型 Nvidia GPU，这样会

2447
01:43:00,239 --> 01:43:01,320
更快地完成任务，

2448
01:43:01,320 --> 01:43:02,580
所以

2449
01:43:02,580 --> 01:43:05,159
这非常有趣，这可能吗？

2450
01:43:05,159 --> 01:43:08,100
甚至提出一种关系，

2451
01:43:08,100 --> 01:43:10,380
其中诸如图形

2452
01:43:10,380 --> 01:43:13,260
可视化之类的东西当然 GPU 做得很好，

2453
01:43:13,260 --> 01:43:15,659
就像屏幕

2454
01:43:15,659 --> 01:43:18,840
随着时间的推移而变化，经典过程

2455
01:43:18,840 --> 01:43:22,860
可以大规模展开

2456
01:43:22,860 --> 01:43:26,100
，然后是最终的

2457
01:43:26,100 --> 01:43:28,139
同伴的认知模型，这又可以

2458
01:43:28,139 --> 01:43:29,880
是嵌套的，但认知

2459
01:43:29,880 --> 01:43:31,920
是更量子的认知模型，

2460
01:43:31,920 --> 01:43:35,580
就像你可以并行做的那样，

2461
01:43:35,580 --> 01:43:38,159
因为

2462
01:43:38,159 --> 01:43:40,679
除了通过污名，思想不会互相影响，所以

2463
01:43:40,679 --> 01:43:43,080
那就是CPU限制了殖民地的大小，

2464
01:43:43,080 --> 01:43:44,100


2465
01:43:44,100 --> 01:43:46,440
但是嗯，然后你可以使用不同的，

2466
01:43:46,440 --> 01:43:48,600
比如图形 像

2467
01:43:48,600 --> 01:43:53,580
蚁群这样的技术，所以一只蚂蚁存在，

2468
01:43:53,580 --> 01:43:55,560
或者这是一个哲学问题，呃 a

2469
01:43:55,560 --> 01:43:58,619
存在的规模是多少，

2470
01:43:58,619 --> 01:44:01,619
但在整个加州，

2471
01:44:01,619 --> 01:44:04,080
例如阿根廷蚂蚁，那么

2472
01:44:04,080 --> 01:44:05,639
我们如何处理这些类似的网格

2473
01:44:05,639 --> 01:44:08,639
工作认知 系统一直到

2474
01:44:08,639 --> 01:44:11,340
橡子中的 50 个系统都在进行

2475
01:44:11,340 --> 01:44:12,960
所有这些不同的

2476
01:44:12,960 --> 01:44:15,900
权衡，就像

2477
01:44:15,900 --> 01:44:18,659
在毫无特色的沙漠中一样，有

2478
01:44:18,659 --> 01:44:21,840
不同的寻路寻路传感器

2479
01:44:21,840 --> 01:44:24,060
集成

2480
01:44:24,060 --> 01:44:25,380
光偏振就像不同的认知

2481
01:44:25,380 --> 01:44:28,139
策略，因为它们可能会

2482
01:44:28,139 --> 01:44:31,020
出去很长时间 距离并将某物拖

2483
01:44:31,020 --> 01:44:32,639
回家不留下任何信息素，因为

2484
01:44:32,639 --> 01:44:34,739


2485
01:44:34,739 --> 01:44:36,900
那里不再有可能有食物，所以在这种情况下，耻辱 G

2486
01:44:36,900 --> 01:44:40,199
基本上是最小的到基本上没有

2487
01:44:40,199 --> 01:44:42,239
，然后在其他情况下，你可能会

2488
01:44:42,239 --> 01:44:45,239
得到一些非常符合

2489
01:44:45,239 --> 01:44:47,100
分布的东西 就像适合

2490
01:44:47,100 --> 01:44:49,560
非常

2491
01:44:49,560 --> 01:44:53,159
嗯像一种规范路径，

2492
01:44:53,159 --> 01:44:55,280
但这发生在一个水平上，

2493
01:44:55,280 --> 01:44:58,380
允许不同的计算

2494
01:44:58,380 --> 01:45:00,179
架构、

2495
01:45:00,179 --> 01:45:03,360
不同的信息架构

2496
01:45:03,360 --> 01:45:06,440
和最终不同的生物

2497
01:45:06,440 --> 01:45:09,719
实施例真正有效

2498
01:45:09,719 --> 01:45:12,360
地再次关注

2499
01:45:12,360 --> 01:45:14,639
生物算法的多样性的可变性

2500
01:45:14,639 --> 01:45:17,159


2501
01:45:17,159 --> 01:45:19,500


2502
01:45:19,500 --> 01:45:20,880
戈登教授和其他人从许多不同的

2503
01:45:20,880 --> 01:45:22,980
角度研究了集体行为，但有时感觉

2504
01:45:22,980 --> 01:45:24,780
多智能体模型总是

2505
01:45:24,780 --> 01:45:27,179
像在 Square One 一样开始展示一些

2506
01:45:27,179 --> 01:45:29,100
概念现象的证明

2507
01:45:29,100 --> 01:45:31,080
，然后将其用作

2508
01:45:31,080 --> 01:45:33,420
类似 更大的视角，但

2509
01:45:33,420 --> 01:45:36,900
该模型并不像声称已

2510
01:45:36,900 --> 01:45:39,719
调整到最大性能那样，就像

2511
01:45:39,719 --> 01:45:41,219
我们有决策

2512
01:45:41,219 --> 01:45:42,600
行为一样，

2513
01:45:42,600 --> 01:45:43,980
您可以将其转移到

2514
01:45:43,980 --> 01:45:46,260
蜜蜂

2515
01:45:46,260 --> 01:45:48,060
决策或类似的群体决策中，

2516
01:45:48,060 --> 01:45:49,260
但

2517
01:45:49,260 --> 01:45:51,719
仍然存在很大差距

2518
01:45:51,719 --> 01:45:53,820
但我认为你用罐头描述的内容

2519
01:45:53,820 --> 01:45:55,619
很有趣，因为它可能

2520
01:45:55,619 --> 01:45:57,900
是不能的，但罐头也是

2521
01:45:57,900 --> 01:45:59,460


2522
01:45:59,460 --> 01:46:01,619
所说的方言是的，所以这非常我的

2523
01:46:01,619 --> 01:46:03,780
意思是我们想出了一个

2524
01:46:03,780 --> 01:46:06,300
很好的选择，就像是的，

2525
01:46:06,300 --> 01:46:08,280
因为有

2526
01:46:08,280 --> 01:46:10,980
在

2527
01:46:10,980 --> 01:46:13,139
经典屏幕上交换多个视角，因为这个

2528
01:46:13,139 --> 01:46:15,840
词的含义是

2529
01:46:15,840 --> 01:46:17,040
第四维度认知上正在发生的事情，

2530
01:46:17,040 --> 01:46:19,320


2531
01:46:19,320 --> 01:46:21,659
这个词的含义

2532
01:46:21,659 --> 01:46:24,960
不仅仅在毯子上，只是在

2533
01:46:24,960 --> 01:46:26,219
界面本身上找到，这只是

2534
01:46:26,219 --> 01:46:28,380
沟通，

2535
01:46:28,380 --> 01:46:30,179
嗯， 这就像一个有界系统，

2536
01:46:30,179 --> 01:46:31,320
然后如果你建模一个

2537
01:46:31,320 --> 01:46:32,580
没有这种约束的认知系统，

2538
01:46:32,580 --> 01:46:33,780


2539
01:46:33,780 --> 01:46:36,420
那么用一张地图来表示，该地图

2540
01:46:36,420 --> 01:46:39,600
有某种毯子呃索引

2541
01:46:39,600 --> 01:46:41,699
某种毯子，就像你不

2542
01:46:41,699 --> 01:46:43,139
体现那样 统计模型中的约束

2543
01:46:43,139 --> 01:46:45,420
您忽略的映射是对

2544
01:46:45,420 --> 01:46:46,880


2545
01:46:46,880 --> 01:46:50,219


2546
01:46:50,219 --> 01:46:51,659
事物以

2547
01:46:51,659 --> 01:46:53,639
具体方式发生的方式进行建模的基本约束之一，也许

2548
01:46:53,639 --> 01:46:55,260
某个问题存在一些抽象空间，

2549
01:46:55,260 --> 01:46:58,020
就像一个完全灌篮一样，

2550
01:46:58,020 --> 01:47:00,960
但至少对于完全的普遍性而言

2551
01:47:00,960 --> 01:47:02,580
到我们所知道的

2552
01:47:02,580 --> 01:47:04,860
生物生命形式及其

2553
01:47:04,860 --> 01:47:07,679
参与的空间，就像生态嗯

2554
01:47:07,679 --> 01:47:08,540


2555
01:47:08,540 --> 01:47:10,980
参与不仅仅是在一种

2556
01:47:10,980 --> 01:47:15,420
行为中那样，空间是如此巨大，并且在

2557
01:47:15,420 --> 01:47:17,159


2558
01:47:17,159 --> 01:47:19,560
两个不同的系统中还有很多东西需要学习，以

2559
01:47:19,560 --> 01:47:21,300
诱骗

2560
01:47:21,300 --> 01:47:22,880
进入不同的领域 信息

2561
01:47:22,880 --> 01:47:25,860
架构和主动推理是

2562
01:47:25,860 --> 01:47:29,280
其中的一些子集类型，

2563
01:47:29,280 --> 01:47:31,560
所以这是一项很棒的工作，您有什么

2564
01:47:31,560 --> 01:47:34,760
最后的评论吗

2565
01:47:37,320 --> 01:47:40,320
？嗯，我很好，让

2566
01:47:40,320 --> 01:47:42,600
朋友们能够自我意识并充分了解

2567
01:47:42,600 --> 01:47:43,860
这个环境，这实际上是

2568
01:47:43,860 --> 01:47:46,020
我们

2569
01:47:46,020 --> 01:47:49,320
在其中实现的东西 在我们最后一次与 BP 免费账户的合作中，

2570
01:47:49,320 --> 01:47:50,760


2571
01:47:50,760 --> 01:47:53,520
他们间接地了解他们的

2572
01:47:53,520 --> 01:47:55,619
环境和理论，

2573
01:47:55,619 --> 01:47:58,199


2574
01:47:58,199 --> 01:48:00,659
通过被指控来适应他们临床环境的变化，这

2575
01:48:00,659 --> 01:48:03,900
意味着他们正在使用

2576
01:48:03,900 --> 01:48:07,080
基于遗传的算法进行进化，

2577
01:48:07,080 --> 01:48:09,540
以改变他们的行为，

2578
01:48:09,540 --> 01:48:12,540
例如 这些东西，这个词，这个

2579
01:48:12,540 --> 01:48:14,760
词，信息素，当他们采取

2580
01:48:14,760 --> 01:48:16,920
步骤和其他时候，或者

2581
01:48:16,920 --> 01:48:18,960
他们拥有的其他一些特征，所以他们正在

2582
01:48:18,960 --> 01:48:22,440
适应，但有点像坚果，以

2583
01:48:22,440 --> 01:48:26,699
一种聪明的方式，但通过

2584
01:48:26,699 --> 01:48:28,560
它通过进化，如果你

2585
01:48:28,560 --> 01:48:32,580
事实上，我们考虑

2586
01:48:32,580 --> 01:48:34,440
在每个智能体中放入一个大脑，

2587
01:48:34,440 --> 01:48:37,879
但又作为

2588
01:48:46,340 --> 01:48:49,860
设计，因为我们不喜欢瘫痪，

2589
01:48:49,860 --> 01:48:52,080


2590
01:48:52,080 --> 01:48:54,119
随着我们进化神经网络，训练每个大脑都需要时间，

2591
01:48:54,119 --> 01:48:56,480


2592
01:48:58,500 --> 01:49:01,139
太棒了

2593
01:49:01,139 --> 01:49:05,540
亚历山大 或特拉维斯最后的想法

2594
01:49:11,480 --> 01:49:14,219
哦，好吧，

2595
01:49:14,219 --> 01:49:15,179


2596
01:49:15,179 --> 01:49:18,179
天哪，我真的很高兴我的

2597
01:49:18,179 --> 01:49:19,500
意思是我认为这项工作真的很

2598
01:49:19,500 --> 01:49:22,080
有趣，如果我们能达到我们现在的目标，它会再次开辟很多

2599
01:49:22,080 --> 01:49:24,719
非常酷的大道

2600
01:49:24,719 --> 01:49:27,420


2601
01:49:27,420 --> 01:49:29,400
不断进化的蚁群正在产生

2602
01:49:29,400 --> 01:49:30,960
蚂蚁，

2603
01:49:30,960 --> 01:49:33,840
并且可以看到它们可以去往何处，因此

2604
01:49:33,840 --> 01:49:35,219
神经架构搜索中的一个大问题

2605
01:49:35,219 --> 01:49:37,320
是什么是

2606
01:49:37,320 --> 01:49:38,940
最优神经网络以及什么是

2607
01:49:38,940 --> 01:49:40,980
最优神经网络的整个问题，

2608
01:49:40,980 --> 01:49:43,440
嗯可能会有所不同

2609
01:49:43,440 --> 01:49:44,940
对于不同的任务来说是不同的，但

2610
01:49:44,940 --> 01:49:47,520
不仅如此，即使它是相同的数据集，

2611
01:49:47,520 --> 01:49:49,380
您使用该神经网络的方式也

2612
01:49:49,380 --> 01:49:51,719
可能导致不太理想的不太

2613
01:49:51,719 --> 01:49:53,520
理想的神经网络，这取决于它的

2614
01:49:53,520 --> 01:49:55,199
处理方式，也许您需要一个

2615
01:49:55,199 --> 01:49:57,540
更节能的神经网络，也许您

2616
01:49:57,540 --> 01:49:59,159
不需要 不关心能源

2617
01:49:59,159 --> 01:50:00,900
效率或性能，您将

2618
01:50:00,900 --> 01:50:02,219
采用较慢的神经网络，但您

2619
01:50:02,219 --> 01:50:05,159
需要更高的准确性，因此能够拥有可以

2620
01:50:05,159 --> 01:50:07,860


2621
01:50:07,860 --> 01:50:10,260
为我们自动化整个过程的算法，并将它们调整为我们

2622
01:50:10,260 --> 01:50:11,340
实际想要使用神经网络的内容

2623
01:50:11,340 --> 01:50:14,219
for 确实很重要，我认为

2624
01:50:14,219 --> 01:50:16,080
只要让蚁群优化

2625
01:50:16,080 --> 01:50:17,580
能够针对问题优化网络

2626
01:50:17,580 --> 01:50:19,080
就很棒，但如果我们能让

2627
01:50:19,080 --> 01:50:21,179
算法本身进行

2628
01:50:21,179 --> 01:50:24,239
自我优化，那么第二个就真的可以简化

2629
01:50:24,239 --> 01:50:27,600
整个过程。 如果

2630
01:50:27,600 --> 01:50:28,980
你正在做机器学习，那可能

2631
01:50:28,980 --> 01:50:31,020
有点悲惨，你喜欢制作一个神经

2632
01:50:31,020 --> 01:50:32,639
网络架构，你尝试一下，看看

2633
01:50:32,639 --> 01:50:34,500
它做得有多好，哦，不，

2634
01:50:34,500 --> 01:50:37,199
做得不太好，让我调整几个旋钮，

2635
01:50:37,199 --> 01:50:40,320
嗯，自动化这个过程

2636
01:50:40,320 --> 01:50:42,540
作为一名计算机科学家，我的一生就是要变得

2637
01:50:42,540 --> 01:50:44,719
懒惰，变得聪明，所以

2638
01:50:44,719 --> 01:50:47,760
无论我能优化什么，这样我就不必

2639
01:50:47,760 --> 01:50:49,619
一遍又一遍地做这件事，这

2640
01:50:49,619 --> 01:50:52,020
似乎是对我时间的一个很好的利用，所以我会

2641
01:50:52,020 --> 01:50:54,000
变得聪明

2642
01:50:54,000 --> 01:50:56,840
将来要做的事情尽可能少，

2643
01:50:57,719 --> 01:51:00,540
那么我想呃，我没有太多

2644
01:51:00,540 --> 01:51:02,880
要补充的，我想呃，很多

2645
01:51:02,880 --> 01:51:05,760
好的讨论已经发生了，

2646
01:51:05,760 --> 01:51:08,719
我们讨论了各种含义和

2647
01:51:08,719 --> 01:51:11,400
看待你知道的方式 和殖民地

2648
01:51:11,400 --> 01:51:13,260
优化，你知道其他

2649
01:51:13,260 --> 01:51:15,000
观点，包括主动

2650
01:51:15,000 --> 01:51:17,340
推理的观点，所以我想

2651
01:51:17,340 --> 01:51:19,980
从我最后的结束思想来看，实际上更多的

2652
01:51:19,980 --> 01:51:23,159
是，呃，这会很有趣，或者

2653
01:51:23,159 --> 01:51:25,800
这是一个有趣的方向，

2654
01:51:25,800 --> 01:51:28,260
就像我之前所说的或建议的那样

2655
01:51:28,260 --> 01:51:30,719
隐喻

2656
01:51:30,719 --> 01:51:34,020
对其他系统的适应以及你

2657
01:51:34,020 --> 01:51:36,300
想要建模什么，你

2658
01:51:36,300 --> 01:51:38,580
从科学和

2659
01:51:38,580 --> 01:51:40,619
哲学的角度知道你的目标是什么，

2660
01:51:40,619 --> 01:51:41,820
你想要回答的问题是什么

2661
01:51:41,820 --> 01:51:43,739
，我认为这可能会

2662
01:51:43,739 --> 01:51:46,260
再次非常有趣 其他

2663
01:51:46,260 --> 01:51:48,119
发展，你知道计算

2664
01:51:48,119 --> 01:51:50,760
技术，呃，你

2665
01:51:50,760 --> 01:51:53,880
实现并行化的方式，我

2666
01:51:53,880 --> 01:51:56,280
认为这就是

2667
01:51:56,280 --> 01:51:58,380
很多元启发式

2668
01:51:58,380 --> 01:52:00,780
算法最吸引我的地方，甚至像粒子

2669
01:52:00,780 --> 01:52:03,060
群这样的东西，你知道，当我

2670
01:52:03,060 --> 01:52:05,400
多年前与特拉维斯一起工作时 在考试

2671
01:52:05,400 --> 01:52:07,739
算法上，你看到了我们的名字，

2672
01:52:07,739 --> 01:52:10,440
呃，致力于这类东西，

2673
01:52:10,440 --> 01:52:12,060
总是引起我注意的部分是，

2674
01:52:12,060 --> 01:52:13,739
我可以将

2675
01:52:13,739 --> 01:52:16,139
这些实体放在不同的你知道的处理中，

2676
01:52:16,139 --> 01:52:18,600
计算处理你知道的

2677
01:52:18,600 --> 01:52:21,420
资源或设备，然后 他们会以

2678
01:52:21,420 --> 01:52:23,880


2679
01:52:23,880 --> 01:52:26,340
某种方式交互或交互并交换他们的结果，以尝试优化

2680
01:52:26,340 --> 01:52:29,900
呃一些你知道的通常复杂的

2681
01:52:29,900 --> 01:52:32,820
多目标成本函数，所以我

2682
01:52:32,820 --> 01:52:35,040
认为我们将看到的部分或

2683
01:52:35,040 --> 01:52:37,860
将鼓励更广泛地

2684
01:52:37,860 --> 01:52:40,500
采用甚至像元 -启发式

2685
01:52:40,500 --> 01:52:42,119
算法一般来说并不是说

2686
01:52:42,119 --> 01:52:43,800
它们在例如工程领域中没有被广泛使用，这

2687
01:52:43,800 --> 01:52:46,440
又是

2688
01:52:46,440 --> 01:52:48,300
并行

2689
01:52:48,300 --> 01:52:50,100
计算处理系统的发展，我认为

2690
01:52:50,100 --> 01:52:52,139
利用异步

2691
01:52:52,139 --> 01:52:53,760
计算之类的东西这又是

2692
01:52:53,760 --> 01:52:55,860
引起我注意的另一个角度 从特拉维斯那里你

2693
01:52:55,860 --> 01:52:57,780
知道他做了很多工作，

2694
01:52:57,780 --> 01:52:59,940


2695
01:52:59,940 --> 01:53:01,980
从异步的角度来看，他们在进化过程中进行了遗传优化，

2696
01:53:01,980 --> 01:53:04,440
我们如何分配

2697
01:53:04,440 --> 01:53:06,540
可用的资源，你知道，你知道，将

2698
01:53:06,540 --> 01:53:09,179
它们分布在全球网络上，

2699
01:53:09,179 --> 01:53:11,940
我认为这可能是最好的 扩大规模让

2700
01:53:11,940 --> 01:53:14,340
我们看看我们现在得到了什么，

2701
01:53:14,340 --> 01:53:16,440
你可能会再次

2702
01:53:16,440 --> 01:53:18,679
提到年度量子技术

2703
01:53:18,679 --> 01:53:20,940
量子计算是另一个有趣的

2704
01:53:20,940 --> 01:53:23,699
地方，有点像改变游戏，

2705
01:53:23,699 --> 01:53:25,800
嗯嗯，但你知道，除非你知道

2706
01:53:25,800 --> 01:53:28,320
我们不知道的技术

2707
01:53:28,320 --> 01:53:30,540


2708
01:53:30,540 --> 01:53:32,040
此时此刻，您知道我们如何

2709
01:53:32,040 --> 01:53:34,880
利用公民科学或

2710
01:53:34,880 --> 01:53:38,100
分布式计算或点对点类型的

2711
01:53:38,100 --> 01:53:40,159
通信，并构建

2712
01:53:40,159 --> 01:53:42,960
大规模的主动推理系统，

2713
01:53:42,960 --> 01:53:45,380
您知道这些系统就像多代理

2714
01:53:45,380 --> 01:53:48,540
隐喻一样 群体优化或

2715
01:53:48,540 --> 01:53:51,239
其他受自然启发的框架，

2716
01:53:51,239 --> 01:53:54,659
嗯，你知道这个系统可以在

2717
01:53:54,659 --> 01:53:57,119
很长的时间内进化吗，就像

2718
01:53:57,119 --> 01:53:59,760
进化论真的起作用了，我的

2719
01:53:59,760 --> 01:54:02,580
最后计数是，呃，呃，为什么我

2720
01:54:02,580 --> 01:54:05,639
有时对进化感兴趣，

2721
01:54:05,639 --> 01:54:09,179
对我来说，它是 归纳偏见为

2722
01:54:09,179 --> 01:54:11,460
我们提供了允许

2723
01:54:11,460 --> 01:54:13,920
人类代理的结构，例如婴儿，你

2724
01:54:13,920 --> 01:54:15,540
知道吗？婴儿已经可以

2725
01:54:15,540 --> 01:54:18,000
正确识别面孔了，呃，

2726
01:54:18,000 --> 01:54:20,400
我们有进化论者赋予我们的某些本能反应

2727
01:54:20,400 --> 01:54:22,139
和某些机制，

2728
01:54:22,139 --> 01:54:24,600
所以一个

2729
01:54:24,600 --> 01:54:26,699
有趣的问题是

2730
01:54:26,699 --> 01:54:29,159
这之间的相互作用是什么，你知道

2731
01:54:29,159 --> 01:54:31,619
模拟人工

2732
01:54:31,619 --> 01:54:33,900
进化形式的想法，也许可以构建你知道 DNA

2733
01:54:33,900 --> 01:54:35,780
结构是非常非常简化的

2734
01:54:35,780 --> 01:54:37,679
计算结构，这将很好地

2735
01:54:37,679 --> 01:54:40,139
回答阿卜杜勒·拉赫曼的担忧，

2736
01:54:40,139 --> 01:54:41,940
也许我们不希望代理太

2737
01:54:41,940 --> 01:54:43,739
聪明， 因为我无法

2738
01:54:43,739 --> 01:54:45,960
真正模拟它，除非你给我

2739
01:54:45,960 --> 01:54:48,600
十年的时间来运行模拟器，

2740
01:54:48,600 --> 01:54:50,219
嗯，但你也许可以想出一个

2741
01:54:50,219 --> 01:54:51,960
更基本的原语，然后用

2742
01:54:51,960 --> 01:54:54,239
它作为你的神经

2743
01:54:54,239 --> 01:54:56,219
网络的起点，让我们说丹尼尔你' 你想

2744
01:54:56,219 --> 01:54:58,380
在图像分割中做一些任务，

2745
01:54:58,380 --> 01:55:00,960
你知道，好吧，但是

2746
01:55:00,960 --> 01:55:03,000
你的进化框架能给我带来

2747
01:55:03,000 --> 01:55:04,980
什么，我会说这里有一个模板，

2748
01:55:04,980 --> 01:55:07,380
从这里开始，这是一个

2749
01:55:07,380 --> 01:55:09,239
你构建框架的内核， 你

2750
01:55:09,239 --> 01:55:11,940
知道它就像一个 DNA 结构，它

2751
01:55:11,940 --> 01:55:13,980
已经进化了很多

2752
01:55:13,980 --> 01:55:16,380
年的分布式点对点

2753
01:55:16,380 --> 01:55:18,360
计算，你可以想象构建

2754
01:55:18,360 --> 01:55:22,020
这种猛犸不断进化的持续学习

2755
01:55:22,020 --> 01:55:25,320
风格，你知道进化算法

2756
01:55:25,320 --> 01:55:27,719
是否基于呃遗传

2757
01:55:27,719 --> 01:55:29,940
算法品牌殖民地 你

2758
01:55:29,940 --> 01:55:31,619
可以想象这可能是一种有趣的

2759
01:55:31,619 --> 01:55:33,420
思考方式，顺便说一句，我正在

2760
01:55:33,420 --> 01:55:36,060
吐痰并产生一个想法，

2761
01:55:36,060 --> 01:55:38,639
比如我如何能够设想一种可扩展的

2762
01:55:38,639 --> 01:55:41,280
形式，而不需要发明一个

2763
01:55:41,280 --> 01:55:43,500
我不知道会或不会的新计算系统

2764
01:55:43,500 --> 01:55:46,739
存在呃，因为量子还有很多

2765
01:55:46,739 --> 01:55:48,480
问题需要解决，比如

2766
01:55:48,480 --> 01:55:50,580
超导，有超级

2767
01:55:50,580 --> 01:55:54,719
温度或捕获光子，据我

2768
01:55:54,719 --> 01:55:55,860
所知，

2769
01:55:55,860 --> 01:55:57,300
嗯，所以这可能是一个有趣的

2770
01:55:57,300 --> 01:55:59,100
方向，我认为这一点的扩展，

2771
01:55:59,100 --> 01:56:01,679
特别是从实际的角度来看，

2772
01:56:01,679 --> 01:56:03,600
将会是 最重要的是，我们

2773
01:56:03,600 --> 01:56:05,219
需要将

2774
01:56:05,219 --> 01:56:08,100
我们拥有的所有工具整合在一起，正如我之前提到的，

2775
01:56:08,100 --> 01:56:10,380
所以我也将停在那里，因为我最终会

2776
01:56:10,380 --> 01:56:12,239
更加漫无目的，所以希望这

2777
01:56:12,239 --> 01:56:13,980


2778
01:56:13,980 --> 01:56:17,820
很有意义，这是非常史诗般的和鼓舞人心的，所以 祝

2779
01:56:17,820 --> 01:56:20,460
你工作顺利，

2780
01:56:20,460 --> 01:56:23,820
欢迎大家提出另一

2781
01:56:23,820 --> 01:56:25,800
件我们可能会关注的作品，或者

2782
01:56:25,800 --> 01:56:27,840
继续讨论，但你认为

2783
01:56:27,840 --> 01:56:30,659
合适，因为它非常有趣，

2784
01:56:30,659 --> 01:56:33,659
方向，所以谢谢你，下次再见，

2785
01:56:33,659 --> 01:56:38,820
非常感谢

