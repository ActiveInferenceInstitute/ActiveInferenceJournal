SPEAKER_00:
Hello and welcome everyone.

It is September 1st, 2023.

We're here in Active Inference Math Stream number 6.1.

Here with Sean Toll.

We'll be hearing a presentation, Active Inference in String Diagrams, followed by a discussion.

This is super exciting, so if you're watching live, please feel free to write your questions in the live chat.

really looking forward to this.

So thank you, Sean, again, for joining and to you for the presentation.


SPEAKER_01:
All right.

Thanks very much.

Thanks, everyone who's watching.

And thanks to the organizers for this chance to speak to you and to Daniel for getting in touch and inviting me to speak.

So yeah, I'm really excited to share this work with this community, basically, and to hear from those people who work with Active Inference and do any formal work, what they think of what I'll present today.

So I'm going to be

diagrams and it's based on this mathematics called category theory and I won't assume that you're too familiar with this already and try and introduce it to you in the talk and ultimately I'd like to sort of convince you that this diagrammatic language will be really useful for those of you who work formally with active infants and encourage you to pick it up.

I've just introduced myself.

I'm Chantal.

I'm a researcher at Continuum, formerly a postdoc in computer science in Oxford.

And at Continuum, in this Oxford team where I'm based, we study what we call compositional intelligence, which includes applying category theory to topics in AI.

And as well as this, the project was supported by a grant from FQXI.

It's located at the bottom and hosted at the Topos Institute, which is the center for applied category theory.

So, let me get started, I think.

So, yeah, here we go.

So, for active inference, I won't spend too much time introducing it.

I'll assume most people here are familiar with it, and many of you probably know more about it than I do, in fact.

So, I just mentioned the parts of it that I'll be addressing in the talk.

So, thinking of it as a model of cognition that, hopefully, we can think of as applying at many levels, say, from a whole organism or just to a single neuron.

And the key idea is that in this approach, you think of an agent that's coming with this generative model that it uses to explain the observations it receives from the world in terms of some hidden states, which you might call perception, and in terms of its own actions.

And in active inference, it achieves both of these things through this form of Bayesian inference, or an approximate form of Bayesian inference, by minimizing this quantity called free energy.

And these are the ingredients we'll be looking at in the talk.

And the thing that's really exciting about active inference, I think,

that you can hopefully apply at all these many levels.

But I think at the moment, it could also benefit from more formal work.

And that's what this talk's about.

It's about formal approaches to the theory.

In particular, I think a nice clear formalization of what active instance is would help to clarify sort of what the core or the key ideas of the theory are.

So we'd like to be this very succinct principle that ideally we just apply to a generative model and everything else follows from.

And once we've got to this, we can hopefully generalize it and understand it better.

and also make it just more acceptable to those who come from formal backgrounds, like in mathematics and so on, and get them working on this topic very quickly and connect it with approaches in artificial intelligence as well.

But the most important thing about a good formalization, I think, should just be to make learning about active inference easier, make the framework simpler to understand.

So that's what we're aiming for in this work.

And I'd say in

other places already there's been some calls that or some suggestions that a nice formalization of active infants should be a diagrammatic one so when you look at the generative models that come up and that's difference a lot they're very compositional in their nature and it's very natural to draw them in diagrams um so the united states like our whole approach to describing it could be graphical in this way so just for example there's this paper called the graphical brain by by kristen and in general you know we've probably seen loads of these diagrams describing generative models where you draw

spaces of hidden states observations interacting and so on.

So these diagrams are used, but they're just used to represent the model.

You still have to then go to doing sort of traditional probability theory calculations when you reason about them normally.

But in fact, there is a whole graphical formalism and mathematical language for describing these kind of interacting processes just entirely with the diagrams.

So the area of mathematics is called category theory and the language of these string diagrams I'm going to talk today.

And in particular, there's a lot of work going on in applied category theory now in how you can describe aspects of probability theory and causality and causal models in terms of string diagrams.

And these causal models are basically based on Bayesian networks, so the same formal structure as the generative models in active inference.

And in particular, what we'll talk about today kind of draws on this paper, co-authored with Robin Lorenz, talking about causal models and the sense of Perl in terms of these string diagrams.

So it's basically causal Bayesian networks.

which has the same formal structure as we'll be talking about today.

So in this talk, I'm talking about this paper, which is joint work with Johannes Kleiner and Tobi Sengpersma, which is called Active Inference in String Diagrams, a Categorical Account for Processing and Free Energy.

And basically what we do is try to give a formalization of active inference that's nice and clear conceptually, just entirely in terms of string diagrams.

So we're basically taking the kind of formal content that's in something like the Active Inference book and turning it into these diagrams.

And as I mentioned, it was done as part of this project that's actually on a project about consciousness.

It's about ways that category theory can be applied to theories of consciousness.

And we've done some previous work looking at the integrated information theory of consciousness.

And of course, there's all sorts of ways that active inference has been proposed to connect the consciousness.

But for the purpose of this talk, we won't go into any of that.

It's just a theory of cognition, I take it, to be here.

And I'll just mention at the end, it'd be nice to connect it back to consciousness in future.

And there's also lots of other related work going on in category theory that's very close to this, that often goes by the name of categorical cybernetics, and this might include some of the things Toby has talked about on the stream in the past.

So what I'll do now is introduce categories and string diagrams, and then later we'll apply them to all these basic ingredients of active inference that I've alluded to so far.

So that would be generative models, updating them, free energy, and active inference itself.

So let's start with these categories and string diagrams.

So you can think of a category in general as a sort of world of interacting processes.

And the categories we talk about here are always going to be these symmetric monoidal categories.

But don't worry too much about the formal language, because the way we talk about them is just going to come down to the diagrams here today.

So a category amounts to a collection of these objects or sometimes called systems like capital ABC here.

and what are called morphisms, or you might want to just be called processes between them.

So when you're writing, normally you can just write a morphism from A to B, it's like this, F colon A to B. In string diagrams though, you draw it like this, where we're reading all the diagrams from bottom to top in this talk.

So you have a wire for the A input at the bottom and a wire for the B output at the top, and the morphism is just drawn as a box, F here, and you just read the diagram up thinking about, okay, it takes in this input coming in on this wire A, process applies,

So what you can do with these processes is compose them.

So if you have two processes, F from A to B and G from B to C, so the types like that, you can just compose them in sequence.

And this just means plugging the boxes together in your diagrams.

And because we're in this monoidal category, you can also compose in parallel.

the symbols.

So if these two basic modes of composition and from these you can build much more elaborate string diagrams in your category.

So if you're writing things very mathematically you have to write lots of equations that a category or a monoidal category needs to satisfy, but when you work in the diagrams they basically do some of the work for you because these things just come out for free.

So for example you have equations like this

them along the wires.

It doesn't really matter where they are on the wires.

It tends to just be the connectivity that matters.

Similarly, we can cross wires over each other because we're in a symmetric setting.

And there's a few, like, just useful features that you always have in a category.

So every object comes with this identity morphism, which you just think of as meaning nothing happening, basically.

means we can talk about a morphism which doesn't even have an input or an output.

More formally it has this object i as its input or output.

And we give these things special names.

So the most important one probably is that of a state, which is a morphism with no input as it were, or really with input i.

next to your diagram.

So there are many categories out there.

The point of category three is extremely general, so this could be talking about computational processes or physical processes or quantum processes in particular and all sorts of things.

But this talk will only actually need one category.

We'll just keep it simple with this one.

That's the category, I call it MatR+, so it's positive real matrices.

So you can just take objects, so the wires should be finite sets,

And the morphisms to be positive matrices indexed by these, as I'll explain.

So if we draw a box like this, M going from X to Y, this is like a matrix indexed by X and Y. And for each input in this little set X, sorry, in the set X, and each output in Y, you get a positive real number.

And we'll write it like M of Y given X. So this box would mean a function like this.

Now, when we plug them together, they let us turn some things that you normally have to do with equations into kind of simpler pictures.

I mean, mainly this middle one.

So if we have two in sequence, we just compose them by matrix multiplication.

So instead of having to write this formula where we sum over y, we can just draw this picture above it where we just plug them on top.

And if you run them in parallel here, we take the partition product of the sets and the tensor product of the matrices, as it were, but it's just the obvious thing where you have two things running independently.

a positive real.

The intuition, though, is that we're going to restrict to the particular morphisms in here, which are probabilistic in nature, so they need to send each x to actual distribution over y. So I want to talk about how you actually pick those out next.

So to do that, you use some extra structure that this category has.

It forms what's called a copy-discard category.

So this is one

these distinguished processes, there's one that we call copy that takes in A, say, and we've got two copies of A at the top, and one called discard, where you just throw A away, so you have no output at the top.

These satisfy some equations that are quite intuitive, if you think about copying and then

comes in and two copies of eight come out at the top is the intuition.

The reason we introduced this stuff is because it's been shown recently that you can do a lot of probability theory just in terms of these CD categories and particular ones called Markov categories.

So there's a lot of what's going on in applied category theory at the moment.

It's using this language of CD categories.

In particular, they let you pick out some things to do with probability theory.

I'll just talk about a couple of them here.

The most important one is the notion of a channel.

So this is what lets us pick out the actual normalized matrices, as it were, from earlier.

So in general, you call a morphism a channel when it preserves, it's discarding.

And a special case is a state when it's a channel, you call it normalized.

So for a state, this means it would actually be a probability distribution.

So it's actually normalized if you sum over

to use in generative models, for example.

And as I said, there's lots of probability theory you can describe with these diagrams.

There's very two simple examples.

You can describe marginalization in probability theory with this discarding thing.

So if you have box omega like this, it would be a joint distribution of X and Y.

So we'll meet lots more of this as we go, but let's actually start doing some stuff related to active inference in particular now.

So I want to talk about generative models and how you view these in the diagrams.

So as we've said, we're going to be talking about agents having generative models that relate things like actions, observations, and world states.

And these are normally quite compositional in active inference, right?

And they might involve many different spaces of states and observations and these processes relating them.

And you'd usually treat these with something like a Bayesian network, claiming you can

Formally, it's the same thing as the spatial network, which you could normally say is described by something like a DAG, a Directed Aspect Graph, which describes the different variables that are being related and then sets of values for each and probability channels describing each one in terms of its parents in the DAG.

And then you often look at this whole distribution over all the variables.

But already, I'd say the way that these networks are drawn in active inference text and stuff

as it were, like you have in this picture, the A and the Bs.

So yeah, my claim is that it's sort of converging on the way that string diagrams will look, as we'll see on the next slide, which is where you really do label everything, not just the variables.

So to describe those sort of Bayesian networks with string diagrams, the key observation is really that DAGs

second, but the diagrams built from copying and sometimes discarding.

And the key thing is just that they only have processes with maybe many inputs, but only one output.

So this is going to be like a mechanism that produces each variable.

So the result is that if you have a DAG G and you choose some of the vertices

And what you do is you have a wire for each variable in your diagram on the right, and you draw a box that produces it.

It doesn't really matter what you label the box.

So this box C, for example, produces X2, and it'll produce it in terms of its parents in DAG, so X1 and X4 in this case.

And if it doesn't have any parents, it would just be a state, as it were, box with no input.

And then what you do is you take each variable and you copy it and you pass it to all of its children.

the output ones.

So this allows us to turn DAG into a string diagram.

And then if you want to make a generative model that expresses, you know, like a Bayesian network that's structurally going to this DAG, you just have to now interpret this diagram in a certain sense.

So in general, working in any one of these CD categories, this copy-discard categories, we can say that a generative model in there is given by one of these network diagrams without any inputs.

an interpretation of the diagram, meaning you actually say what the objects are for each of the wires in the diagram and what the actual channels are.

So they need to be channels, not just morphisms.

And your category are for each of the boxes.

So for a gender model like this, you would say you pick objects X1, X2, X3, X4 and pick channels for the A, B, C, D. And we'll think of the outputs of the diagram as like the observed variables and the rest of the hidden ones.

So for example, if you're working in this category MatR+,

That is the only category I've actually introduced here.

So this is going to be a running example.

This is the same thing as one of these causal Bayesian networks.

So it just means picking sets of values for variables and picking probability channels for the boxes.

So you might ask, why would you use this representation rather than the usual one?

I think it's a good question.

So it's equivalent to the DAG and probability channel description.

with probabilities, whereas in the categorical approach, you can use just one formalism because you can do probability theory with the string diagrams as well.

So it's quite natural in a sense.

You have this one language for both just intuitively drawing what's going on in your model and then reasoning about it.

It also lets you start to generalize things in a useful way, I think.

So I kept having to say that you have no inputs to your diagram, but there's nothing really fundamental about

So we'll call this an open generative model.

So an open generative model is the same thing, but now I've just dropped this requirement that the diagram doesn't have any inputs.

So here's an example of the general network diagram now with these inputs x2, x3.

So there's no mechanism specified for

And this is the same definition we use to define what we call an open causal model in the paper with Robin Lorenz that I mentioned earlier.

So a number of generative model is formally just the same thing, but we're just thinking of it as a generative model possessed by a cognitive agent.

If you run this definition in MATLAB first then, this is just like a causal Bayesian network, but now you have some of your variables just have no mechanisms specified, so they're just inputs to the whole thing.

A nice thing about these open generative models is that because they're open,

So that was the general theory of these generative models that just actually describe some examples that you'll see in active inference coming up all the time.

So it's a simple example.

Let's just imagine we have one space of hidden states and one space of observations.

Then it would be a generative model of that form would just look like this network diagram, where there's just two wires.

There's just S and O. S doesn't have any

generative models.

When you're looking at these, you're often interested in this distribution over both variables together, this joint distribution that you might write as, you know, p of s times p of o given s normally, or a bit more specifically here, introducing their names for the two distribution in the channel here.

In string diagrams it's just the same as this, so you just take the prior and you make it an output now, and then you compose those channels together, and this would give you a distribution, so a normalized state m

So a more elaborate example of a generative model that you'll see, for example, in the Active Infants textbook are these discrete time models that are used a lot.

So I'll walk through this diagram now.

So this is an example of a more complex network diagram and a generative model it describes.

So here we've got these n time steps going.

And the hidden state is evolving over time by this transition channel B, where it takes the previous state as an input and then gives the next one.

It also takes this one extra wire that's coming from the bottom, and that's this space P of policies, which is how the agent sort of actions enter the picture.

So these policies describe its behaviors, its behavioral policies.

And often you will see models sort of of this form or similar forms being plugged together to form these hierarchical models.

And I think the compositional language is very nice for these because you really want to talk about open models to define this.

The hierarchical model you can view as really has just been given by taking lots of these open generative models I mentioned and plugging them together in a certain sense.

So here you can see a picture of a hierarchical model where we just have these layers where different copies of the same model at each

That's generative models.

So far, we've just been using the diagrams to represent them.

We'd like to actually do a bit more though and reason about these models.

In particular, we'll talk about how you update a model or update the beliefs within a model, which is very important in active inference and how this looks in the string diagrams now.

So let's say we've got an agent M with a model M.

they receive a new observation.

And here, the kind of observations we'll think about in general can be soft, meaning they're described by a distribution over O, not necessarily just one element.

So that would be one of these normalized states.

I'll try not to use the word state here because it's a bit confusing with this S around.

So this distribution over O is their new observation, this bold font O. And now they want to update the margin.

They want to update M in some way so that the marginal basically is

world given some observation you receive, but it could also be used to model like planning behavior where updating your plan of action, your policy, given something like which outcomes you'd like to see in the future.

And we'll come back to that later in the talk.

So we want to talk about how you can do this updating.

So you might think it's just a standard answer, or at least in the ideal case, which is this Bayesian updating.

And that's true when your observations are sharp.

And we'll start by talking about that case.

means in a second.

But first I'll just talk about how you treat Bayesian conditioning in these string diagrams.

So on the right here we have, if you view this process from O to S, this describes the sort of Bayesian conditional channel, or in general a partial channel in fact, that the agent would have from that introduced by their model.

So you can describe this in string diagrams with a couple of extra gadgets

into an input.

So that's what this part here is.

And then you can introduce this extra thing of normalization.

So what you'd like to do is take a general morphism and for each possible input, normalize that so that it's a distribution, if you can, or set it to zero if it's just zero and there's nothing you can do.

That's what this blue dash box is.

And in the paper and in the related causal models paper, we talk about the axioms normalization feature satisfies.

And the point is, if you compute this thing in Matar Plus, it will give you kind of what you'd expect.

So it will give you the usual notion for each point O of the space O. You plug it into this, you'll get the kind of conditional M of S given O that you'd expect whenever that's defined.

There's a string diagram way to describe this kind of Bayesian conditional channel or partial channel.

And I said this is what you would use when your observation is sharp.

in which that case.

So what does that mean?

In general, you say that a state in one of these CD categories, so a distribution basically, would be sharp when it's copied by the copy map, which isn't true for general distributions.

And if you run this definition in Math.plus, this really means

So for these sharp ones, you know, you ideally think you'd like to do this Bayesian updating.

In fact, when you've got soft ones, so it doesn't have this property, there's actually at least two good ways to do this kind of updating.

I don't know if this is as well known, so I'll just mention it now anyway.

And they've been studied in some detail by Bart Jacobs in this paper at the bottom.

So let's say you don't get one of these sharp observations.

You have just a distribution over O.

There's at least two reasonable ways to generalize sort of the picture from the last slide together, a notion of updating, and Yakub's calls them Jeffery's and Pearl's update rules.

So in Jeffery's update, you basically do it like we did before.

You have this Bayesian conditional kind of channel, a partial channel, the normalized box here, and you just plug a distribution into it.

But in Pearl's update, you turn

these are reasonable notions of generalization.

They have different properties.

It's not obvious that one of them is sort of more rational or something than the other.

They just behave a bit differently.

In the formula, you can see that the normalization is being applied differently.

So if you turn this picture into the usual notation, it would look like this.

So in the top case, you're normalizing for each possible sharp O and then taking an expectation over this distribution here, whereas in the

Either way you do it, though, the point is that these things are actually hard to compute, so we don't expect the cognitive agent to be doing either of these exactly, even in the sharp case.

And so, as we know, we want to instead approximate these kind of things using free energy, which is what I'll talk about next.

So our aim is to try and accommodate free energy somehow in a diagrammatic approach.

And free energy sort of formulae that come up are often given in terms of what you call the surprise, these negative logarithm quantities.

So we'll start by

So if you have any function e on a set x, a positive real, remember that would look like an effect in your category x, in MATLAB Plus, that's the same.

Then what we want to do is talk about this function x goes to minus log of e of x.

And using rules, the nice properties of logarithm, you can turn these into nice graphical rules.

This log box feature would satisfy.

For example, this is sort of the way that logarithms have multiplication into addition on the left here.

If you have this around, then you can start talking about surprise.

So if you have two distributions, sigma and omega, the surprise of one distribution relative to the other is defined by

omega which if you remember I said expectation values are given by sort of plugging a state for the distribution into the thing you're looking at the expectation value of so that would be the log box here so we can just define surprise omega sigma in this way in the pictures and important special cases where this come up are when you're calculating entropy which is the self surprise and the KL divergence can be calculated from the surprise and the entropy so it means that whenever we have formula given in terms of these if we like we can instead

with the log box.

So now let's talk about how we use this to describe free energy.

So what we want to do in the paper is sort of help clarify the kind of different notions of free energy that we found in active inference, in particular the

The situation is that we've got some generative model that's fixed over these two variables, S and O, like before.

So remember, we have this distribution, this box M over S and O, its distribution.

And let's just say we have another distribution Q now and we'll see it's

entropy of Q's marginal on S. Or this is the formula if you want to use the conventional notation, which is useful for relating it to existing approaches.

So we can define this by general free energy quantity, and then we'll meet

So there's a variation of free energy.

So we have this fixed model M and we have this soft observation O like we did before.

So this is box here.

And then what we're doing is we're considering different possible distributions over S that we think of as different updates we could consider for our beliefs.

And we define the variation of free energy of

observation O. So in formulae, you could also draw it like this.

So you take the surprise from your model M and you just see how its expected value for those beliefs and that observation subtracted the entropy of Q. And what you can show is that this VFE value satisfies this bound of the KL.

when it's a sharp observation, then the minimal of this VfE will be given by the Bayesian updating.

In general, though, we might think about what happens.

So in general, we can think of minimizing this VfE quantity as finding this Q that approximates this kind of updates we were looking at earlier.

And yeah, in the sharp case, it will coincide as all of the notions of updating do.

So the minimal VFE will be given by the Bayesian update.

But for these soft observations, it's something else.

It's not exactly either of the two notions of updating we met earlier.

So this is actually a third notion of updating for soft observations, which I think is an interesting way to think about what VFE minimization is doing.

So we just call this the VFE update.

So you've got many different Q. You could calculate

net earlier.

So that's the VFE, which we'll come back to.

The other notion of free energy we want to talk about is the expected free energy.

So that's where we still have our model M, where rather than an observation, we think of ourselves as having some preferences over observations we'd like to see.

They're again encoded in a distribution though, over O, so that's this C. And so just with that

given by the free energy of M compared with this other generative model where you have the same, so this M here would really be the inverse channel from O to S of M, so like the Bayesian inverse here, but where you just assert that the preference actually is the prior on the observation.

So you're comparing these two in terms of this generic

So I won't talk, I don't think I have time to go too much more into EFE, but the point really, in terms of what this work's done, is just to try and have this one generic free energy quantity we met earlier, where we can see the VFE and the EFE both coming out.

The special case is depending on what we plug in here for the two distributions.

So what I'd like to do now is to sort of put some of these pieces together to show what active inference itself will kind of look like in terms of string diagrams.

And in particular, what we'll do is derive this formula that you'll find in active inference tech

So to do so, we basically need to give a nice high level conceptual view of what active inference is.

So this is the way that we do it in the paper.

So in active inference, the key thing for stating the definitions is that our model takes the following form at a high level.

So there's some notion of, so it's like our

current observations.

And then there's the notion of future times, these future states and future observations.

So that could be all the time steps up to some big number, something like that, all grouped together in one of those discrete time models.

And again, we have the policies and we have the same sort of shape of model where there's some channels here which I haven't bothered giving letters to, but showing the way that the policy influences the transition from the state to the future state and observations from each

So we just have a generative model where we have policies, we have states and observations, and we have future states and future observations.

In active inference, what we're doing is we're receiving two things.

We're receiving an observation in the current time, and we have some preferences about what we'd like to see in the future.

So these are each given by these two distributions, O over, bolt upon O over O, and the preferences C over the future observations.

And then we're doing updating with those.

So I think updating is just our

prior over the policies to give our new distribution over policies, which we can

So in the in the books, for instance, and various places, you can find a formula like this that will be justified as coming from the free energy principle in some way.

It's basically saying you can do this approximately by making your plan distribution take the following form.

There's a softmax, there's a part relating to the habits of your model.

So that's your prior over policies.

These pi are the individual policies in P. And then there's two parts of the formula relating to the VFE and the EFE.

And what we wanted to do is see where this formula comes from in a sort of nice, high level way from the structure of the diagram.

So the usual, there are explanations for this formula there, but I found them quite hard to follow, to be honest, because they are talking about the EFE as being a prior that you then do

But you kind of need to do the forward the part about the present time 1st, before you can do the.

And so what we wanted, this is a really clear way to see how this just drops out from the structure of the model.

So that's what I'll try and show.

Now, so.

What we'd like to do then is to do this approximate updating.

We're going to do the Perl style updating, which looked like this in the pictures.

So we want to get our new plan, so our distribution over policies, by updating, by plugging in our observation and our preferences, and then normalizing everything.

So the thing on the right is what we'd like to have ideally, but we're just going to have to approximate it in some way.

So let's just take the distribution that's inside the dash normalization box now.

This is the thing, you know, we'd like to basically approximate this.

In the structure of our model, we can write it like this.

And I'll just show then some graphical steps for how we can apply approximations to obtain the formula that we saw.

And obviously we weren't able to get through every detail of the proof, but it should give hopefully some intuition of what it's like to actually work with a string diagram.

So that's really why I'm showing it.

So we knew our model take roughly this form.

There's some part relating to current states and current observations and also future observations.

I just call them both M here.

the model relating to the present time and future time.

And so what we're going to do is first focus on this part of the model relating to the current state and the current observation.

And we want to approximate what's in that blue dashed box.

And what you can show is that if you do this VFE updating, that will be approximately equal to this part of the diagram.

So this Q is given by for each policy doing this VFE updating.

free energy.

So you do that for each policy, and then you can view the collection of all of those belief updates as just one channel from P to S. So if you think about it back here, basically for each policy you could plug in, you would obtain just a distribution now of S and O, and you could do updating with respect to that.

So that's what Q of that particular policy pi would be.

And you put them all together into this one channel Q. And you can show then for each one

by this E to the minus VFV quantity here, it will be approximately equal to this part of the diagram.

Okay, so that's our first step and that's how the VFV entered the picture.

Then we've got this top part of the diagram, we'll collapse it together and just view this as one process going into future observations and our preferences, and we'd like to approximate what's in this box now.

And this is where the EFV comes in, so you can basically show, because we have this, yeah, that the

expected free energy will give you an approximation to this here, where this is basically like an expectation value for your preferences for each policy.

So this would be like the density C of the preferences being plugged into your model for each policy.

So I haven't had

things like this.

So this step where you think about the future times, it's called the prediction step.

And the previous one was the perception step.

So now we've rewritten that diagram in terms of some e to the minus of the VFE and e to the minus of the EFE, as well as our habits.

And remember, what we wanted to do was approximate the normalization of this whole thing.

So that's when you apply this bool dash box around the whole thing.

And now if we do that, this is exactly the same

And that's because, you know, you're normalizing something, but it's got these e to the minuses in it.

So you can also rewrite that in terms of this softmax, where now you just replace the e with this log and the other ones, you lose the exponentials.

So this formula, if you wanted to, if you wrote out what this was for each policy, it would be equal to this down here.

The claim is that this is a nice way to derive this formula, and it's a bit more transparent than the ones that exist.

So the idea was really just to see, we draw what's going on.

We're doing updating with the model of this form, and we're trying to do this approximate form of updating, and just see where we're applying the approximations, and from the structure of the model itself, see how this formula comes about.

Okay, so that so far basically just talked about things that are already there in active inference.

That's this new derivation, but it's existing stuff.

Before wrapping up, I'd just like to also talk about something a bit more new that we do with the string diagrammatic approach.

So that's the talk about the way in which free energy itself is compositional.

So the motivation for this is that, you know, the idea is that we want to think of this one free energy principle applying at all levels of a system.

So to do that, you'd want to know that an agent can say, if you've got one of these big composite generative models, that it can do its free energy minimization on the whole thing by doing it on the parts, because we want to ultimately think it just comes down to each part doing its own bit of free energy minimization.

So that's what we want to make precise.

In particular, we're going to be talking about the VFE here really all the time.

And if you recall, in the diagrams, it looked like this.

So we used these log boxes, and it just took this particular shape here.

So what we do in the paper in order to address this compositionality problem is introduce a notion of this VFE that we can apply not just to generative models, but ones which actually have these inputs as well.

So these are what I call open generative models.

Because we need to really talk about pieces of generative models plugging together and give them a notion of free energy.

Do you make sense of this notion of free energy being compositional?

So we propose this definition of what we call the open VFE.

now instead of just a distribution M over S and O, we have a channel from some inputs to S and O given by one of these open models.

And our Q, the thing we're doing the VFE minimization with respect to, so the thing we're calculating, would now have an input as well.

So it's a joint distribution over the states and inputs, and observation takes the same shape as before.

So you get this other formula that's basically just a natural way to generalize the previous

And what we show is that this thing is compositional in the sense that I alluded to, so I'll walk through that.

And the way you do it is just using these graphical properties that these log boxes have that I mentioned earlier.

So you could turn all of that into a proof in standard probability notation if you like, but it's quite instructive to always just be able to work in the diagrams to keep track of the compositional structure of the models and so on.

So the result says that this open VFE quantity is compositional in two ways.

The first one here is this quite trivial way.

So if we have two models running in parallel, so like taking a tensor of them, and they're just both doing their own, or calculating the VFE for each of them, sorry for the whole thing, but it's just given by two running in parallel, then it's just the same as calculating the VFE for each individually and adding them together.

So that should, that's certainly what we'd like to happen.

And it just follows from the properties of these log boxes.

More interestingly, there's the second way in which it's compositional, which is the sequential mode of plugging models together.

So if we have an open model, M1, and some inputs into some outputs, O1, but those are now actually the inputs for the second model, and we have these running.

So the first generated model is passing stuff up to the second one.

And now we want to calculate that result, BFE, in terms of an observation.

We can again write it as a sum of two of them, but in a slightly different way.

So observation is just existing on the top wire, right?

Because it's just the output of the whole thing that gets this observation.

So it's just on O2.

So first we calculate the VFE for this model at the top, M2, in the usual way.

And then we add on a VFE calculated for the first model, but it doesn't really have an observation O1, right?

observation it uses is one that's being passed down from M2.

So that's the queue that M2 is using is passed down now as if it's an observation down to M1.

So it's kind of like O2 receives this observation, does its updating about queue or whatever, and passes that down to M1.

So in this way, we can say that the VFE composes in that, okay, both of these are minimizing VFE locally, where for the M1 model, we mean it's minimizing

i talked about a lot of stuff now i'm just going to wrap up now and then we can get to a discussion i hope um so the main takeaway was just meant to be to try and show that these string diagrams provide some natural language for talking about active inference um and i would encourage you to try uh anyone working on that for me to take a look and see if they would be useful to you in some way and in particular i focused on some of the

what I was calling the main ingredients of active inference.

So that were generative models, the way you update them and free energy.

And we saw sort of ways you can describe all of those notions in the string diagrams.

And the thing that I think is useful about them is that they give you a nice representational language for just drawing pictures of your generative models and composing them like hierarchical models and so on.

They also let you do the reasoning because you can do probability theory with them.

So you can actually reason about what's going on in active inference just with the diagrams themselves.

There's loads of directions you can take in the future.

Obviously, you can keep absorbing more of the work that's out there and active inference into the diagrams.

A bit more interestingly, we introduced this new notion at the end of how to make free energy compositional.

In particular, we gave this definition of VFE for an open system now.

So it has a generative model which can have inputs.

We call this the open VFE.

I just think it's interesting what people think of this definition we introduced, however it seems meaningful.

Secondly, well, throughout the topic I kept talking about just minimizing free energy and that's all I said, or really the VFE.

I didn't say how you do it.

So, in fact, this is normally done with these various algorithms of message passing algorithms.

So they're an important part of active inference as well.

And I think it would be great to include these in the setup by having some diagrammatic story of them.

There's lots of other questions around.

So one of them is that,

I talked about these two notions of updating with respect to soft observations, and I think normally people tend to focus on sharp observations, so they perhaps haven't.

Not everyone has heard of these before, but it's very natural to treat the soft ones when you're working in this compositional setup.

And so there you start to wonder about which of these, the Pearl style updating or the Jeffery style updating is more natural.

updating is the one you should be thinking about.

That's probably the claim ActiveInference would make, but it'd still be nice to think about how this relates to the other two.

Is it best thought of as approximating the former or the latter style of sort of precise updating?

And then finally we could try and connect this up to lots of further topics.

I mentioned at Continuum I'm interested in this notion of compositional intelligence, so it would be nice to connect this now to topics in AI and so on, and think about

whole world of categorical cybernetics I mentioned at the beginning and I'd like to connect this a bit more precisely with what people are doing there with their stories in terms of lenses and so on and something else we were also interested in that I mentioned is that we got into the topic by thinking about consciousness and there's lots of ways as a major theory of cognition there's

So that's something we'd love to do in future.

And I would just like to say thanks again to all of you for listening and I'd love to go to a discussion.

Thanks.


SPEAKER_00:
Thank you, Sean, for the wonderful presentation.

Thank you.

I will first pass to Ali for an opening remark, please.


SPEAKER_02:
Thank you, Daniel.

Thanks so much, Sean, for your really fascinating presentation.

I truly enjoyed it.

So I have a number of questions.

So let me begin by asking the first one.

So, you know,

When Bob Kirke and others took Hamiltonian formulation of quantum mechanics and kind of turned it into the string diagram formulation of it, namely ZX calculus, the claim was that, I mean, regardless of its possible verity, but the claim was that one of the advantages of looking at quantum mechanics

in terms of string diagrams, is more than just a convenient way of looking at quantum formulation.

And it actually unveils some properties of quantum mechanics that would be extremely difficult to see with Hamiltonian formulation.

And even in some of their papers, they claim one of the reasons for...

Somehow the stagnant development in quantum technologies and quantum theory is exactly related to the difficulty of working with Hamiltonian formulation.

So would you say string diagram formulation of active inference kind of...

takes a similar approach to somehow providing more than just handy tool for representing active inference modeling and actually it kind of opens up new possibilities for further developments of active inference theory possibilities which would somehow I don't know impossible or at least extremely difficult for the current

traditional formulation of active inference to see in the current formulation of active inference?


SPEAKER_01:
Yeah, thanks.

That's an amazing question.

Yeah, I would agree.

I think my default work also is actually in this categorical quantum mechanics area I talked about, so string diagrams for quantum theory and everything.

And I agree that that language helps you talk about a lot of things

that you would maybe never get around to so much in other mathematical formulations of quantum theory, basically things that make use of the tensor as it were, the composition a lot.

So if this led to stagnation in quantum theory, it's probably because people weren't focusing as much on the tensor and entanglement and stuff, which

So now what people are doing with quantum theories includes quantum computing, where they're drawing these circuits.

And so you're drawing...

to do in quantum computing so i think similarly um if you never use that kind of language you might think of a system often as a fixed thing and not about the way it interacts with other ones so much and that could lead to overlooking all sorts of things so that's true in any area

wanting to talk about generative models being composed from pieces and maybe thinking about how the whole brain works in relation to interactions between parts of it and so on.

So if you never use this kind of compositional view, there is stuff you would miss, I think.

I think in some sense people weren't as behind already because they already were working kind of compositionally, right, because they're using these Bayesian networks diagrams like the DAGs and the way that normally drawn a very close

the equations and the rewriting of the diagrams.

So it's not as far back maybe as quantum theory was in the sense that people are thinking compositionally, but it feels like you just want to go one step further to having a fully compositional language you're working in where you have the advantage now that you can just talk about taking a whole model and plugging it into another one and it has a completely clear formal meaning and so on, which I think is what you want to do in areas like active inference.

step.

And in terms of new stuff, it lets you do, I think, an example with something like this OpenVFE thing, I guess.

So it's, if you're just always thinking about just a generative model, meaning without inputs, you might not

throwing away some mechanisms to make things be inputs.

But you could miss it, but you really won't once you start thinking categorically.


SPEAKER_00:
Thank you.

Olli, please continue if you'd like.


SPEAKER_02:
Thanks so much.

So yeah, my other

Perhaps a related question is, I mean, comparing this kind of formulation to this recent formulation of constructor theory in terms of string diagrams or categorical formulation of constructor theory,

Before going into this question, you see, you mentioned that this project is a part of a larger project for developing collective intelligence, right?

So the similar kind of situation happens for constructor theory, in which it is a kind of meta theory that tries to somehow

discriminate between the possibilities of physical laws as opposed to counterfactual laws and how physical laws, how there can be a theory that accounts for the emergence of possible physical laws.

So in this sense, can you, would you say this kind of formulation

categorical categorical theoretical formulation or possibly this specific string diagram formulation of active inference or maybe other theories of consciousness it can be seen as a kind of providing a path toward developing

a kind of meta theory of consciousness and possibly unifying many different strands of theories of consciousness into

I don't know, a holistic picture that can somehow be compared and positively reconciled with one another and ultimately reaching the ultimate theory of consciousness or, I don't know, do you see this line of work, I mean, providing

enough evidence for this line of development research or i don't know somehow maybe even not specifically consciousness but unifying the different aspects of cognition intelligence and consciousness all together so


SPEAKER_01:
Yeah, thanks.

I think, yeah, you keep giving me like ideal selling points.

So yeah, that's also something I would, I would like to say, you know, I mean, that, that, yeah, I tend to think of it that way.

And that, you know, my background is in applying category theory to just lots of topics.

And I so naturally do think of it as quite a unifying language.

And you know, the the ground and consciousness that I mentioned, was building on earlier what we did on looking

there it's like we've taken both these things and put them in this common language you could have put them in a common language of probability theory before but I think you know I do have an intuition that there is something more clear about it doesn't make it easier to get a conceptual grasp of both theories I think once you've done it this way and

I've worked on creating that in terms of diagrams and so on.

So I would love to see basically many theories put into this language to make it easier to compare them.

You could try and compare them directly already, but I think you want one clear formalization to put them all in.

And I would say that the categories and the diagrams is the right one to pick because it tends to just give a very clear

active inference and and iit so far it seemed very natural because on the case of iit it's about talking about how integrated something is so you basically want to talk about the opposite of that which is something being decomposed and the diagrams basically talk about parts and how they're related which is what you need to make sense of that nation of integration so it's very natural there but yeah i would love basically to see um various aspects of cognitive science um

you know, the hope would be then to try and gain insights from all of them, you know, and build a theory.

It's not the category theory itself is a theory of cognition or consciousness.

It's just a very useful language for relating them.

And then it would be very exciting to see something, you know, natively defined in another category theory as well at the end.

And there's a feeling that some of


SPEAKER_00:
Awesome.

Well, yeah, I have many.

Thank you.

These are great questions.


SPEAKER_01:
There's like ideal questions.


SPEAKER_00:
You've pointed in and we've explored a little bit of the utility and the simplicity and how that could help with accessibility and rigor and applicability, all these awesome things leading to reaccounting and reframing, consolidating, as well as discovering some new trails between, for example, expected free energy and variational free energy.

Looking at the equations, you might be able to say that they rhyme.

but you would be many, many lines deep into understanding what, if any, generalizations could encompass the both of them.

So that was just a very salient example.

A few different kinds of questions.

So how's time treated in category theory or how does active inference treat time today?

how do you see the way that time is treated we talk about discrete time and continuous time generative models then there's the past present future multi-agent systems federated or asynchronous communication so how is time treated and how does that give us a different grasp on dynamical modeling i think that's a really


SPEAKER_01:
I'd love to have a better answer for that, basically.

I think it's a tough one, you know.

So at the moment, yeah, in the talk set, I just talked about discrete time.

And that's sort of very easy to treat with the Bayesian network setup and with these kind of string diagrams, because you can just lay out the discrete time steps as processes in your picture, like we see here, right?

We have the end time steps here.

But I don't have anything satisfying worked out yet to say about how you would treat

a continuous time case, which I think is important in active inference.

You'd like to basically take, I guess basically what you want to do is take the way that you describe this thing with the end time steps and kind of have a formula for folding it together and just say, okay, but you're unpacking this thing N times.

And then you can take that thing and imagine, you know, this abstract view of unpacking it, just not discreetly anymore in this continuous way so that you can capture something like the differential equation kind of definition of continuous

Yeah, so you can certainly work with continuous time things in the sense of, you know, the stuff going on in categorical cybernetics or sort of categorical systems theory, I guess it would be called.

The ACT world is kind of, you know, it has continuous time dynamical systems and talks about plugging them together.

But that diagram is sort of just relating their variables, is my understanding.

It's not like a diagram isn't exactly showing

into account they would be really nice to see so it just needs the right abstraction I think for yeah taking a picture like this not drawing the

for each time step.

In general, I wouldn't say there's an answer to the question of how is time treated in category theory.

There wouldn't really be one answer because category is going to be so generally.

They tend to be very effective for discrete things in general, like algebra and so on, because they kind of are discrete in some sense, like the composition is discrete.

when you're composing continuously um but yeah i think there will be people in act who have sort of would come up come at you with this particular answer so they've they've got a way they like to treat continuous time um that i'm just not familiar with yet yeah cool


SPEAKER_00:
A little bit of a more educational or applied question.

So how do we go about drawing and learning to draw?

Is there a software package?

Is there a way that we can get a step-by-step process to building that familiarity with like, when I see this shape, then here's what I know.

And then how do we know what we can and can't do?

And does that drawing software flag us or do we need to send it to a friend?

So how do we look at something and then part one, build up the motifs in our own aesthetic understanding so that we can understand the compositionality of this as you do today and as we all do today, for example, for language, English.

And then part two, how do we go from having built that motif-based compositional understanding to like, now what can we do?

And then when are we just totally freewheeling and off the rails with a free energy principle?

Or like, does anything go if the motifs allow it?


SPEAKER_01:
Yeah, I wish I should have the standard answer.

I think it tends to be because, yeah, if you want to get really comfortable with the diagrams, you're learning category theory in some sense, but it's not like you need to learn all of category theory.

It's kind of a relatively modern offshoot in this applied category theory world that's very diagrammatically focused.

And there will be various nice introductions out there to using them.

Another way is to, so I'm trying to think.

I'm pretty sure recently, yeah, there was a nice paper that came out.

It was an introduction to string diagrams for computer scientists, for example.

So there tends to be different introductions kind of for different audiences because they just want to pick categories that those people are familiar with.

So they can actually have some examples.

You could just learn the diagrams totally abstractly, but it helps to have some examples.

science one i know there's some work going on in producing one for cognitive science which i think would be really good um having an introduction yeah to the string diagrams for those people um so you basically look for one in an area you're comfortable with and you should find a good paper on it but um it would be nice to have a good online resource i guess right that gathers these together so people can can just see a great guide for the all the introductions if you do something like um

Yeah, there's courses you can do in the sense of the Bob's book.

In the case of learning quantum, there's something like Bob's long book with Alex Kissinger, Picturing Quantum Processes.

That's the kind of thing I learned from, like it was in the form of a lecture course, but it's basically the same book.

So because then there's just loads of exercises that will make you have to reason with string diagrams.

And then you pick the rules up.

Because at first it's, yeah, you don't have the same intuition, obviously, for the rules.

What can I do with these?

Can I slide them around like this or whatever?

um i didn't use any like software in the sense of the diagrams i draw on this program called tixit but it doesn't like tell you how string diagrams will work or anything it's just for drawing them um but i know there's more work to develop you know libraries like the algebraic julia project is sort of like an applied category theory um language but i wouldn't know if it was recommended as a way to first learn categories and yeah

For causal models, there's this paper Robin and I put out.

It's not necessarily the very first place to learn string diagrams, but the aim is to introduce to people who've heard of causal models, say, in a sense of Perl, so just Bayesian networks, basically, but maybe the causal interpretation of them to get them used to string diagrams.

And this paper hopes to be a little bit introductory as well.


SPEAKER_00:
Cool.

Ali, please.


SPEAKER_02:
Thank you.

So getting back to the question about the time representation in this formulation, so I take it that this kind of formulation of Bayesian inference, I mean category theoretical formulation of Bayesian inference, is largely based on Tobias Fritz's definition of Markov categories as CV categories, right?

So

Uh, as far as I understand it, uh, Fritz paper, uh, kind of, uh, one of its basic assumptions is, uh, this kind of unidirectional, um, inference, uh, I mean, from earlier times to later times, right.

Uh, or in other words, the prediction, uh, but, uh, in, uh, quantum formulation of active inference or, uh,

quantum active inference, there's this attempt to also develop the retrodiction aspect of inference as well, right?

So would you say this recent formulation can also be accounted for

For this kind of retrodiction, in other words, can this formulation be reconciled with quantum Bayesianism as well?


SPEAKER_01:
Hmm.

Yeah, I basically wish... Yeah, sorry, go ahead.


SPEAKER_02:
Yeah, because to add one more context here, I think it was in Kirk and Specken's paper, there was this clear distinction between classical Bayesian inference and non-classical Bayesian inference, which the classical one does not, I mean, allow for the retrodiction, but non-classical Bayesian inference

can be applied for both prediction and retrediction as well.


SPEAKER_01:
Oh, okay.

Yeah, I would love to be a bit more familiar with the quantum active inference stuff, basically, to compare a bit.

So I'm not as familiar with the sort of retro... Sorry, what was the other version of prediction?

It's retro... Retrediction, yeah.

Prediction and retrediction.

Yeah.

to see what they say there about the classical one.

Can you give some intuition as to why it isn't something you can do classically, basically, the retro one?

Because if that's the general case of probabilities, then it will be true in some sense here, right?


SPEAKER_02:
um yeah yeah yeah so so um i mean the whole idea was that uh for predictive quantum mechanics we only need to account for the inference from earlier times later times but uh if we want to account for retrospective quantum mechanics as well we need to somehow

uh account for because as we know um not every um i mean quantum formulation uh follows the bell's principle of local causality uh so that's uh i mean in order to account for all the entanglement phenomena and so on and we need to somehow uh

put this bidirectional inference into our model.

So yeah, that was the basic idea behind developing this kind of non-classical Bayesian inference.


SPEAKER_01:
Does it have something to do with the unitary evolution in content theory, the way that it has this reversible thing, or is it...?

Exactly.

Yeah.

Yeah.

Yeah, that was the gist of it.

Yeah.

reversible thing built in.

Well, yeah, so I wouldn't expect to see that exact feature here in the sense of, you know, if it's treated, if it's basically something that you can't have in classical probabilities, it's not going to, it won't exist in this category met R plus.

I think that would be basically the same category they would use in that paper, right?

And they work with dagger combat categories and they'll work with something like this met R plus category for the classical case.

thing, but the sort of lens type view of what's going on that's more studied in categorical cybernetics would be imagining, I think, the model kind of carrying this backward inference process with it as well.

So there it's, you know, for each forward part of the model, you would have this approximate inference sort of channel stored with it.

So I don't know if that would address what you're after, but it would have a backward and forward part together.


SPEAKER_00:
well ollie do you have any kind of closing slash opening remarks or questions or where where do you see this going from the active inference side what does this bring to us and what is opened through what has happened largely this year in active inference and category theory


SPEAKER_02:
Well, actually, I'm really excited to see this line of development and active inference theory.

And as you know, I'm a big, big fan of meta theories and all kinds of unification theories and so on.

it's, I don't know, I kind of have this feeling of this hunch that this line of development in active inference theory is, I mean, it looks quite promising, especially for kind of tying up all the loose ends and transcending and many, many

other areas and discourses and ultimately reaching a kind of coherent picture of quote-unquote reality whatever it means so yeah these kinds of development I mean the last year we had tremendous advances in Bayesian mechanical theories and

In recent months, we have this fabulous line of research in category theoretical account of active inference.

My hope is that ultimately these different strands can be unified into, as I said, a coherent and overarching framework.

So exciting times.


SPEAKER_01:
it sounds like so do you mean that you're thinking of it as um it sounded like you're basically alluding to the thing going what going on in cognition and what going on in physics coming together right like one really really meta


SPEAKER_02:
The idea behind Bayesian mechanics, one of its premises or assertions was that there isn't any clear distinction between cognitive and non-cognitive things or agents and they rest on a continuum.

The same kind of mathematical technology can be applied both for inert and

conscious agents or sentient agents or whatever we choose to call them.

So, yeah, this overarching theory, I mean, unveiled many interesting phenomena regarding, well, self-organizing systems and

It changed the whole perspective about how we can look at and define, even define consciousness, cognition, intelligence, sentience, and all of these related terms.

So my hope is that category theoretical thinking

account of active inference can also be used for clearly seeing many of these emerging elements in Bayesian mechanics and active inference theory, and hopefully, well, gaining some interesting and potentially groundbreaking insights.


SPEAKER_01:
That'd be wonderful.

Yeah.


SPEAKER_00:
Oh, yeah.

I'll just give my closing thoughts then to you, Sean.

Just a few loose notes that, again, open probably more than they close.

Ali was right in suggesting and expressing that Bayesian mechanics recently has helped us

develop a continuum of active and passive systems so-called living and non-living or inanimate and animate and that brings us to another dialectic to resolve which is life and mind which is where the physical and the cognitive science come together you said they're on a continuum maybe we could say they're on a quantinium and what language could express

such work well right now we're speaking in english with the active inference ontology dialect however the phonemes are not intrinsically meaningful the um in a markov blanket or category does not mean something it's it's a sound and so the

string diagram language and representation i see as a way to fuse and integrate semantics into the syntax of the actual inscription which enables us to

generalize in new ways, also recognizing string diagrams are not everything and so on.

And then with all of these intersecting vectors from the cognitive and the physical sciences, we are able to take the compositional cartographic approach

for cognitive ecosystems and talk about diverse intelligences, biological, quantum, classical architectures, all of these synthetic intelligences.

And so it's super exciting and I appreciate again your visit and look forward to

people's curiosity, taking them and also the development of tools and educational materials that make this easier and then being able to display and use something where the meaning is primal rather than like, well, this letter represents this.

It already introduces such a space between the analytical representation and


SPEAKER_01:
really the string diagram which exists isomorphically with it uh yeah this is very exciting way of thinking yeah it sounds like you're you're um advocating a kind of structural ontology kind of thing in some sense right with the you're taking the compositional structure what's going on to really be the meaning or really be the the real thing that's there not just like

I don't know.

We could talk about it for a while, I imagine.

But I would love to see string diagrams and other approaches, I'm sure, that take that role.

And you've got me very excited about this kind of unification that's going on.


SPEAKER_00:
Thank you again, Sean.

You're always welcome.

And we look forward to seeing where this all goes.


SPEAKER_01:
Thanks again for having me.

Really great discussion.

Thank you.

Thank you so much.

All right.

Thanks.