1
00:00:05,060 --> 00:00:07,259
こんにちは

2
00:00:07,259 --> 00:00:10,740
。2023 年 7 月 17 日です。アクティブ

3
00:00:10,740 --> 00:00:13,799
推論数学ストリーム番号 5.1 に、

4
00:00:13,799 --> 00:00:16,320
トポロジカル深層

5
00:00:16,320 --> 00:00:19,980
学習のグラフ、複素数と層について Chris Bodner と

6
00:00:19,980 --> 00:00:22,080
参加していただきありがとうございます。Chris の

7
00:00:22,080 --> 00:00:23,880
プレゼンテーションとディスカッションを楽しみにしています。

8
00:00:23,880 --> 00:00:25,859


9
00:00:25,859 --> 00:00:28,320
はい、ありがとうございます。

10
00:00:28,320 --> 00:00:30,960
そうそう、先ほど言ったとおり、

11
00:00:30,960 --> 00:00:34,140
これは私の博士課程の作品で、

12
00:00:34,140 --> 00:00:35,940
数か月前に書き終えたもので、

13
00:00:35,940 --> 00:00:38,100
オンラインでも公開されているので、

14
00:00:38,100 --> 00:00:40,500
詳細を知りたい場合は、

15
00:00:40,500 --> 00:00:42,000
これを調べてください。 インターネット上で

16
00:00:42,000 --> 00:00:44,100


17
00:00:44,100 --> 00:00:46,559
簡単に見つけられるはずです 当然

18
00:00:46,559 --> 00:00:48,899
そこにはたくさんの内容があるので、

19
00:00:48,899 --> 00:00:52,140
今日は概要を説明

20
00:00:52,140 --> 00:00:53,879
しようと思います、そしておそらく特定の側面についてもう少し詳しく説明します

21
00:00:53,879 --> 00:00:55,500


22
00:00:55,500 --> 00:00:57,059


23
00:00:57,059 --> 00:00:59,460
すべてを検討する時間はあまりありません、

24
00:00:59,460 --> 00:01:00,120
ええと、はい、

25
00:01:00,120 --> 00:01:02,520
今私は Microsoft の研究を行っています。

26
00:01:02,520 --> 00:01:04,260
これは基本的に

27
00:01:04,260 --> 00:01:06,420
私が過去にケンブリッジ大学にいたときに行ったすべての研究です。ええと、それではそれで

28
00:01:06,420 --> 00:01:08,220


29
00:01:08,220 --> 00:01:10,439
始めましょう

30
00:01:10,439 --> 00:01:12,659


31
00:01:12,659 --> 00:01:15,420
はい、それでは簡単に始めましょう。

32
00:01:15,420 --> 00:01:16,740


33
00:01:16,740 --> 00:01:18,600
えー、今見ている人々の背景が実際には正確にはわかりませんが、

34
00:01:18,600 --> 00:01:19,979


35
00:01:19,979 --> 00:01:23,460


36
00:01:23,460 --> 00:01:25,979
機械学習には、数年前に

37
00:01:25,979 --> 00:01:27,900
登場したこの種のサブフィールドがあります。

38
00:01:27,900 --> 00:01:29,520
これは幾何学的な深層学習と呼ばれるもので、

39
00:01:29,520 --> 00:01:31,020


40
00:01:31,020 --> 00:01:31,680


41
00:01:31,680 --> 00:01:33,780
本質的には、

42
00:01:33,780 --> 00:01:35,520
この種の深層学習ニューラル

43
00:01:35,520 --> 00:01:38,340
ネットワーク アーキテクチャを、

44
00:01:38,340 --> 00:01:39,780
あらゆる種類

45
00:01:39,780 --> 00:01:41,220


46
00:01:41,220 --> 00:01:43,259
の構造、幾何

47
00:01:43,259 --> 00:01:46,500
学、空間など、必要に応じて知っているデータに適用する方法を検討しています。

48
00:01:46,500 --> 00:01:48,420


49
00:01:48,420 --> 00:01:50,040
特に生命科学の分野での応用であり、

50
00:01:50,040 --> 00:01:52,500
非常に

51
00:01:52,500 --> 00:01:54,960
有名な

52
00:01:54,960 --> 00:01:56,880
出版物やここでご覧になっているものすべてで、このような

53
00:01:56,880 --> 00:01:59,100
例がたくさんありますが、

54
00:01:59,100 --> 00:02:01,140
たとえば、タンパク質

55
00:02:01,140 --> 00:02:03,299
や分子、 彼らは

56
00:02:03,299 --> 00:02:05,759
通常それをグラフとして表します

57
00:02:05,759 --> 00:02:07,560
えーっと、特定の原子の性質など

58
00:02:07,560 --> 00:02:08,940
のようなデータがこれらのグラフ上に存在するようなものです えー、

59
00:02:08,940 --> 00:02:10,979


60
00:02:10,979 --> 00:02:11,940


61
00:02:11,940 --> 00:02:14,400
そうそう、このようなこと、そしてこれまでのところこの種の、

62
00:02:14,400 --> 00:02:17,340
えー、

63
00:02:17,340 --> 00:02:18,120


64
00:02:18,120 --> 00:02:20,220
種、または この種の問題の

65
00:02:20,220 --> 00:02:22,500
学習問題は、

66
00:02:22,500 --> 00:02:25,020


67
00:02:25,020 --> 00:02:26,940


68
00:02:26,940 --> 00:02:29,040
サブフィールドの名前のようなものとして、ほとんど幾何学的な考え方でアプローチされてきました。

69
00:02:29,040 --> 00:02:31,140


70
00:02:31,140 --> 00:02:32,580
えー、でも、

71
00:02:32,580 --> 00:02:35,040
えー、ご存知のとおり、幾何学がすべてではないということは私が主張したいと思います。

72
00:02:35,040 --> 00:02:37,379


73
00:02:37,379 --> 00:02:39,140


74
00:02:39,140 --> 00:02:42,000


75
00:02:42,000 --> 00:02:43,560
そのような環境にいるときは、他の非幾何学的側面が必要であり、

76
00:02:43,560 --> 00:02:44,099


77
00:02:44,099 --> 00:02:47,040
それが存在します。

78
00:02:47,040 --> 00:02:49,379


79
00:02:49,379 --> 00:02:51,300
フィールドや多くの

80
00:02:51,300 --> 00:02:53,700
用途に現れる空間が非常に

81
00:02:53,700 --> 00:02:55,980
異質であることを理解すれば、これはかなり明白です。 たとえば先ほど述べたように、

82
00:02:55,980 --> 00:02:57,480


83
00:02:57,480 --> 00:02:58,739
この場合は何かを表すことができるグラフを作成できます。それは

84
00:02:58,739 --> 00:03:01,260


85
00:03:01,260 --> 00:03:04,140
左側に表示されているカフェイン分子であり、この分子の特定の特性を

86
00:03:04,140 --> 00:03:05,580
予測するいくつかのモデルがあることを知りたいのです。

87
00:03:05,580 --> 00:03:07,319


88
00:03:07,319 --> 00:03:09,120
しかし、たとえば、グリッツを使用することもできます。私たちは

89
00:03:09,120 --> 00:03:12,420
常にグリッドを見て、

90
00:03:12,420 --> 00:03:13,920
データはグレード上に存在します。私は

91
00:03:13,920 --> 00:03:15,959
画像、ビデオについて言及していますが、それらはすべて、グリッド

92
00:03:15,959 --> 00:03:18,720
上に存在するピクセルのようなものです。

93
00:03:18,720 --> 00:03:20,040
それから、より

94
00:03:20,040 --> 00:03:21,720
洗練されたものを作成することもできます。 たとえばいくつかのメッシュがあります ええと、

95
00:03:21,720 --> 00:03:25,080


96
00:03:25,080 --> 00:03:26,640
コンピューター グラフィックスですべてが表現されてい

97
00:03:26,640 --> 00:03:29,220
ます。そして、ある種の多様体を作ることができます。

98
00:03:29,220 --> 00:03:31,379
たとえば、気象モデリングか何かをやっている場合、私たちは

99
00:03:31,379 --> 00:03:34,200


100
00:03:34,200 --> 00:03:37,739
トポロジー的に言えば球体上に住んでいます。

101
00:03:37,739 --> 00:03:40,140


102
00:03:40,140 --> 00:03:43,200
恐怖に生きているというデータをモデル化したい、など

103
00:03:43,200 --> 00:03:44,000


104
00:03:44,000 --> 00:03:47,580
など

105
00:03:47,580 --> 00:03:48,920


106
00:03:48,920 --> 00:03:51,120


107
00:03:51,120 --> 00:03:53,220


108
00:03:53,220 --> 00:03:54,780


109
00:03:54,780 --> 00:03:57,000
みんな

110
00:03:57,000 --> 00:03:58,620
トポロジー構造と呼ばれるものを持っていて、それは

111
00:03:58,620 --> 00:04:00,239
一種の弱い

112
00:04:00,239 --> 00:04:03,239
構造のようなものですが、それは

113
00:04:03,239 --> 00:04:04,799
もう少し一般的なものです、えー、

114
00:04:04,799 --> 00:04:07,200


115
00:04:07,200 --> 00:04:09,120
それが何を意味するかについては数秒後に少しお話しますが、

116
00:04:09,120 --> 00:04:10,560
一般的には 数理

117
00:04:10,560 --> 00:04:12,480
物理学のようなものをやると、

118
00:04:12,480 --> 00:04:15,360
構造のはしごがあり、その

119
00:04:15,360 --> 00:04:17,459
上に積み上げ続けていき、

120
00:04:17,459 --> 00:04:18,959
構造が増えれば増えるほど、より

121
00:04:18,959 --> 00:04:20,940
高度なことができるようになり、

122
00:04:20,940 --> 00:04:22,680
その基礎がわかるでしょう。

123
00:04:22,680 --> 00:04:24,540
図にはセットがあるだけで、

124
00:04:24,540 --> 00:04:26,400


125
00:04:26,400 --> 00:04:28,680
余分な構造はなく、要素のコレクションのようなものです。それから、

126
00:04:28,680 --> 00:04:32,460
この革の中で上に進み続け、

127
00:04:32,460 --> 00:04:35,040
セットの上にストップ ストップを追加するなどです。

128
00:04:35,040 --> 00:04:36,000


129
00:04:36,000 --> 00:04:37,919
ほとんどの

130
00:04:37,919 --> 00:04:39,660
作業はおそらく

131
00:04:39,660 --> 00:04:42,000
この階層の最上位レベルに焦点を当てていますが、

132
00:04:42,000 --> 00:04:44,759
それは一種のトポロジカルなレベルであり、

133
00:04:44,759 --> 00:04:46,259


134
00:04:46,259 --> 00:04:49,080
その上に追加できる最も弱い種類のレベルは

135
00:04:49,080 --> 00:04:51,780
無視されています。 大体、

136
00:04:51,780 --> 00:04:53,460


137
00:04:53,460 --> 00:04:56,940
博士論文で私がやっていることの一部は、基本的に、

138
00:04:56,940 --> 00:04:58,560
この種の空間に関するこの種の学習問題を、

139
00:04:58,560 --> 00:05:00,300
よりトポロジカルな

140
00:05:00,300 --> 00:05:02,759
観点から考察することでした。ご存知の通り、ある種の戦い、

141
00:05:02,759 --> 00:05:05,699
これらの空白を埋めるということです。

142
00:05:05,699 --> 00:05:07,860
概要のようなもので、それではわかり

143
00:05:07,860 --> 00:05:10,620
ました。この

144
00:05:10,620 --> 00:05:12,900
トポロジカルな観点を採用する場合、それは

145
00:05:12,900 --> 00:05:14,699
実際には何を意味するのでしょうか、またはどのように見えるのでしょうか。うーん、

146
00:05:14,699 --> 00:05:15,780


147
00:05:15,780 --> 00:05:17,280
さまざまな方法で見える可能性があると思いますが、

148
00:05:17,280 --> 00:05:19,500
私が自分の顔で行ったことでは、

149
00:05:19,500 --> 00:05:22,340
それはある種のように見えます このように、

150
00:05:22,340 --> 00:05:25,500
水平方向に空間ができました。ええと、

151
00:05:25,500 --> 00:05:27,060
それは何でも構いません。

152
00:05:27,060 --> 00:05:29,220
抽象的な空間のようなものです。

153
00:05:29,220 --> 00:05:32,759
グリッドや、前の例で見たようなもので、

154
00:05:32,759 --> 00:05:34,800


155
00:05:34,800 --> 00:05:37,020
領域に垂直方向に接続されたものです。 私たちが

156
00:05:37,020 --> 00:05:38,220
データを持っている空間の

157
00:05:38,220 --> 00:05:39,600
データは、この垂直方向のコンポーネントのようなもので、

158
00:05:39,600 --> 00:05:42,180
これらの

159
00:05:42,180 --> 00:05:44,820
フラグが

160
00:05:44,820 --> 00:05:46,919
これらの領域に固定されているような存在であることがわかります。つまり、

161
00:05:46,919 --> 00:05:49,199


162
00:05:49,199 --> 00:05:51,600
その領域に関連付けられたデータがあることを意味します。

163
00:05:51,600 --> 00:05:53,160
えー、これはハイレベルな視点のようなものです

164
00:05:53,160 --> 00:05:54,720


165
00:05:54,720 --> 00:05:56,039
えー、それを後ほどもう少し具体的にするつもりです えー、

166
00:05:56,039 --> 00:05:58,440


167
00:05:58,440 --> 00:06:00,419
そしてこの図には 2 つの重要な

168
00:06:00,419 --> 00:06:02,220
点があります えー、

169
00:06:02,220 --> 00:06:06,840
まず第一に地域性です。そのため、データはえー、

170
00:06:06,840 --> 00:06:10,380
いくつかの地域に関連付けられています この

171
00:06:10,380 --> 00:06:13,320
空間の、この位相空間の、

172
00:06:13,320 --> 00:06:15,539
ええと、その意味では、それはローカルなので、

173
00:06:15,539 --> 00:06:16,979
ある種の領域に関連付けられています。

174
00:06:16,979 --> 00:06:18,840
具体的な例を挙げると、宇宙のどこかに

175
00:06:18,840 --> 00:06:21,600
温度センサーがあるとしたら、

176
00:06:21,600 --> 00:06:23,819


177
00:06:23,819 --> 00:06:26,639
そのセンサーが測定しているものは何かと考えることができます。 これは

178
00:06:26,639 --> 00:06:27,960


179
00:06:27,960 --> 00:06:30,600


180
00:06:30,600 --> 00:06:32,100
センサーの周りのすぐ周囲の性質のようなもので、空間内の

181
00:06:32,100 --> 00:06:34,740
領域の性質を記述するようなもので、

182
00:06:34,740 --> 00:06:36,120


183
00:06:36,120 --> 00:06:37,620
まあ、それは良い例であり、

184
00:06:37,620 --> 00:06:38,940


185
00:06:38,940 --> 00:06:41,520
また別の種類の公理です。

186
00:06:41,520 --> 00:06:44,580
ええと、私たちが始めているのは、

187
00:06:44,580 --> 00:06:47,220
ええと、空間には構造があるということです、ええと、

188
00:06:47,220 --> 00:06:49,259
空間にはある種のものがあり、

189
00:06:49,259 --> 00:06:51,360
さまざまな領域で構成されており、これらの

190
00:06:51,360 --> 00:06:54,060
領域はさまざまな方法で交差します、ええと、

191
00:06:54,060 --> 00:06:54,780


192
00:06:54,780 --> 00:06:57,780
そしてそれは暗黙的に

193
00:06:57,780 --> 00:06:59,400
データ構造も作成します。

194
00:06:59,400 --> 00:07:01,620
データはこれらの領域に添付されているため、

195
00:07:01,620 --> 00:07:03,539


196
00:07:03,539 --> 00:07:05,220
データ内に何らかの構造が存在します。

197
00:07:05,220 --> 00:07:07,380
まあ、それが全体像のようなもので、

198
00:07:07,380 --> 00:07:09,060
実際にはこれらの多くは

199
00:07:09,060 --> 00:07:11,280
カテゴリ理論に関連しています。これについては詳しく説明しません。

200
00:07:11,280 --> 00:07:13,860
それは

201
00:07:13,860 --> 00:07:15,600
ちょっと洗練されたもので、私

202
00:07:15,600 --> 00:07:18,060
自身は圏論の専門家ではありませんが、

203
00:07:18,060 --> 00:07:20,400
ここでの高レベルの話は、

204
00:07:20,400 --> 00:07:23,400
圏論は

205
00:07:23,400 --> 00:07:26,699


206
00:07:26,699 --> 00:07:29,340
数学の異なる構造間を変換するための優れた方法であり、

207
00:07:29,340 --> 00:07:30,720


208
00:07:30,720 --> 00:07:32,880
プロパティについて議論するようなものです 特定の種類のオブジェクトを

209
00:07:32,880 --> 00:07:34,380
いくつかの異なる

210
00:07:34,380 --> 00:07:36,479
種類のオブジェクトに変換し、これらすべての種類

211
00:07:36,479 --> 00:07:38,520
の関係と接続を見つけます。

212
00:07:38,520 --> 00:07:40,259
具体的な例としては、たとえば、

213
00:07:40,259 --> 00:07:43,199
表面上の多様体を研究したい場合、いくつかの

214
00:07:43,199 --> 00:07:45,780
グループをこれらの表面に関連付け、次に任意のグループを関連付けることができます。

215
00:07:45,780 --> 00:07:48,900


216
00:07:48,900 --> 00:07:50,580
この種の曲面間の関係のようなものは、

217
00:07:50,580 --> 00:07:52,139
これらの

218
00:07:52,139 --> 00:07:53,580
群やその他の代数

219
00:07:53,580 --> 00:07:55,560
構造に関する関係も翻訳しているので、幾何学やトポロジーなどの知識を持たなくても、代数を行うことでこれらの多様体を研究できるようになります。

220
00:07:55,560 --> 00:07:57,300


221
00:07:57,300 --> 00:07:59,400


222
00:07:59,400 --> 00:08:00,840


223
00:08:00,840 --> 00:08:03,360
この場合も、この種の

224
00:08:03,360 --> 00:08:04,740
マニフェストが表示されます。

225
00:08:04,740 --> 00:08:06,599
これらを

226
00:08:06,599 --> 00:08:08,940
空間からデータに変換するという事実は、

227
00:08:08,940 --> 00:08:11,280
領域を

228
00:08:11,280 --> 00:08:13,440
空間内の特定の種類のデータに関連付けるためです。これは、

229
00:08:13,440 --> 00:08:15,419
これらの変換が

230
00:08:15,419 --> 00:08:16,740
前の図で説明したものにどのように現れるかのようなものです。

231
00:08:16,740 --> 00:08:18,419
これは、

232
00:08:18,419 --> 00:08:20,400


233
00:08:20,400 --> 00:08:24,000
空間やその空間内の領域から、

234
00:08:24,000 --> 00:08:26,460
その空間にアタッチされたデータへの、ある種の変換またはマッピングとして考えることができます。

235
00:08:26,460 --> 00:08:28,860
ええと、これについては詳しく説明するつもりはありませんが、

236
00:08:28,860 --> 00:08:30,599
ただ一種の意味です

237
00:08:30,599 --> 00:08:32,219


238
00:08:32,219 --> 00:08:33,179
頭の片隅に置いておいてください、

239
00:08:33,179 --> 00:08:35,159
うーん、

240
00:08:35,159 --> 00:08:37,200
背景にこんなものが潜んでいるのはわかっています、

241
00:08:37,200 --> 00:08:40,260


242
00:08:40,260 --> 00:08:41,880


243
00:08:41,880 --> 00:08:44,580
それではこれが私です、これがこの講演で私が与えている初期の数学の定義であることを約束します。 やめてください、

244
00:08:44,580 --> 00:08:46,380
でも私は位相空間で頻繁に言及されているので、

245
00:08:46,380 --> 00:08:48,959


246
00:08:48,959 --> 00:08:50,640


247
00:08:50,640 --> 00:08:53,339
この公理的な定義をちょっと言いたかっただけです、

248
00:08:53,339 --> 00:08:55,080
洗練されているように聞こえるかもしれませんが、

249
00:08:55,080 --> 00:08:56,519
最後に写真があるので、

250
00:08:56,519 --> 00:08:57,899
それが明確になることを願っています、

251
00:08:57,899 --> 00:09:01,200
そうそう、それで それは何ですか、それでは、

252
00:09:01,200 --> 00:09:03,120
私が言ったように、これは単なるセットです。セット

253
00:09:03,120 --> 00:09:05,160
から始めて、右上に要素を配置します。そうすれば、

254
00:09:05,160 --> 00:09:07,260
セットから始まり、その後、

255
00:09:07,260 --> 00:09:10,440
このセットのサブセットのコレクションもあります。ええと、

256
00:09:10,440 --> 00:09:12,360
必要なオープンセットと呼ばれます

257
00:09:12,360 --> 00:09:13,920
特定の公理を満たすので、非常に非公式に言うと、

258
00:09:13,920 --> 00:09:15,360
これらの開いた設定の一種の

259
00:09:15,360 --> 00:09:17,279
空間領域を考えることができます。

260
00:09:17,279 --> 00:09:18,720


261
00:09:18,720 --> 00:09:22,200
まあ、

262
00:09:22,200 --> 00:09:24,779
満たさなければならない何かは、まあ、空集合

263
00:09:24,779 --> 00:09:26,880
と集合自体が

264
00:09:26,880 --> 00:09:29,880
開いた集合である必要があるということです。 ある

265
00:09:29,880 --> 00:09:31,440
意味、これは、

266
00:09:31,440 --> 00:09:33,959
セット自体がその空間の領域であると言っていると考えることもできます。まあ、

267
00:09:33,959 --> 00:09:36,300
非常に非公式ですが、

268
00:09:36,300 --> 00:09:38,940
それはある種の、まあ、

269
00:09:38,940 --> 00:09:42,360
当然のことですが、

270
00:09:42,360 --> 00:09:44,820


271
00:09:44,820 --> 00:09:48,060
この領域の交差と単位の取得に関しては、ある種の制約があるので、 えー、

272
00:09:48,060 --> 00:09:50,040
2 つの領域の交差を取得する場合は、

273
00:09:50,040 --> 00:09:51,540
これらの領域の別の 1 つを取得する必要があります。

274
00:09:51,540 --> 00:09:52,920


275
00:09:52,920 --> 00:09:54,779
これらの領域の結合を取得する場合は、

276
00:09:54,779 --> 00:09:56,519


277
00:09:56,519 --> 00:09:58,200
別の領域を取得する必要があります。えー、また、

278
00:09:58,200 --> 00:10:00,899


279
00:10:00,899 --> 00:10:02,760
この交差点の大きさはどれくらいにする必要があるかなどの制約があります。

280
00:10:02,760 --> 00:10:04,680


281
00:10:04,680 --> 00:10:06,180
有限の交差があるはずですが、

282
00:10:06,180 --> 00:10:07,860
無限の結合が存在する可能性がありますが、それは

283
00:10:07,860 --> 00:10:10,080
技術的な問題なので、とにかくスキップできます

284
00:10:10,080 --> 00:10:13,019
が、写真を見るために、左側には

285
00:10:13,019 --> 00:10:16,500
集合X自体が表示されており、

286
00:10:16,500 --> 00:10:19,440
ここに潜在的な近傍構造のようなものを置きます

287
00:10:19,440 --> 00:10:21,180


288
00:10:21,180 --> 00:10:24,000
この空間には開集合構造があるので、

289
00:10:24,000 --> 00:10:26,760
ここに開集合があり、この公理による別の開集合 V があります。

290
00:10:26,760 --> 00:10:28,440
交差も

291
00:10:28,440 --> 00:10:30,480
開集合になります。つまり、

292
00:10:30,480 --> 00:10:32,399
中央の交差がもう 1 つの反対側にあり、

293
00:10:32,399 --> 00:10:34,080
集合自体は別の開集合な

294
00:10:34,080 --> 00:10:35,580
ので、次のようになります。 何かを領域に分割するようなものです えー、その

295
00:10:35,580 --> 00:10:37,560


296
00:10:37,560 --> 00:10:39,959
ように考えることもできます えー、わかり

297
00:10:39,959 --> 00:10:42,360


298
00:10:42,360 --> 00:10:44,640


299
00:10:44,640 --> 00:10:47,940
ました、これが最上位の論理空間です えー、

300
00:10:47,940 --> 00:10:50,519
それではデータを追加しましょう データがあると言いましたが、

301
00:10:50,519 --> 00:10:52,320
申し訳ありませんが、スペースがあります

302
00:10:52,320 --> 00:10:54,600
ので、その上にデータを追加します えー、

303
00:10:54,600 --> 00:10:56,339


304
00:10:56,339 --> 00:10:58,079
ここまでは位相空間がどのように見えるか見てきました。次は、この種の垂直方向のものを追加しましょう。

305
00:10:58,079 --> 00:11:00,540
前に見たこれらのフラグを

306
00:11:00,540 --> 00:11:02,399
上に置きます。 これらの

307
00:11:02,399 --> 00:11:03,720
領域

308
00:11:03,720 --> 00:11:05,820
ええと、すべてのオープンセット上の空間のすべての領域にデータを配置すると、

309
00:11:05,820 --> 00:11:08,519


310
00:11:08,519 --> 00:11:10,820
これらの構造が得られます。

311
00:11:10,820 --> 00:11:14,100


312
00:11:14,100 --> 00:11:16,380
代数トポロジーや幾何学などのカテゴリでは、これらは

313
00:11:16,380 --> 00:11:18,240
プリシェイプと呼ばれます。

314
00:11:18,240 --> 00:11:20,459
非常に派手に聞こえますが、すべて

315
00:11:20,459 --> 00:11:23,100
これは、

316
00:11:23,100 --> 00:11:24,899
私がすでに説明したことの一種の定義です。

317
00:11:24,899 --> 00:11:27,060
実際には、これらの F の各地域にいくつかのデータがあるため、

318
00:11:27,060 --> 00:11:29,459
たとえば、

319
00:11:29,459 --> 00:11:34,200
橋と U については、この F of U があり、

320
00:11:34,200 --> 00:11:35,940
これは地域に関連付けられたデータのようなものです。

321
00:11:35,940 --> 00:11:38,279
それで、f of U は、

322
00:11:38,279 --> 00:11:41,339


323
00:11:41,339 --> 00:11:44,220
その領域に存在するデータを記述するいくつかのセットであると考えることができます

324
00:11:44,220 --> 00:11:46,019
が、さらに追加のこともあります。

325
00:11:46,019 --> 00:11:48,360


326
00:11:48,360 --> 00:11:52,140
これらの種類のデータ間には、ある種のマップがあるので、

327
00:11:52,140 --> 00:11:54,000
これらは次のとおりです これは制限マップと呼ばれるもので、

328
00:11:54,000 --> 00:11:55,800
その理由は、

329
00:11:55,800 --> 00:11:59,459


330
00:11:59,459 --> 00:12:01,440


331
00:12:01,440 --> 00:12:04,620
セット X 全体にデータが添付されているのと同じように、必要に応じてズームインする方法を提供するようなもので、

332
00:12:04,620 --> 00:12:06,180


333
00:12:06,180 --> 00:12:08,459
これをどのように取得するかを考えることができるからです。 データ このデータから

334
00:12:08,459 --> 00:12:11,760
X 上のより小さい領域のデータに移動するにはどうすればよいですか。つまり、これは

335
00:12:11,760 --> 00:12:14,760
そのデータをズームインする一種の方法です。

336
00:12:14,760 --> 00:12:17,700


337
00:12:17,700 --> 00:12:20,700
後でいくつかの例を示します。したがって、これらは

338
00:12:20,700 --> 00:12:21,660


339
00:12:21,660 --> 00:12:24,980
えーと呼ばれます 説教と例を見てみましょう

340
00:12:24,980 --> 00:12:27,959
ここの空間は 1D または水平線だけを

341
00:12:27,959 --> 00:12:29,279
考えることができる最も単純な種類の空間の 1 つです

342
00:12:29,279 --> 00:12:31,560
これが

343
00:12:31,560 --> 00:12:33,060
実際の線です

344
00:12:33,060 --> 00:12:34,740
ええと、

345
00:12:34,740 --> 00:12:37,680
開いた間隔によって与えられるいくつかの領域があります ええと

346
00:12:37,680 --> 00:12:39,360
これらの、

347
00:12:39,360 --> 00:12:42,240
ええと、Via ラインでは、

348
00:12:42,240 --> 00:12:44,220
データの一部は連続関数のような関数である可能性があります。

349
00:12:44,220 --> 00:12:46,740
これらの領域では、

350
00:12:46,740 --> 00:12:50,279
これが

351
00:12:50,279 --> 00:12:52,139
この最初の間隔のサンプル データのようなものです。ここに

352
00:12:52,139 --> 00:12:54,360
2 番目の間隔の別の関数があり、

353
00:12:54,360 --> 00:12:56,279
これに関するいくつかのデータがあります。  3 番目の間隔で、

354
00:12:56,279 --> 00:12:57,899
実際にこの場合、

355
00:12:57,899 --> 00:12:59,279
これらすべての

356
00:12:59,279 --> 00:13:01,740
um 関数が重複部分で一致することが起こります。そのため、

357
00:13:01,740 --> 00:13:03,480
これらの領域が重複する場合は

358
00:13:03,480 --> 00:13:05,700
同じ値をとり、領域全体にわたって 1 つの関数の 1 つの関数でそれらを実際に貼り合わせることができます。

359
00:13:05,700 --> 00:13:08,339


360
00:13:08,339 --> 00:13:11,399


361
00:13:11,399 --> 00:13:14,040
これはプリシフトのほんの一例であり、

362
00:13:14,040 --> 00:13:16,019


363
00:13:16,019 --> 00:13:18,360
連続関数のプリシフトと呼ばれます。

364
00:13:18,360 --> 00:13:19,800
この場合のデータは

365
00:13:19,800 --> 00:13:22,019
連続関数であり、スペースは

366
00:13:22,019 --> 00:13:23,519
単なる実線です。

367
00:13:23,519 --> 00:13:25,200
これらの関数を上に配置して

368
00:13:25,200 --> 00:13:26,339
再調整します。

369
00:13:26,339 --> 00:13:28,019
えー、でも、この

370
00:13:28,019 --> 00:13:30,600
種の特別な特性のおかげで、

371
00:13:30,600 --> 00:13:32,880
データを接着することができ、他のデータを適切に取得できることがわかりました。

372
00:13:32,880 --> 00:13:34,980


373
00:13:34,980 --> 00:13:36,480
これら 3 つのピースを取得できます。まさに

374
00:13:36,480 --> 00:13:38,579
パズルのようなものです。

375
00:13:38,579 --> 00:13:40,079
これを配置します。 物事を一緒にやっていくと、

376
00:13:40,079 --> 00:13:42,240


377
00:13:42,240 --> 00:13:44,519
単一関数のような 4 番目のものが得られます。えー、

378
00:13:44,519 --> 00:13:47,040
これらの関数を正しく重ね合わせたところです。えー、

379
00:13:47,040 --> 00:13:48,060


380
00:13:48,060 --> 00:13:52,019


381
00:13:52,019 --> 00:13:53,579
これらの特性を満たしていることに感謝します。

382
00:13:53,579 --> 00:13:55,500
これらを接着してユニークな部分を得ることができます。

383
00:13:55,500 --> 00:13:58,200
データのそれらは層と呼ばれます

384
00:13:58,200 --> 00:14:01,320
ええと、基本的に

385
00:14:01,320 --> 00:14:04,139
連続関数のプリシフトは実際にはシフトです

386
00:14:04,139 --> 00:14:07,019
ええと、これは

387
00:14:07,019 --> 00:14:09,779
これらのものに添付されたデータを形式化する一種の方法です ええと、

388
00:14:09,779 --> 00:14:11,700


389
00:14:11,700 --> 00:14:12,959
すぐに専門的ではなくなります

390
00:14:12,959 --> 00:14:15,959
ええと、単に与えるだけです より多くの例があるので、たとえば、

391
00:14:15,959 --> 00:14:17,700
この方法で

392
00:14:17,700 --> 00:14:20,639
球上のデータを記述することができます。そして、この

393
00:14:20,639 --> 00:14:22,200
データがここの単なるベクトル フィールドであるとします。

394
00:14:22,200 --> 00:14:24,000
これが地球であるかどうかを確認してみましょう。

395
00:14:24,000 --> 00:14:26,399
これは天気の場合のように、風のベクトル フィールドである可能性があります。

396
00:14:26,399 --> 00:14:28,139
モデリングか

397
00:14:28,139 --> 00:14:30,240
何かで、地球

398
00:14:30,240 --> 00:14:33,959
の表面の風を記述するベクトル場があり

399
00:14:33,959 --> 00:14:35,339


400
00:14:35,339 --> 00:14:36,959
、その上で機械学習を行いたいと思うかもしれません。

401
00:14:36,959 --> 00:14:39,000
この種

402
00:14:39,000 --> 00:14:40,680
のベクトル場にはシース構造があり

403
00:14:40,680 --> 00:14:43,019
、次のように考えることができます。 チーフは、

404
00:14:43,019 --> 00:14:44,880


405
00:14:44,880 --> 00:14:47,220
赤い領域にベクトル場があるか、

406
00:14:47,220 --> 00:14:49,199
黄色の領域にベクトル場があるかどうかを知っているので、

407
00:14:49,199 --> 00:14:51,480
それらが重なっている場合にそれらを一意に接着することができます。

408
00:14:51,480 --> 00:14:54,000
重複する点に同意する場合は、

409
00:14:54,000 --> 00:14:55,620
このより大きな領域にベクトル場が得られます。

410
00:14:55,620 --> 00:14:58,620
しかし、非常に素晴らしいのは、

411
00:14:58,620 --> 00:15:01,320
非常に

412
00:15:01,320 --> 00:15:03,320
異なる種類の空間、つまりあらゆる観点から

413
00:15:03,320 --> 00:15:06,060
球とは大きく異なるグラフがある場合でも、

414
00:15:06,060 --> 00:15:08,699
まったく

415
00:15:08,699 --> 00:15:10,680
同じ種類の公理や用語を適用できることです。

416
00:15:10,680 --> 00:15:12,660


417
00:15:12,660 --> 00:15:15,660


418
00:15:15,660 --> 00:15:18,000
このようにして、たとえば、地面

419
00:15:18,000 --> 00:15:20,279
のノードに関連付けられたいくつかのフィーチャ、

420
00:15:20,279 --> 00:15:22,560


421
00:15:22,560 --> 00:15:25,199
グラフのエッジに関連付けられたいくつかのフィーチャ、および

422
00:15:25,199 --> 00:15:27,320
独自のフィーチャを持つ別のノードが存在するようにすることができます。

423
00:15:27,320 --> 00:15:29,399
実際、

424
00:15:29,399 --> 00:15:31,680
グラフ機械学習で行っていることとまったく同じです。

425
00:15:31,680 --> 00:15:33,420
ええと、これは、この種

426
00:15:33,420 --> 00:15:35,399
のトポロジカルな視点を使用して実行できるようにするのに非常に優れています。ご存知のとおり、私たちは、

427
00:15:35,399 --> 00:15:38,519


428
00:15:38,519 --> 00:15:40,680


429
00:15:40,680 --> 00:15:43,199
非常に種類の異質な空間について必要な場合に、ある種の統一された考え方を持っています。

430
00:15:43,199 --> 00:15:45,839


431
00:15:45,839 --> 00:15:47,399
この種のシフト用語やその他の方法を使用して、それらすべてに関連付けられたデータをモデル化することもできます

432
00:15:47,399 --> 00:15:50,100


433
00:15:50,100 --> 00:15:53,459
が、この話ではそれについては説明しません。

434
00:15:53,459 --> 00:15:54,899
まあ、これは

435
00:15:54,899 --> 00:15:57,240
私がこれまで行ってきたことの概要のようなものです。 私の論文でやっているのですが、

436
00:15:57,240 --> 00:15:59,040


437
00:15:59,040 --> 00:16:02,399
えー、これについてもう少し深く掘り下げるためです、ええと、

438
00:16:02,399 --> 00:16:04,079


439
00:16:04,079 --> 00:16:06,600


440
00:16:06,600 --> 00:16:09,720
私たちがヨーロッパで行ったある論文について、ええと、

441
00:16:09,720 --> 00:16:12,720
去年のええと、これは去年のことでした、

442
00:16:12,720 --> 00:16:15,480
えー、シフト拡散と呼ばれるものについてです

443
00:16:15,480 --> 00:16:18,600
要するに、

444
00:16:18,600 --> 00:16:21,060


445
00:16:21,060 --> 00:16:24,000
グラフで機械学習を行うときに、今説明したことをどうやって使えばいいのでしょうか、わかりました、

446
00:16:24,000 --> 00:16:25,860
これは

447
00:16:25,860 --> 00:16:27,720
フランシスコ・デ・ジョバンニとの共同研究でした

448
00:16:27,720 --> 00:16:29,820
が、チェンバレンでは、ああ、ピエトロ・レオ、私の

449
00:16:29,820 --> 00:16:33,300
アドバイザーとマイケル・ブロンスタイン、

450
00:16:33,300 --> 00:16:36,300
ええと、前です。 これについて詳しく説明します

451
00:16:36,300 --> 00:16:37,740


452
00:16:37,740 --> 00:16:40,620
皆さんがこれに慣れていない場合に備えて、背景を説明したいと思います えーと、

453
00:16:40,620 --> 00:16:42,959


454
00:16:42,959 --> 00:16:45,180


455
00:16:45,180 --> 00:16:47,579
最近グラフで機械学習を行う人々が好むアーキテクチャの一種は、

456
00:16:47,579 --> 00:16:49,560
グラフ ニューラル ネットワークと呼ばれるもので、

457
00:16:49,560 --> 00:16:50,820


458
00:16:50,820 --> 00:16:52,800
実際には非常に単純な種類のものです

459
00:16:52,800 --> 00:16:54,959
モデルなので、

460
00:16:54,959 --> 00:16:57,139
この設定ではいくつかの

461
00:16:57,139 --> 00:17:00,899
特徴があるため、グラフ内の各ノードには

462
00:17:00,899 --> 00:17:04,339
いくつかの特徴があります。これは h

463
00:17:04,339 --> 00:17:07,559
ベクトルです。ここで示すベクトルは、レイヤーまたは時間 D で

464
00:17:07,559 --> 00:17:11,160
ノード a に関連付けられたベクトル H です。

465
00:17:11,160 --> 00:17:15,179
したがって、

466
00:17:15,179 --> 00:17:16,799
いくつかの特徴があります これらのノードのそれぞれ

467
00:17:16,799 --> 00:17:20,280
と、それぞれ何をしているか、

468
00:17:20,280 --> 00:17:22,140
特定のノートに到達した場合、

469
00:17:22,140 --> 00:17:24,359


470
00:17:24,359 --> 00:17:26,459
そのために新しい表現または新しい特徴を計算したいと考えています。

471
00:17:26,459 --> 00:17:27,900
次のレイヤーで、ええと、

472
00:17:27,900 --> 00:17:28,559


473
00:17:28,559 --> 00:17:31,740
表現を学習しているので、

474
00:17:31,740 --> 00:17:33,780
ええと、 そして、グラフェンネットワークが何を

475
00:17:33,780 --> 00:17:36,360
しているか このノードは、

476
00:17:36,360 --> 00:17:38,360


477
00:17:38,360 --> 00:17:42,179
このノードに隣接する他のすべてのノードからメッセージを受け取ります

478
00:17:42,179 --> 00:17:45,000
えー、これらのメッセージも渡すことができます

479
00:17:45,000 --> 00:17:47,280
ご存知のとおり、そこにあるニューラルネットワークで使用できます

480
00:17:47,280 --> 00:17:49,860
が、本質的に

481
00:17:49,860 --> 00:17:51,600
これらの機能の一部の処理

482
00:17:51,600 --> 00:17:54,539
近隣ノードのメッセージがこのメッセージに集約され、

483
00:17:54,539 --> 00:17:57,900
緑色で表示されます。

484
00:17:57,900 --> 00:17:59,880
そして、これは、近隣ノード

485
00:17:59,880 --> 00:18:02,039


486
00:18:02,039 --> 00:18:03,539
からのメッセージ

487
00:18:03,539 --> 00:18:05,340
とこのノードの古い表現を結合する更新関数を通して渡され

488
00:18:05,340 --> 00:18:06,960
、新しい表現の種類が得られます。

489
00:18:06,960 --> 00:18:09,000
次のレイヤーの

490
00:18:09,000 --> 00:18:10,260
ええと、これはすべてのノードで正しく発生する

491
00:18:10,260 --> 00:18:11,400
ので、

492
00:18:11,400 --> 00:18:13,020
このノードの新しい表現を取得します。これは

493
00:18:13,020 --> 00:18:14,580
1 つのレイヤーであり、

494
00:18:14,580 --> 00:18:16,440
これを好きなだけレイヤーで繰り返します。

495
00:18:16,440 --> 00:18:17,280


496
00:18:17,280 --> 00:18:18,660
まあ、これはどのようなものですか

497
00:18:18,660 --> 00:18:20,760
グラフ上で深層学習を行うのです

498
00:18:20,760 --> 00:18:23,100
が、それは非常に非常に単純な

499
00:18:23,100 --> 00:18:26,160
レシピのようなもので、ほとんどのモデルは実際に

500
00:18:26,160 --> 00:18:28,320
これらのメッセージを計算する方法や

501
00:18:28,320 --> 00:18:30,480


502
00:18:30,480 --> 00:18:32,820
更新関数の設計方法が異なりますが、

503
00:18:32,820 --> 00:18:34,980
それはパラメータのようなものです。

504
00:18:34,980 --> 00:18:37,500
これらのモデルのほとんどは、それ以外の場合はすべて

505
00:18:37,500 --> 00:18:39,720
このフレームワークを尊重し、

506
00:18:39,720 --> 00:18:42,120
この種の特定の方法で機能します。

507
00:18:42,120 --> 00:18:45,179
えー、これを行う理由の例を示します。

508
00:18:45,179 --> 00:18:47,280


509
00:18:47,280 --> 00:18:49,080
えー、ノートの分類を行いたいと思うかもしれません。

510
00:18:49,080 --> 00:18:50,700


511
00:18:50,700 --> 00:18:52,860
グラフ機械学習の古典的な問題

512
00:18:52,860 --> 00:18:54,179
他にもありますが、

513
00:18:54,179 --> 00:18:57,000
簡単なのでこれについてだけ話します えーと、

514
00:18:57,000 --> 00:19:00,059
グラフがあります。このグラフ

515
00:19:00,059 --> 00:19:01,919


516
00:19:01,919 --> 00:19:03,900
には異なるラベルを持つノードがあります。ラベル

517
00:19:03,900 --> 00:19:06,600
はオレンジと青の 2 種類だけです

518
00:19:06,600 --> 00:19:07,620


519
00:19:07,620 --> 00:19:10,860
えー、これらのノード間にいくつかのエッジがあります。

520
00:19:10,860 --> 00:19:12,840
そして、あなたが望んでいることは、

521
00:19:12,840 --> 00:19:14,580


522
00:19:14,580 --> 00:19:16,980


523
00:19:16,980 --> 00:19:18,600


524
00:19:18,600 --> 00:19:20,760
簡単に分類できるこれらのノードの表現を計算するために説明した、この種のメッセージパッシングを実行したいということです。

525
00:19:20,760 --> 00:19:22,980
青と オレンジ色の

526
00:19:22,980 --> 00:19:25,140
メモ

527
00:19:25,140 --> 00:19:26,580
えーっと、非常に

528
00:19:26,580 --> 00:19:29,700
興味深いのは、多くの種類の

529
00:19:29,700 --> 00:19:31,679
グラフ ニューラル ネットワークの場合、

530
00:19:31,679 --> 00:19:32,460


531
00:19:32,460 --> 00:19:34,440
これらのグラフのプロパティ

532
00:19:34,440 --> 00:19:35,580
と、この種のさまざまな

533
00:19:35,580 --> 00:19:37,860
ノードがどのように接続されているかに応じて、そのパフォーマンスが

534
00:19:37,860 --> 00:19:39,900
大きく異なる可能性があるということです。

535
00:19:39,900 --> 00:19:41,580
そのため、特に次の影響を受けます。

536
00:19:41,580 --> 00:19:44,400
この性質は異性愛と呼ばれるもの

537
00:19:44,400 --> 00:19:46,620
で、これは

538
00:19:46,620 --> 00:19:49,140
あなたがどれだけ反対の魅力を求めるかという尺度のようなもので、

539
00:19:49,140 --> 00:19:52,860
非常に簡単な式があります、

540
00:19:52,860 --> 00:19:54,179
基本的には

541
00:19:54,179 --> 00:19:56,280
オレンジとブルーのノートの間のエッジの数を取り、

542
00:19:56,280 --> 00:19:58,080
エッジの総数で割ります。

543
00:19:58,080 --> 00:20:00,240
そうですね、基本的には、

544
00:20:00,240 --> 00:20:02,160
このグラフ内にあるものの間にどれだけの接続があるかを確認します。

545
00:20:02,160 --> 00:20:04,020


546
00:20:04,020 --> 00:20:05,460
それらが互いに反対であることはわかりますが、

547
00:20:05,460 --> 00:20:07,799


548
00:20:07,799 --> 00:20:10,200
同様の種類のノード間の接続はわかります。

549
00:20:10,200 --> 00:20:12,179
ええと、このようなものがたくさんある場合は、

550
00:20:12,179 --> 00:20:14,039
この種の異質な接続の

551
00:20:14,039 --> 00:20:16,740
場合、非常に高度なヘテロポリ

552
00:20:16,740 --> 00:20:18,120
シティがあり、多くのグラフィックスが

553
00:20:18,120 --> 00:20:19,620
その設定

554
00:20:19,620 --> 00:20:22,740
で厳密に苦労しているわけではないことがわかりました。その設定で物事を分類するのは非常に困難で、

555
00:20:22,740 --> 00:20:24,059


556
00:20:24,059 --> 00:20:26,100
繰り返し行うと、その

557
00:20:26,100 --> 00:20:29,160
理由もわかります あなたはあなたが

558
00:20:29,160 --> 00:20:31,320
知っているので、

559
00:20:31,320 --> 00:20:34,559
ああ、この

560
00:20:34,559 --> 00:20:36,840
メモはこれらの他のノードが

561
00:20:36,840 --> 00:20:38,760
接続されていることによく似ているので、それらはある種の理由で

562
00:20:38,760 --> 00:20:40,440
同じコミュニティにある必要があることがわかっている場合、ある種

563
00:20:40,440 --> 00:20:42,299
の推論に簡単に適用できます。 でも、

564
00:20:42,299 --> 00:20:43,799
すべての

565
00:20:43,799 --> 00:20:45,900
ものがお互いに少し違っているとわかっていると、それを行うのはずっと難しくなります。

566
00:20:45,900 --> 00:20:47,580


567
00:20:47,580 --> 00:20:49,679
そして、このコミュニティは、

568
00:20:49,679 --> 00:20:51,840


569
00:20:51,840 --> 00:20:53,520
グラフを見ると、うまく

570
00:20:53,520 --> 00:20:55,320
クラスター化されたコミュニティがあるとしても、視覚的にさえ正しく形成されていません。

571
00:20:55,320 --> 00:20:57,059
それらの間に線を引いて、

572
00:20:57,059 --> 00:20:59,100
ああ、これはコミュニティだ、

573
00:20:59,100 --> 00:21:01,559
別のコミュニティだ、と言うのは非常に簡単です。しかし、物事が非常に

574
00:21:01,559 --> 00:21:02,640
混在している場合、

575
00:21:02,640 --> 00:21:04,440
それは非常に困難であり、

576
00:21:04,440 --> 00:21:05,820


577
00:21:05,820 --> 00:21:07,799
これらのモデルにとっても困難であることが判明しました、ええ、私たちの直感のようなものだけではありません

578
00:21:07,799 --> 00:21:09,960


579
00:21:09,960 --> 00:21:11,460
これをしなければならないことが分かっているとき、ええと、

580
00:21:11,460 --> 00:21:14,460
これはある種の問題です、ええと、

581
00:21:14,460 --> 00:21:16,380
この視点、

582
00:21:16,380 --> 00:21:19,320
私が言っていたこのトポロジカルな視点は、まあ、

583
00:21:19,320 --> 00:21:22,679
役に立つことをすることに慣れています、ええと、

584
00:21:22,679 --> 00:21:23,460


585
00:21:23,460 --> 00:21:27,780
それではグラ​​フの toshibs に戻ります、

586
00:21:27,780 --> 00:21:29,640
ええと、そして この時点では、私が

587
00:21:29,640 --> 00:21:31,380
自己紹介で述べたことはほとんど忘れていてもいいと思います。

588
00:21:31,380 --> 00:21:33,360
あるいは、何か

589
00:21:33,360 --> 00:21:36,179
誤解があるかもしれませんが、

590
00:21:36,179 --> 00:21:39,120
ここではゼロビットから始めますので、

591
00:21:39,120 --> 00:21:41,400
問題はありません。

592
00:21:41,400 --> 00:21:43,140
左側には

593
00:21:43,140 --> 00:21:44,880
グラフがあるだけです。

594
00:21:44,880 --> 00:21:46,740
これはグラフのインシデント構造のようなものです

595
00:21:46,740 --> 00:21:48,780


596
00:21:48,780 --> 00:21:50,880
2 つの

597
00:21:50,880 --> 00:21:53,520
ノード V と U があり、

598
00:21:53,520 --> 00:21:55,320
それらの間にエッジがあるという最も単純なグラフがわかりません。したがって、これは

599
00:21:55,320 --> 00:21:56,940
1 つのエッジを持つ単なるグラフです。

600
00:21:56,940 --> 00:21:59,580
ここで起こっていることはそれだけです そして、私は

601
00:21:59,580 --> 00:22:01,380
それをこの種のインシデンス構造のような形で表現しました。

602
00:22:01,380 --> 00:22:04,260
右側のノード V は

603
00:22:04,260 --> 00:22:06,960
ノード e とノード うーん、申し訳ありませんが

604
00:22:06,960 --> 00:22:10,620
エッジ e とノード U はヘとインシデントです。つまり、

605
00:22:10,620 --> 00:22:12,659
これは単なるインシデント構造であり、これは

606
00:22:12,659 --> 00:22:14,640
何ですか 私たちが示している一種の三角形のシンボルは、

607
00:22:14,640 --> 00:22:16,799
これらの出現

608
00:22:16,799 --> 00:22:18,419
構造です。

609
00:22:18,419 --> 00:22:20,820
もしよろしければ、この出現関係をシンボル化する方法にすぎません。それで、

610
00:22:20,820 --> 00:22:22,559
これは単なるグラフであり、

611
00:22:22,559 --> 00:22:25,200


612
00:22:25,200 --> 00:22:27,960
グラフ上のフィールドについて考える方法は、単なるマッピングです。 これらの

613
00:22:27,960 --> 00:22:29,640
グラフ構造なので、これはカテゴリ理論の一種です

614
00:22:29,640 --> 00:22:32,100


615
00:22:32,100 --> 00:22:34,100
このグラフを別のものに翻訳します

616
00:22:34,100 --> 00:22:37,140
これは非常によく似ています ご存知のとおり、

617
00:22:37,140 --> 00:22:38,640
構造はある意味

618
00:22:38,640 --> 00:22:40,620
同じです これらの意味が少し

619
00:22:40,620 --> 00:22:44,340
変わっただけです ノード Vごとに

620
00:22:44,340 --> 00:22:46,980
ええと、ここではこれはベクトル空間になりますので、F

621
00:22:46,980 --> 00:22:49,440
of eは各ノードのベクトル空間です。

622
00:22:49,440 --> 00:22:51,419
ここでF of Uがあり、これは別の

623
00:22:51,419 --> 00:22:54,720
ベクトル空間です。えー、各エッジについては、

624
00:22:54,720 --> 00:22:57,840
このFeがあります。これは別のベクトル空間です。

625
00:22:57,840 --> 00:23:00,059
ええと、すべてのノードがそれぞれのベクトル空間を持ちます。 独自のベクトル

626
00:23:00,059 --> 00:23:02,760
空間とそれらのベクトル空間を離れるノードに関連付けられた特徴な

627
00:23:02,760 --> 00:23:04,860


628
00:23:04,860 --> 00:23:06,900
ので、基本的に各ノードには

629
00:23:06,900 --> 00:23:08,940
特徴のベクトル空間があり、それが

630
00:23:08,940 --> 00:23:11,580
これまでに起こっていることのすべてであり、

631
00:23:11,580 --> 00:23:13,440
これらのインシデント関係も

632
00:23:13,440 --> 00:23:16,740
何かに変換され、それらが

633
00:23:16,740 --> 00:23:18,539
変換される矢印もあります。 明らかなことは線形

634
00:23:18,539 --> 00:23:20,760
マップです。したがって、これらがベクトル空間である場合、

635
00:23:20,760 --> 00:23:22,559
これらは線形マップまたは

636
00:23:22,559 --> 00:23:24,659
本質的に正しいいくつかの行列である必要があります。したがって、

637
00:23:24,659 --> 00:23:26,880
ここに表示されている各矢印には行列があり、ええと、ええ、

638
00:23:26,880 --> 00:23:28,140


639
00:23:28,140 --> 00:23:29,820


640
00:23:29,820 --> 00:23:30,919


641
00:23:30,919 --> 00:23:35,340
そして何かええと、私はそう

642
00:23:35,340 --> 00:23:37,860
します いくつかのスライドで議論して示しますが、

643
00:23:37,860 --> 00:23:40,500
基本的にメッセージ パッシングは、

644
00:23:40,500 --> 00:23:41,580


645
00:23:41,580 --> 00:23:44,220
グラフ上では非常に似ています。

646
00:23:44,220 --> 00:23:46,559
グループ理論におけるグループ アクションと非常に似ています。

647
00:23:46,559 --> 00:23:47,880


648
00:23:47,880 --> 00:23:50,640
では、左側にあるものについて考えられるように、その理由を正確に説明しましょう。

649
00:23:50,640 --> 00:23:53,340


650
00:23:53,340 --> 00:23:55,799


651
00:23:55,799 --> 00:23:57,600
発生関係からのこれらの矢印は、

652
00:23:57,600 --> 00:23:59,820
これらのエラーを、私たちが押すことができるいくつかのパターンのようなものと考えることができます。

653
00:23:59,820 --> 00:24:02,280


654
00:24:02,280 --> 00:24:05,880
つまり、これは何を意味しますか。つまり、このノード V が左右にあり

655
00:24:05,880 --> 00:24:09,059
、この e が今、いくつかの

656
00:24:09,059 --> 00:24:12,360
特徴があるとします。  fov にある特徴が

657
00:24:12,360 --> 00:24:14,700
右にあります。

658
00:24:14,700 --> 00:24:17,880
ここでこの矢印ボタンを押すだけで、

659
00:24:17,880 --> 00:24:20,880
この行列にこの特徴を乗算すると、

660
00:24:20,880 --> 00:24:22,980
エッジ特徴が得られます。

661
00:24:22,980 --> 00:24:24,840


662
00:24:24,840 --> 00:24:27,179
この矢印に沿って進むと、この

663
00:24:27,179 --> 00:24:29,220
行列がこれを乗算します。 フィーチャと

664
00:24:29,220 --> 00:24:31,559
この頂点フィーチャを結合すると、エッジ フィーチャが得られます。

665
00:24:31,559 --> 00:24:33,299


666
00:24:33,299 --> 00:24:34,860
これらの矢印は、フィーチャを

667
00:24:34,860 --> 00:24:36,360


668
00:24:36,360 --> 00:24:38,100


669
00:24:38,100 --> 00:24:40,799
頂点からエッジに、そしてエッジから

670
00:24:40,799 --> 00:24:42,840
頂点に移動するために使用できる、ある種のアクションを与えるものだと考えると、このようになります。 この場合、それは一種の

671
00:24:42,840 --> 00:24:44,340
左アクションです。右なので、これが私が

672
00:24:44,340 --> 00:24:47,100
言っていることです。私はこの R を取り、これは

673
00:24:47,100 --> 00:24:50,159
ここにあり、ノード V のいくつかの機能に基づいて動作します。

674
00:24:50,159 --> 00:24:53,280
つまり、ここにあるこの HOV は、

675
00:24:53,280 --> 00:24:54,600


676
00:24:54,600 --> 00:24:57,299
ええと、それをどのように行うかです。 これは、

677
00:24:57,299 --> 00:24:59,640
この矢印に関連付けられたこの行列を取得し

678
00:24:59,640 --> 00:25:03,960
、このベクトル HOV を乗算するだけです。つまり、行列に

679
00:25:03,960 --> 00:25:07,020
ベクトルを掛けるだけです。これで

680
00:25:07,020 --> 00:25:08,940
エッジ フィーチャが得られます。これは、ここからここに

681
00:25:08,940 --> 00:25:10,919
移動する一種の方法なので、

682
00:25:10,919 --> 00:25:12,539
これはすでに メッセージパッシングに少し似ています。

683
00:25:12,539 --> 00:25:13,860


684
00:25:13,860 --> 00:25:15,780
この頂点からこのエッジにメッセージを渡しているようなものです

685
00:25:15,780 --> 00:25:18,000


686
00:25:18,000 --> 00:25:19,860
が、

687
00:25:19,860 --> 00:25:22,559
このエッジから

688
00:25:22,559 --> 00:25:25,140
使用されている他の頂点にもメッセージを渡す必要があるので、次のことが

689
00:25:25,140 --> 00:25:27,419
必要であることがわかります。  V から U に到達します。

690
00:25:27,419 --> 00:25:29,100
それで、e を通過することでそれを行いました。

691
00:25:29,100 --> 00:25:32,220
そうすることで、

692
00:25:32,220 --> 00:25:33,840
一種の逆方向に進むことで、

693
00:25:33,840 --> 00:25:36,059
正しいアクセントを得ることができます。

694
00:25:36,059 --> 00:25:39,059
このマトリックスを適用する代わりに、

695
00:25:39,059 --> 00:25:41,580
随伴マトリックスを適用しました。

696
00:25:41,580 --> 00:25:44,940
転置行列ではないので、

697
00:25:44,940 --> 00:25:47,760
ここからここに移動したい場合は、

698
00:25:47,760 --> 00:25:49,500
この行列を適用する代わりに、

699
00:25:49,500 --> 00:25:50,880


700
00:25:50,880 --> 00:25:52,440
その逆に移動したいので、その転置を適用します。

701
00:25:52,440 --> 00:25:54,659
これは、これらを合成する場合です。

702
00:25:54,659 --> 00:25:56,340
機能を

703
00:25:56,340 --> 00:25:59,460
V から U に移動できるので、これは、

704
00:25:59,460 --> 00:26:02,400
これらの

705
00:26:02,400 --> 00:26:05,580
アクションをメッセージ パッシングを行うために適用できる方法です。

706
00:26:05,580 --> 00:26:07,140
これらはシフト アクションまたは

707
00:26:07,140 --> 00:26:10,500
シフト前アクションと呼ばれます。では、

708
00:26:10,500 --> 00:26:12,299
どのようなものかを説明します。

709
00:26:12,299 --> 00:26:14,940
これとグループにあるものとの関係 えー

710
00:26:14,940 --> 00:26:16,980
理論

711
00:26:16,980 --> 00:26:19,500
えーっと、グループを表す 1 つの方法は、

712
00:26:19,500 --> 00:26:22,380


713
00:26:22,380 --> 00:26:24,299


714
00:26:24,299 --> 00:26:27,480
左側のようなある種のグラフを用意することです。それで、

715
00:26:27,480 --> 00:26:31,080
えー、スター オブジェクトのようなものがあります。

716
00:26:31,080 --> 00:26:33,840
ダミーのものがあります

717
00:26:33,840 --> 00:26:35,580
が、すべてのグループ構造はこれらの矢印の中にあります。

718
00:26:35,580 --> 00:26:37,620
グループ要素ごとに、

719
00:26:37,620 --> 00:26:40,200


720
00:26:40,200 --> 00:26:42,480
たとえばこの G が 90 度の回転であるとします。それは、

721
00:26:42,480 --> 00:26:43,919
ええと、回転のグループがあるとします。

722
00:26:43,919 --> 00:26:45,600


723
00:26:45,600 --> 00:26:48,900
具体的な例

724
00:26:48,900 --> 00:26:50,940
で、これらの矢印は 90 度の回転に対応する可能性があります。

725
00:26:50,940 --> 00:26:53,400


726
00:26:53,400 --> 00:26:55,559
反対のマイナスの種類の 90

727
00:26:55,559 --> 00:26:57,360
度回転を行う別の矢印があります。これは、その変換の逆です。

728
00:26:57,360 --> 00:26:58,919


729
00:26:58,919 --> 00:27:00,360
これは、このグループの構造のようなものです。

730
00:27:00,360 --> 00:27:02,520
また、先ほど見たように、

731
00:27:02,520 --> 00:27:04,260
このような同様の変換を行います。

732
00:27:04,260 --> 00:27:06,419


733
00:27:06,419 --> 00:27:08,279
えー、非常に基本的なので、

734
00:27:08,279 --> 00:27:11,159
このグループに事前シフトを定義します。えー、この

735
00:27:11,159 --> 00:27:13,380
星をベクトル空間にマッピングします。そのため、スターの種類

736
00:27:13,380 --> 00:27:15,900
の置き換えは、えー、

737
00:27:15,900 --> 00:27:17,760
以前の頂点になります。 今、頂点が 1 つだけあります。

738
00:27:17,760 --> 00:27:20,820
そして、これらの矢印だけです。

739
00:27:20,820 --> 00:27:22,919
星は、

740
00:27:22,919 --> 00:27:25,860
ここで青で示したベクトル空間ではありません。

741
00:27:25,860 --> 00:27:27,240
ええと、

742
00:27:27,240 --> 00:27:28,919
非常に

743
00:27:28,919 --> 00:27:31,440
確立された概念であるグループ アクションを実際に実行するとします。 グループ理論では、

744
00:27:31,440 --> 00:27:32,100


745
00:27:32,100 --> 00:27:34,980
ええと、たとえば、この頂点に作用したい場合、ああ、

746
00:27:34,980 --> 00:27:37,260
申し訳ありませんが、この

747
00:27:37,260 --> 00:27:39,779
ベクトルの頂点ではありません v ここに、このベクトル空間にベクトルがあり、

748
00:27:39,779 --> 00:27:42,600


749
00:27:42,600 --> 00:27:45,419
このグループ変換 G によってそれに作用したいので、

750
00:27:45,419 --> 00:27:47,220
本質的には次のことを行いたいとします この矢印を押す

751
00:27:47,220 --> 00:27:49,919
と、それに何らかのアクションを適用できます。

752
00:27:49,919 --> 00:27:52,320


753
00:27:52,320 --> 00:27:54,779
この変換のおかげで、この G は、

754
00:27:54,779 --> 00:27:57,299
回転マトリックスである

755
00:27:57,299 --> 00:27:59,460
対応する回転マトリックスであるマトリックスにマッピングされ、

756
00:27:59,460 --> 00:28:02,659
この回転マトリックスを V に適用すると、次の

757
00:28:02,659 --> 00:28:06,120
結果が得られます。 ここで 90 度の回転のよう

758
00:28:06,120 --> 00:28:07,260


759
00:28:07,260 --> 00:28:09,120
に、えーっと、これが何が起こっているのかです。この

760
00:28:09,120 --> 00:28:10,799
種の垂直ベクトルは回転したベクトルを示しています。えーっと、

761
00:28:10,799 --> 00:28:12,419


762
00:28:12,419 --> 00:28:13,080


763
00:28:13,080 --> 00:28:15,000
これは前のスライドで見たものと完全に類似しています。

764
00:28:15,000 --> 00:28:17,760


765
00:28:17,760 --> 00:28:20,640
えー、これは首長の接続方法です。

766
00:28:20,640 --> 00:28:23,400
この種のアクションなので、

767
00:28:23,400 --> 00:28:25,440
基本的にメッセージパッシングと考えられるものは、

768
00:28:25,440 --> 00:28:27,720


769
00:28:27,720 --> 00:28:29,640
グループ理論のグループアクションと同じですが、

770
00:28:29,640 --> 00:28:32,159
このグループをグラフに置き換えるだけなので、

771
00:28:32,159 --> 00:28:34,860
それに似ているので、まあ、

772
00:28:34,860 --> 00:28:36,299
別の種類の翻訳です

773
00:28:36,299 --> 00:28:38,940
左側のオブジェクトを置き換えます。

774
00:28:38,940 --> 00:28:41,580
これはグラフのように見えます。

775
00:28:41,580 --> 00:28:43,919
これは正しいグループです。でも、

776
00:28:43,919 --> 00:28:46,440
残りの部分はまったく同じままなので、ええと、

777
00:28:46,440 --> 00:28:48,360
これにより、ある

778
00:28:48,360 --> 00:28:50,520
方法で形式化する方法が得られます。

779
00:28:50,520 --> 00:28:52,559
このトポロジカルな観点から見て、グラフ上のメッセージ パッシングを通じて機械学習でかなり研究されてきたこれら

780
00:28:52,559 --> 00:28:54,600
すべての種類の対称性やそのようなものを結び付け

781
00:28:54,600 --> 00:28:56,039


782
00:28:56,039 --> 00:28:57,360


783
00:28:57,360 --> 00:28:59,700
、それらがどのように関連する 1 つの方法を確認するか、わかりました。

784
00:28:59,700 --> 00:29:02,580


785
00:29:02,580 --> 00:29:05,460
それでは今私の回路で これは

786
00:29:05,460 --> 00:29:07,440
すべて非常に洗練されていて素晴らしかったですが、

787
00:29:07,440 --> 00:29:09,600


788
00:29:09,600 --> 00:29:10,860
基本的にこれがどのようなことになるかわかりますか、

789
00:29:10,860 --> 00:29:12,360
そして私はあなたに

790
00:29:12,360 --> 00:29:15,480
非常に前向きな例をお見せしますが、そこには

791
00:29:15,480 --> 00:29:18,360
もっと多くのことがあります、時間が限られているのはわかっています、

792
00:29:18,360 --> 00:29:20,940
そして私たちが示したものは次のとおりです

793
00:29:20,940 --> 00:29:23,340
えー、最初に言ったように、多くの

794
00:29:23,340 --> 00:29:24,960
グラフェン ネットワークは、これらの異好性グラフの中で苦戦しています。

795
00:29:24,960 --> 00:29:27,240
そして、私たちが

796
00:29:27,240 --> 00:29:28,620
示したことは、

797
00:29:28,620 --> 00:29:30,779
えー、グラフがどんなに異好性であっても、ある種

798
00:29:30,779 --> 00:29:33,600
奇妙であっても、えー、

799
00:29:33,600 --> 00:29:36,899
いつでも何らかのシフト構造を見つけることができるということです

800
00:29:36,899 --> 00:29:38,700
本質的には、メッセージ パッシング

801
00:29:38,700 --> 00:29:41,820
ニューラル ネットワークの一種で、

802
00:29:41,820 --> 00:29:44,279
十分なレイヤーを使用すると、右側のノード

803
00:29:44,279 --> 00:29:46,559
のクラスを解きほぐすことができるので、

804
00:29:46,559 --> 00:29:49,440


805
00:29:49,440 --> 00:29:51,539
この図では、一番左側にあるもの、つまりノード

806
00:29:51,539 --> 00:29:53,580


807
00:29:53,580 --> 00:29:55,980
の色を示しています。

808
00:29:55,980 --> 00:29:58,980
留め金が表示されていることに注意してください。ここには 3 つあります。ここには

809
00:29:58,980 --> 00:30:01,559
3 つの色があります。つまり、3 つのクラスがあります。

810
00:30:01,559 --> 00:30:03,179
えーっと、これは最初のグラフのようなもので、

811
00:30:03,179 --> 00:30:05,399


812
00:30:05,399 --> 00:30:07,679
このボックス内のノードの位置が特徴を示しているので、

813
00:30:07,679 --> 00:30:08,940
これは一種の方法です。

814
00:30:08,940 --> 00:30:10,980
特徴を視覚化します

815
00:30:10,980 --> 00:30:14,340
えー、位置 2D 位置は

816
00:30:14,340 --> 00:30:16,440
実際には各ノードの 2D 特徴ベクトルです

817
00:30:16,440 --> 00:30:17,399


818
00:30:17,399 --> 00:30:18,419
えー、最初は

819
00:30:18,419 --> 00:30:20,159
すべてが非常に乱雑で

820
00:30:20,159 --> 00:30:22,380
絡み合っていることがわかります。

821
00:30:22,380 --> 00:30:24,240
これらのノートを分類したい場合のように、非常に

822
00:30:24,240 --> 00:30:25,919
難しいためです。

823
00:30:25,919 --> 00:30:28,140
初期の表現は非常に

824
00:30:28,140 --> 00:30:30,899
乱雑で、複雑に絡み合っています

825
00:30:30,899 --> 00:30:33,120
が、メッセージパッシングモデルの特定の種類のキーの層を積み重ねていくと、

826
00:30:33,120 --> 00:30:34,679


827
00:30:34,679 --> 00:30:36,419


828
00:30:36,419 --> 00:30:39,360
これらのクラスがどのように徐々に

829
00:30:39,360 --> 00:30:41,399
より適切な

830
00:30:41,399 --> 00:30:42,440
角度やより多くのことを理解できるようになるかがわかります。

831
00:30:42,440 --> 00:30:45,720
新しいレイヤーごとに、このような

832
00:30:45,720 --> 00:30:47,460
表現が崩壊し、

833
00:30:47,460 --> 00:30:49,860
この種のクラスタリングが

834
00:30:49,860 --> 00:30:51,419
適切に形成されます。そして、

835
00:30:51,419 --> 00:30:53,340
最後に次のようなものを作成すると、

836
00:30:53,340 --> 00:30:55,200
これら 3 つのコミュニティが非常に

837
00:30:55,200 --> 00:30:57,659
明確に見えるようになり、それらを分離するのが非常に簡単になります。

838
00:30:57,659 --> 00:30:59,159


839
00:30:59,159 --> 00:31:02,100
この結果の背後にある本質のようなものは、

840
00:31:02,100 --> 00:31:05,039
さまざまな種類の問題を解決する理論を使用することで、さまざまな種類の

841
00:31:05,039 --> 00:31:07,980
問題に対してどのような種類のチーフ モデルや

842
00:31:07,980 --> 00:31:10,020
メッセージ パッシング モデルが必要かを示したことです。

843
00:31:10,020 --> 00:31:13,200


844
00:31:13,200 --> 00:31:14,880
これは非常に重要です。なぜなら、これは

845
00:31:14,880 --> 00:31:18,419
重要な点をいくつか示しているからです。

846
00:31:18,419 --> 00:31:20,820


847
00:31:20,820 --> 00:31:22,919


848
00:31:22,919 --> 00:31:25,020
特定の種類の問題を解決するために、変更したり使用したりしたいアーキテクチャの部分もあります。

849
00:31:25,020 --> 00:31:27,120
また、ある種の

850
00:31:27,120 --> 00:31:29,640
不可能な結果も得られたため、

851
00:31:29,640 --> 00:31:31,620
ある種のネットワークのグラフ化を使用すると

852
00:31:31,620 --> 00:31:33,120
解決できません。 この問題を

853
00:31:33,120 --> 00:31:35,640
解決しないと、この問題を解決するのに苦労することになります。また、

854
00:31:35,640 --> 00:31:37,740
より

855
00:31:37,740 --> 00:31:39,960
一般的なものを使用すれば、チャンスがあるかもしれないということもわかったので、

856
00:31:39,960 --> 00:31:41,580


857
00:31:41,580 --> 00:31:44,279
これは、これらの理論的なものの

858
00:31:44,279 --> 00:31:46,440
背後にある高レベルのビューの一種です。

859
00:31:46,440 --> 00:31:48,600


860
00:31:48,600 --> 00:31:51,779
実際に実践しているのは、

861
00:31:51,779 --> 00:31:53,399


862
00:31:53,399 --> 00:31:55,440
基本的にこれらのメッセージ

863
00:31:55,440 --> 00:31:57,779
パッシング関数を学習するか、シート

864
00:31:57,779 --> 00:32:00,779
や行列を学習することなので、実際に

865
00:32:00,779 --> 00:32:02,159
誰かがノード

866
00:32:02,159 --> 00:32:04,799
分類タスクを与えたときのように、正確に何が正しいかを事前に知るのは非常に困難です。

867
00:32:04,799 --> 00:32:08,220


868
00:32:08,220 --> 00:32:09,480


869
00:32:09,480 --> 00:32:11,279
右の C は、適切なメッセージ

870
00:32:11,279 --> 00:32:14,760
パッシング モデルです。えー、そのタスクを分類するためです。えっと、

871
00:32:14,760 --> 00:32:16,919
私たちがやることは、実際に

872
00:32:16,919 --> 00:32:19,260
データからそれを学習することです。そこで、メッセージ パッシングを行うこれらの行列を学習しました。

873
00:32:19,260 --> 00:32:21,539


874
00:32:21,539 --> 00:32:23,399


875
00:32:23,399 --> 00:32:25,980
えー、ニューラル ネットワークを使用していくつかを渡すことによって、データからそれらを学習します。

876
00:32:25,980 --> 00:32:28,860
ここでは赤で示しています。

877
00:32:28,860 --> 00:32:30,980
そして、

878
00:32:30,980 --> 00:32:33,299
これらのベクトル空間間でフィーチャを転送し

879
00:32:33,299 --> 00:32:35,640
、それらを移動させる方法を学びます。

880
00:32:35,640 --> 00:32:37,200
これは、

881
00:32:37,200 --> 00:32:39,899
これらのノードとエッジのフィーチャであるこれらのベクトルが

882
00:32:39,899 --> 00:32:41,580
どのように移動するかに依存する方法を示しているだけです。

883
00:32:41,580 --> 00:32:43,260
この行列を経由して、

884
00:32:43,260 --> 00:32:44,520
いくつかの行列の

885
00:32:44,520 --> 00:32:46,140
乗算を実行します

886
00:32:46,140 --> 00:32:46,980
えーっと、それは

887
00:32:46,980 --> 00:32:49,620


888
00:32:49,620 --> 00:32:51,779
このモデルの背後にある一種の高レベルであり、

889
00:32:51,779 --> 00:32:53,279
これをある種の現実

890
00:32:53,279 --> 00:32:56,580
世界の異好性データセットで評価しました えー、

891
00:32:56,580 --> 00:32:59,640
ここで、次の基準に

892
00:32:59,640 --> 00:33:00,960
基づいてノードを分類する必要があります さまざまな

893
00:33:00,960 --> 00:33:03,240
コミュニティやさまざまな種類のラベル、

894
00:33:03,240 --> 00:33:06,480
そしてこれらのデータセットは

895
00:33:06,480 --> 00:33:09,120
右から左に向かってより異性愛的になってきているので、

896
00:33:09,120 --> 00:33:10,919
ある意味、

897
00:33:10,919 --> 00:33:13,019
古典的なアーキテクチャ

898
00:33:13,019 --> 00:33:15,179
や

899
00:33:15,179 --> 00:33:17,580
これらすべてのものからインスピレーションを得た私たちのモデルにとってはより挑戦的になってきており、その次元は

900
00:33:17,580 --> 00:33:20,159
非常にスコアが高いです これらのベンチマークでは非常に重要であり

901
00:33:20,159 --> 00:33:21,600


902
00:33:21,600 --> 00:33:23,940
、同時に、

903
00:33:23,940 --> 00:33:27,179


904
00:33:27,179 --> 00:33:29,399
この分野の他のモデルが

905
00:33:29,399 --> 00:33:31,500
行ったさまざまな選択の一部または正当化も明らかになりましたが、おそらく

906
00:33:31,500 --> 00:33:32,820
それらはそれほど正当化されていなかったか、

907
00:33:32,820 --> 00:33:34,980
あるいは別の種類の動機が

908
00:33:34,980 --> 00:33:38,159
あったのかもしれません。 なぜ

909
00:33:38,159 --> 00:33:40,019
彼らがすでにやっているさまざまなことがなぜ

910
00:33:40,019 --> 00:33:41,580


911
00:33:41,580 --> 00:33:45,299
この種の理論の観点から見て理にかなっているのかを示してください、ええと、わかりました、

912
00:33:45,299 --> 00:33:48,840
それがすべてです、私が持っていたのはすべてです、

913
00:33:48,840 --> 00:33:49,860


914
00:33:49,860 --> 00:33:52,500
ええ、聞いてくれてありがとう、

915
00:33:52,500 --> 00:33:54,779
そしてええ、これについてもっと話せてうれしいです

916
00:33:54,779 --> 00:33:56,880
また、あなたが知っている場合に備えて、予備のスライドもたくさん持っています。

917
00:33:56,880 --> 00:33:59,580
どれだけ遠くから質問できるかに応じて、ベンチャーが

918
00:33:59,580 --> 00:34:00,960
これらの質問を提供します、

919
00:34:00,960 --> 00:34:03,080


920
00:34:04,260 --> 00:34:07,740
ああ、素晴らしい仕事です、

921
00:34:07,740 --> 00:34:08,820


922
00:34:08,820 --> 00:34:10,800
ライブチャットに参加している人たちへのプレゼンテーションをありがとう、彼らは

923
00:34:10,800 --> 00:34:13,379
いくつかの質問を書くことができますが、

924
00:34:13,379 --> 00:34:15,379
私が知りたいことはたくさんあります についてお話しできると思います

925
00:34:15,379 --> 00:34:18,359
ので、まず

926
00:34:18,359 --> 00:34:22,619


927
00:34:22,619 --> 00:34:25,320
vanderlar kudal と DeVries による論文の要約からの引用を読んで、

928
00:34:25,320 --> 00:34:26,520
これを能動推論のコンテキストに基づいて説明し、

929
00:34:26,520 --> 00:34:28,800


930
00:34:28,800 --> 00:34:31,918
メッセージ パッシングがなぜあなたが説明しているアプローチにアプローチするのかを実際に正当化したいと思います。

931
00:34:31,918 --> 00:34:34,500


932
00:34:34,500 --> 00:34:36,418
アクティブ推論モデリングを支援しているため、この論文は

933
00:34:36,418 --> 00:34:38,159


934
00:34:38,159 --> 00:34:40,679
合成アクティブ推論エージェントの実現と呼ばれる 2 つの論文であり、

935
00:34:40,679 --> 00:34:43,440


936
00:34:43,440 --> 00:34:45,480
合成アクティブ推論エージェントの完全なメッセージ パッシング アカウントを使って書かれています。これにより、

937
00:34:45,480 --> 00:34:48,659


938
00:34:48,659 --> 00:34:51,899
モデル間でメッセージの更新を導出して再利用することが可能になり、

939
00:34:51,899 --> 00:34:53,940
産業に近づくことができます。

940
00:34:53,940 --> 00:34:56,540
合成アクティブ推論フレームワークのアプリケーションです。

941
00:34:56,540 --> 00:35:00,300
それでは、メッセージ パッシング構造を知ることで、

942
00:35:00,300 --> 00:35:02,040


943
00:35:02,040 --> 00:35:04,740
さまざまな設定間でモデルを再利用したり、モデルを読み

944
00:35:04,740 --> 00:35:06,540
やすくしたりするのにどのように役立ちますか。

945
00:35:06,540 --> 00:35:10,020


946
00:35:10,020 --> 00:35:12,619
まず第一に、私は

947
00:35:12,619 --> 00:35:14,880
アクティブ推論の種類の文献にあまり詳しくありません。

948
00:35:14,880 --> 00:35:16,619


949
00:35:16,619 --> 00:35:17,640


950
00:35:17,640 --> 00:35:19,500


951
00:35:19,500 --> 00:35:22,380
アンカーするためには、ちょっと手伝ってもらう必要があるのはわかってるでしょう、もしかしたら

952
00:35:22,380 --> 00:35:24,420
議論はもう少しその点に踏み込むかもしれませんが、

953
00:35:24,420 --> 00:35:26,520
私が正しく理解していれば、

954
00:35:26,520 --> 00:35:29,099
あなたが

955
00:35:29,099 --> 00:35:31,079
言いたいのは基本的には次のような質問だと思います

956
00:35:31,079 --> 00:35:33,200
メッセージパッシングは、

957
00:35:33,200 --> 00:35:35,940
さまざまな種類の設定についての知識を一般化するのにどのように役立ちますか?

958
00:35:35,940 --> 00:35:37,920


959
00:35:37,920 --> 00:35:40,260


960
00:35:40,260 --> 00:35:41,820


961
00:35:41,820 --> 00:35:44,339


962
00:35:44,339 --> 00:35:46,140


963
00:35:46,140 --> 00:35:48,060
一般化が起こっています

964
00:35:48,060 --> 00:35:49,859
が、

965
00:35:49,859 --> 00:35:51,660


966
00:35:51,660 --> 00:35:54,060
たとえば、これらの

967
00:35:54,060 --> 00:35:55,320
モデルは、パターンや構造をプロットするのが非常に得意です。どのように

968
00:35:55,320 --> 00:35:58,200


969
00:35:58,200 --> 00:35:59,520
正確に実装するかによって異なりますが、

970
00:35:59,520 --> 00:36:01,619
たとえば、

971
00:36:01,619 --> 00:36:03,839
グラフに三角形があるか、それは

972
00:36:03,839 --> 00:36:05,880
一種の単純な構造になることはわかっていますね。グラフには

973
00:36:05,880 --> 00:36:08,040
三角形

974
00:36:08,040 --> 00:36:10,140
または特定のサブグラフのような他の種類のガジェットがあり、

975
00:36:10,140 --> 00:36:11,640


976
00:36:11,640 --> 00:36:14,160


977
00:36:14,160 --> 00:36:16,859
さまざまな種類のグラフに表示される可能性があります。 さまざまなグラフを知っています。

978
00:36:16,859 --> 00:36:18,480
グラフ自体は

979
00:36:18,480 --> 00:36:21,119
互いに完全に異なって見えるかもしれませんが、

980
00:36:21,119 --> 00:36:23,240
この種のパターンは、

981
00:36:23,240 --> 00:36:25,440


982
00:36:25,440 --> 00:36:27,599
3 つの複数のグラフが出現するなど、局所的なパターンのように複数の形で再出現する可能性があり

983
00:36:27,599 --> 00:36:29,700
、これはご覧のとおり、適切に一般化するのに役立つ可能性があります。

984
00:36:29,700 --> 00:36:31,200


985
00:36:31,200 --> 00:36:33,119
たとえば、クリックがある場合、

986
00:36:33,119 --> 00:36:35,220
それは非常に重要であり、

987
00:36:35,220 --> 00:36:37,380
ソーシャル ネットワーク モデリングなどを行うときに、

988
00:36:37,380 --> 00:36:38,940


989
00:36:38,940 --> 00:36:40,560
この種の、つまり、親しい

990
00:36:40,560 --> 00:36:42,180
友人のグループを示すようなものであり、全員が

991
00:36:42,180 --> 00:36:44,160
互いに話し合うため、グループを形成することができます。

992
00:36:44,160 --> 00:36:45,540
全員がお互いに正しくつながっているようなクリック感があれ

993
00:36:45,540 --> 00:36:47,520
ば、

994
00:36:47,520 --> 00:36:49,320
別の完全に

995
00:36:49,320 --> 00:36:51,599
異なる社会的コンテキストで、

996
00:36:51,599 --> 00:36:53,280
これらのエージェントが

997
00:36:53,280 --> 00:36:54,960
再び同様の方法で通信したり

998
00:36:54,960 --> 00:36:56,880
、同様の方法で接続したりしていることがわかっている場合には、一般的にそれを使用できるかもしれません。

999
00:36:56,880 --> 00:36:59,520
全体的なパターンの種類が

1000
00:36:59,520 --> 00:37:00,960
まったく異なる場合、

1001
00:37:00,960 --> 00:37:03,420
ええと、それは単なる構造的類似性をはるかに超えています。

1002
00:37:03,420 --> 00:37:05,520


1003
00:37:05,520 --> 00:37:07,500
そこには特徴もあるので、

1004
00:37:07,500 --> 00:37:09,420
構造

1005
00:37:09,420 --> 00:37:11,760
パターンと特徴の組み合わせがあり、あなたが知っているように、

1006
00:37:11,760 --> 00:37:13,740
さらに複雑なパターンを

1007
00:37:13,740 --> 00:37:16,140
正しく与えることができます 三角形です

1008
00:37:16,140 --> 00:37:19,140
が、この三角形の中の 2 つの特徴は、

1009
00:37:19,140 --> 00:37:21,420
特定の方向に見えるもの

1010
00:37:21,420 --> 00:37:24,000
と、別の方向に見えるものであることがわかります。

1011
00:37:24,000 --> 00:37:25,380


1012
00:37:25,380 --> 00:37:27,900
それで、さらに洗練されたものになり、さらに

1013
00:37:27,900 --> 00:37:30,599
豊富なパターン検出

1014
00:37:30,599 --> 00:37:32,099
能力が得られます。

1015
00:37:32,099 --> 00:37:35,040
それで、あなたは本質的にこれを持っています、あなたは

1016
00:37:35,040 --> 00:37:37,140


1017
00:37:37,140 --> 00:37:39,599
複数のスケールでスポットパターンを特定する能力を知っています、そして、

1018
00:37:39,599 --> 00:37:41,339
これが複数のスキルで起こっていることを見ることができます、パターン

1019
00:37:41,339 --> 00:37:42,960


1020
00:37:42,960 --> 00:37:45,480
のパターンを正しく持つことができます、

1021
00:37:45,480 --> 00:37:47,220
コミュニティ全体を

1022
00:37:47,220 --> 00:37:49,560
さまざまなパターンで接続することができます。

1023
00:37:49,560 --> 00:37:51,480
ええと、これは一種の研究

1024
00:37:51,480 --> 00:37:53,099
課題でもありますが、これらの

1025
00:37:53,099 --> 00:37:55,619
階層パターンなどをどのようにキャプチャするかなどです。ええと、

1026
00:37:55,619 --> 00:37:57,119
一般的に、互いに遠く離れたものをキャプチャしたい

1027
00:37:57,119 --> 00:37:58,680
場合は、より多くのメッセージ パッシングを実行する必要があることはわかっています。そうしないと、キャプチャ

1028
00:37:58,680 --> 00:38:01,260


1029
00:38:01,260 --> 00:38:02,820


1030
00:38:02,820 --> 00:38:04,740
できないからです。 お互いに正しく話してください、

1031
00:38:04,740 --> 00:38:06,420
ええと、それが

1032
00:38:06,420 --> 00:38:08,940
実際にあなたの質問に答えたのか、それとも私がそこで

1033
00:38:08,940 --> 00:38:10,380
正しい方向に進んでいたのかはわかりません、

1034
00:38:10,380 --> 00:38:11,460


1035
00:38:11,460 --> 00:38:13,200
ああ、素晴らしいです、

1036
00:38:13,200 --> 00:38:14,700
このパターンのように、さまざまなクールなアイデアがたくさん出てきます

1037
00:38:14,700 --> 00:38:17,400
途中ではありますが、完全に

1038
00:38:17,400 --> 00:38:19,500
同意です。能動的推論との

1039
00:38:19,500 --> 00:38:21,480
より具体的なつながりを探ることができると思います。

1040
00:38:21,480 --> 00:38:23,839


1041
00:38:23,839 --> 00:38:26,220
願わくば、

1042
00:38:26,220 --> 00:38:28,140
これのリスナー数や視聴者数が

1043
00:38:28,140 --> 00:38:29,760
双方向の通りのようなものであることを願っています。あなた

1044
00:38:29,760 --> 00:38:31,980


1045
00:38:31,980 --> 00:38:34,079
のバックグラウンドから来ている人もいるかもしれません。 それから、興味のある特定のシステムとして

1046
00:38:34,079 --> 00:38:35,820
能動推論と生成モデルについて

1047
00:38:35,820 --> 00:38:37,740


1048
00:38:37,740 --> 00:38:39,780
初めて学びましたが、確かに

1049
00:38:39,780 --> 00:38:41,400
能動推論分野の多くの人々にとっても、

1050
00:38:41,400 --> 00:38:44,520


1051
00:38:44,520 --> 00:38:49,380
理論というカテゴリから来たこれらの方法のような方法は、

1052
00:38:49,380 --> 00:38:52,140
ベイジアンでより顕著になったのはつい最近のことだと思います

1053
00:38:52,140 --> 00:38:54,960
少なくとも私たちがいる場所をモデリングしているので、ある

1054
00:38:54,960 --> 00:38:56,040
意味クールなつながりができています、

1055
00:38:56,040 --> 00:38:59,820
ええと、最初の最大のタッチポイントの1つは、行列に

1056
00:38:59,820 --> 00:39:02,099


1057
00:39:02,099 --> 00:39:03,900
ベクトルを乗算し

1058
00:39:03,900 --> 00:39:05,880
、それをエッジとして解釈するということであったと思います。

1059
00:39:05,880 --> 00:39:09,180


1060
00:39:09,180 --> 00:39:11,760
感覚観測に関する生成モデルの推論部分では、

1061
00:39:11,760 --> 00:39:13,920
私たちは常に

1062
00:39:13,920 --> 00:39:15,839
温度計の観測について話し、次に

1063
00:39:15,839 --> 00:39:18,599


1064
00:39:18,599 --> 00:39:22,040
その根底にある隠れた状態の温度について話します。そのため、そのケースを正確に説明できます。その

1065
00:39:22,040 --> 00:39:25,500
ため、

1066
00:39:25,500 --> 00:39:27,180
能動的な推論生成モデルの

1067
00:39:27,180 --> 00:39:29,339
知覚部分とアクション部分を表現できるのです。

1068
00:39:29,339 --> 00:39:31,920
行列の乗算に関して言えば、

1069
00:39:31,920 --> 00:39:35,040
生成モデルの Matlab コードが

1070
00:39:35,040 --> 00:39:37,740
ほとんど行列の乗算のように見えるのはそのためです。

1071
00:39:37,740 --> 00:39:40,260
すべてそのように明示的に行うことができます。その

1072
00:39:40,260 --> 00:39:44,060
ため、

1073
00:39:44,060 --> 00:39:47,280
そのフィードはどのように行われるのでしょうか。この機能を持たないモデルはあるのでしょうか

1074
00:39:47,280 --> 00:39:49,260


1075
00:39:49,260 --> 00:39:52,859
、あるいは、この機能を持たせることで何が得られるのでしょうか。

1076
00:39:52,859 --> 00:39:56,040


1077
00:39:56,040 --> 00:39:59,099
知覚とアクションを備えた

1078
00:39:59,099 --> 00:40:00,420


1079
00:40:00,420 --> 00:40:02,700
エージェント生成モデルのこの設定で、マトリックスとベクトルを

1080
00:40:02,700 --> 00:40:05,339
使用した感謝のアクションとして定義されたすべてのエッジのように、

1081
00:40:05,339 --> 00:40:08,460
一度のような、そうそう、それについて何か考えはありますが、

1082
00:40:08,460 --> 00:40:10,099


1083
00:40:10,099 --> 00:40:13,200
本質的にはグラフ構造のようなもの

1084
00:40:13,200 --> 00:40:15,960
だと思います。 これら

1085
00:40:15,960 --> 00:40:19,260
は何らかの方法で相互作用しています。つまり、

1086
00:40:19,260 --> 00:40:21,180


1087
00:40:21,180 --> 00:40:24,359


1088
00:40:24,359 --> 00:40:25,920
グラフ設定が適切かどうかをご存知の場合は、これらの頂点間に何らかの通信があります。

1089
00:40:25,920 --> 00:40:26,820


1090
00:40:26,820 --> 00:40:28,800
ええと、シェイクが

1091
00:40:28,800 --> 00:40:31,320
あなたに与えているもの、またはメッセージ パッシブ

1092
00:40:31,320 --> 00:40:35,240
モデルは本質的に次のようなものです。 これは、

1093
00:40:35,240 --> 00:40:38,280
その接続が

1094
00:40:38,280 --> 00:40:41,099
モデル内でどのような方法で明示されるべきか、または

1095
00:40:41,099 --> 00:40:42,720
その接続が情報を処理するためにどのような方法で使用されるべきかを表現しています。

1096
00:40:42,720 --> 00:40:44,700


1097
00:40:44,700 --> 00:40:46,680
ええと、この場合、

1098
00:40:46,680 --> 00:40:50,160
私は、線形マップのようなものがあると述べました。

1099
00:40:50,160 --> 00:40:51,900
あなたのタイプの

1100
00:40:51,900 --> 00:40:53,460
データまたはベクトル空間の場合、この

1101
00:40:53,460 --> 00:40:54,660
変換はある種の

1102
00:40:54,660 --> 00:40:56,160
線形マップになります

1103
00:40:56,160 --> 00:40:56,760


1104
00:40:56,760 --> 00:40:59,520
が、必ずしもそうである必要はありません。たとえば、

1105
00:40:59,520 --> 00:41:01,200


1106
00:41:01,200 --> 00:41:03,000
if のような非線形変換に進むことができます。

1107
00:41:03,000 --> 00:41:04,500
これが実際に一般的に起こっていることです。

1108
00:41:04,500 --> 00:41:06,060


1109
00:41:06,060 --> 00:41:07,500
あなたが隣人を持っているなら、

1110
00:41:07,500 --> 00:41:09,240
その隣人から来るメッセージは

1111
00:41:09,240 --> 00:41:12,119


1112
00:41:12,119 --> 00:41:14,460
あなたが望むあらゆる種類の変換によって変調される可能性があるので、それは

1113
00:41:14,460 --> 00:41:16,020
線形である可能性があります、非線形である可能

1114
00:41:16,020 --> 00:41:17,099


1115
00:41:17,099 --> 00:41:20,420
性があります、それはあなたが指定できるかわかりません

1116
00:41:20,420 --> 00:41:23,640
それは基本的には、でも本質的には、

1117
00:41:23,640 --> 00:41:25,500


1118
00:41:25,500 --> 00:41:27,540


1119
00:41:27,540 --> 00:41:30,180
誰が誰に通信すべきかを示す構造レベルがあると考えることができます。

1120
00:41:30,180 --> 00:41:31,380
そして、その上に、

1121
00:41:31,380 --> 00:41:33,180


1122
00:41:33,180 --> 00:41:36,480
これらのものがどのように正しく

1123
00:41:36,480 --> 00:41:38,339
通信されるべきかを示す、ある種のシフトであるセマンティクスが追加されます。 最初の

1124
00:41:38,339 --> 00:41:41,160
ことは、誰が通信すべきか、

1125
00:41:41,160 --> 00:41:43,380
何を通信すべきかであり、その後、

1126
00:41:43,380 --> 00:41:45,540
上にあるセマンティクスは、本質的に、

1127
00:41:45,540 --> 00:41:47,880
その

1128
00:41:47,880 --> 00:41:53,839
通信がどのように表現されるべきかを説明するものであり、本質的に

1129
00:41:54,300 --> 00:41:57,119
非常にクールです。マップは、変数

1130
00:41:57,119 --> 00:41:59,040
のスパース性について私たちが話し合っている方法とまったく同じだと思います。

1131
00:41:59,040 --> 00:42:01,740
変性モデル

1132
00:42:01,740 --> 00:42:05,099
なので、ここでメッセージパッシングを行うグラフ内のノードのトポロジーは、

1133
00:42:05,099 --> 00:42:06,660


1134
00:42:06,660 --> 00:42:08,880


1135
00:42:08,880 --> 00:42:11,220
エージェントと環境のように、または

1136
00:42:11,220 --> 00:42:12,660


1137
00:42:12,660 --> 00:42:15,300
知覚認知とアクションを含む生成モデルのように記述することになります。

1138
00:42:15,300 --> 00:42:17,060
多くの人が異なる提案をしています。

1139
00:42:17,060 --> 00:42:20,579


1140
00:42:20,579 --> 00:42:23,940
知覚認知アクションの統合モデリングの

1141
00:42:23,940 --> 00:42:26,760
ためのスパーシティ アーキテクチャです。そのため、一例としては、24 時間体制のようなものになります。

1142
00:42:26,760 --> 00:42:28,800
アクションが

1143
00:42:28,800 --> 00:42:30,420
環境に影響を与え、環境が知覚

1144
00:42:30,420 --> 00:42:32,400
に影響を与え、認識に戻ります。

1145
00:42:32,400 --> 00:42:35,240
自己ループ

1146
00:42:35,240 --> 00:42:36,960
ブランケットとさまざまな種類の

1147
00:42:36,960 --> 00:42:39,180
接続を追加して、

1148
00:42:39,180 --> 00:42:42,300
トポロジカルにスパーシティを定義します。 ここは

1149
00:42:42,300 --> 00:42:45,240
あなたがスタックを見せた場所で、あなたは

1150
00:42:45,240 --> 00:42:47,220
2 番目と 3 番目のレベルにいたのです。私はスタックのことを考えます。

1151
00:42:47,220 --> 00:42:51,300
その後、どのような流れになるのか、

1152
00:42:51,300 --> 00:42:54,900


1153
00:42:54,900 --> 00:42:58,380
そのエッジが実際にどのように動作するのかを説明する必要があります。それで、それは何ですか、それは何ですか、

1154
00:42:58,380 --> 00:43:03,000
それも何ですか 提供されているので、

1155
00:43:03,000 --> 00:43:05,220


1156
00:43:05,220 --> 00:43:07,140
その

1157
00:43:07,140 --> 00:43:09,060
エッジが実際に何かをするかどうかがわかっている極端なところまで進む可能性もあります。たとえば、

1158
00:43:09,060 --> 00:43:12,839


1159
00:43:12,839 --> 00:43:14,700


1160
00:43:14,700 --> 00:43:17,040
そのエッジに関連付けられた単なるゼロ行列である行列がある場合、単に

1161
00:43:17,040 --> 00:43:18,839
乗算するだけです ゼロか、

1162
00:43:18,839 --> 00:43:21,300
ゼロを与えるアイテムで、それは

1163
00:43:21,300 --> 00:43:22,980
基本的にそのエッジを

1164
00:43:22,980 --> 00:43:25,020
取り除くことはできないかのように剪定するようなものです。そのような

1165
00:43:25,020 --> 00:43:27,119
コミュニケーションが発生することは望ましくありませんが、

1166
00:43:27,119 --> 00:43:29,099


1167
00:43:29,099 --> 00:43:30,900
この種のセマンティクスが存在する場合には、ある種の可能性もあります それらは、

1168
00:43:30,900 --> 00:43:34,200
あなたが「OK」と言う構造レベルをオーバーライドします。

1169
00:43:34,200 --> 00:43:36,720


1170
00:43:36,720 --> 00:43:38,880
この他のエージェント担当者とコミュニケーションする必要はありません。

1171
00:43:38,880 --> 00:43:40,200
それはこの頂点が実際に何を意味するか、

1172
00:43:40,200 --> 00:43:42,300


1173
00:43:42,300 --> 00:43:44,880
そしてあなたがどのようなコンテキストでどのような

1174
00:43:44,880 --> 00:43:47,220
状況にあるかによって異なります。

1175
00:43:47,220 --> 00:43:49,859
ある種の選択的枝刈りを行うことができます。ここで、

1176
00:43:49,859 --> 00:43:52,680
これらの行列は、ええと、線形代数に依存します。

1177
00:43:52,680 --> 00:43:54,960


1178
00:43:54,960 --> 00:43:57,900
行列にはカーネルがあるので、

1179
00:43:57,900 --> 00:43:59,940
その行列がゼロに感知するすべてのものなので、

1180
00:43:59,940 --> 00:44:02,220
どのベクトルが正しくゼロに送信されるかはわかりませんが、

1181
00:44:02,220 --> 00:44:03,780
すべてが正しく送信されるわけではありません

1182
00:44:03,780 --> 00:44:05,540
あなたがゼロ マトリックスでない限り、ゼロに送信されるので、

1183
00:44:05,540 --> 00:44:08,160


1184
00:44:08,160 --> 00:44:10,680
近隣の特徴に応じて、いくつか

1185
00:44:10,680 --> 00:44:12,480
の近隣をゼロに送信することもできます。そうすることで、

1186
00:44:12,480 --> 00:44:14,400


1187
00:44:14,400 --> 00:44:16,680
方程式からそれらの近隣を削除することができ、

1188
00:44:16,680 --> 00:44:18,780
あなたがあなたであることを知ることができます。 はい、それらは違います。もう考慮されていません。

1189
00:44:18,780 --> 00:44:21,240
つまり、

1190
00:44:21,240 --> 00:44:23,280
これはある種のことです。これがスパース性を取得する方法であることはわかっています。おそらく、

1191
00:44:23,280 --> 00:44:24,900


1192
00:44:24,900 --> 00:44:27,119


1193
00:44:27,119 --> 00:44:29,880


1194
00:44:29,880 --> 00:44:32,880
入力またはデータの小さなサブセットのみが確実にわかっていることについても話していたのだと思います。 そうですね、

1195
00:44:32,880 --> 00:44:36,599
機能のサブセットだけが

1196
00:44:36,599 --> 00:44:38,040
実際に近隣間で何らかの意味のあることを行っており、

1197
00:44:38,040 --> 00:44:40,319


1198
00:44:40,319 --> 00:44:43,260
他のすべてはある意味ゼロ化されます、

1199
00:44:43,260 --> 00:44:45,720
そう、それは、影響を与える

1200
00:44:45,720 --> 00:44:48,480
ほとんどの変数を設定しようとするなげなわ回帰を思い出させます。

1201
00:44:48,480 --> 00:44:50,700
ゼロな

1202
00:44:50,700 --> 00:44:53,160
ので、重要だと思われる変数がいくつか

1203
00:44:53,160 --> 00:44:55,260
分析で実際に飛び出すだけでなく、

1204
00:44:55,260 --> 00:44:58,339


1205
00:44:58,339 --> 00:45:02,280
注意モデリングという新しいテクニックもあり、おそらくそれら

1206
00:45:02,280 --> 00:45:04,500
のうち 5 つを

1207
00:45:04,500 --> 00:45:06,420
1 に設定して、残りを 1 に設定して、

1208
00:45:06,420 --> 00:45:08,819
残りを 1 に設定するという単純な方法ではないかもしれません。 それらをゼロにするのは、より

1209
00:45:08,819 --> 00:45:12,060
微妙なニュアンスのようなものなので、

1210
00:45:12,060 --> 00:45:15,540
表現力の希薄さは基本的に

1211
00:45:15,540 --> 00:45:17,160
両方の長所だと思います。

1212
00:45:17,160 --> 00:45:18,720


1213
00:45:18,720 --> 00:45:20,339
エッジはあるが、そこに注がれている注意は

1214
00:45:20,339 --> 00:45:23,460
ゼロであるという状況を作りたいからです。機能的にはそうでは

1215
00:45:23,460 --> 00:45:25,980
ありません。 原則

1216
00:45:25,980 --> 00:45:27,480
としてエッジが存在するにもかかわらず、信念状態に関する最新情報がありません。その

1217
00:45:27,480 --> 00:45:29,400


1218
00:45:29,400 --> 00:45:31,380
ため、エージェントと同じように、自分が世界に影響を与えていると信じている状況をモデル化できますが、

1219
00:45:31,380 --> 00:45:33,540


1220
00:45:33,540 --> 00:45:35,520


1221
00:45:35,520 --> 00:45:37,020
実際には

1222
00:45:37,020 --> 00:45:39,119
原則としてエッジが存在するからといって、それが影響力を持っていることを意味するわけではありません。

1223
00:45:39,119 --> 00:45:41,760
これにより、

1224
00:45:41,760 --> 00:45:43,980
これらのモデルのような明確な表現が可能になり、因数

1225
00:45:43,980 --> 00:45:47,220
分解して、

1226
00:45:47,220 --> 00:45:50,579
解釈可能なモチーフを保持することができます。

1227
00:45:50,579 --> 00:45:52,260


1228
00:45:52,260 --> 00:45:56,579
ここでは、対象となるシステムの

1229
00:45:56,579 --> 00:45:59,339
動作知覚と認知

1230
00:45:59,339 --> 00:46:01,800
タイプを説明するモチーフの小さなクラスターを説明しますが、人々は

1231
00:46:01,800 --> 00:46:04,260
すでに暗黙のうちに信じています これを行うと、

1232
00:46:04,260 --> 00:46:06,720
よく形容詞を追加して

1233
00:46:06,720 --> 00:46:09,480
X 種類の能動推論を参照するようになります。

1234
00:46:09,480 --> 00:46:11,220
つまり、時間的地平線を使用した深い能動推論のようなものです。

1235
00:46:11,220 --> 00:46:13,020


1236
00:46:13,020 --> 00:46:15,119
この種のネストを使用した高度な能動推論

1237
00:46:15,119 --> 00:46:17,700
と、それらは特定の特徴を指しています

1238
00:46:17,700 --> 00:46:19,740
が、もちろんそれらの特徴は

1239
00:46:19,740 --> 00:46:23,460
私たちが考えているとおりです。 構成可能であることを望んでおり、

1240
00:46:23,460 --> 00:46:24,980


1241
00:46:24,980 --> 00:46:28,140
これにより、単なるアクション知覚モデリングよりもさらに一般的なツールが提供されるようです。これは、

1242
00:46:28,140 --> 00:46:30,780


1243
00:46:30,780 --> 00:46:33,119


1244
00:46:33,119 --> 00:46:34,980


1245
00:46:34,980 --> 00:46:36,599


1246
00:46:36,599 --> 00:46:39,859
対象となる特定のシステムよりも抽象化のレベルが低いためですが、これは機能し、

1247
00:46:39,859 --> 00:46:42,780
一種の時代を超越した考え方が機能するためです。 サイバネティック システムを中心に、

1248
00:46:42,780 --> 00:46:45,240


1249
00:46:45,240 --> 00:46:48,119


1250
00:46:48,119 --> 00:46:51,300
ベース グラフとしてアクティブな逆生成モデルを介して結合すると、

1251
00:46:51,300 --> 00:46:53,400
非常にエキサイティングになります。

1252
00:46:53,400 --> 00:46:55,800
そうそう、そしておそらく、

1253
00:46:55,800 --> 00:46:58,260
ここで強調しているのは、

1254
00:46:58,260 --> 00:47:00,660
この種のセマンティック レベルであっても、次のことを

1255
00:47:00,660 --> 00:47:03,359
行うことでいくつかのエッジを正しく取り除くことができるということです。 この

1256
00:47:03,359 --> 00:47:06,119
種の剪定は、取り除くことができないものは

1257
00:47:06,119 --> 00:47:09,420
計算なので、

1258
00:47:09,420 --> 00:47:11,599


1259
00:47:11,599 --> 00:47:15,000
構造グラフレベルでそれを強制されるものは、

1260
00:47:15,000 --> 00:47:16,619


1261
00:47:16,619 --> 00:47:19,440
正しい計算時間を何に費やすべきかを教えてくれるようなものです。

1262
00:47:19,440 --> 00:47:20,579


1263
00:47:20,579 --> 00:47:22,859


1264
00:47:22,859 --> 00:47:24,540
エッジを切り詰めるには、

1265
00:47:24,540 --> 00:47:27,119
計算時間がかかることがわかっているので、

1266
00:47:27,119 --> 00:47:28,800


1267
00:47:28,800 --> 00:47:31,560
自分が正しくない場合はすべての近隣を調べて、何を

1268
00:47:31,560 --> 00:47:33,180
証明するかを決定する必要があるか、あるいは、あなた以外のものを印刷し終えた可能性があります。

1269
00:47:33,180 --> 00:47:34,980


1270
00:47:34,980 --> 00:47:37,619
すべてのエッジを確認する必要があります。これを確認する 1 つの方法

1271
00:47:37,619 --> 00:47:40,140
は、グラフ

1272
00:47:40,140 --> 00:47:42,420
構造の種類が計算

1273
00:47:42,420 --> 00:47:46,740
グラフまたは計算の種類を定義します。そう、実行する必要がある一連の

1274
00:47:46,740 --> 00:47:48,540
計算ステップ、

1275
00:47:48,540 --> 00:47:50,280


1276
00:47:50,280 --> 00:47:52,020
そしてシフト構造の種類です。 メッセージパッシング

1277
00:47:52,020 --> 00:47:54,119
モデルは実際にこれらのステップが何であるかを指定しており、

1278
00:47:54,119 --> 00:47:56,160
ある特定の方法でそれらがまさに正確に見えることを知っています、

1279
00:47:56,160 --> 00:47:58,859


1280
00:47:58,859 --> 00:48:01,500
それでええと、それは1つのポイントであり、ええ、

1281
00:48:01,500 --> 00:48:02,880
注意についても言及しました、そして実際にそうです、

1282
00:48:02,880 --> 00:48:03,780


1283
00:48:03,780 --> 00:48:05,520
これは

1284
00:48:05,520 --> 00:48:07,980
実際に非常に関連しており、実際にあるので、そうしてくれてうれしいです ある

1285
00:48:07,980 --> 00:48:09,780
意味、注意よりも一般的なもので、

1286
00:48:09,780 --> 00:48:12,359
実際にこのスライドに戻ると、

1287
00:48:12,359 --> 00:48:14,880


1288
00:48:14,880 --> 00:48:19,200
これを確認するには良い方法かもしれません。それで、基本的に

1289
00:48:19,200 --> 00:48:21,060
注意で何が起こるかを説明します。えー、

1290
00:48:21,060 --> 00:48:22,680


1291
00:48:22,680 --> 00:48:25,260
ここで学んだこれらの行列を学習する代わりに、注意で

1292
00:48:25,260 --> 00:48:27,240
注意係数を学習します。 ここで、

1293
00:48:27,240 --> 00:48:29,280
注意係数であるスカラーを学習するだけです

1294
00:48:29,280 --> 00:48:31,980
どのくらいの注意を払う必要があるか

1295
00:48:31,980 --> 00:48:34,680
基本的に、この

1296
00:48:34,680 --> 00:48:37,140
全体的なエッジはよくご存知でしょう。どれが単なる

1297
00:48:37,140 --> 00:48:39,240
スカラーであるとしましょう。私たちが行うことは

1298
00:48:39,240 --> 00:48:40,619
もう少し複雑です。なぜなら、

1299
00:48:40,619 --> 00:48:43,140
変換方法を学習するだけだからです。 これらの隣接するもの

1300
00:48:43,140 --> 00:48:44,880
なので、

1301
00:48:44,880 --> 00:48:47,280
単一のスカラーではなく、マトリックス全体のようなものです。

1302
00:48:47,280 --> 00:48:49,020
うーん、でも、微妙な

1303
00:48:49,020 --> 00:48:51,599
違いもいくつかありますが、フォローアップの

1304
00:48:51,599 --> 00:48:53,579
作業で、これを注意と組み合わせて、

1305
00:48:53,579 --> 00:48:56,339
もう少し

1306
00:48:56,339 --> 00:48:57,839
一般的で、ええと、

1307
00:48:57,839 --> 00:49:00,359
それについても検討しました。 これも非常にうまく機能しました

1308
00:49:00,359 --> 00:49:03,000
が、基本的なアイデアの種類は

1309
00:49:03,000 --> 00:49:05,760
非常に似ており、情報自体に

1310
00:49:05,760 --> 00:49:08,339
基づいて情報を変換する方法を調整したい

1311
00:49:08,339 --> 00:49:10,500
ので、必要に応じて、

1312
00:49:10,500 --> 00:49:12,660
このような 1 つのレベルの

1313
00:49:12,660 --> 00:49:14,760
再帰性を持たせることができます。

1314
00:49:14,760 --> 00:49:17,579
また、

1315
00:49:17,579 --> 00:49:19,260
能動的推論でそれが起こることを知っているという点でもほのめかしていますが、

1316
00:49:19,260 --> 00:49:22,800
大丈夫、あなたはあなたです、だから私が V ではない場合、

1317
00:49:22,800 --> 00:49:25,020
正しい私の隣人、それにはいくつかの

1318
00:49:25,020 --> 00:49:27,780
特徴があり、これらの特徴に基づいて

1319
00:49:27,780 --> 00:49:30,780
XU を実行します。 ここで

1320
00:49:30,780 --> 00:49:32,819
X を処理するために使用される行列を見つけます。

1321
00:49:32,819 --> 00:49:34,740
これは非常に

1322
00:49:34,740 --> 00:49:36,540
再帰的であり、ノード U

1323
00:49:36,540 --> 00:49:38,640
の特徴に基づいて注意が正しく行われると何が起こります。

1324
00:49:38,640 --> 00:49:41,160


1325
00:49:41,160 --> 00:49:43,619


1326
00:49:43,619 --> 00:49:45,540
これに適用する注意係数を計算します。 機能はここにありますね、

1327
00:49:45,540 --> 00:49:47,760
この機能に基づいてどの程度

1328
00:49:47,760 --> 00:49:49,800
注意を払うべきかを決定します

1329
00:49:49,800 --> 00:49:51,540
えーと、そしてここで、

1330
00:49:51,540 --> 00:49:54,660
それをより一般的に処理する方法を決定します えー、線形的な

1331
00:49:54,660 --> 00:49:55,859
方法で、

1332
00:49:55,859 --> 00:49:58,859
えー、この種のループ性の

1333
00:49:58,859 --> 00:50:02,598
構造が埋め込まれています

1334
00:50:02,880 --> 00:50:04,920


1335
00:50:04,920 --> 00:50:06,420


1336
00:50:06,420 --> 00:50:07,440
素晴らしい作品がたくさんあると思うので、さらにいくつかのポイントを取り上げます。

1337
00:50:07,440 --> 00:50:10,200


1338
00:50:10,200 --> 00:50:12,119
最近

1339
00:50:12,119 --> 00:50:14,160
ライブストリーム 54 で博士論文について議論したトビー・シンクレア・スミスが、

1340
00:50:14,160 --> 00:50:15,960


1341
00:50:15,960 --> 00:50:19,099


1342
00:50:19,099 --> 00:50:22,560
構成認知地図作成法を表現する用語またはリサの表現を導入し、

1343
00:50:22,560 --> 00:50:24,540


1344
00:50:24,540 --> 00:50:27,000
認知の構成性について考えました。 マッピング

1345
00:50:27,000 --> 00:50:30,380
は、ある種のアーキテクチャの低次元の特別なケースの

1346
00:50:30,380 --> 00:50:33,660


1347
00:50:33,660 --> 00:50:35,940
ように表現される、今日有名に

1348
00:50:35,940 --> 00:50:37,880
知られている種類の注意メカニズムよりも一般的であるというこの概念でここで説明されている

1349
00:50:37,880 --> 00:50:40,619
ものは、

1350
00:50:40,619 --> 00:50:43,680


1351
00:50:43,680 --> 00:50:45,420


1352
00:50:45,420 --> 00:50:47,099


1353
00:50:47,099 --> 00:50:50,040
ベイジアン グラフがどのように機能するかを考えさせます。 これは原理的には一種の意味論的であり

1354
00:50:50,040 --> 00:50:51,720


1355
00:50:51,720 --> 00:50:53,460
、これらの優れた

1356
00:50:53,460 --> 00:50:56,760
カテゴリ形式主義をすべて含めることができますが、

1357
00:50:56,760 --> 00:50:57,960


1358
00:50:57,960 --> 00:51:00,180


1359
00:51:00,180 --> 00:51:02,579
pre-shief と Sheaf を使用して経験的データへのコネクタを構築することもできます。これは、

1360
00:51:02,579 --> 00:51:05,339


1361
00:51:05,339 --> 00:51:07,920
データ分析を行っている多くの経験的研究者にとってもニュースになる可能性があります。

1362
00:51:07,920 --> 00:51:10,619
確かに私にとってはそうでしたが、

1363
00:51:10,619 --> 00:51:13,500
メッセージ パッシングは、

1364
00:51:13,500 --> 00:51:16,020


1365
00:51:16,020 --> 00:51:18,660
トポロジカルに提案されたセマンティック モデルを、

1366
00:51:18,660 --> 00:51:22,859


1367
00:51:22,859 --> 00:51:25,319


1368
00:51:25,319 --> 00:51:27,960
線形時間内、または少なくとも

1369
00:51:27,960 --> 00:51:29,819
定義可能な特性で計画および実行できる実装手順に厳密に変換するため、

1370
00:51:29,819 --> 00:51:32,040
メッセージ パッシングは、次のステップに進む上で非常に重要な役割を果たします。

1371
00:51:32,040 --> 00:51:34,440
抽象的なものと同様に、

1372
00:51:34,440 --> 00:51:37,140


1373
00:51:37,140 --> 00:51:39,900
これらの実際のモデルの実装で何が可能であり、

1374
00:51:39,900 --> 00:51:42,359
それは非常に一般的な方法で行われます。私たちが勝ったため、

1375
00:51:42,359 --> 00:51:44,880


1376
00:51:44,880 --> 00:51:47,339


1377
00:51:47,339 --> 00:51:49,559
メッセージパッシング互換の

1378
00:51:49,559 --> 00:51:52,740
生成モデルを使用した実装がより適切に展開されることを期待していると言うのは正確ですか？

1379
00:51:52,740 --> 00:51:54,420


1380
00:51:54,420 --> 00:51:56,280


1381
00:51:56,280 --> 00:51:59,160


1382
00:51:59,160 --> 00:52:00,859
再利用性の低い

1383
00:52:00,859 --> 00:52:04,819
抽象化が伴う可能性のあるエンジニアリング上の課題がいくつか

1384
00:52:05,099 --> 00:52:08,040
あると言うのは難しいですが、このパラダイムにも

1385
00:52:08,040 --> 00:52:09,839
確かにいくつかの制限があると思いますので、

1386
00:52:09,839 --> 00:52:11,940


1387
00:52:11,940 --> 00:52:14,640


1388
00:52:14,640 --> 00:52:17,040
あなたが言及していたこの種のメッセージパッシングのようなものを行うのは、

1389
00:52:17,040 --> 00:52:18,960
1つのことです

1390
00:52:18,960 --> 00:52:21,720


1391
00:52:21,720 --> 00:52:24,359
グラフのサイズに比例するように、非常に簡単にスケールアップできますが、それには

1392
00:52:24,359 --> 00:52:26,760
代償も伴います。そのため、

1393
00:52:26,760 --> 00:52:29,040
これには表現力の限界があることを示す特定の結果があります。

1394
00:52:29,040 --> 00:52:30,720


1395
00:52:30,720 --> 00:52:34,200
つまり、実際にこれを超えたい場合は、次のようにする必要があります。

1396
00:52:34,200 --> 00:52:37,619


1397
00:52:37,619 --> 00:52:39,540
単にノードのペアを見るのではなく、

1398
00:52:39,540 --> 00:52:42,300
タプルや、

1399
00:52:42,300 --> 00:52:44,880
この種の高次のノードのグループ分けを調べなければなりません。

1400
00:52:44,880 --> 00:52:46,260


1401
00:52:46,260 --> 00:52:48,900


1402
00:52:48,900 --> 00:52:50,700
排他性を高めるためには、それを実現するためのあらゆる種類のテクニックがあります。

1403
00:52:50,700 --> 00:52:52,680


1404
00:52:52,680 --> 00:52:54,540
でも、はい、常にこれがあります。

1405
00:52:54,540 --> 00:52:56,220


1406
00:52:56,220 --> 00:52:58,020
表現力を高めることと

1407
00:52:58,020 --> 00:53:00,359
効率的であることの間にある種の緊張感は、

1408
00:53:00,359 --> 00:53:03,540
どのような種類のアルゴリズムやメソッドにも常に存在することはわかっていますが、

1409
00:53:03,540 --> 00:53:04,859


1410
00:53:04,859 --> 00:53:05,520


1411
00:53:05,520 --> 00:53:08,640
まあ、そう言うのは難しいですね、つまり、

1412
00:53:08,640 --> 00:53:10,380


1413
00:53:10,380 --> 00:53:12,180
これはある種の究極の

1414
00:53:12,180 --> 00:53:14,160
解決策ではないということは間違いなく言えます たとえば、メッセージの受け渡し自体をやりたい場合は、それ自体は

1415
00:53:14,160 --> 00:53:15,839


1416
00:53:15,839 --> 00:53:17,280
わかっていますが、グラフ上で何らかの計算を実行している

1417
00:53:17,280 --> 00:53:20,579


1418
00:53:20,579 --> 00:53:23,540
可能性があることはわかっていますが、

1419
00:53:24,180 --> 00:53:27,240
おそらく、グラフの

1420
00:53:27,240 --> 00:53:28,500


1421
00:53:28,500 --> 00:53:30,660
種類で少し欠けているものもあります。

1422
00:53:30,660 --> 00:53:33,420
メール設定は、

1423
00:53:33,420 --> 00:53:36,420
グラフがどのような状況であるかを知っています、

1424
00:53:36,420 --> 00:53:37,559


1425
00:53:37,559 --> 00:53:40,319
グラフが既知であると仮定しています、

1426
00:53:40,319 --> 00:53:44,880
そして、

1427
00:53:44,880 --> 00:53:46,680
少なくとも正しく構築するための賢明な方法であるグラフ構造が必要であることはわかっていますが、

1428
00:53:46,680 --> 00:53:48,960


1429
00:53:48,960 --> 00:53:51,240
その他のさまざまな用途のために、

1430
00:53:51,240 --> 00:53:52,260
ええと、

1431
00:53:52,260 --> 00:53:54,619
私は

1432
00:53:54,619 --> 00:53:57,960
もっと明らかにわかりませんが、

1433
00:53:57,960 --> 00:54:00,420


1434
00:54:00,420 --> 00:54:02,220
私が現実世界の知覚を行うエージェントである場合は大丈夫、

1435
00:54:02,220 --> 00:54:03,780
または世界

1436
00:54:03,780 --> 00:54:05,339


1437
00:54:05,339 --> 00:54:07,740
のグラフを作成しようとしている場合など、それほど明確ではないが、私がそのような表現をしていると思います。

1438
00:54:07,740 --> 00:54:10,319


1439
00:54:10,319 --> 00:54:12,599
オブジェクトとは何ですか、何を

1440
00:54:12,599 --> 00:54:14,880
作成しますか、何のためにメモを作成しますか、

1441
00:54:14,880 --> 00:54:16,740
1 つのメモまたはオブジェクトが必要で、

1442
00:54:16,740 --> 00:54:18,000


1443
00:54:18,000 --> 00:54:19,559
オブジェクトとそのようなものの間にいくつかのつながりがある場合は、

1444
00:54:19,559 --> 00:54:21,839
それがいくつかのワイルドな例のようなものであることはわかっています。

1445
00:54:21,839 --> 00:54:23,280


1446
00:54:23,280 --> 00:54:25,020
ええと、実際にそれをやりたい場合はカスタムアイテムです

1447
00:54:25,020 --> 00:54:26,760
が、すぐにやりたいとしましょう。

1448
00:54:26,760 --> 00:54:29,099
その場合、

1449
00:54:29,099 --> 00:54:31,559
何がオブジェクトで何が

1450
00:54:31,559 --> 00:54:33,119
オブジェクトではないかなど、この種の曖昧なものもすべてあります。その中間のようなものは何か、

1451
00:54:33,119 --> 00:54:35,220
おそらくあなたは知ってい

1452
00:54:35,220 --> 00:54:37,319
ますか？ ノードはそれなので、

1453
00:54:37,319 --> 00:54:39,059
グラフ

1454
00:54:39,059 --> 00:54:40,740
構造は非常に控えめだと言いたいのと同じようなものです。

1455
00:54:40,740 --> 00:54:42,540
ノードが存在しないか、

1456
00:54:42,540 --> 00:54:44,220
エッジが存在するか、

1457
00:54:44,220 --> 00:54:46,020
存在しないかのどちらかです。しかし、世界は

1458
00:54:46,020 --> 00:54:48,300
ある種のものです。 本当に曖昧ですので、

1459
00:54:48,300 --> 00:54:51,540
グラフを世界のモデルとして使用する場合、

1460
00:54:51,540 --> 00:54:54,300
おそらく

1461
00:54:54,300 --> 00:54:56,400


1462
00:54:56,400 --> 00:54:59,819
この種の曖昧な概念についてどこかで何らかの決定を下す必要があります。ええと、

1463
00:54:59,819 --> 00:55:01,740
実際にはオブジェクトやエッジなどの具体的なグラフ エンティティに変換されます。

1464
00:55:01,740 --> 00:55:03,119


1465
00:55:03,119 --> 00:55:06,180
それは何でも、ええと、あなたはある種の推論手順を知っていますが、それに基づいて、

1466
00:55:06,180 --> 00:55:09,240


1467
00:55:09,240 --> 00:55:11,640
私たちがそれをしたかどうかはわかりません、それはある種の

1468
00:55:11,640 --> 00:55:13,859


1469
00:55:13,859 --> 00:55:16,140
知的なエージェントのようにユーモラスです、ええと、それはあなたが

1470
00:55:16,140 --> 00:55:18,540
知っている、考えるべきいくつかの興味深いことです

1471
00:55:18,540 --> 00:55:20,400
もしかしたら、

1472
00:55:20,400 --> 00:55:22,260


1473
00:55:22,260 --> 00:55:23,940
ソフト エッジなどのようなものもあるということを解決する 1 つの方法も考えられます。

1474
00:55:23,940 --> 00:55:25,920
ある意味では、

1475
00:55:25,920 --> 00:55:28,079
注意係数があるかどうかを知ることは、

1476
00:55:28,079 --> 00:55:30,180
エッジの

1477
00:55:30,180 --> 00:55:33,599
重みが 0.001 であるかどうかを知るのと似ています。 または何か、

1478
00:55:33,599 --> 00:55:35,579
ほとんどそこに存在していないようなものですが、

1479
00:55:35,579 --> 00:55:38,880
それはまだある種の存在であることがわかっているので、

1480
00:55:38,880 --> 00:55:40,800
それは少しソフトなグラフアーキテクチャであることはわかっていますが、

1481
00:55:40,800 --> 00:55:43,800


1482
00:55:43,800 --> 00:55:45,119
エッジレベルではこのソフトさを実装できると思いますが、

1483
00:55:45,119 --> 00:55:47,339
それは少し難しいと思います

1484
00:55:47,339 --> 00:55:49,859
ある種のノートレベルで、ああ、

1485
00:55:49,859 --> 00:55:52,079


1486
00:55:52,079 --> 00:55:53,640
そこにあるノードとそこにないノードをどのようにモデル化するのですか、

1487
00:55:53,640 --> 00:55:55,079
ええと、

1488
00:55:55,079 --> 00:55:57,540


1489
00:55:57,540 --> 00:56:00,000
あいまいな

1490
00:56:00,000 --> 00:56:01,920
オブジェクトの識別と、ノードとエッジ間の

1491
00:56:01,920 --> 00:56:03,420
類似点と相違点について非常に興味深いいくつかのランダムな考えがあります。

1492
00:56:03,420 --> 00:56:07,380
ただし、いくつかの点で

1493
00:56:07,380 --> 00:56:10,020
類似点もありますが、もう

1494
00:56:10,020 --> 00:56:12,059


1495
00:56:12,059 --> 00:56:15,119
1 つの接点との相互運用性は、さまざまな場所からベクトル空間を投影するトポロジー的に理解される、基礎となる隠れた空間のようなものでした。

1496
00:56:15,119 --> 00:56:18,960


1497
00:56:18,960 --> 00:56:21,359


1498
00:56:21,359 --> 00:56:24,300


1499
00:56:24,300 --> 00:56:26,940
したがって、それが

1500
00:56:26,940 --> 00:56:30,420
温度計の測定値のベクトルである可能性があり、それが

1501
00:56:30,420 --> 00:56:33,119
必要になります。 境界まで定義されたホメオスタシス範囲内で滑らかなパスを持つこと

1502
00:56:33,119 --> 00:56:34,920


1503
00:56:34,920 --> 00:56:37,680


1504
00:56:37,680 --> 00:56:39,720
それが世界の構造であるということではありませんが、

1505
00:56:39,720 --> 00:56:41,640
非常に

1506
00:56:41,640 --> 00:56:45,599
ヒューリスティックで単純なモデルの構造は、

1507
00:56:45,599 --> 00:56:48,540
連続性を目指して

1508
00:56:48,540 --> 00:56:49,859
状態空間に定義された隠れたものを持つことかもしれません

1509
00:56:49,859 --> 00:56:51,839
根底には連続性があり

1510
00:56:51,839 --> 00:56:55,619
、ベクトルを出力できるので、

1511
00:56:55,619 --> 00:56:58,140


1512
00:56:58,140 --> 00:57:01,079
あなたが提起したこれらの分類子タイプの議論のいくつかをもたらし、幾何学的分類

1513
00:57:01,079 --> 00:57:03,359
の基本的な不可能性のようなものです。

1514
00:57:03,359 --> 00:57:05,940


1515
00:57:05,940 --> 00:57:07,440


1516
00:57:07,440 --> 00:57:10,380
少し賢明な

1517
00:57:10,380 --> 00:57:13,339
説明では、ネットワークを分離して、

1518
00:57:13,339 --> 00:57:15,900
実際の完全性の尺度を提供し、計算リソース

1519
00:57:15,900 --> 00:57:17,160


1520
00:57:17,160 --> 00:57:19,380


1521
00:57:19,380 --> 00:57:21,480
の量を意味する

1522
00:57:21,480 --> 00:57:23,400
か、ベイズ情報

1523
00:57:23,400 --> 00:57:24,900
基準のような統計原理に近い方法で尺度を測定できるようにすることができます。

1524
00:57:24,900 --> 00:57:27,119
したがって、

1525
00:57:27,119 --> 00:57:28,800
ノードの数はいくつ

1526
00:57:28,800 --> 00:57:30,839
あるべきか

1527
00:57:30,839 --> 00:57:33,599
あるモデリング空間における何らかのトレードオフの面で、

1528
00:57:33,599 --> 00:57:34,800
これは領土ではなく地図であることを何と言えばいいのかわかりません。それは、その方がより

1529
00:57:34,800 --> 00:57:37,020


1530
00:57:37,020 --> 00:57:40,500
正当であるからです。したがって、

1531
00:57:40,500 --> 00:57:42,240
生きているような有機体でさえ、

1532
00:57:42,240 --> 00:57:43,800


1533
00:57:43,800 --> 00:57:48,119
生きた状態から放射され続けていることを自己証明したいかもしれません。

1534
00:57:48,119 --> 00:57:50,359
これは、サイバネティック システムに非常にシンプルなグラフィック アーキテクチャを提供し

1535
00:57:50,359 --> 00:57:54,660


1536
00:57:54,660 --> 00:57:56,819
、その後、能動的推論によって、

1537
00:57:56,819 --> 00:57:59,160


1538
00:57:59,160 --> 00:58:01,079


1539
00:58:01,079 --> 00:58:04,380
その広範な包括的な永続性の全体

1540
00:58:04,380 --> 00:58:07,680
像と最小アクションの経路内で、さまざまなより具体的なモチーフを探索します。

1541
00:58:07,680 --> 00:58:10,500
これが、その空間での物理学を可能にし

1542
00:58:10,500 --> 00:58:13,440
、なぜこれらの方法がこれまでのところ可能であるのかを探ります。

1543
00:58:13,440 --> 00:58:15,300
私が理解しているように、これは量子力学でよく使用されるか、

1544
00:58:15,300 --> 00:58:17,880


1545
00:58:17,880 --> 00:58:21,240


1546
00:58:21,240 --> 00:58:23,460
この方法で能動推論を組み合わせることができるということです、

1547
00:58:23,460 --> 00:58:27,000
そうですね、

1548
00:58:27,000 --> 00:58:28,559
これについて言及すると頭に浮かぶことがいくつかありますが、

1549
00:58:28,559 --> 00:58:30,780


1550
00:58:30,780 --> 00:58:33,599
この分野では最近のアベニール研究のようなものもあると思います。

1551
00:58:33,599 --> 00:58:36,180


1552
00:58:36,180 --> 00:58:38,220


1553
00:58:38,220 --> 00:58:40,740
事前にグラフを知らないという事実によって何

1554
00:58:40,740 --> 00:58:42,599
度も生成されますが、昔ながらの

1555
00:58:42,599 --> 00:58:45,299
アプローチが良かったと思います。あなたと同じように、

1556
00:58:45,299 --> 00:58:47,099
いくつかのルールに基づいてグラフを構築します。あなた

1557
00:58:47,099 --> 00:58:49,500
はこれらすべてを言うつもりです。私はそうではありません

1558
00:58:49,500 --> 00:58:51,480
いくつかのものが似ていることを知っています 私は

1559
00:58:51,480 --> 00:58:53,400
それらの間にエッジを置きます、そして

1560
00:58:53,400 --> 00:58:55,140
あなたは好きな場所で同様に定義します、などなど

1561
00:58:55,140 --> 00:58:56,160


1562
00:58:56,160 --> 00:58:58,740
えーっと、最近の

1563
00:58:58,740 --> 00:59:00,480
傾向では、あなたがやろうとしているのは

1564
00:59:00,480 --> 00:59:03,119
潜在的なグラフ推論か何かです

1565
00:59:03,119 --> 00:59:05,099


1566
00:59:05,099 --> 00:59:07,440
グラフをある種の多様体として考えると、人々はそれを多様体学習と呼びますが、

1567
00:59:07,440 --> 00:59:09,000
この種の非常に非公式な

1568
00:59:09,000 --> 00:59:10,859
言い方で、

1569
00:59:10,859 --> 00:59:12,780
本質的にあなたが行うことは、

1570
00:59:12,780 --> 00:59:15,299


1571
00:59:15,299 --> 00:59:17,700
生の観察を学習しようとするあらゆるものを

1572
00:59:17,700 --> 00:59:20,579
潜在空間にマッピングするようなものです。

1573
00:59:20,579 --> 00:59:21,960
実際にグラフを構築します。

1574
00:59:21,960 --> 00:59:23,520


1575
00:59:23,520 --> 00:59:26,160
あなたが知っている生の空間ではなく、

1576
00:59:26,160 --> 00:59:28,740
潜在空間でグラフを構築します。そのため、

1577
00:59:28,740 --> 00:59:32,400
ファジーに対処する一種の方法になる可能性があります。

1578
00:59:32,400 --> 00:59:35,099


1579
00:59:35,099 --> 00:59:36,839


1580
00:59:36,839 --> 00:59:38,460
このような非常に具体的な

1581
00:59:38,460 --> 00:59:40,079
1 対 1 のマッピングです。

1582
00:59:40,079 --> 00:59:42,000
潜在空間で、おそらく

1583
00:59:42,000 --> 00:59:43,440
3 つまたは 4 つの概念に対応する音符を学習する可能性があるからです。

1584
00:59:43,440 --> 00:59:46,559


1585
00:59:46,559 --> 00:59:48,319
つまり、この種の

1586
00:59:48,319 --> 00:59:52,319
ニューロンを使った素敵な実験がすべて行われているのです。

1587
00:59:52,319 --> 00:59:54,540
ネットワークはある種視覚化されており、

1588
00:59:54,540 --> 00:59:57,059
おそらく概念の混合のようなものを学習していることがわかります。

1589
00:59:57,059 --> 00:59:59,220
たとえば、

1590
00:59:59,220 --> 01:00:01,380
実際に何がニューロンを活性化しているのかを見てみると、実際には

1591
01:00:01,380 --> 01:00:03,420
いくつかの

1592
01:00:03,420 --> 01:00:05,339
クラスやさまざまな種類のものであることがわかりますが、

1593
01:00:05,339 --> 01:00:07,559
必ずしも 1 つのものではありません

1594
01:00:07,559 --> 01:00:08,339
。

1595
01:00:08,339 --> 01:00:10,020
したがって、これは非常によく似たものになる可能性があります。

1596
01:00:10,020 --> 01:00:13,020
非常に絡み合った

1597
01:00:13,020 --> 01:00:15,180
表現が

1598
01:00:15,180 --> 01:00:17,819
この潜在グラフに蒸留され、

1599
01:00:17,819 --> 01:00:20,579


1600
01:00:20,579 --> 01:00:22,319
潜在空間のようなものであっても、ある意味で少なくとも連携して滞在します。

1601
01:00:22,319 --> 01:00:24,299
あなたの生の観察のようなもの

1602
01:00:24,299 --> 01:00:26,940
に関して、あなたがよく知っている明確な組み合わせ構造、

1603
01:00:26,940 --> 01:00:30,299


1604
01:00:30,299 --> 01:00:33,780
ええと、その構造のようなものは、

1605
01:00:33,780 --> 01:00:35,220


1606
01:00:35,220 --> 01:00:37,200


1607
01:00:37,200 --> 01:00:39,180


1608
01:00:39,180 --> 01:00:42,299
同じノードで蒸留された概念のこの種の混合物があるため、世界のあいまいさをある程度までコード化することができます あるいは

1609
01:00:42,299 --> 01:00:44,040
そのようなもの、あるいはいくつかのコンセプトは

1610
01:00:44,040 --> 01:00:46,380
複数のノードで表すことができるかもしれません。

1611
01:00:46,380 --> 01:00:48,240


1612
01:00:48,240 --> 01:00:49,680
このコンセプトをどのように見るかによって、あらゆる種類

1613
01:00:49,680 --> 01:00:51,839
のバリエーション、コンセプト、

1614
01:00:51,839 --> 01:00:53,579
視点などが存在する可能性があります。それで、

1615
01:00:53,579 --> 01:00:55,260
潜在的なことはご存知だと思います。 グラフ

1616
01:00:55,260 --> 01:00:58,140
推論は、ええと、

1617
01:00:58,140 --> 01:00:59,760


1618
01:00:59,760 --> 01:01:01,079


1619
01:01:01,079 --> 01:01:02,940
私たちが議論していた問題のいくつかに対処するための非常に興味深い方法かもしれませんが、

1620
01:01:02,940 --> 01:01:05,579


1621
01:01:05,579 --> 01:01:08,280
少なくとも私が見た限りでは、それはここ数年で少し消滅したように思いますが、

1622
01:01:08,280 --> 01:01:10,440
あなたが

1623
01:01:10,440 --> 01:01:12,900
知っている論文は少し少ないです

1624
01:01:12,900 --> 01:01:14,099


1625
01:01:14,099 --> 01:01:15,839
ええと、このテーマについてです うーん、

1626
01:01:15,839 --> 01:01:18,920
確かにエージェントは

1627
01:01:18,920 --> 01:01:21,119
世界の潜在的な構造を提案しました 世界の

1628
01:01:21,119 --> 01:01:23,099
因果構造は

1629
01:01:23,099 --> 01:01:25,740
領域ではなく単なる地図であり、したがっておそらく

1630
01:01:25,740 --> 01:01:28,079
それらの核となるスクリーニングのいくつかが可能になります

1631
01:01:28,079 --> 01:01:29,339
えー、スライドに行ってもらえますか

1632
01:01:29,339 --> 01:01:31,140
滑らかな球体

1633
01:01:31,140 --> 01:01:34,520
と通常の幾何学的形状の間にマッピングがあった場所です。

1634
01:01:34,520 --> 01:01:37,319
ええと、

1635
01:01:37,319 --> 01:01:39,119


1636
01:01:39,119 --> 01:01:42,540
これを見てみましょう。ええ、

1637
01:01:42,540 --> 01:01:45,480
1 点だけ確認しておきたいのですが、あなたが説明しているいくつかの関係性の中心に何かコメントがあるかどうかを確認してください。

1638
01:01:45,480 --> 01:01:47,460


1639
01:01:47,460 --> 01:01:49,799
そして、

1640
01:01:49,799 --> 01:01:51,960
あなたが戻って一般化の観点から親切にすることは、

1641
01:01:51,960 --> 01:01:54,299


1642
01:01:54,299 --> 01:01:55,980


1643
01:01:55,980 --> 01:01:58,440
球体と幾何学の間のこの関係を理解するのに役立ちます、そして

1644
01:01:58,440 --> 01:02:00,780


1645
01:02:00,780 --> 01:02:03,240
それと

1646
01:02:03,240 --> 01:02:05,460
データ処理とすべて

1647
01:02:05,460 --> 01:02:09,059
の計算科学分野への影響は、

1648
01:02:09,059 --> 01:02:12,420
あなたが保存したり学習したりしているかどうかを理解するのに役立ちます

1649
01:02:12,420 --> 01:02:15,599
ジオメトリは解析するがトポロジは解析しない、またはその

1650
01:02:15,599 --> 01:02:17,819
逆の場合は、コーヒー カップのトポロジがあるかもしれないが、まったく異なるものに見えるように、

1651
01:02:17,819 --> 01:02:20,099
データ セットの異常のような異なる結果が得られる可能性があります

1652
01:02:20,099 --> 01:02:21,660


1653
01:02:21,660 --> 01:02:23,880


1654
01:02:23,880 --> 01:02:25,140


1655
01:02:25,140 --> 01:02:27,180
。したがって、私たちが本当にやりたいのは、

1656
01:02:27,180 --> 01:02:29,220
その関係を理解することです。

1657
01:02:29,220 --> 01:02:32,220
ジオメトリとトポロジーの間について

1658
01:02:32,220 --> 01:02:34,079
は、

1659
01:02:34,079 --> 01:02:35,400
左側にあるように原理的に理解して、

1660
01:02:35,400 --> 01:02:38,760
実際に

1661
01:02:38,760 --> 01:02:41,520
右側にデータスキームを使用するか、

1662
01:02:41,520 --> 01:02:44,400
そこに独自の左側と右側を挿入することができれば、次のことが

1663
01:02:44,400 --> 01:02:47,359
できるでしょう。

1664
01:02:47,359 --> 01:02:50,760
スラッシュを尊重した方法でのデータ分析により、

1665
01:02:50,760 --> 01:02:52,680


1666
01:02:52,680 --> 01:02:55,799
トポロジとジオメトリの両方が保存されるため、

1667
01:02:55,799 --> 01:02:57,960


1668
01:02:57,960 --> 01:03:00,000
長所

1669
01:03:00,000 --> 01:03:02,720
と短所、ヒューリスティックなどの異なる2つの互換性のある視点のようなものになり、

1670
01:03:02,720 --> 01:03:05,780


1671
01:03:05,780 --> 01:03:09,059
ジオメトリとトポロジの関係や

1672
01:03:09,059 --> 01:03:11,579
、

1673
01:03:11,579 --> 01:03:13,799
ジオメトリが必要とする暗黙的な空間などを理解できるようになります。

1674
01:03:13,799 --> 01:03:17,460
これは多大な用途があり

1675
01:03:17,460 --> 01:03:18,780


1676
01:03:18,780 --> 01:03:21,359
、最後に

1677
01:03:21,359 --> 01:03:24,420
バックミンスター フラーの相乗効果を思い出させます。これは

1678
01:03:24,420 --> 01:03:26,460
最密充填

1679
01:03:26,460 --> 01:03:29,160
アーキテクチャと座標の四面体中心

1680
01:03:29,160 --> 01:03:31,319
モデルを使用して、

1681
01:03:31,319 --> 01:03:34,380


1682
01:03:34,380 --> 01:03:37,260
表面積と体積の間、および滑らかな

1683
01:03:37,260 --> 01:03:39,180
表面とその上の大円の間の連続性をさらに高めます

1684
01:03:39,180 --> 01:03:41,099
。 形状上の接続点のようなものな

1685
01:03:41,099 --> 01:03:43,319
ので、これは

1686
01:03:43,319 --> 01:03:46,559
本当に根本的な影響を与える信じられないほど深い領域だと思います 非アクティブな

1687
01:03:46,559 --> 01:03:49,319
推論は、

1688
01:03:49,319 --> 01:03:51,720


1689
01:03:51,720 --> 01:03:54,599
膨らんだ風船のようなもので、

1690
01:03:54,599 --> 01:03:58,440
曖昧さ、アーキテクチャ、

1691
01:03:58,440 --> 01:04:00,900
そして

1692
01:04:00,900 --> 01:04:02,760
それが実際にもたらす有限性を使ってモデルについて考えるのに役立ちます 能動的推論には多くのことが必要です。

1693
01:04:02,760 --> 01:04:04,619
それで、

1694
01:04:04,619 --> 01:04:06,780
今日私たちと作業を共有し、

1695
01:04:06,780 --> 01:04:10,079
このように作業を続けてくれたことに感謝します。

1696
01:04:10,079 --> 01:04:12,240


1697
01:04:12,240 --> 01:04:14,400
最後に考えたことをありがとうございます。

1698
01:04:14,400 --> 01:04:15,900


1699
01:04:15,900 --> 01:04:18,540
ええと、ええと、あなたが言ったことは

1700
01:04:18,540 --> 01:04:20,640
私の論文全体にあると思います。

1701
01:04:20,640 --> 01:04:23,040
トポロジーとジオメトリの間で、

1702
01:04:23,040 --> 01:04:26,099
おそらく私が

1703
01:04:26,099 --> 01:04:27,900
強調したいのは、物事をより幾何学的に見るという

1704
01:04:27,900 --> 01:04:29,400
これまでの視点が何らかの形で間違っていたと言っているわけではなく

1705
01:04:29,400 --> 01:04:31,260


1706
01:04:31,260 --> 01:04:32,880


1707
01:04:32,880 --> 01:04:35,760
、逆に実際には

1708
01:04:35,760 --> 01:04:37,559
興味深い点がたくさんあるということです。 これらの

1709
01:04:37,559 --> 01:04:39,000
ことは交差していて、この

1710
01:04:39,000 --> 01:04:42,000
チーフの論文のようなもので、実際に論文を読んでいるかのように私は簡単にそこに行きました、

1711
01:04:42,000 --> 01:04:43,440


1712
01:04:43,440 --> 01:04:45,359
ええと美しい交差点がたくさんあります

1713
01:04:45,359 --> 01:04:47,099
実際に私の主な

1714
01:04:47,099 --> 01:04:50,040
協力者であるフランチェスコ、彼は

1715
01:04:50,040 --> 01:04:52,380
微分幾何学者で、

1716
01:04:52,380 --> 01:04:54,240
ええと、実際にはたくさんの種類のものを持っていました

1717
01:04:54,240 --> 01:04:57,119
あちら側からのインプット、そして

1718
01:04:57,119 --> 01:04:59,040
ええと、確かに、私たちのメソッドに可能な限り最善の方法で、

1719
01:04:59,040 --> 01:05:01,559
これらすべての種類の構造層を使用しようとする必要があることはご存知だと思います、素晴らしいですね、わかりました

1720
01:05:01,559 --> 01:05:04,140


1721
01:05:04,140 --> 01:05:07,319


1722
01:05:07,319 --> 01:05:10,260


1723
01:05:10,260 --> 01:05:13,579
次回までありがとうございます、お付き合いいただきありがとうございます

