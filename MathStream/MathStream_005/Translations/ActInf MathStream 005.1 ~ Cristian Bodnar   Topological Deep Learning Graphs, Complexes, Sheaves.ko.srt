1
00:00:05,060 --> 00:00:07,259
안녕하세요.

2
00:00:07,259 --> 00:00:10,740
2023년 7월 17일입니다.

3
00:00:10,740 --> 00:00:13,799


4
00:00:13,799 --> 00:00:16,320
Chris Bodner와 함께 토폴로지 딥

5
00:00:16,320 --> 00:00:19,980
러닝 그래프 콤플렉스 및 시브에 대한 활성 추론 수학 스트림 번호 5.1에 참석했습니다.

6
00:00:19,980 --> 00:00:22,080
Chris와 함께 해 주셔서 감사합니다.

7
00:00:22,080 --> 00:00:23,880
프레젠테이션과

8
00:00:23,880 --> 00:00:25,859
토론을 기대하고 있습니다.

9
00:00:25,859 --> 00:00:28,320
나

10
00:00:28,320 --> 00:00:30,960
그래서 그래 내가 방금 말했던 것처럼 음

11
00:00:30,960 --> 00:00:34,140
이것은 음 내가 몇 달 전에 끝낸 내 박사 학위 작품입니다

12
00:00:34,140 --> 00:00:35,940


13
00:00:35,940 --> 00:00:38,100
그것은 또한 일종의 공개 온라인이므로

14
00:00:38,100 --> 00:00:40,500
세부 사항에 들어가고 싶다면

15
00:00:40,500 --> 00:00:42,000
이것을 찾아보십시오.

16
00:00:42,000 --> 00:00:44,100
인터넷에서 그리고 어 당신은

17
00:00:44,100 --> 00:00:46,559
그것을 쉽게 찾을 수 있어야 합니다 어 분명히

18
00:00:46,559 --> 00:00:48,899
거기에 많은 것들이 있습니다 그래서

19
00:00:48,899 --> 00:00:52,140
오늘은 대략적인 개요를 제공하려고 노력하고 어 특정 측면

20
00:00:52,140 --> 00:00:53,879
에서 조금 더 자세히 들어갈 수도 있습니다

21
00:00:53,879 --> 00:00:55,500


22
00:00:55,500 --> 00:00:57,059
음 당신이 알고 있기 때문에

23
00:00:57,059 --> 00:00:59,460
모든 것을 처리할 시간이 많지는 않습니다 음 그래

24
00:00:59,460 --> 00:01:00,120


25
00:01:00,120 --> 00:01:02,520
지금은 Microsoft 조사 중이므로

26
00:01:02,520 --> 00:01:04,260
이것은 기본적으로

27
00:01:04,260 --> 00:01:06,420
과거에 케임브리지 대학교에 있을 때 수행했던 모든 작업입니다

28
00:01:06,420 --> 00:01:08,220


29
00:01:08,220 --> 00:01:10,439
음 좋습니다.

30
00:01:10,439 --> 00:01:12,659


31
00:01:12,659 --> 00:01:15,420
음 제대로 시작했으니까 아주 쉽게 시작해 봅시다

32
00:01:15,420 --> 00:01:16,740


33
00:01:16,740 --> 00:01:18,600
음 지금

34
00:01:18,600 --> 00:01:19,979


35
00:01:19,979 --> 00:01:23,460
보고 있는 사람들의 배경이 정확히 어떤지는 잘 모르겠습니다만

36
00:01:23,460 --> 00:01:25,979
어 기계 학습에는

37
00:01:25,979 --> 00:01:27,900
몇 년 전에 등장한 이런 종류의 하위 분야가 있습니다.

38
00:01:27,900 --> 00:01:29,520
기하

39
00:01:29,520 --> 00:01:31,020
딥 러닝이라고 합니다.

40
00:01:31,020 --> 00:01:31,680


41
00:01:31,680 --> 00:01:33,780
기본적으로

42
00:01:33,780 --> 00:01:35,520
이러한 종류의 딥 러닝

43
00:01:35,520 --> 00:01:38,340
신경망 아키텍처를

44
00:01:38,340 --> 00:01:39,780
모든 종류

45
00:01:39,780 --> 00:01:41,220


46
00:01:41,220 --> 00:01:43,259
의 구조나

47
00:01:43,259 --> 00:01:46,500
기하학 또는 원하는 경우 공간에 있는 데이터에 적용하는 방법을 살펴보는 것입니다.

48
00:01:46,500 --> 00:01:48,420


49
00:01:48,420 --> 00:01:50,040
특히 생명 과학 분야의 응용 프로그램이며

50
00:01:50,040 --> 00:01:52,500


51
00:01:52,500 --> 00:01:54,960
매우 유명한

52
00:01:54,960 --> 00:01:56,880
출판물과 여기에서 볼 수 있는 모든 것을 알고 있지만

53
00:01:56,880 --> 00:01:59,100


54
00:01:59,100 --> 00:02:01,140
예를 들어 단백질

55
00:02:01,140 --> 00:02:03,299
이나 분자 또는  그것들은

56
00:02:03,299 --> 00:02:05,759
일반적으로 그것을 그래프로 표현합니다

57
00:02:05,759 --> 00:02:07,560
음 그리고 여러분은 특정 원자의 속성과 같은 종류의 데이터와 같은 이 그래프에 살아 있는 데이터를 가지고 있습니다 음

58
00:02:07,560 --> 00:02:08,940


59
00:02:08,940 --> 00:02:10,979


60
00:02:10,979 --> 00:02:11,940


61
00:02:11,940 --> 00:02:14,400
그래서 이런 종류의 것들

62
00:02:14,400 --> 00:02:17,340
음 그리고 지금까지 이런 종류의

63
00:02:17,340 --> 00:02:18,120
음

64
00:02:18,120 --> 00:02:20,220
종 또는  이런 종류의 문제

65
00:02:20,220 --> 00:02:22,500
학습 문제는 원하는 경우

66
00:02:22,500 --> 00:02:25,020


67
00:02:25,020 --> 00:02:26,940


68
00:02:26,940 --> 00:02:29,040
하위 필드의 이름이 음도

69
00:02:29,040 --> 00:02:31,140
언급하는 것처럼 대부분 기하학적 사고 방식으로 접근되었습니다. 음

70
00:02:31,140 --> 00:02:32,580
하지만

71
00:02:32,580 --> 00:02:35,040
음 제가 주장하는 것은

72
00:02:35,040 --> 00:02:37,379
기하학이 모든 것이 아니라는 것입니다.

73
00:02:37,379 --> 00:02:39,140


74
00:02:39,140 --> 00:02:42,000


75
00:02:42,000 --> 00:02:43,560
그러한 설정에 있을 때 필요하고 다른 비기하학적 측면이 있습니다. 음,

76
00:02:43,560 --> 00:02:44,099


77
00:02:44,099 --> 00:02:47,040


78
00:02:47,040 --> 00:02:49,379


79
00:02:49,379 --> 00:02:51,300
현장과 많은

80
00:02:51,300 --> 00:02:53,700
응용 프로그램에서 나타나는 공간이 매우

81
00:02:53,700 --> 00:02:55,980
이질적이라는 것을 깨닫고 나면 이것은 매우 분명합니다.

82
00:02:55,980 --> 00:02:57,480
예를 들어 내가 언급했듯이 이 경우

83
00:02:57,480 --> 00:02:58,739
무엇이든 나타낼 수 있는 그래프를 가질 수 있습니다.

84
00:02:58,739 --> 00:03:01,260


85
00:03:01,260 --> 00:03:04,140
여기 왼쪽에 보이는 것은 카페인 분자이고

86
00:03:04,140 --> 00:03:05,580


87
00:03:05,580 --> 00:03:07,319
이 분자의 특정 속성을 예측하는 모델이 있다는 것을 알고 싶습니다.

88
00:03:07,319 --> 00:03:09,120
하지만 예를 들어

89
00:03:09,120 --> 00:03:12,420
그릿을 가질 수 있고 우리는 항상 그리드와

90
00:03:12,420 --> 00:03:13,920
등급에 있는 데이터를 볼 수 있습니다. 저는

91
00:03:13,920 --> 00:03:15,959
이미지 비디오를 언급하고 있습니다. 그들은 모두 여러분이 알고 있는

92
00:03:15,959 --> 00:03:18,720
픽셀이 그리드에 살고 있다는 것을 알고 있습니다.

93
00:03:18,720 --> 00:03:20,040
그러면 보다 정교한 것을 가질 수 있습니다.

94
00:03:20,040 --> 00:03:21,720


95
00:03:21,720 --> 00:03:25,080
예를 들어 메쉬가 몇 개 있습니다.

96
00:03:25,080 --> 00:03:26,640
컴퓨터 그래픽에 전체가 있고

97
00:03:26,640 --> 00:03:29,220
일종의 매니폴드가 있을 수 있습니다.

98
00:03:29,220 --> 00:03:31,379
예를 들어 날씨

99
00:03:31,379 --> 00:03:34,200
모델링이나 우리가

100
00:03:34,200 --> 00:03:37,739
위상학적으로 구에 살고 있다는 것을 알고 있다면

101
00:03:37,739 --> 00:03:40,140
음 그래서  당신의 데이터를

102
00:03:40,140 --> 00:03:43,200
공포에 의존하는 것으로 모델링하고 싶고 음,

103
00:03:43,200 --> 00:03:44,000


104
00:03:44,000 --> 00:03:47,580
그럼에도 불구하고 어, 이러한 장소가

105
00:03:47,580 --> 00:03:48,920
일종의

106
00:03:48,920 --> 00:03:51,120
기하학적으로 종류가 이질적이고

107
00:03:51,120 --> 00:03:53,220
일부는

108
00:03:53,220 --> 00:03:54,780


109
00:03:54,780 --> 00:03:57,000
엄밀한 수학적 의미에서 기하학적 구조를 가지고 있지 않더라도 그들은  모두

110
00:03:57,000 --> 00:03:58,620
토폴로지 구조라고 불리는 것입니다.

111
00:03:58,620 --> 00:04:00,239
그것은 좀 더 약한

112
00:04:00,239 --> 00:04:03,239
종류의 구조와 비슷합니다. 어 하지만 그것은 좀

113
00:04:03,239 --> 00:04:04,799
더 일반적인 것입니다

114
00:04:04,799 --> 00:04:07,200
음 그리고

115
00:04:07,200 --> 00:04:09,120
그것이 의미하는 바에 대해 몇 초 후에 조금 이야기할 것입니다. 하지만

116
00:04:09,120 --> 00:04:10,560
일반적으로 당신은  수학적

117
00:04:10,560 --> 00:04:12,480
물리학을 수행하면 구조의 사다리가 있습니다. 어, 계속해서

118
00:04:12,480 --> 00:04:15,360


119
00:04:15,360 --> 00:04:17,459
건물을 짓고

120
00:04:17,459 --> 00:04:18,959
구조가 많을수록 더

121
00:04:18,959 --> 00:04:20,940
정교한 일을 할 수

122
00:04:20,940 --> 00:04:22,680
있고 이것의 기초에서 알 수 있습니다.

123
00:04:22,680 --> 00:04:24,540
다이어그램에는 세트가 있습니다.

124
00:04:24,540 --> 00:04:26,400


125
00:04:26,400 --> 00:04:28,680
추가 구조가 없는 요소 모음일 뿐입니다. 그런 다음 이

126
00:04:28,680 --> 00:04:32,460
어 가죽으로 계속 올라가고

127
00:04:32,460 --> 00:04:35,040
세트 위에 정지 정지를 추가하는 식으로

128
00:04:35,040 --> 00:04:36,000


129
00:04:36,000 --> 00:04:37,919
음 그리고 제가 말했듯이  대부분의

130
00:04:37,919 --> 00:04:39,660
작업은 이

131
00:04:39,660 --> 00:04:42,000
계층 구조의 최상위 수준에 초점을 맞추고 있지만

132
00:04:42,000 --> 00:04:44,759
일종의 토폴로지 수준입니다.

133
00:04:44,759 --> 00:04:46,259


134
00:04:46,259 --> 00:04:49,080
그 위에 추가할 수 있는 가장 약한 종류의 수준을 알고 있습니다.

135
00:04:49,080 --> 00:04:51,780
대부분의

136
00:04:51,780 --> 00:04:53,460
음 그리고 제가 박사 학위 논문에서 해온 것 중 일부는

137
00:04:53,460 --> 00:04:56,940
본질적으로

138
00:04:56,940 --> 00:04:58,560
이러한 종류의 공간에서 이러한 종류의 학습 문제를

139
00:04:58,560 --> 00:05:00,300
보다 위상적인

140
00:05:00,300 --> 00:05:02,759
관점에서 보는 것이었고 일종의 Fight The Filling을 알고 있습니다.

141
00:05:02,759 --> 00:05:05,699


142
00:05:05,699 --> 00:05:07,860
일종의 개요이고

143
00:05:07,860 --> 00:05:10,620
이제 좋습니다. 이

144
00:05:10,620 --> 00:05:12,900
토폴로지 관점을 채택한다면 그것이

145
00:05:12,900 --> 00:05:14,699
실제로 의미하는 것이 무엇인지 또는 어떻게 보일지

146
00:05:14,699 --> 00:05:15,780


147
00:05:15,780 --> 00:05:17,280
음 제 생각에는 다른 방식으로 보일 수

148
00:05:17,280 --> 00:05:19,500
있지만 제 얼굴에서 한 일은

149
00:05:19,500 --> 00:05:22,340
일종의  이와 같이

150
00:05:22,340 --> 00:05:25,500
수평적으로 우리는 일종의 공간을 가지고 있습니다

151
00:05:25,500 --> 00:05:27,060
음 그것은 무엇이든 될 수 있습니다 그것은

152
00:05:27,060 --> 00:05:29,220
당신이 알고 있는 추상적인 공간의 일종입니다

153
00:05:29,220 --> 00:05:32,759
그리드 또는 이전 예에서 본 것과 같은 것일 수

154
00:05:32,759 --> 00:05:34,800
있으며

155
00:05:34,800 --> 00:05:37,020
영역에 수직으로 부착된 종류입니다  우리가 데이터를 가지고 있는 공간의

156
00:05:37,020 --> 00:05:38,220


157
00:05:38,220 --> 00:05:39,600
음, 그래서 데이터는 일종의 수직

158
00:05:39,600 --> 00:05:42,180
구성 요소이고 여러분은 이러한 플래그를 볼 수 있습니다.

159
00:05:42,180 --> 00:05:44,820
여러분이 알고 있는 일종의

160
00:05:44,820 --> 00:05:46,919
이러한 영역에 고정된 종류이므로

161
00:05:46,919 --> 00:05:49,199


162
00:05:49,199 --> 00:05:51,600
해당 영역과 관련된 일종의 데이터가 있음을 나타냅니다.

163
00:05:51,600 --> 00:05:53,160
음, 그건 일종의 높은 수준의

164
00:05:53,160 --> 00:05:54,720
관점입니다

165
00:05:54,720 --> 00:05:56,039
음, 나중에 좀 더 구체적으로 만들겠습니다

166
00:05:56,039 --> 00:05:58,440


167
00:05:58,440 --> 00:06:00,419
음, 이 사진에는 두 가지 중요한 것이 있습니다.

168
00:06:00,419 --> 00:06:02,220


169
00:06:02,220 --> 00:06:06,840
어 첫 번째는 지역성이므로 데이터는

170
00:06:06,840 --> 00:06:10,380
어 일부 지역에 첨부됩니다.  이

171
00:06:10,380 --> 00:06:13,320
공간의 이 토폴로지 공간은

172
00:06:13,320 --> 00:06:15,539
음, 그리고 그런 의미에서 그것은 지역적이므로

173
00:06:15,539 --> 00:06:16,979
지역과 연관되어

174
00:06:16,979 --> 00:06:18,840
있고 구체적인 예를 들자면

175
00:06:18,840 --> 00:06:21,600


176
00:06:21,600 --> 00:06:23,819
우주 어딘가에 온도 센서가 있다면

177
00:06:23,819 --> 00:06:26,639
그 센서가 측정하는 것이 무엇이든 생각할 수 있습니다.  이것은 센서 주변에 있는

178
00:06:26,639 --> 00:06:27,960


179
00:06:27,960 --> 00:06:30,600
여러분이 알고 있는 바로 주변 환경의 속성입니다.

180
00:06:30,600 --> 00:06:32,100
그래서 그것은

181
00:06:32,100 --> 00:06:34,740
일종의 공간 영역 영역의 속성을 설명하는 것입니다.

182
00:06:34,740 --> 00:06:36,120


183
00:06:36,120 --> 00:06:37,620
그래서 그것은 일종의 좋은 예가 될 것입니다

184
00:06:37,620 --> 00:06:38,940


185
00:06:38,940 --> 00:06:41,520
음 그리고 또 다른 종류의 공리 어

186
00:06:41,520 --> 00:06:44,580
음 우리가 시작하고 있는 것은

187
00:06:44,580 --> 00:06:47,220
음 공간이 구조를 가지고 있다는 것입니다

188
00:06:47,220 --> 00:06:49,259
음 그래서 공간은 일종의

189
00:06:49,259 --> 00:06:51,360
다양한 영역으로 구성되어 있고 이러한

190
00:06:51,360 --> 00:06:54,060
영역은 다양한 방식으로 교차한다는 것입니다

191
00:06:54,060 --> 00:06:54,780
음 그래서

192
00:06:54,780 --> 00:06:57,780
그리고 그리고 그것은 암시적으로

193
00:06:57,780 --> 00:06:59,400
우리의 데이터 구조를 만듭니다 왜냐하면

194
00:06:59,400 --> 00:07:01,620
데이터는 이 영역에 연결되어 있으므로

195
00:07:01,620 --> 00:07:03,539


196
00:07:03,539 --> 00:07:05,220
데이터에 어떤 구조가 있습니다. 음

197
00:07:05,220 --> 00:07:07,380
좋습니다. 이것이 일종의

198
00:07:07,380 --> 00:07:09,060
그림이고 실제로 이러한 것 중 많은 부분이 범주

199
00:07:09,060 --> 00:07:11,280
이론과 관련이 있습니다.

200
00:07:11,280 --> 00:07:13,860
그것은

201
00:07:13,860 --> 00:07:15,600
일종의 정교하고 나

202
00:07:15,600 --> 00:07:18,060
자신이 범주 이론의 전문가는 아니지만 음,

203
00:07:18,060 --> 00:07:20,400
하지만 여기서 높은 수준의

204
00:07:20,400 --> 00:07:23,400
범주 이론은

205
00:07:23,400 --> 00:07:26,699


206
00:07:26,699 --> 00:07:29,340
수학의 다른 구조와 속성에

207
00:07:29,340 --> 00:07:30,720
대해 논의하는 종류 사이를 변환하는 좋은 방법이라는 것입니다.

208
00:07:30,720 --> 00:07:32,880
특정 종류의 객체를

209
00:07:32,880 --> 00:07:34,380
다른 종류의 객체로 변환하고

210
00:07:34,380 --> 00:07:36,479
이러한 모든 종류

211
00:07:36,479 --> 00:07:38,520
의 관계와 연결을 찾습니다.

212
00:07:38,520 --> 00:07:40,259
구체적인 예는 예를 들어

213
00:07:40,259 --> 00:07:43,199
표면의 일부 매니폴드를 연구하려는 경우

214
00:07:43,199 --> 00:07:45,780
일부 그룹을 이러한 표면에 연결할 수 있습니다.

215
00:07:45,780 --> 00:07:48,900


216
00:07:48,900 --> 00:07:50,580
이러한 종류의 표면 사이의 관계는 또한

217
00:07:50,580 --> 00:07:52,139
이러한

218
00:07:52,139 --> 00:07:53,580
그룹이나 다른 대수적

219
00:07:53,580 --> 00:07:55,560
구조에 대한 일부 관계를 번역하므로

220
00:07:55,560 --> 00:07:57,300


221
00:07:57,300 --> 00:07:59,400
기하학이나 위상학 또는 다른 것을 아는 대신 대수학을 수행하여 이러한 다양체를 연구할 수 있습니다.

222
00:07:59,400 --> 00:08:00,840


223
00:08:00,840 --> 00:08:03,360
음, 이 경우에도 이러한 종류의

224
00:08:03,360 --> 00:08:04,740
매니페스트  우리가

225
00:08:04,740 --> 00:08:06,599
이러한

226
00:08:06,599 --> 00:08:08,940
음을 공간에서 데이터로 변환한다는 사실에서

227
00:08:08,940 --> 00:08:11,280
우리는

228
00:08:11,280 --> 00:08:13,440
공간에서 특정 종류의 데이터에 영역을 연결하기 때문에 이것은 이전 그림에서 방금 설명한 것에서

229
00:08:13,440 --> 00:08:15,419
이러한 변환이 나타나는 방식입니다.

230
00:08:15,419 --> 00:08:16,740


231
00:08:16,740 --> 00:08:18,419
그래서 여러분은 이것을

232
00:08:18,419 --> 00:08:20,400


233
00:08:20,400 --> 00:08:24,000
그 공간에 있는 공간과 지역에서

234
00:08:24,000 --> 00:08:26,460
그 공간에 첨부된 일종의 데이터로의 일종의 변환 또는 매핑이라고 생각할 수 있습니다.

235
00:08:26,460 --> 00:08:28,860


236
00:08:28,860 --> 00:08:30,599


237
00:08:30,599 --> 00:08:32,219
의 당신은 당신의 마음의 뒤에 유지하는 것을 알고 있습니다 음

238
00:08:32,219 --> 00:08:33,179


239
00:08:33,179 --> 00:08:35,159


240
00:08:35,159 --> 00:08:37,200
배경에 숨어있는 것이 있다는 것을 음

241
00:08:37,200 --> 00:08:40,260
좋습니다 그래서 이것은 제가 약속합니다 이것이 제가이

242
00:08:40,260 --> 00:08:41,880


243
00:08:41,880 --> 00:08:44,580
강연에서 제공하는 초기 수학 정의입니다.  그만

244
00:08:44,580 --> 00:08:46,380
음 하지만

245
00:08:46,380 --> 00:08:48,959
위상 공간 공간에서 꽤 자주 언급되기 때문에 나는

246
00:08:48,959 --> 00:08:50,640
단지 음 정교하게 들릴 수 있는

247
00:08:50,640 --> 00:08:53,339
이 공리적 정의를 제공하고 싶었지만

248
00:08:53,339 --> 00:08:55,080


249
00:08:55,080 --> 00:08:56,519
마지막에 그림이 있고 잘하면

250
00:08:56,519 --> 00:08:57,899
명확할 것입니다

251
00:08:57,899 --> 00:09:01,200
음 그래서 예 그래서  그게 뭐야 음,

252
00:09:01,200 --> 00:09:03,120
내가 말했듯이 우리는 세트로 시작

253
00:09:03,120 --> 00:09:05,160
하고 우리는 물건을 오른쪽 상단에 놓기 때문에

254
00:09:05,160 --> 00:09:07,260
세트로 시작하면 열린 세트라고하는

255
00:09:07,260 --> 00:09:10,440
이 세트의 하위 집합 모음도 갖게됩니다.

256
00:09:10,440 --> 00:09:12,360


257
00:09:12,360 --> 00:09:13,920
특정 공리를 만족시키므로 매우 비공식적으로 말하는 공간의

258
00:09:13,920 --> 00:09:15,360
이러한 열린 설정 종류의 영역을 생각할 수 있습니다.

259
00:09:15,360 --> 00:09:17,279


260
00:09:17,279 --> 00:09:18,720


261
00:09:18,720 --> 00:09:22,200
음 그래서

262
00:09:22,200 --> 00:09:24,779
만족해야 하는 것은 빈 집합과

263
00:09:24,779 --> 00:09:26,880
집합 자체가

264
00:09:26,880 --> 00:09:29,880
음 열린 집합이어야 한다는 것입니다.  어떤

265
00:09:29,880 --> 00:09:31,440
의미에서 이것은

266
00:09:31,440 --> 00:09:33,959
세트 자체가 그 공간의 영역이라고 생각할 수 있습니다.

267
00:09:33,959 --> 00:09:36,300
어 매우 비공식적으로 음

268
00:09:36,300 --> 00:09:38,940
여러분이 알고 있는 일종의 어 명백하다고 말할 수

269
00:09:38,940 --> 00:09:42,360
있으며

270
00:09:42,360 --> 00:09:44,820
교차

271
00:09:44,820 --> 00:09:48,060
하고 이 영역의 단위를 취하는 데 일종의 제약이 있습니다.  어

272
00:09:48,060 --> 00:09:50,040
우리가 두 영역의 교차점을 취하면

273
00:09:50,040 --> 00:09:51,540
이 영역 중 하나를 더 얻어야 합니다

274
00:09:51,540 --> 00:09:52,920


275
00:09:52,920 --> 00:09:54,779
음 그리고 이 영역의 합집합을 취하면

276
00:09:54,779 --> 00:09:56,519


277
00:09:56,519 --> 00:09:58,200
다른 영역을 얻어야 합니다 음

278
00:09:58,200 --> 00:10:00,899
그리고 어

279
00:10:00,899 --> 00:10:02,760
이 교차점이 얼마나 커야 하는지와 같은 제약이 있습니다.

280
00:10:02,760 --> 00:10:04,680


281
00:10:04,680 --> 00:10:06,180
유한한 교차점이 있어야 하지만

282
00:10:06,180 --> 00:10:07,860
무한한 합집합을 가질 수 있지만 그건

283
00:10:07,860 --> 00:10:10,080
전문적인 문제이고 어쨌든 그냥 건너뛸 수 있지만

284
00:10:10,080 --> 00:10:13,019
그림을 보려면

285
00:10:13,019 --> 00:10:16,500
왼쪽에 집합 X 자체를 볼 수 있습니다.

286
00:10:16,500 --> 00:10:19,440


287
00:10:19,440 --> 00:10:21,180


288
00:10:21,180 --> 00:10:24,000
이 공간에 있는 열린 집합 구조 그래서 우리는

289
00:10:24,000 --> 00:10:26,760
여기에 열린 집합이 있고 이 공리에 의한 또 다른 열린 집합 V가 있습니다.

290
00:10:26,760 --> 00:10:28,440
교차점도

291
00:10:28,440 --> 00:10:30,480
열린 집합이 될 것입니다. 예 그것은 중간에 있는 교차점이

292
00:10:30,480 --> 00:10:32,399
또 다른 반대이고

293
00:10:32,399 --> 00:10:34,080
세트 자체가 또 다른 열린 집합입니다.

294
00:10:34,080 --> 00:10:35,580


295
00:10:35,580 --> 00:10:37,560
일종의 영역으로 물건을 나누는 것입니다. 음

296
00:10:37,560 --> 00:10:39,959
그렇게 생각할 수 있습니다. 음

297
00:10:39,959 --> 00:10:42,360
좋습니다. 그래서 이것은 최상위

298
00:10:42,360 --> 00:10:44,640
논리적 공간입니다

299
00:10:44,640 --> 00:10:47,940
음, 이제 데이터를 올바르게 추가하겠습니다. 그래서

300
00:10:47,940 --> 00:10:50,519
우리는 데이터가 있다고 언급한 다음

301
00:10:50,519 --> 00:10:52,320
넣습니다.  죄송합니다. 공간이 있고 그

302
00:10:52,320 --> 00:10:54,600
위에 데이터를 추가합니다. 어

303
00:10:54,600 --> 00:10:56,339


304
00:10:56,339 --> 00:10:58,079
지금까지 토폴로지 공간이 어떻게 보이는지 보았습니다. 이제 이런 종류의 세로

305
00:10:58,079 --> 00:11:00,540
항목을 추가하겠습니다. 이전에 보았던 이러한 플래그를

306
00:11:00,540 --> 00:11:02,399
위에 몇 가지 데이터를 넣습니다.  이

307
00:11:02,399 --> 00:11:03,720
영역

308
00:11:03,720 --> 00:11:05,820
음 그리고 우리가 모든 열린 세트에 있는 공간의 모든 영역에 데이터를 넣으면

309
00:11:05,820 --> 00:11:08,519


310
00:11:08,519 --> 00:11:10,820
음 우리는

311
00:11:10,820 --> 00:11:14,100


312
00:11:14,100 --> 00:11:16,380
대수 토폴로지와 기하학에서와 같은 카테고리에서 이러한 구조를 얻습니다. 그들은

313
00:11:16,380 --> 00:11:18,240


314
00:11:18,240 --> 00:11:20,459
매우 멋진 것처럼 들리는 사전 모양 음이라고 합니다.

315
00:11:20,459 --> 00:11:23,100


316
00:11:23,100 --> 00:11:24,899
제가 이미 설명했던 것은

317
00:11:24,899 --> 00:11:27,060
실제로 각 지역에 대한 데이터가 있다는 것입니다.

318
00:11:27,060 --> 00:11:29,459
이러한 F의 예를 들어

319
00:11:29,459 --> 00:11:34,200
어 다리와 U에 대한 U의 F는

320
00:11:34,200 --> 00:11:35,940


321
00:11:35,940 --> 00:11:38,279
지역에 연결된 일종의 데이터입니다.  따라서 U의 f를 해당 지역에 있는

322
00:11:38,279 --> 00:11:41,339
데이터를 설명하는 일부 세트로 생각할 수 있습니다.

323
00:11:41,339 --> 00:11:44,220


324
00:11:44,220 --> 00:11:46,019
하지만 추가로

325
00:11:46,019 --> 00:11:48,360


326
00:11:48,360 --> 00:11:52,140
이러한 종류의 데이터

327
00:11:52,140 --> 00:11:54,000
조각과 이것들 사이를 이동하는 일종의 맵이 있습니다.  제한 맵이라고 불리는데

328
00:11:54,000 --> 00:11:55,800
왜

329
00:11:55,800 --> 00:11:59,459


330
00:11:59,459 --> 00:12:01,440


331
00:12:01,440 --> 00:12:04,620
전체 세트 X에 데이터를 첨부한 것처럼 원하는 경우 확대할 수 있는 방법을 제공하는 것입니다.

332
00:12:04,620 --> 00:12:06,180
그런 다음 괜찮다고 생각할 수 있습니다.

333
00:12:06,180 --> 00:12:08,459
데이터 이 데이터에서

334
00:12:08,459 --> 00:12:11,760
X의 더 작은 영역에 있는 데이터로 어떻게 이동합니까? 그래서 그것은

335
00:12:11,760 --> 00:12:14,760


336
00:12:14,760 --> 00:12:17,700
본질적으로 해당 데이터를 확대하는 일종의 방법입니다.

337
00:12:17,700 --> 00:12:20,700
잠시 후에 몇 가지 예를 보여 드리겠습니다.

338
00:12:20,700 --> 00:12:21,660


339
00:12:21,660 --> 00:12:24,980
설교하고 예제를 보기 위해

340
00:12:24,980 --> 00:12:27,959
여기 있는 공간은 1D 또는 수평선으로

341
00:12:27,959 --> 00:12:29,279
생각할 수 있는 가장 단순한 종류의 공간 중 하나입니다.

342
00:12:29,279 --> 00:12:31,560
이것이

343
00:12:31,560 --> 00:12:33,060
실제 라인입니다

344
00:12:33,060 --> 00:12:34,740
음 그리고

345
00:12:34,740 --> 00:12:37,680
열린 간격으로 주어진 일부 영역이 있습니다 어

346
00:12:37,680 --> 00:12:39,360


347
00:12:39,360 --> 00:12:42,240
Via 라인의 이러한 어 어 예 그리고

348
00:12:42,240 --> 00:12:44,220
일부 데이터 조각은

349
00:12:44,220 --> 00:12:46,740
해당 영역의 연속 함수와

350
00:12:46,740 --> 00:12:50,279
같은 기능이 될 수 있으므로 여기에 첫 번째 간격에 대한 일부 샘플 데이터가 있습니다. 여기에

351
00:12:50,279 --> 00:12:52,139


352
00:12:52,139 --> 00:12:54,360
두 번째 간격에 대한 또 다른 기능이 있습니다.

353
00:12:54,360 --> 00:12:56,279
여기에 대한 일부 데이터가 있습니다.  세 번째 간격 그리고

354
00:12:56,279 --> 00:12:57,899
실제로 이 경우에는

355
00:12:57,899 --> 00:12:59,279
이러한 모든

356
00:12:59,279 --> 00:13:01,740
um 함수가 겹치는 부분에 동의하므로

357
00:13:01,740 --> 00:13:03,480
이러한 영역이 겹치는 곳에서

358
00:13:03,480 --> 00:13:05,700
동일한 값을 가지며 실제로 전체 영역에 대한

359
00:13:05,700 --> 00:13:08,339
단일 함수의 단일 uh에 함께 붙일 수 있습니다.

360
00:13:08,339 --> 00:13:11,399


361
00:13:11,399 --> 00:13:14,040
이것은 사전 이동의 예일 뿐이며

362
00:13:14,040 --> 00:13:16,019


363
00:13:16,019 --> 00:13:18,360
연속 함수의 사전 이동이라고 합니다.

364
00:13:18,360 --> 00:13:19,800
따라서 이 경우 데이터는

365
00:13:19,800 --> 00:13:22,019
연속 함수이고 공간은

366
00:13:22,019 --> 00:13:23,519
실제 라인입니다.

367
00:13:23,519 --> 00:13:25,200


368
00:13:25,200 --> 00:13:26,339


369
00:13:26,339 --> 00:13:28,019
음, 하지만 이런

370
00:13:28,019 --> 00:13:30,600
종류의 특별한 속성 때문에 어, 우리가

371
00:13:30,600 --> 00:13:32,880
일종의 데이터를 붙일 수 있고 고유하게

372
00:13:32,880 --> 00:13:34,980
다른 데이터 조각을 얻을 수 있다는 것이 밝혀졌습니다. 우리는

373
00:13:34,980 --> 00:13:36,480
이 세 조각을 취할 수 있습니다.

374
00:13:36,480 --> 00:13:38,579
정확히 퍼즐과 같습니다. 맞습니다.

375
00:13:38,579 --> 00:13:40,079
사물을 함께 살펴보고

376
00:13:40,079 --> 00:13:42,240
우리는 일종의 단일 기능인 네 번째 기능을 얻습니다.

377
00:13:42,240 --> 00:13:44,519
어 우리는

378
00:13:44,519 --> 00:13:47,040
이러한 기능을 바로 겹쳤습니다. 음

379
00:13:47,040 --> 00:13:48,060
그리고 어

380
00:13:48,060 --> 00:13:52,019


381
00:13:52,019 --> 00:13:53,579
이러한 종류의 속성을 만족시키기 위해 이러한 속성을

382
00:13:53,579 --> 00:13:55,500
접착하여 고유한 조각을 얻을 수 있습니다.

383
00:13:55,500 --> 00:13:58,200
데이터의 그것들은 쉬브라고 불립니다

384
00:13:58,200 --> 00:14:01,320
음 그리고 어 기본적으로 연속 함수의 사전 이동은

385
00:14:01,320 --> 00:14:04,139
실제로 이동입니다

386
00:14:04,139 --> 00:14:07,019
음 그래서 이것은

387
00:14:07,019 --> 00:14:09,779
이러한 것들에 첨부된 데이터를 형식화하는 일종의 방법입니다

388
00:14:09,779 --> 00:14:11,700
음 그것은 두 번째로 덜 기술적이게 될 것입니다

389
00:14:11,700 --> 00:14:12,959


390
00:14:12,959 --> 00:14:15,959
음 그래서 그냥 주기 위해  더 많은 예를 들어

391
00:14:15,959 --> 00:14:17,700
예를 들어 이 방법으로

392
00:14:17,700 --> 00:14:20,639
구에 대한 데이터를 설명할 수 있고 이

393
00:14:20,639 --> 00:14:22,200
데이터가 여기에 있는 벡터 필드라고 가정해 보겠습니다.

394
00:14:22,200 --> 00:14:24,000
이것이 지구가 맞는지 봅시다

395
00:14:24,000 --> 00:14:26,399
이것은 바람 벡터 필드일 수 있습니다.

396
00:14:26,399 --> 00:14:28,139
모델링 또는

397
00:14:28,139 --> 00:14:30,240


398
00:14:30,240 --> 00:14:33,959


399
00:14:33,959 --> 00:14:35,339
지구 표면의 바람을 설명하는 벡터 필드가 있습니다.

400
00:14:35,339 --> 00:14:36,959
음,

401
00:14:36,959 --> 00:14:39,000
이런 종류

402
00:14:39,000 --> 00:14:40,680
의 벡터 필드가 외피 구조를 가지고 있고 다음

403
00:14:40,680 --> 00:14:43,019
과 같이 생각할 수 있는 기계 학습을 수행할 수 있습니다.

404
00:14:43,019 --> 00:14:44,880


405
00:14:44,880 --> 00:14:47,220
빨간색 영역에 벡터 필드가 있고

406
00:14:47,220 --> 00:14:49,199
노란색 영역에 벡터 필드가 있는지 알고 있기 때문에 추장입니다. 겹치는 부분에 동의하면 서로 겹치면

407
00:14:49,199 --> 00:14:51,480
고유하게 붙일 수

408
00:14:51,480 --> 00:14:54,000
있고

409
00:14:54,000 --> 00:14:55,620
이 더 큰 영역에서 벡터 필드를 얻습니다.

410
00:14:55,620 --> 00:14:58,620
하지만 아주 좋은 점은

411
00:14:58,620 --> 00:15:01,320
우리가 모든 관점에서 구체와 매우

412
00:15:01,320 --> 00:15:03,320
다른 매우 다른 종류의 공간, 즉 그래프를 가지고 있고

413
00:15:03,320 --> 00:15:06,060


414
00:15:06,060 --> 00:15:08,699
우리는 여전히

415
00:15:08,699 --> 00:15:10,680
똑같은 종류의 공리와

416
00:15:10,680 --> 00:15:12,660
용어 및 종류를 적용할 수 있다는 것입니다.

417
00:15:12,660 --> 00:15:15,660


418
00:15:15,660 --> 00:15:18,000
이러한 방식으로 그래프를 이동할 수 있습니다. 예를 들어 지표

419
00:15:18,000 --> 00:15:20,279
의 노드와 관련된 일부 기능을 가질 수 있습니다.

420
00:15:20,279 --> 00:15:22,560


421
00:15:22,560 --> 00:15:25,199
그래프의 가장자리와 관련된 일부 기능과

422
00:15:25,199 --> 00:15:27,320
자체 기능을 가진 다른 노드가 있습니다.

423
00:15:27,320 --> 00:15:29,399
실제로

424
00:15:29,399 --> 00:15:31,680
우리가 그래프 머신 러닝에서 가지고 있는 것과 똑같은 것입니다.

425
00:15:31,680 --> 00:15:33,420
음, 이것은 우리가 할 수 있는 이런 종류

426
00:15:33,420 --> 00:15:35,399
의 위상학적 관점에 아주 좋습니다.

427
00:15:35,399 --> 00:15:38,519


428
00:15:38,519 --> 00:15:40,680
여러분이

429
00:15:40,680 --> 00:15:43,199
매우 종류의 이질적인 공간에 대해 원한다면 우리가 통일된 사고 방식을 가지고 있다는 것을 알고 있습니다.

430
00:15:43,199 --> 00:15:45,839
우리는

431
00:15:45,839 --> 00:15:47,399
이런 종류의 시프트 용어와 다른 방법을 사용하여 그들에 첨부된 모든 데이터를 모델링할 수

432
00:15:47,399 --> 00:15:50,100


433
00:15:50,100 --> 00:15:53,459
있지만 이 강연에서는 그렇게 하지 않을 것입니다 음

434
00:15:53,459 --> 00:15:54,899
좋습니다.

435
00:15:54,899 --> 00:15:57,240
내 논문에서 하고

436
00:15:57,240 --> 00:15:59,040


437
00:15:59,040 --> 00:16:02,399
음 그리고 그냥 좀 더 깊이 파고들기 위해

438
00:16:02,399 --> 00:16:04,079


439
00:16:04,079 --> 00:16:06,600
음 난 그냥 그래 난

440
00:16:06,600 --> 00:16:09,720
우리가 작년에 유럽에서 했던 한 논문에 들어가고 싶었어 어 그래

441
00:16:09,720 --> 00:16:12,720
그래서 이것은 작년이었어 음 음 어 어

442
00:16:12,720 --> 00:16:15,480
시프트 확산이라고 불리는 것

443
00:16:15,480 --> 00:16:18,600
본질적으로

444
00:16:18,600 --> 00:16:21,060


445
00:16:21,060 --> 00:16:24,000
그래프에서 머신 러닝을 수행할 때 유용한 작업을 수행하기 위해 방금 설명한 것을 어떻게 사용할 수 있습니까

446
00:16:24,000 --> 00:16:25,860
음 좋습니다. 이것은

447
00:16:25,860 --> 00:16:27,720
Francisco de Giovanni와의 공동 작업

448
00:16:27,720 --> 00:16:29,820
이었지만 체임벌린에서는 제 고문인 Pietro Leo

449
00:16:29,820 --> 00:16:33,300
와 Michael bronstein이

450
00:16:33,300 --> 00:16:36,300
음 좋습니다.  저는 사람들이 이것에 익숙하지 않을 경우를 대비하여

451
00:16:36,300 --> 00:16:37,740
약간의 배경 지식을 제공하고 싶습니다

452
00:16:37,740 --> 00:16:40,620


453
00:16:40,620 --> 00:16:42,959
음 그래서 요즘 그래프에서 기계 학습을

454
00:16:42,959 --> 00:16:45,180
수행하는 사람들이 가장 좋아하는 아키텍처는

455
00:16:45,180 --> 00:16:47,579


456
00:16:47,579 --> 00:16:49,560
그래프 신경망이라고 하는 것입니다.

457
00:16:49,560 --> 00:16:50,820


458
00:16:50,820 --> 00:16:52,800


459
00:16:52,800 --> 00:16:54,959
모델이므로

460
00:16:54,959 --> 00:16:57,139
이 설정에는 몇 가지

461
00:16:57,139 --> 00:17:00,899
기능이 있으므로 그래프의 각 노드에는

462
00:17:00,899 --> 00:17:04,339
몇 가지 기능이 있습니다. 이것이 h

463
00:17:04,339 --> 00:17:07,559
벡터입니다. 여기에서 나타내는 벡터는

464
00:17:07,559 --> 00:17:11,160


465
00:17:11,160 --> 00:17:15,179
음 레이어 또는 시간 D에서 노드 a와 연결된 벡터 H이므로

466
00:17:15,179 --> 00:17:16,799
몇 가지 기능이 있습니다.  이러한 각 노드

467
00:17:16,799 --> 00:17:20,280
와 무엇을 하고 있는지 각각

468
00:17:20,280 --> 00:17:22,140
특정 노트에 있는 경우 다음 레이어에 대한

469
00:17:22,140 --> 00:17:24,359
새로운 표현 또는 새로운 기능을 계산하고 싶습니다

470
00:17:24,359 --> 00:17:26,459


471
00:17:26,459 --> 00:17:27,900


472
00:17:27,900 --> 00:17:28,559
음

473
00:17:28,559 --> 00:17:31,740
표현을 학습하고 있으므로

474
00:17:31,740 --> 00:17:33,780
음  그리고 그래핀 네트워크가

475
00:17:33,780 --> 00:17:36,360
하는 일은 이 노드가 다른 모든 노드로부터 메시지를 받을 것입니다.

476
00:17:36,360 --> 00:17:38,360


477
00:17:38,360 --> 00:17:42,179
이 노드를 가진 우리의 이웃은

478
00:17:42,179 --> 00:17:45,000
음 그리고 이 메시지는 또한 전달될 수 있습니다.

479
00:17:45,000 --> 00:17:47,280
신경망에서 사용할 수

480
00:17:47,280 --> 00:17:49,860
있지만 본질적으로

481
00:17:49,860 --> 00:17:51,600
이러한 기능의 일부 처리  그리고

482
00:17:51,600 --> 00:17:54,539
이것들은 이 메시지로 집계됩니다.

483
00:17:54,539 --> 00:17:57,900
여기 녹색으로

484
00:17:57,900 --> 00:17:59,880
음 그리고 이것은 이웃으로부터의 메시지를 이 노드의 이전 표현과 결합하는

485
00:17:59,880 --> 00:18:02,039
일부 업데이트 기능을 통해 전달되며

486
00:18:02,039 --> 00:18:03,539


487
00:18:03,539 --> 00:18:05,340


488
00:18:05,340 --> 00:18:06,960
새로운

489
00:18:06,960 --> 00:18:09,000
표현 종류를 제공합니다.  다음 레이어의

490
00:18:09,000 --> 00:18:10,260
음 그리고 이것은 모든 노드에 대해 발생하므로

491
00:18:10,260 --> 00:18:11,400


492
00:18:11,400 --> 00:18:13,020
이 노드에 대한 몇 가지 새로운 표현을 얻고 이것은

493
00:18:13,020 --> 00:18:14,580
하나의 레이어이고 원하는

494
00:18:14,580 --> 00:18:16,440
만큼 많은 레이어에 대해 이것을 계속 반복합니다

495
00:18:16,440 --> 00:18:17,280


496
00:18:17,280 --> 00:18:18,660
음 그래서 이것은 일종의 방법입니다  그래프에서 딥 러닝을 수행합니다

497
00:18:18,660 --> 00:18:20,760


498
00:18:20,760 --> 00:18:23,100
음 그것은 일종의 매우 간단한 어

499
00:18:23,100 --> 00:18:26,160
레시피이며 대부분의 모델은 실제로

500
00:18:26,160 --> 00:18:28,320
이러한

501
00:18:28,320 --> 00:18:30,480
메시지 메시지를 계산하는 방식과 이러한

502
00:18:30,480 --> 00:18:32,820
업데이트 기능이 설계된 방식이 다양합니다. 하지만 매개

503
00:18:32,820 --> 00:18:34,980
변수의 종류는  대부분

504
00:18:34,980 --> 00:18:37,500
의 이러한 모델은 그렇지 않으면 모두

505
00:18:37,500 --> 00:18:39,720
이 프레임워크를 존중하고

506
00:18:39,720 --> 00:18:42,120
이런 종류의 특별한 방식으로 작동합니다

507
00:18:42,120 --> 00:18:45,179
음 그리고 왜 이것을 하고 싶은지에 대한 예를 제공하기 위해

508
00:18:45,179 --> 00:18:47,280


509
00:18:47,280 --> 00:18:49,080
음표 분류를 하고 싶을 수도 있습니다

510
00:18:49,080 --> 00:18:50,700
이것은 일종의

511
00:18:50,700 --> 00:18:52,860
그래프 기계 학습의 고전적인 문제 다른 문제가 있지만

512
00:18:52,860 --> 00:18:54,179


513
00:18:54,179 --> 00:18:57,000
이것에 대해 이야기하겠습니다. 더 쉽기 때문에 음

514
00:18:57,000 --> 00:19:00,059
그래프가 있고 이 그래프에는 서로

515
00:19:00,059 --> 00:19:01,919
다른 레이블이 있는 노드가 있습니다.

516
00:19:01,919 --> 00:19:03,900
여기 주황색과 파란색 두 종류의 레이블이 있습니다.

517
00:19:03,900 --> 00:19:06,600


518
00:19:06,600 --> 00:19:07,620
음,

519
00:19:07,620 --> 00:19:10,860
그리고

520
00:19:10,860 --> 00:19:12,840
이 노드 사이에 가장자리가 있고 원하는 것은

521
00:19:12,840 --> 00:19:14,580
이러한 종류의 메시지

522
00:19:14,580 --> 00:19:16,980
전달을 수행하여 쉽게 분류할 수 있는

523
00:19:16,980 --> 00:19:18,600
이러한 노드에 대한 일부 표현을 계산하기 위해

524
00:19:18,600 --> 00:19:20,760


525
00:19:20,760 --> 00:19:22,980
파란색과 파란색을 쉽게 분류할 수 있습니다.  주황색

526
00:19:22,980 --> 00:19:25,140
노트

527
00:19:25,140 --> 00:19:26,580
음 이제 꽤

528
00:19:26,580 --> 00:19:29,700
흥미로운 점은 많은 종류의

529
00:19:29,700 --> 00:19:31,679
그래프 신경망에 대해

530
00:19:31,679 --> 00:19:32,460
음

531
00:19:32,460 --> 00:19:34,440
이러한 그래프의 속성

532
00:19:34,440 --> 00:19:35,580
과 이러한 종류의 서로 다른

533
00:19:35,580 --> 00:19:37,860
노드가 연결되는 방식에 따라 성능이

534
00:19:37,860 --> 00:19:39,900
상당히 많이 달라질 수 있다는 것입니다

535
00:19:39,900 --> 00:19:41,580
음 특히 다음에 의해 영향을 받습니다

536
00:19:41,580 --> 00:19:44,400
heterophili라고 하는 이 속성은 음,

537
00:19:44,400 --> 00:19:46,620


538
00:19:46,620 --> 00:19:49,140
반대가 얼마나 매력적인지 측정하는 것입니다. 음,

539
00:19:49,140 --> 00:19:52,860
매우 간단한 공식이 있습니다.

540
00:19:52,860 --> 00:19:54,179
음 기본적으로

541
00:19:54,179 --> 00:19:56,280
주황색과 파란색 음 사이의 가장자리 수를 취하여

542
00:19:56,280 --> 00:19:58,080
총 가장자리 수로 나눕니다.

543
00:19:58,080 --> 00:20:00,240
맞습니다 그래서 기본적으로

544
00:20:00,240 --> 00:20:02,160
이 그래프에서

545
00:20:02,160 --> 00:20:04,020


546
00:20:04,020 --> 00:20:05,460
서로 반대라는 것을 알고 있는 것과

547
00:20:05,460 --> 00:20:07,799


548
00:20:07,799 --> 00:20:10,200
유사한 종류의 노드 사이에 있는 연결을 알고 있는 것 사이에 얼마나 많은 연결이 있는지 확인합니다

549
00:20:10,200 --> 00:20:12,179
음 그래서 이런 종류의 많은 것이 있다면

550
00:20:12,179 --> 00:20:14,039
이러한 종류의 이기종 연결의

551
00:20:14,039 --> 00:20:16,740
경우 매우 높은 이질성을 가지고

552
00:20:16,740 --> 00:20:18,120
있으며 많은 그래픽이

553
00:20:18,120 --> 00:20:19,620
해당 설정에서 정확히 어려움을 겪지 않는다는 것이 밝혀졌습니다.

554
00:20:19,620 --> 00:20:22,740


555
00:20:22,740 --> 00:20:24,059
해당 설정에서 항목을 분류하기가 매우 어렵고

556
00:20:24,059 --> 00:20:26,100
반복적으로 일종의

557
00:20:26,100 --> 00:20:29,160
이유도 알 수 있습니다.  당신은 당신이

558
00:20:29,160 --> 00:20:31,320


559
00:20:31,320 --> 00:20:34,559
알고 있는 어떤 종류의 추론에 쉽게 적용할 수 있다는 것을 알고 있기 때문에 오 이

560
00:20:34,559 --> 00:20:36,840
노트는 이러한 다른 노드가

561
00:20:36,840 --> 00:20:38,760
연결된 것처럼 보이므로 원하는

562
00:20:38,760 --> 00:20:40,440
경우 동일한 커뮤니티에 있거나

563
00:20:40,440 --> 00:20:42,299
동일한 레이블에 있어야 합니다.  하지만

564
00:20:42,299 --> 00:20:43,799
모든 것이 서로 다르다는 것을 알면 그렇게 하는 것이 훨씬 더 어렵습니다.

565
00:20:43,799 --> 00:20:45,900


566
00:20:45,900 --> 00:20:47,580


567
00:20:47,580 --> 00:20:49,679
그리고 이 커뮤니티는

568
00:20:49,679 --> 00:20:51,840


569
00:20:51,840 --> 00:20:53,520
그래프를 보고 멋지게

570
00:20:53,520 --> 00:20:55,320
클러스터링된 커뮤니티가 있는 경우 시각적으로도 제대로 형성되지 않는 것 같습니다.

571
00:20:55,320 --> 00:20:57,059
그것들 사이에 선을 긋는 것이 아주 쉽다는 것을 알고 있습니다.

572
00:20:57,059 --> 00:20:59,100
오 이것은 어 커뮤니티

573
00:20:59,100 --> 00:21:01,559
다른 커뮤니티입니다 하지만 상황이 매우 혼합된 경우 음 매우

574
00:21:01,559 --> 00:21:02,640


575
00:21:02,640 --> 00:21:04,440
도전적이며

576
00:21:04,440 --> 00:21:05,820


577
00:21:05,820 --> 00:21:07,799
이러한 모델에 대해서도 도전적이라는 것이 밝혀졌습니다.

578
00:21:07,799 --> 00:21:09,960
우리가 이것을 해야 한다는 것을 알 때

579
00:21:09,960 --> 00:21:11,460


580
00:21:11,460 --> 00:21:14,460
음 그래서 이것은 일종의 문제입니다. 음

581
00:21:14,460 --> 00:21:16,380
이 관점이

582
00:21:16,380 --> 00:21:19,320
제가 언급한 이 위상학적 관점은 어

583
00:21:19,320 --> 00:21:22,679
당신이 알고 있는 몇 가지 유용한 일을 하는 데 익숙해질 것입니다

584
00:21:22,679 --> 00:21:23,460
음

585
00:21:23,460 --> 00:21:27,780
알겠습니다 그래서 그래프의 toshibs로 돌아가

586
00:21:27,780 --> 00:21:29,640
음  이쯤 되면 서론

587
00:21:29,640 --> 00:21:31,380
에서 언급한 내용을 거의 잊어버리실 수 있을 것 같은데요

588
00:21:31,380 --> 00:21:33,360
어 아니면

589
00:21:33,360 --> 00:21:36,179
거기에 오해의 소지가 있는 부분이 있다면 어 저희는

590
00:21:36,179 --> 00:21:39,120
여기서 0 비트부터 시작하는 거 아시죠 그래서 음

591
00:21:39,120 --> 00:21:41,400
문제가 없으니까

592
00:21:41,400 --> 00:21:43,140
왼쪽에 음

593
00:21:43,140 --> 00:21:44,880
그래프만 있으면

594
00:21:44,880 --> 00:21:46,740
음  이것은 일종의

595
00:21:46,740 --> 00:21:48,780
그래프의 사건 구조입니다.

596
00:21:48,780 --> 00:21:50,880
두 개의

597
00:21:50,880 --> 00:21:53,520
노드 V와 U가 있고 그

598
00:21:53,520 --> 00:21:55,320
사이에 에지가 있는 가장 간단한 가능한 그래프가 들리지 않습니다. 그래서 이것은 하나의 에지가 있는 그래프일 뿐입니다.

599
00:21:55,320 --> 00:21:56,940


600
00:21:56,940 --> 00:21:59,580
그리고 저는 방금

601
00:21:59,580 --> 00:22:01,380
그것을 이런 종류의 입사

602
00:22:01,380 --> 00:22:04,260
구조로 표현했습니다. 오른쪽 노드 V는

603
00:22:04,260 --> 00:22:06,960
노드 e에 입사하고 노드 어 죄송합니다.

604
00:22:06,960 --> 00:22:10,620
Edge e와 노드 U는 he에 입사하므로

605
00:22:10,620 --> 00:22:12,659
이것은 단지 입사 구조이고

606
00:22:12,659 --> 00:22:14,640
무엇이  우리가 보여주고 있는 삼각형 기호의 종류는

607
00:22:14,640 --> 00:22:16,799
이러한 입사 구조입니다.

608
00:22:16,799 --> 00:22:18,419


609
00:22:18,419 --> 00:22:20,820
원하는 경우 이 입사 관계를 상징하는 방법입니다.

610
00:22:20,820 --> 00:22:22,559
따라서 이것은 그래프일 뿐이며

611
00:22:22,559 --> 00:22:25,200


612
00:22:25,200 --> 00:22:27,960
그래프의 필드에 대해 생각할 수 있는 방법은 매핑입니다.  이

613
00:22:27,960 --> 00:22:29,640
그래프 구조는 일종의

614
00:22:29,640 --> 00:22:32,100
범주 이론 번역입니다. 우리는

615
00:22:32,100 --> 00:22:34,100
이 그래프를

616
00:22:34,100 --> 00:22:37,140
여러분이 알고 있는 매우 유사한 다른 것으로 변환합니다.

617
00:22:37,140 --> 00:22:38,640
구조는 일종의 동일합니다.

618
00:22:38,640 --> 00:22:40,620
이러한 의미의 종류입니다. 어 사물이

619
00:22:40,620 --> 00:22:44,340
변경되므로 각 노드 V에 대해 우리는

620
00:22:44,340 --> 00:22:46,980
음 여기 이것은 벡터 공간이 될 것입니다. 그래서 F

621
00:22:46,980 --> 00:22:49,440
of e는 각 노드에 대한 벡터 공간입니다.

622
00:22:49,440 --> 00:22:51,419
여기 U의 F는 또 다른

623
00:22:51,419 --> 00:22:54,720
벡터 공간입니다. 어 각 에지 e에 대한 우리는

624
00:22:54,720 --> 00:22:57,840
또 다른 벡터 공간인 Fe를 가지고 있습니다.

625
00:22:57,840 --> 00:23:00,059
그래서 모든 노드는 그들의  자체 벡터

626
00:23:00,059 --> 00:23:02,760
공간과

627
00:23:02,760 --> 00:23:04,860
해당 벡터 공간을 떠나는 노드와 관련된 기능이므로

628
00:23:04,860 --> 00:23:06,900
기본적으로 각 노드에 대해

629
00:23:06,900 --> 00:23:08,940


630
00:23:08,940 --> 00:23:11,580
지금까지 진행된 기능의 벡터 공간과

631
00:23:11,580 --> 00:23:13,440
이러한 사건 관계가

632
00:23:13,440 --> 00:23:16,740
무언가로 변환되고

633
00:23:16,740 --> 00:23:18,539
변환되는 화살표가 있습니다.  분명한 것은 선형

634
00:23:18,539 --> 00:23:20,760
맵입니다. 이것이 벡터 공간이라면

635
00:23:20,760 --> 00:23:22,559
이러한 것들은 선형 맵이거나

636
00:23:22,559 --> 00:23:24,659
본질적으로 올바른 일부 행렬이어야 합니다.

637
00:23:24,659 --> 00:23:26,880
여기에서 볼 수 있는 각 화살표에 대해 행렬이 있고 음 어

638
00:23:26,880 --> 00:23:28,140


639
00:23:28,140 --> 00:23:29,820


640
00:23:29,820 --> 00:23:30,919


641
00:23:30,919 --> 00:23:35,340


642
00:23:35,340 --> 00:23:37,860
그렇군요.  몇 개의 슬라이드에서 주장하고 보여주는

643
00:23:37,860 --> 00:23:40,500
것은 기본적으로 전달되는 메시지가

644
00:23:40,500 --> 00:23:41,580


645
00:23:41,580 --> 00:23:44,220
음 어 그래프에서 매우 유사하다는 것입니다.

646
00:23:44,220 --> 00:23:46,559
그룹 이론에서 그룹 작업과 매우 유사합니다.

647
00:23:46,559 --> 00:23:47,880


648
00:23:47,880 --> 00:23:50,640
음, 그 이유를 정확히 설명하겠습니다. 그러면

649
00:23:50,640 --> 00:23:53,340
우리가 왼쪽에 있는 것을 생각할 수 있습니다.

650
00:23:53,340 --> 00:23:55,799


651
00:23:55,799 --> 00:23:57,600
발생률 관계에서 이 화살표는

652
00:23:57,600 --> 00:23:59,820
이러한 오류를

653
00:23:59,820 --> 00:24:02,280
우리가 누를 수 있는 일종의 패턴으로 생각할 수 있습니다. 그래서 이것이 무엇을 의미합니까?

654
00:24:02,280 --> 00:24:05,880
만약 우리가 왼쪽 오른쪽에 이 노드 V를 가지고

655
00:24:05,880 --> 00:24:09,059
있고 이것은 우리가 어떤 특징을 가지고 있다면 이것은 지금입니다.

656
00:24:09,059 --> 00:24:12,360
fov 오른쪽에 있는 일부 기능은

657
00:24:12,360 --> 00:24:14,700


658
00:24:14,700 --> 00:24:17,880
여기 이 화살표 버튼을 누를 수 있습니다. 그런 다음

659
00:24:17,880 --> 00:24:20,880
이 기능에 이 매트릭스를 곱하면

660
00:24:20,880 --> 00:24:22,980
가장자리 기능을 얻을 수 있습니다.

661
00:24:22,980 --> 00:24:24,840


662
00:24:24,840 --> 00:24:27,179
음, 이 화살표를 따라 가면 이

663
00:24:27,179 --> 00:24:29,220
매트릭스가 이것을 곱할 것입니다.  피처와

664
00:24:29,220 --> 00:24:31,559
이 꼭지점 피처 그리고 가장자리 피처를 제공할 것입니다.

665
00:24:31,559 --> 00:24:33,299


666
00:24:33,299 --> 00:24:34,860
음, 이 화살표가 피처를

667
00:24:34,860 --> 00:24:36,360


668
00:24:36,360 --> 00:24:38,100


669
00:24:38,100 --> 00:24:40,799
꼭지점에서 가장자리로, 가장자리에서

670
00:24:40,799 --> 00:24:42,840
꼭지점으로 이동하기 위해 사용할 수 있는 일종의 작업을 제공하는 것으로 생각한다면  경우에 그것은 일종의

671
00:24:42,840 --> 00:24:44,340
왼쪽 동작 오른쪽이므로 이것은 내가

672
00:24:44,340 --> 00:24:47,100
말하는 것입니다. 저는 이 R을 취하고 있습니다. 이것은 어

673
00:24:47,100 --> 00:24:50,159
여기 있는 것입니다. 저는 노드 V의 일부 기능에 대해 작동합니다.

674
00:24:50,159 --> 00:24:53,280
그래서 여기에 있는 이 HOV가

675
00:24:53,280 --> 00:24:54,600
바로

676
00:24:54,600 --> 00:24:57,299
음, 그리고 제가 하는 방법입니다.  나는 이

677
00:24:57,299 --> 00:24:59,640
화살표와 관련된 이 행렬을 이

678
00:24:59,640 --> 00:25:03,960
행렬에 취해서 이 벡터 HOV를 곱하므로

679
00:25:03,960 --> 00:25:07,020
행렬 곱하기 벡터가 전부입니다. 그리고

680
00:25:07,020 --> 00:25:08,940
나서 우리는 가장자리 특징을 얻습니다. 이것은

681
00:25:08,940 --> 00:25:10,919
여기에서 여기로 이동하는 방법의 일종입니다.

682
00:25:10,919 --> 00:25:12,539
그래서 이것은 이미

683
00:25:12,539 --> 00:25:13,860
일종의 메시지 전달처럼 보입니다. 우리는

684
00:25:13,860 --> 00:25:15,780
이 정점에서 이 Edge로 메시지를 전달하고 있습니다.

685
00:25:15,780 --> 00:25:18,000


686
00:25:18,000 --> 00:25:19,860
하지만 이제

687
00:25:19,860 --> 00:25:22,559
이 Edge에서 사용된 다른 정점으로 메시지를 전달해야 합니다.

688
00:25:22,559 --> 00:25:25,140


689
00:25:25,140 --> 00:25:27,419
V에서 U로 이동

690
00:25:27,419 --> 00:25:29,100
음 그래서 우리는 e를 통과함으로써 그렇게 했습니다. 그래서

691
00:25:29,100 --> 00:25:32,220
우리는 역방향으로 가면서 그것을 할 수 있었습니다. 그래서 우리는

692
00:25:32,220 --> 00:25:33,840


693
00:25:33,840 --> 00:25:36,059


694
00:25:36,059 --> 00:25:39,059
이 행렬을 적용하는 대신

695
00:25:39,059 --> 00:25:41,580
우리는 인접 행렬을 적용했습니다.

696
00:25:41,580 --> 00:25:44,940
전치 행렬이 아니므로 대신

697
00:25:44,940 --> 00:25:47,760
여기에서 여기로 이동하려면 음 이

698
00:25:47,760 --> 00:25:49,500


699
00:25:49,500 --> 00:25:50,880
행렬을 적용하는 대신

700
00:25:50,880 --> 00:25:52,440
다른 방향으로 가고 싶기 때문에 전치 행렬을 적용합니다.

701
00:25:52,440 --> 00:25:54,659


702
00:25:54,659 --> 00:25:56,340
기능을

703
00:25:56,340 --> 00:25:59,460
V에서 U로 이동할 수 있습니다. 그래서 이것은 메시지 전달을 위해

704
00:25:59,460 --> 00:26:02,400
이러한 작업을 적용할 수 있는 방법입니다.

705
00:26:02,400 --> 00:26:05,580


706
00:26:05,580 --> 00:26:07,140
이러한 작업을 시프트 작업 또는

707
00:26:07,140 --> 00:26:10,500
사전 시프트 작업이라고 합니다.

708
00:26:10,500 --> 00:26:12,299


709
00:26:12,299 --> 00:26:14,940
이것과 그룹에 있는 것 사이의 관계

710
00:26:14,940 --> 00:26:16,980
어 이론

711
00:26:16,980 --> 00:26:19,500
음 그래서

712
00:26:19,500 --> 00:26:22,380
그룹을 나타내는 한 가지 방법은 일종의 그래프를 갖는 것입니다

713
00:26:22,380 --> 00:26:24,299


714
00:26:24,299 --> 00:26:27,480
음 여기 왼쪽에 있습니다 그래서

715
00:26:27,480 --> 00:26:31,080
어 우리는 일종의 별 개체를 가지고 있습니다 그것은

716
00:26:31,080 --> 00:26:33,840
단지 친절합니다

717
00:26:33,840 --> 00:26:35,580
하지만 모든 그룹 구조는 이 화살표에 있으므로

718
00:26:35,580 --> 00:26:37,620
각 그룹 요소에 대해

719
00:26:37,620 --> 00:26:40,200


720
00:26:40,200 --> 00:26:42,480
예를 들어 이 G가 90도 회전이라고 가정해 보겠습니다.

721
00:26:42,480 --> 00:26:43,919


722
00:26:43,919 --> 00:26:45,600


723
00:26:45,600 --> 00:26:48,900
구체적인 예는

724
00:26:48,900 --> 00:26:50,940
이 화살표가 90도 회전에 해당할 수 있습니다.

725
00:26:50,940 --> 00:26:53,400
우리는

726
00:26:53,400 --> 00:26:55,559
반대 마이너스 종류의 90

727
00:26:55,559 --> 00:26:57,360
도 회전을 수행하는 또 다른 화살표가 있습니다. 이는 해당 변형의 역입니다. 음,

728
00:26:57,360 --> 00:26:58,919


729
00:26:58,919 --> 00:27:00,360
이것은

730
00:27:00,360 --> 00:27:02,520
이 그룹의 구조와 같습니다.  또한 우리가 방금 본 것처럼

731
00:27:02,520 --> 00:27:04,260
이와 유사한 종류의 변환을 수행합니다.

732
00:27:04,260 --> 00:27:06,419


733
00:27:06,419 --> 00:27:08,279
음 기본적으로 기본적으로

734
00:27:08,279 --> 00:27:11,159
이 그룹에 사전 이동을 정의합니다. 어 우리는 이

735
00:27:11,159 --> 00:27:13,380
별을 벡터 공간에 매핑하므로 별 종류는

736
00:27:13,380 --> 00:27:15,900


737
00:27:15,900 --> 00:27:17,760
이전에 가지고 있던 정점이 됩니다.  이제 우리는 단 하나의 꼭짓점을 가지고 있습니다.

738
00:27:17,760 --> 00:27:20,820
그리고 그것은 우리가 가진 화살표뿐입니다 음

739
00:27:20,820 --> 00:27:22,919
그래서 별은 여기 파란색으로 표시된 이 벡터 공간이 아닙니다.

740
00:27:22,919 --> 00:27:25,860


741
00:27:25,860 --> 00:27:27,240


742
00:27:27,240 --> 00:27:28,919


743
00:27:28,919 --> 00:27:31,440
그룹 이론에서

744
00:27:31,440 --> 00:27:32,100
음

745
00:27:32,100 --> 00:27:34,980
예를 들어 만약 당신이

746
00:27:34,980 --> 00:27:37,260
이 정점에 작용하고 싶다면 오 죄송합니다 이

747
00:27:37,260 --> 00:27:39,779
벡터 v에 대한 정점이 아닙니다 바로 여기 당신은

748
00:27:39,779 --> 00:27:42,600
이 벡터 공간에 있는 벡터를 가지고 있고 당신은

749
00:27:42,600 --> 00:27:45,419
이 그룹 변환 G에 의해 그것에 작용하기를 원합니다 그래서

750
00:27:45,419 --> 00:27:47,220
본질적으로 당신은 하고 싶습니다  이 화살표를 눌러

751
00:27:47,220 --> 00:27:49,919
그것에 몇 가지 작업을 적용하면

752
00:27:49,919 --> 00:27:52,320
음,

753
00:27:52,320 --> 00:27:54,779
이 변환 때문에 이 G가

754
00:27:54,779 --> 00:27:57,299
회전 매트릭스인 일부 매트릭스에 매핑되어

755
00:27:57,299 --> 00:27:59,460
해당 회전 매트릭스에

756
00:27:59,460 --> 00:28:02,659
이 회전 매트릭스를 V에 적용하면 결과를

757
00:28:02,659 --> 00:28:06,120
얻을 수 있습니다.  여기 90도 회전과 같이

758
00:28:06,120 --> 00:28:07,260


759
00:28:07,260 --> 00:28:09,120
음 그래서 이것이 진행되고 있는 것입니다. 이런

760
00:28:09,120 --> 00:28:10,799
종류의 수직 벡터가

761
00:28:10,799 --> 00:28:12,419
회전된 벡터를 보여주고 있습니다.

762
00:28:12,419 --> 00:28:13,080


763
00:28:13,080 --> 00:28:15,000


764
00:28:15,000 --> 00:28:17,760


765
00:28:17,760 --> 00:28:20,640
음 이것은 우리가 이전 슬라이드에서 본 것과 완전히 유사합니다.

766
00:28:20,640 --> 00:28:23,400
이러한 종류의 행동은

767
00:28:23,400 --> 00:28:25,440
본질적으로

768
00:28:25,440 --> 00:28:27,720
메시지 전달이라고 생각할 수 있는 것은 그룹 이론의 그룹 행동과 동일

769
00:28:27,720 --> 00:28:29,640
하지만

770
00:28:29,640 --> 00:28:32,159
이 그룹을 그래프로 대체하면 그와 유사합니다.

771
00:28:32,159 --> 00:28:34,860
그래서 어 그것은

772
00:28:34,860 --> 00:28:36,299
일종의 다른 종류의 번역입니다.

773
00:28:36,299 --> 00:28:38,940
왼쪽에 있는 개체를 대체하는 위치

774
00:28:38,940 --> 00:28:41,580
어 이제 이것은 그래프인 것처럼 보입니다.

775
00:28:41,580 --> 00:28:43,919
이것은 그룹입니다. 하지만

776
00:28:43,919 --> 00:28:46,440
나머지는 정확히 동일하게 유지되므로 음

777
00:28:46,440 --> 00:28:48,360
가능합니다.

778
00:28:48,360 --> 00:28:50,520


779
00:28:50,520 --> 00:28:52,559
이 토폴로지 관점에서 그래프를 통한 메시지 전달을 통해 기계 학습에서 꽤 많이 탐구된

780
00:28:52,559 --> 00:28:54,600
이러한 모든 종류의 대칭과 이와 유사한 것들을 연결

781
00:28:54,600 --> 00:28:56,039


782
00:28:56,039 --> 00:28:57,360


783
00:28:57,360 --> 00:28:59,700
하고 이들이 관련되는 한 가지 방법을 보기 위해 음

784
00:28:59,700 --> 00:29:02,580


785
00:29:02,580 --> 00:29:05,460
좋습니다. 이제 내 회로에서  이것은

786
00:29:05,460 --> 00:29:07,440
모두 매우 정교하고 훌륭했지만

787
00:29:07,440 --> 00:29:09,600
이것이 기본적으로 어디에서나 진행되는 것이 무엇인지 알고 있습니다. 음,

788
00:29:09,600 --> 00:29:10,860


789
00:29:10,860 --> 00:29:12,360


790
00:29:12,360 --> 00:29:15,480
매우 진취적인 예를 보여 드리겠습니다.

791
00:29:15,480 --> 00:29:18,360
시간이 제한되어 있다는 것을 알고

792
00:29:18,360 --> 00:29:20,940
우리가 보여준 것은

793
00:29:20,940 --> 00:29:23,340
처음에 제가 말했듯이 많은

794
00:29:23,340 --> 00:29:24,960
그래핀 네트워크는

795
00:29:24,960 --> 00:29:27,240
이러한 이종성 그래프에서 어려움을 겪고 있습니다. 그리고 우리가

796
00:29:27,240 --> 00:29:28,620
보여준 것은

797
00:29:28,620 --> 00:29:30,779
음, 당신의 그래프가 얼마나 이성애적이거나 이상하든 상관없이 어,

798
00:29:30,779 --> 00:29:33,600
당신은

799
00:29:33,600 --> 00:29:36,899
항상 약간의 이동 구조를 찾을 수 있다는 것입니다.

800
00:29:36,899 --> 00:29:38,700
본질적으로 신경망을 통과하는 메시지의 일종입니다.

801
00:29:38,700 --> 00:29:41,820


802
00:29:41,820 --> 00:29:44,279
충분한 레이어를 사용하면 노드

803
00:29:44,279 --> 00:29:46,559
의 클래스를 풀 수 있으므로

804
00:29:46,559 --> 00:29:49,440


805
00:29:49,440 --> 00:29:51,539
이 그림에서 가장 왼쪽에 있는 것을 보여주기 위해 음

806
00:29:51,539 --> 00:29:53,580


807
00:29:53,580 --> 00:29:55,980
의 색상을 표시합니다.  그들은

808
00:29:55,980 --> 00:29:58,980
걸쇠를 보여주므로

809
00:29:58,980 --> 00:30:01,559
여기에 3개의 색상이 있으므로 3개의 클래스가 맞습니다

810
00:30:01,559 --> 00:30:03,179
음 그리고 이것은 처음에 있는 일종의 그래프이고

811
00:30:03,179 --> 00:30:05,399


812
00:30:05,399 --> 00:30:07,679
이 상자에 있는 노드의 위치는 기능을 나타냅니다.

813
00:30:07,679 --> 00:30:08,940


814
00:30:08,940 --> 00:30:10,980
기능을 시각화합니다.

815
00:30:10,980 --> 00:30:14,340
2D 위치는

816
00:30:14,340 --> 00:30:16,440
실제로 2D 기능입니다. 각 노드의 벡터입니다.

817
00:30:16,440 --> 00:30:17,399


818
00:30:17,399 --> 00:30:18,419
처음에는

819
00:30:18,419 --> 00:30:20,159
모든 것이 매우 지저분하고

820
00:30:20,159 --> 00:30:22,380
얽혀 있는 것을 볼 수 있습니다.

821
00:30:22,380 --> 00:30:24,240
이 노트를 분류하려는 경우 매우

822
00:30:24,240 --> 00:30:25,919
어렵기 때문입니다.  표현은

823
00:30:25,919 --> 00:30:28,140
초기 표현이 매우

824
00:30:28,140 --> 00:30:30,899
지저분하고 일종의 어 얽혀

825
00:30:30,899 --> 00:30:33,120
있지만

826
00:30:33,120 --> 00:30:34,679
메시지 전달 모델에 대한 특정 종류의 키 레이어를 더 많이 쌓을수록

827
00:30:34,679 --> 00:30:36,419


828
00:30:36,419 --> 00:30:39,360
음 당신은 이러한

829
00:30:39,360 --> 00:30:41,399
클래스가 얼마나 점진적으로 더 적절한

830
00:30:41,399 --> 00:30:42,440
각도와 더 많은 것을 알게 되는지 알 수 있습니다.

831
00:30:42,440 --> 00:30:45,720
각각의 새로운 레이어와 이런 종류의

832
00:30:45,720 --> 00:30:47,460
표현은 붕괴되고

833
00:30:47,460 --> 00:30:49,860
이러한 종류의 클러스터링을 형성한 다음

834
00:30:49,860 --> 00:30:51,419


835
00:30:51,419 --> 00:30:53,340
마지막에 도달하면

836
00:30:53,340 --> 00:30:55,200
이 세 커뮤니티를 매우

837
00:30:55,200 --> 00:30:57,659
명확하게 볼 수 있으며 분리하기가 매우 쉽습니다.

838
00:30:57,659 --> 00:30:59,159


839
00:30:59,159 --> 00:31:02,100
이 결과의 이면에 있는 본질은

840
00:31:02,100 --> 00:31:05,039
우리가 다양한

841
00:31:05,039 --> 00:31:07,980
종류의 문제에 대해 이론을 사용하여 문제를 해결하기 위해 어떤 종류의 Chief 또는

842
00:31:07,980 --> 00:31:10,020
메시지 전달 모델이 필요한지를 보여주었다는 것입니다.

843
00:31:10,020 --> 00:31:13,200


844
00:31:13,200 --> 00:31:14,880
음, 이것은

845
00:31:14,880 --> 00:31:18,419
몇 가지 중요한 비트를 보여주기 때문에 매우 중요합니다.

846
00:31:18,419 --> 00:31:20,820


847
00:31:20,820 --> 00:31:22,919


848
00:31:22,919 --> 00:31:25,020
특정 종류의 문제를 해결하기 위해 변경하거나 사용하고 싶을 수 있는 아키텍처의 조각

849
00:31:25,020 --> 00:31:27,120
과 일종의

850
00:31:27,120 --> 00:31:29,640
불가능한 결과도 있었으므로

851
00:31:29,640 --> 00:31:31,620
어떤 종류의 네트워크 그래프를 사용하면

852
00:31:31,620 --> 00:31:33,120
해결할 수 없습니다.  이 문제를

853
00:31:33,120 --> 00:31:35,640
해결하는 데 어려움을 겪게 될 것입니다.

854
00:31:35,640 --> 00:31:37,740
좀 더

855
00:31:37,740 --> 00:31:39,960
일반적인 문제를 사용하면 기회가 있을 수 있습니다.

856
00:31:39,960 --> 00:31:41,580


857
00:31:41,580 --> 00:31:44,279
그래서 이것은 여러분이 알고 있는

858
00:31:44,279 --> 00:31:46,440
높은 수준의 관점을 음

859
00:31:46,440 --> 00:31:48,600
이러한 이론적인 것 뒤에 있는 것입니다.

860
00:31:48,600 --> 00:31:51,779
실제로 실제로 하고 있는

861
00:31:51,779 --> 00:31:53,399


862
00:31:53,399 --> 00:31:55,440
것은 기본적으로 이러한 메시지

863
00:31:55,440 --> 00:31:57,779
전달 기능을 배우거나 시트

864
00:31:57,779 --> 00:32:00,779
또는 이러한 행렬을 배우는 것입니다. 실제로

865
00:32:00,779 --> 00:32:02,159
누군가가 노드 분류 작업을 제공할 때

866
00:32:02,159 --> 00:32:04,799


867
00:32:04,799 --> 00:32:08,220
정확히 무엇이 옳은지 사전에 알기가 매우 어렵습니다

868
00:32:08,220 --> 00:32:09,480


869
00:32:09,480 --> 00:32:11,279
음  올바른 메시지 전달 모델을 위한 올바른 C 어

870
00:32:11,279 --> 00:32:14,760
그 작업을 정렬하기 위해 음

871
00:32:14,760 --> 00:32:16,919
그리고 우리가 하는 것은 실제로

872
00:32:16,919 --> 00:32:19,260
데이터에서 배우는 것이므로

873
00:32:19,260 --> 00:32:21,539
메시지 전달을 수행하는 이러한 행렬을 배웠습니다. 우리는

874
00:32:21,539 --> 00:32:23,399


875
00:32:23,399 --> 00:32:25,980
일부 신경망을 사용하여 데이터에서 학습합니다.

876
00:32:25,980 --> 00:32:28,860
여기 빨간색으로 표시되어

877
00:32:28,860 --> 00:32:30,980
있고

878
00:32:30,980 --> 00:32:33,299
이러한 벡터 공간 사이에서 기능을 전송

879
00:32:33,299 --> 00:32:35,640
하고 이동하는 방법을 배웁니다. 따라서

880
00:32:35,640 --> 00:32:37,200


881
00:32:37,200 --> 00:32:39,899
이러한 노드와 가장자리의 기능인 벡터가

882
00:32:39,899 --> 00:32:41,580
이동하는 방식이 어떻게 달라지는지 보여줍니다.

883
00:32:41,580 --> 00:32:43,260
Via this matrices를 거치면서

884
00:32:43,260 --> 00:32:44,520
약간의 Matrix

885
00:32:44,520 --> 00:32:46,140
multiplications

886
00:32:46,140 --> 00:32:46,980
음

887
00:32:46,980 --> 00:32:49,620
그리고 좋습니다 그래서 이것은

888
00:32:49,620 --> 00:32:51,779
이 모델 뒤에 있는 일종의 높은 수준이며 우리는

889
00:32:51,779 --> 00:32:53,279
이것을 일종의 실제

890
00:32:53,279 --> 00:32:56,580
세계 어 이종성 데이터 세트에서 평가했습니다.

891
00:32:56,580 --> 00:32:59,640


892
00:32:59,640 --> 00:33:00,960
일종의 다양한

893
00:33:00,960 --> 00:33:03,240
커뮤니티 또는 다른 종류의 레이블

894
00:33:03,240 --> 00:33:06,480
과 이러한 데이터 세트는

895
00:33:06,480 --> 00:33:09,120
음 오른쪽에서 왼쪽으로 이동합니다. 그들은 점점

896
00:33:09,120 --> 00:33:10,919
더 이질적이어서 어떤 의미에서

897
00:33:10,919 --> 00:33:13,019
고전적인 아키텍처

898
00:33:13,019 --> 00:33:15,179
와 이

899
00:33:15,179 --> 00:33:17,580
모든 것들에서 영감을 받은 우리 모델에 대해 더 도전적입니다.

900
00:33:17,580 --> 00:33:20,159
이 벤치마크에서 높은 점수를 받았고

901
00:33:20,159 --> 00:33:21,600


902
00:33:21,600 --> 00:33:23,940
동시에 그들은

903
00:33:23,940 --> 00:33:27,179


904
00:33:27,179 --> 00:33:29,399
이 공간의 다른 모델이 수행한 다양한 선택을 일부 공개했거나 정당화했습니다.

905
00:33:29,399 --> 00:33:31,500


906
00:33:31,500 --> 00:33:32,820


907
00:33:32,820 --> 00:33:34,980


908
00:33:34,980 --> 00:33:38,159


909
00:33:38,159 --> 00:33:40,019
그들이 이미 다양한 일을하고있는 이유를 보여줍니다 왜 이런

910
00:33:40,019 --> 00:33:41,580
관점에서 그들이 말이되는지

911
00:33:41,580 --> 00:33:45,299
어 이론

912
00:33:45,299 --> 00:33:48,840
음 괜찮아 그게 다야 음

913
00:33:48,840 --> 00:33:49,860
내가 가진 전부 음 그래

914
00:33:49,860 --> 00:33:52,500
들어 주셔서 감사합니다 그리고

915
00:33:52,500 --> 00:33:54,779
그래 이것에 대해 더 이야기하게되어 기쁩니다 그리고

916
00:33:54,779 --> 00:33:56,880


917
00:33:56,880 --> 00:33:59,580
당신이 알고 있는 경우를 대비해 많은 백업 슬라이드도 가지고 있습니다 어 얼마나 멀리 갈

918
00:33:59,580 --> 00:34:00,960
수 있는지에 따라 Venture가 이러한 질문에 대해 제안합니다

919
00:34:00,960 --> 00:34:03,080


920
00:34:04,260 --> 00:34:07,740
오 글쎄요 멋진 작업입니다

921
00:34:07,740 --> 00:34:08,820


922
00:34:08,820 --> 00:34:10,800
라이브 채팅에 있는 사람들을 위한 프레젠테이션에 감사합니다 그들은

923
00:34:10,800 --> 00:34:13,379
몇 가지 질문을 작성할 수 있지만

924
00:34:13,379 --> 00:34:15,379
제가 할 일이 많습니다  우리가 이야기할 수 있을 것 같아서

925
00:34:15,379 --> 00:34:18,359


926
00:34:18,359 --> 00:34:22,619


927
00:34:22,619 --> 00:34:25,320
uh vanderlar kudal과 DeVries의 논문 초록에서 인용문을 읽는 것으로 시작하여

928
00:34:25,320 --> 00:34:26,520
능동적 추론 맥락에서 이것을 근거로 삼고

929
00:34:26,520 --> 00:34:28,800


930
00:34:28,800 --> 00:34:31,918
메시지 전달이

931
00:34:31,918 --> 00:34:34,500
당신이 설명하고 있는 접근에 접근하는 이유를 실제로 정당화하고 싶습니다.

932
00:34:34,500 --> 00:34:36,418
능동 추론 모델링을 돕고 있으므로

933
00:34:36,418 --> 00:34:38,159


934
00:34:38,159 --> 00:34:40,679
합성 능동 추론 에이전트 실현이라는 두 개의 논문이 있으며

935
00:34:40,679 --> 00:34:43,440


936
00:34:43,440 --> 00:34:45,480
합성 능동 추론 에이전트의 전체 메시지 전달 계정으로 작성되었습니다.

937
00:34:45,480 --> 00:34:48,659


938
00:34:48,659 --> 00:34:51,899


939
00:34:51,899 --> 00:34:53,940


940
00:34:53,940 --> 00:34:56,540
합성 능동적 추론 프레임워크의 응용 프로그램

941
00:34:56,540 --> 00:35:00,300
이므로 메시지 전달 구조를 아는 것이 어떻게

942
00:35:00,300 --> 00:35:02,040


943
00:35:02,040 --> 00:35:04,740
다른 설정에서 모델을 재사용하는 데 도움이 됩니까?

944
00:35:04,740 --> 00:35:06,540


945
00:35:06,540 --> 00:35:10,020


946
00:35:10,020 --> 00:35:12,619


947
00:35:12,619 --> 00:35:14,880


948
00:35:14,880 --> 00:35:16,619


949
00:35:16,619 --> 00:35:17,640


950
00:35:17,640 --> 00:35:19,500


951
00:35:19,500 --> 00:35:22,380
Anchor에 대한

952
00:35:22,380 --> 00:35:24,420
토론을 위해 조금 더 거기에서 저를 도와야 할 거라는 걸 아시죠 음

953
00:35:24,420 --> 00:35:26,520
하지만 제 생각에 제가 올바르게 이해한다면

954
00:35:26,520 --> 00:35:29,099
어 당신이 받고 있는 질문의 종류는

955
00:35:29,099 --> 00:35:31,079
기본적으로

956
00:35:31,079 --> 00:35:33,200
일종의 메시지 전달이

957
00:35:33,200 --> 00:35:35,940
다양한

958
00:35:35,940 --> 00:35:37,920
종류의 설정에서 알거나

959
00:35:37,920 --> 00:35:40,260
한 그래프에서 다른 그래프로 알 수 있다는 것을 일반화하는 데 어떻게 도움이 될 수 있습니까?

960
00:35:40,260 --> 00:35:41,820


961
00:35:41,820 --> 00:35:44,339
음 이것들은 활성 연구 영역이 아닙니다.

962
00:35:44,339 --> 00:35:46,140


963
00:35:46,140 --> 00:35:48,060
일반화가 진행되고 있습니다만

964
00:35:48,060 --> 00:35:49,859
음 예를 들어

965
00:35:49,859 --> 00:35:51,660


966
00:35:51,660 --> 00:35:54,060
이러한

967
00:35:54,060 --> 00:35:55,320
모델이 예를 들어

968
00:35:55,320 --> 00:35:58,200
패턴이나 구조를 플로팅하는 데 꽤 능숙한 것처럼 예를 들어 표시된 것이 어디에 있는지 알아차릴 수 있는 것입니다. 어

969
00:35:58,200 --> 00:35:59,520
정확히 구현하는 방법에 따라 다르지만 예를 들어

970
00:35:59,520 --> 00:36:01,619


971
00:36:01,619 --> 00:36:03,839
그래프의 삼각형 또는

972
00:36:03,839 --> 00:36:05,880
간단한 구조의 일종이라는 것을 알고 있습니다.

973
00:36:05,880 --> 00:36:08,040
오른쪽에 삼각형

974
00:36:08,040 --> 00:36:10,140
또는

975
00:36:10,140 --> 00:36:11,640
특정 하위 그래프와 같은 그래프의 다른

976
00:36:11,640 --> 00:36:14,160


977
00:36:14,160 --> 00:36:16,859
종류의 가젯이 있습니다.  다양한

978
00:36:16,859 --> 00:36:18,480
그래프를 알고 그래프 자체는

979
00:36:18,480 --> 00:36:21,119
서로 완전히 다르게 보일 수 있지만

980
00:36:21,119 --> 00:36:23,240
이러한 종류의 패턴은 3개의 새로운 다중 그래프와

981
00:36:23,240 --> 00:36:25,440
같은 로컬 패턴과 같이 다중으로 다시 나타날 수 있으며

982
00:36:25,440 --> 00:36:27,599


983
00:36:27,599 --> 00:36:29,700


984
00:36:29,700 --> 00:36:31,200
여러분이 볼 수 있는 것처럼 일반화하는 방법을 도울 수 있습니다.

985
00:36:31,200 --> 00:36:33,119
예를 들어 클릭이 있는 경우

986
00:36:33,119 --> 00:36:35,220


987
00:36:35,220 --> 00:36:37,380
소셜 네트워크 모델링을 할 때 클릭이 매우 중요하고 일종의 이런 종류의

988
00:36:37,380 --> 00:36:38,940
것을

989
00:36:38,940 --> 00:36:40,560
보여주기 때문에 가까운

990
00:36:40,560 --> 00:36:42,180
친구 그룹을 알

991
00:36:42,180 --> 00:36:44,160
수 있습니다.

992
00:36:44,160 --> 00:36:45,540
모든 사람이 서로 연결되어 있는 것처럼 클릭하면

993
00:36:45,540 --> 00:36:47,520


994
00:36:47,520 --> 00:36:49,320
일반적으로 완전히

995
00:36:49,320 --> 00:36:51,599
다른 사회적 맥락에서

996
00:36:51,599 --> 00:36:53,280
이러한 에이전트가

997
00:36:53,280 --> 00:36:54,960
유사한

998
00:36:54,960 --> 00:36:56,880
방식으로 통신하거나 유사한 방식으로 연결된다는 것을 알 수 있는 경우 일반적으로 사용할 수 있습니다.

999
00:36:56,880 --> 00:36:59,520
전체 패턴의 종류가

1000
00:36:59,520 --> 00:37:00,960
상당히 다르고

1001
00:37:00,960 --> 00:37:03,420


1002
00:37:03,420 --> 00:37:05,520
구조적 유사성 정도를 넘어서는 경우도 있습니다.

1003
00:37:05,520 --> 00:37:07,500
기능도 있기 때문입니다.

1004
00:37:07,500 --> 00:37:09,420
구조적

1005
00:37:09,420 --> 00:37:11,760
패턴과 기능 종류의 조합이 있기 때문에

1006
00:37:11,760 --> 00:37:13,740
훨씬 더 복잡한 패턴을 제공할

1007
00:37:13,740 --> 00:37:16,140
수 있습니다.  삼각형이지만

1008
00:37:16,140 --> 00:37:19,140
또한 이 삼각형의 두 가지 기능은

1009
00:37:19,140 --> 00:37:21,420
특정

1010
00:37:21,420 --> 00:37:24,000
방식으로 보이는 것과 다른 방식으로 보이는 것이므로

1011
00:37:24,000 --> 00:37:25,380
훨씬 더

1012
00:37:25,380 --> 00:37:27,900
정교하게 만들 수 있고 어 당신은 더

1013
00:37:27,900 --> 00:37:30,599
풍부한 패턴 감지

1014
00:37:30,599 --> 00:37:32,099
능력도 알고 있습니다 음

1015
00:37:32,099 --> 00:37:35,040
따라서 본질적으로 이것은

1016
00:37:35,040 --> 00:37:37,140


1017
00:37:37,140 --> 00:37:39,599
여러 척도에서 스팟 패턴을 발견할 수 있는 능력을 알고 있으므로

1018
00:37:39,599 --> 00:37:41,339


1019
00:37:41,339 --> 00:37:42,960
여러 기술에서 이러한 일이 발생하는 것을 볼 수 있습니다. 패턴의 패턴을 가질 수 있습니다.

1020
00:37:42,960 --> 00:37:45,480
어

1021
00:37:45,480 --> 00:37:47,220
커뮤니티 전체 커뮤니티가 다양한 패턴으로 연결되어 있습니다.

1022
00:37:47,220 --> 00:37:49,560


1023
00:37:49,560 --> 00:37:51,480
음 그리고 다시 그것은 일종의 연구

1024
00:37:51,480 --> 00:37:53,099
질문입니다. 이러한 계층적 패턴을 어떻게 포착합니까? 음

1025
00:37:53,099 --> 00:37:55,619


1026
00:37:55,619 --> 00:37:57,119
일반적으로 서로 멀리 떨어져 있는 것을 포착하려면

1027
00:37:57,119 --> 00:37:58,680
메시지 전달을 더 많이 해야 한다는 것을 알고 있습니다.

1028
00:37:58,680 --> 00:38:01,260


1029
00:38:01,260 --> 00:38:02,820


1030
00:38:02,820 --> 00:38:04,740
t 서로 이야기하는 게 맞아요 음

1031
00:38:04,740 --> 00:38:06,420
그래서 네 그게

1032
00:38:06,420 --> 00:38:08,940
실제로 귀하의 질문에 대한 답이 되었는지 또는 제가

1033
00:38:08,940 --> 00:38:10,380
올바른 방향으로 가고 있었는지 모르겠습니다.

1034
00:38:10,380 --> 00:38:11,460


1035
00:38:11,460 --> 00:38:13,200
오 훌륭합니다.

1036
00:38:13,200 --> 00:38:14,700
이런 패턴과 같은 다양한 멋진 아이디어가 많이 떠오릅니다.

1037
00:38:14,700 --> 00:38:17,400
내려가는 길이지만 완전히

1038
00:38:17,400 --> 00:38:19,500
동의합니다. 이제 능동적 추론에 대한

1039
00:38:19,500 --> 00:38:21,480
좀 더 구체적인

1040
00:38:21,480 --> 00:38:23,839
연결을 탐색할 수 있다고 생각합니다. 바라건대

1041
00:38:23,839 --> 00:38:26,220


1042
00:38:26,220 --> 00:38:28,140
음 청취자 또는 시청률은

1043
00:38:28,140 --> 00:38:29,760
일종의 양방향 거리와 같기 때문에

1044
00:38:29,760 --> 00:38:31,980
어떤 사람들은 더 많은 배경에서 나올 수 있습니다.

1045
00:38:31,980 --> 00:38:34,079
그런 다음 특정 관심 시스템으로서

1046
00:38:34,079 --> 00:38:35,820
능동적 추론 및 생성 모델에 대해 배우는

1047
00:38:35,820 --> 00:38:37,740


1048
00:38:37,740 --> 00:38:39,780
것은 물론

1049
00:38:39,780 --> 00:38:41,400


1050
00:38:41,400 --> 00:38:44,520
범주 이론에서 오는 이러한 방법과 같은 능동적 추론 공간의 많은 사람들에게 확실히

1051
00:38:44,520 --> 00:38:49,380
최근에야

1052
00:38:49,380 --> 00:38:52,140
베이지안에서 더 두드러지는 것 같습니다.

1053
00:38:52,140 --> 00:38:54,960
적어도 우리가 있는 곳을 모델링하기 때문에

1054
00:38:54,960 --> 00:38:56,040
일종의 멋진 연결입니다. 예 음

1055
00:38:56,040 --> 00:38:59,820


1056
00:38:59,820 --> 00:39:02,099
방망이에서 가장 큰 터치 포인트 중 하나는 행렬

1057
00:39:02,099 --> 00:39:03,900
에 벡터를 곱하고

1058
00:39:03,900 --> 00:39:05,880
그것을 가장자리로 해석한다고 언급한 것과 같았습니다.

1059
00:39:05,880 --> 00:39:09,180


1060
00:39:09,180 --> 00:39:11,760
감각 관찰에 대한 생성 모델의 추론 부분

1061
00:39:11,760 --> 00:39:13,920
우리는 항상

1062
00:39:13,920 --> 00:39:15,839
온도계 관찰에 대해 이야기한 다음

1063
00:39:15,839 --> 00:39:18,599
기본 숨겨진 상태 온도에 대해 이야기합니다.

1064
00:39:18,599 --> 00:39:22,040


1065
00:39:22,040 --> 00:39:25,500


1066
00:39:25,500 --> 00:39:27,180


1067
00:39:27,180 --> 00:39:29,339


1068
00:39:29,339 --> 00:39:31,920
행렬 곱셈의 용어 때문에

1069
00:39:31,920 --> 00:39:35,040
생성 모델에 대한 Matlab 코드가

1070
00:39:35,040 --> 00:39:37,740
대부분 행렬 곱셈처럼 보이고

1071
00:39:37,740 --> 00:39:40,260
모두

1072
00:39:40,260 --> 00:39:44,060
명시적으로 그런 방식으로 수행될 수 있습니다.

1073
00:39:44,060 --> 00:39:47,280


1074
00:39:47,280 --> 00:39:49,260
이 기능이 없는 모델이 있는 경우

1075
00:39:49,260 --> 00:39:52,859
피드가 어떻게 되는지 또는  인식과 행동이 있는 에이전트 생성 모델의 이 설정에서 행렬과 벡터를 사용하여 감사하는 행동으로

1076
00:39:52,859 --> 00:39:56,040
정의된 우리의 모든 가장자리와

1077
00:39:56,040 --> 00:39:59,099


1078
00:39:59,099 --> 00:40:00,420


1079
00:40:00,420 --> 00:40:02,700


1080
00:40:02,700 --> 00:40:05,339


1081
00:40:05,339 --> 00:40:08,460
같이 예 예 그것에 대한 모든 생각 예

1082
00:40:08,460 --> 00:40:10,099


1083
00:40:10,099 --> 00:40:13,200
본질적으로 일종의 그래프

1084
00:40:13,200 --> 00:40:15,960
구조가 당신에게 말하는 것 같습니다  이러한

1085
00:40:15,960 --> 00:40:19,260
것들이 어떤 식으로든 상호 작용하므로

1086
00:40:19,260 --> 00:40:21,180
음,

1087
00:40:21,180 --> 00:40:24,359


1088
00:40:24,359 --> 00:40:25,920
우리가 일종의 그래프 설정에 있는지 알고 있다면

1089
00:40:25,920 --> 00:40:26,820


1090
00:40:26,820 --> 00:40:28,800
셰이크가

1091
00:40:28,800 --> 00:40:31,320
여러분에게 제공하는 것 또는 본질적으로 어떤 메시지 수동

1092
00:40:31,320 --> 00:40:35,240
모델이  모델에서

1093
00:40:35,240 --> 00:40:38,280
연결이 어떤 방식으로

1094
00:40:38,280 --> 00:40:41,099
나타나야 하는지 또는 정보를 처리하는 데 연결이 어떤 방식으로

1095
00:40:41,099 --> 00:40:42,720
사용되어야 하는지를 표현하는 것입니다.

1096
00:40:42,720 --> 00:40:44,700


1097
00:40:44,700 --> 00:40:46,680
음, 이 경우에는 괜찮다고 언급한 것입니다.

1098
00:40:46,680 --> 00:40:50,160


1099
00:40:50,160 --> 00:40:51,900


1100
00:40:51,900 --> 00:40:53,460
데이터 또는 벡터 공간의 유형에 따라 이

1101
00:40:53,460 --> 00:40:54,660
변환은 일종의

1102
00:40:54,660 --> 00:40:56,160
선형 맵이 될 것입니다

1103
00:40:56,160 --> 00:40:56,760
음 하지만

1104
00:40:56,760 --> 00:40:59,520


1105
00:40:59,520 --> 00:41:01,200
반드시 그럴 필요는 없습니다.

1106
00:41:01,200 --> 00:41:03,000


1107
00:41:03,000 --> 00:41:04,500


1108
00:41:04,500 --> 00:41:06,060


1109
00:41:06,060 --> 00:41:07,500


1110
00:41:07,500 --> 00:41:09,240
이웃이 있는 경우 그

1111
00:41:09,240 --> 00:41:12,119
이웃에서 오는 메시지는 원하는 모든 종류의 변환에 의해 변조될 수 있으므로

1112
00:41:12,119 --> 00:41:14,460


1113
00:41:14,460 --> 00:41:16,020
선형일 수 있습니다. 비선형일 수 있습니다.

1114
00:41:16,020 --> 00:41:17,099


1115
00:41:17,099 --> 00:41:20,420
내가 모르는 것일 수 있습니다.

1116
00:41:20,420 --> 00:41:23,640
지정할 수 있습니다.  그것은 기본적으로 어 하지만 본질적으로

1117
00:41:23,640 --> 00:41:25,500


1118
00:41:25,500 --> 00:41:27,540
당신은 누가

1119
00:41:27,540 --> 00:41:30,180
누구와 통신해야 하는지를 알려주는 구조 수준을 가지고 있기 때문에 이것을 생각할 수 있습니다.

1120
00:41:30,180 --> 00:41:31,380


1121
00:41:31,380 --> 00:41:33,180


1122
00:41:33,180 --> 00:41:36,480


1123
00:41:36,480 --> 00:41:38,339
첫

1124
00:41:38,339 --> 00:41:41,160
번째는 누가 통신해야 하는지 또는

1125
00:41:41,160 --> 00:41:43,380
무엇을 통신해야 하는지 그리고 맨

1126
00:41:43,380 --> 00:41:45,540
위에 있는 의미론은 본질적으로

1127
00:41:45,540 --> 00:41:47,880


1128
00:41:47,880 --> 00:41:53,839
통신이 어떻게 나타나야 하는지를 설명합니다. 어 본질적

1129
00:41:54,300 --> 00:41:57,119


1130
00:41:57,119 --> 00:41:59,040
으로 매우 멋집니다. 저는 지도가 변수의 희소성에 대해 이야기하는 방식을

1131
00:41:59,040 --> 00:42:01,740
퇴행성 모델

1132
00:42:01,740 --> 00:42:05,099
그래서 여기서

1133
00:42:05,099 --> 00:42:06,660
우리가 메시지 전달을 하려는 그래프의 노드의 토폴로지는

1134
00:42:06,660 --> 00:42:08,880


1135
00:42:08,880 --> 00:42:11,220
에이전트와 환경처럼 설명하거나

1136
00:42:11,220 --> 00:42:12,660


1137
00:42:12,660 --> 00:42:15,300
인식 인식과 행동을 포함하는 생성 모델처럼

1138
00:42:15,300 --> 00:42:17,060
많은 사람들이 다른 것을 제안했습니다.  지각

1139
00:42:17,060 --> 00:42:20,579


1140
00:42:20,579 --> 00:42:23,940
인식 행동의 통합 모델링을 위한 희소성 아키텍처

1141
00:42:23,940 --> 00:42:26,760
그래서 한 가지 예는 행동이

1142
00:42:26,760 --> 00:42:28,800


1143
00:42:28,800 --> 00:42:30,420
환경에 영향을 미치고 환경이

1144
00:42:30,420 --> 00:42:32,400
인식에 다시 영향을 미치는 것과 같은 종류의 시계와 같을 것입니다.

1145
00:42:32,400 --> 00:42:35,240
자체 루프

1146
00:42:35,240 --> 00:42:36,960
블랭킷과 다른 종류의

1147
00:42:36,960 --> 00:42:39,180
연결성을 추가할 수 있으며

1148
00:42:39,180 --> 00:42:42,300
희소성을 토폴로지적으로 정의합니다.  여기서

1149
00:42:42,300 --> 00:42:45,240
스택을 보여줬고

1150
00:42:45,240 --> 00:42:47,220
두 번째와 세 번째 레벨에 있었습니다. 저는

1151
00:42:47,220 --> 00:42:51,300
스택을 생각한 다음 흐름이 무엇인지

1152
00:42:51,300 --> 00:42:54,900
설명해야 합니다. 실제로

1153
00:42:54,900 --> 00:42:58,380
그 가장자리가 무엇을 하는지 설명해야 합니다.

1154
00:42:58,380 --> 00:43:03,000


1155
00:43:03,000 --> 00:43:05,220
예를 들어 예를 들어 0 행렬인

1156
00:43:05,220 --> 00:43:07,140


1157
00:43:07,140 --> 00:43:09,060


1158
00:43:09,060 --> 00:43:12,839
행렬이 있는 경우

1159
00:43:12,839 --> 00:43:14,700
예를 들어

1160
00:43:14,700 --> 00:43:17,040
해당 가장자리에 연결되어 곱할 것입니다.

1161
00:43:17,040 --> 00:43:18,839
0 또는

1162
00:43:18,839 --> 00:43:21,300
0을 제공하는 항목이며

1163
00:43:21,300 --> 00:43:22,980
본질적으로 제거할 수 없는 것처럼 해당 가장자리를 가지치기하는 것입니다.

1164
00:43:22,980 --> 00:43:25,020


1165
00:43:25,020 --> 00:43:27,119
통신이 발생하는 것을 원하지 않지만

1166
00:43:27,119 --> 00:43:29,099


1167
00:43:29,099 --> 00:43:30,900
이러한 종류의 의미론이 있는 이러한 종류의 가능성도 있습니다.  그들은

1168
00:43:30,900 --> 00:43:34,200
당신이 괜찮다고 말하는 구조적 수준을 재정의합니다.

1169
00:43:34,200 --> 00:43:36,720
나는 당신이 알고 있는 이 다른 에이전트 사람과 의사소통할 필요가 없습니다.

1170
00:43:36,720 --> 00:43:38,880


1171
00:43:38,880 --> 00:43:40,200


1172
00:43:40,200 --> 00:43:42,300


1173
00:43:42,300 --> 00:43:44,880


1174
00:43:44,880 --> 00:43:47,220


1175
00:43:47,220 --> 00:43:49,859
일종의 선택적 가지치기를 할 수 있습니다. 여기서

1176
00:43:49,859 --> 00:43:52,680
음 이 행렬은

1177
00:43:52,680 --> 00:43:54,960
일종의 선형 대수학에서 음에 따라 달라집니다.

1178
00:43:54,960 --> 00:43:57,900
행렬에는 커널이 있으므로

1179
00:43:57,900 --> 00:43:59,940
행렬이 0으로 감지하는 모든 항목이므로

1180
00:43:59,940 --> 00:44:02,220
어떤 벡터가 0으로 올바르게 전송되지만

1181
00:44:02,220 --> 00:44:03,780
모든 것이 그렇지는 않습니다.  0 매트릭스가 아닌 한 0으로 전송됩니다.

1182
00:44:03,780 --> 00:44:05,540


1183
00:44:05,540 --> 00:44:08,160
따라서 이웃의 기능에 따라

1184
00:44:08,160 --> 00:44:10,680
일부

1185
00:44:10,680 --> 00:44:12,480
이웃을 0으로 보낼 수도 있습니다. 그런

1186
00:44:12,480 --> 00:44:14,400
식으로 방정식에서 이웃을 제거합니다.

1187
00:44:14,400 --> 00:44:16,680


1188
00:44:16,680 --> 00:44:18,780
예, 그들은

1189
00:44:18,780 --> 00:44:21,240
더 이상 고려되지 않습니다. 그래서

1190
00:44:21,240 --> 00:44:23,280
당신은 이것이 희소성을 얻는 방법이라는 것을 알고 있습니다.

1191
00:44:23,280 --> 00:44:24,900
나는 그들이

1192
00:44:24,900 --> 00:44:27,119
또한

1193
00:44:27,119 --> 00:44:29,880


1194
00:44:29,880 --> 00:44:32,880
입력의 작은 하위 집합 또는  일종의 어

1195
00:44:32,880 --> 00:44:36,599
예 기능의 하위 집합 만

1196
00:44:36,599 --> 00:44:38,040
실제로

1197
00:44:38,040 --> 00:44:40,319
이웃 사이에서 의미있는 작업을 수행하고

1198
00:44:40,319 --> 00:44:43,260
다른 모든 것은 일종의 0이 될 것입니다.

1199
00:44:43,260 --> 00:44:45,720
예 그것은 영향을 미치는

1200
00:44:45,720 --> 00:44:48,480
대부분의 변수를 설정하려고 시도하는 올가미 회귀를 생각하게 만듭니다

1201
00:44:48,480 --> 00:44:50,700
0

1202
00:44:50,700 --> 00:44:53,160
이므로 희망적으로 중요한 몇 가지 변수가

1203
00:44:53,160 --> 00:44:55,260
분석에서 실제로 튀어나오지만

1204
00:44:55,260 --> 00:44:58,339


1205
00:44:58,339 --> 00:45:02,280
주의 모델링과 아마도 기다리는 것과 같은 새로운 기술이 있습니다.

1206
00:45:02,280 --> 00:45:04,500
5개를

1207
00:45:04,500 --> 00:45:06,420
1개로 설정한 다음 나머지는

1208
00:45:06,420 --> 00:45:08,819
더 미묘한 차이처럼 0으로 설정합니다.

1209
00:45:08,819 --> 00:45:12,060
그래서 저는 표현력이 있는 희소성이

1210
00:45:12,060 --> 00:45:15,540
기본적으로

1211
00:45:15,540 --> 00:45:17,160
두 세계의 장점이라고 생각합니다.

1212
00:45:17,160 --> 00:45:18,720
가장자리가 있는 상황을 원

1213
00:45:18,720 --> 00:45:20,339
하지만 그에 대한 관심은

1214
00:45:20,339 --> 00:45:23,460
0이므로 기능적

1215
00:45:23,460 --> 00:45:25,980
으로는 그렇지 않기 때문입니다.

1216
00:45:25,980 --> 00:45:27,480


1217
00:45:27,480 --> 00:45:29,400
원칙적으로 The Edge가 존재함에도 불구하고 믿음 상태에 대한 업데이트가 없기 때문에

1218
00:45:29,400 --> 00:45:31,380


1219
00:45:31,380 --> 00:45:33,540


1220
00:45:33,540 --> 00:45:35,520
에이전트가 세상에 영향을 미친다고 믿는 상황을 모델링할 수 있지만

1221
00:45:35,520 --> 00:45:37,020
실제로는

1222
00:45:37,020 --> 00:45:39,119
원칙적으로 Edge가 존재한다는 의미는 아닙니다.

1223
00:45:39,119 --> 00:45:41,760
주어진 영향과 따라서

1224
00:45:41,760 --> 00:45:43,980
이러한 모델의 조음과 같은 것을 허용하여

1225
00:45:43,980 --> 00:45:47,220
그들이 요인화하고

1226
00:45:47,220 --> 00:45:50,579
해석 가능한 모티프를

1227
00:45:50,579 --> 00:45:52,260


1228
00:45:52,260 --> 00:45:56,579
여기 우리의 경우 관심 있는 시스템의

1229
00:45:56,579 --> 00:45:59,339
동작 인식 및 인지

1230
00:45:59,339 --> 00:46:01,800
유형을 설명하는 어 모티프의 작은 클러스터와 관련하여 유지하지만

1231
00:46:01,800 --> 00:46:04,260
내가 이미 암시적으로 믿는 사람들  음

1232
00:46:04,260 --> 00:46:06,720
그들이 종종 형용사를 추가

1233
00:46:06,720 --> 00:46:09,480
하고 X 종류의 능동적 추론을 참조하므로

1234
00:46:09,480 --> 00:46:11,220


1235
00:46:11,220 --> 00:46:13,020
시간적 Horizon을 사용한 깊은 능동적 추론과 같은

1236
00:46:13,020 --> 00:46:15,119
이러한 종류의 중첩을 사용한 정교한 능동적 추론

1237
00:46:15,119 --> 00:46:17,700
과 그것들은 주어진 기능을 가리키고 있지만 물론

1238
00:46:17,700 --> 00:46:19,740


1239
00:46:19,740 --> 00:46:23,460
우리와 같은 기능  '희망하는 것은 구성 가능해야 하며

1240
00:46:23,460 --> 00:46:24,980
따라서

1241
00:46:24,980 --> 00:46:28,140


1242
00:46:28,140 --> 00:46:30,780


1243
00:46:30,780 --> 00:46:33,119


1244
00:46:33,119 --> 00:46:34,980


1245
00:46:34,980 --> 00:46:36,599
특정 관심 시스템보다 추상화 수준이 낮기 때문에 작업 인식 모델링보다 훨씬 더 일반적인 도구를 가져오는 것 같습니다.

1246
00:46:36,599 --> 00:46:39,859


1247
00:46:39,859 --> 00:46:42,780


1248
00:46:42,780 --> 00:46:45,240
사이버네틱 시스템 주변에서

1249
00:46:45,240 --> 00:46:48,119
활성 역

1250
00:46:48,119 --> 00:46:51,300
생성 모델을 기본 그래프로 함께 모이면

1251
00:46:51,300 --> 00:46:53,400
매우 흥미진진해집니다

1252
00:46:53,400 --> 00:46:55,800
예 예 그리고 어쩌면

1253
00:46:55,800 --> 00:46:58,260
우리가 여기서 강조하고 있는 것이기도 합니다.  제거

1254
00:46:58,260 --> 00:47:00,660


1255
00:47:00,660 --> 00:47:03,359


1256
00:47:03,359 --> 00:47:06,119
할 수 없는 이런 종류의 가지치기는

1257
00:47:06,119 --> 00:47:09,420
계산이므로

1258
00:47:09,420 --> 00:47:11,599
그러한 종류의

1259
00:47:11,599 --> 00:47:15,000
구조적 그래프 수준에서

1260
00:47:15,000 --> 00:47:16,619
강제로 수행하도록 하는 것은 무엇에 계산 시간을 사용해야 하는지 알려줍니다.

1261
00:47:16,619 --> 00:47:19,440


1262
00:47:19,440 --> 00:47:20,579


1263
00:47:20,579 --> 00:47:22,859


1264
00:47:22,859 --> 00:47:24,540
가장자리를 잘라내려면 여전히

1265
00:47:24,540 --> 00:47:27,119
계산 시간이 걸리는 것을 결정해야 하므로

1266
00:47:27,119 --> 00:47:28,800


1267
00:47:28,800 --> 00:47:31,560
옳지 않은 경우 모든 이웃을 살펴보고 무엇을

1268
00:47:31,560 --> 00:47:33,180
증명할지 결정하거나 인쇄를 완료했지만

1269
00:47:33,180 --> 00:47:34,980


1270
00:47:34,980 --> 00:47:37,619
모든 에지를 살펴봐야 하고 이를 살펴보는 한 가지 방법은

1271
00:47:37,619 --> 00:47:40,140
어, 그래프 구조의 종류가

1272
00:47:40,140 --> 00:47:42,420
계산

1273
00:47:42,420 --> 00:47:46,740
그래프 또는 계산의 종류를 정의한다는 것입니다.

1274
00:47:46,740 --> 00:47:48,540


1275
00:47:48,540 --> 00:47:50,280
실행해야 하는 일련의 계산 단계와

1276
00:47:50,280 --> 00:47:52,020
시프트 구조의 종류 또는  메시지 전달

1277
00:47:52,020 --> 00:47:54,119
모델은 실제로 해당 단계가 무엇인지 지정

1278
00:47:54,119 --> 00:47:56,160
하고 그들이 정확히 보이는 한 가지 특정 방식을 알고 있습니다.

1279
00:47:56,160 --> 00:47:58,859


1280
00:47:58,859 --> 00:48:01,500
그래서 네 그것은 한 가지 포인트이고

1281
00:48:01,500 --> 00:48:02,880
네 또한 주의를 언급했고

1282
00:48:02,880 --> 00:48:03,780
실제로 네

1283
00:48:03,780 --> 00:48:05,520
저는 이것이

1284
00:48:05,520 --> 00:48:07,980
실제로 상당히 관련이 있고  어떤

1285
00:48:07,980 --> 00:48:09,780
면에서는 어텐션보다 더 일반적이고

1286
00:48:09,780 --> 00:48:12,359
실제로 이 슬라이드로 돌아가서

1287
00:48:12,359 --> 00:48:14,880


1288
00:48:14,880 --> 00:48:19,200
이것을 보는 것이 좋은 방법일 수 있습니다. 그래서 여기서 기본적으로

1289
00:48:19,200 --> 00:48:21,060
어텐션에서 일어나는 일

1290
00:48:21,060 --> 00:48:22,680
um 여기서 배운 이 행렬을 배우는 대신

1291
00:48:22,680 --> 00:48:25,260
에 어 어텐션에서는

1292
00:48:25,260 --> 00:48:27,240
어텐션 계수를 배웁니다.  여기에서 주의

1293
00:48:27,240 --> 00:48:29,280
계수인 스칼라를 배우십시오.

1294
00:48:29,280 --> 00:48:31,980


1295
00:48:31,980 --> 00:48:34,680
본질적으로 얼마나 많은 주의를 기울여야 하는지 이

1296
00:48:34,680 --> 00:48:37,140
전체 Edge를 잘 알고 있습니다. 어떤 것이 단지 스칼라가 될 것인지 말해 봅시다.

1297
00:48:37,140 --> 00:48:39,240
우리가 하는 일은

1298
00:48:39,240 --> 00:48:40,619
조금 더 복잡합니다.

1299
00:48:40,619 --> 00:48:43,140
이 이웃은

1300
00:48:43,140 --> 00:48:44,880


1301
00:48:44,880 --> 00:48:47,280
단일 스칼라가 아닌 일종의 전체 매트릭스입니다.

1302
00:48:47,280 --> 00:48:49,020
어 하지만 약간의 미묘한

1303
00:48:49,020 --> 00:48:51,599
차이도 있지만 후속

1304
00:48:51,599 --> 00:48:53,579
작업에서 우리는 또한 이것을

1305
00:48:53,579 --> 00:48:56,339
어텐션과 결합하고 좀 더 일반화되고 음

1306
00:48:56,339 --> 00:48:57,839


1307
00:48:57,839 --> 00:49:00,359
저것  그것도 꽤 잘 작동했지만

1308
00:49:00,359 --> 00:49:03,000
기본 아이디어의 종류는

1309
00:49:03,000 --> 00:49:05,760


1310
00:49:05,760 --> 00:49:08,339


1311
00:49:08,339 --> 00:49:10,500
정보 자체를 기반으로 정보를 변환하는 방식을 변조하려는 것과 매우 유사하므로 원하는 경우

1312
00:49:10,500 --> 00:49:12,660
이러한 종류의 음 재귀 수준이 있습니다.

1313
00:49:12,660 --> 00:49:14,760


1314
00:49:14,760 --> 00:49:17,579
우리는 또한

1315
00:49:17,579 --> 00:49:19,260
능동적 추론에서 일어난다는 것을 알고 있다는 점에서 암시하고 있습니다.

1316
00:49:19,260 --> 00:49:22,800
당신은 괜찮습니다. 그래서 내가 V가 아니라면

1317
00:49:22,800 --> 00:49:25,020
내 이웃 당신은 몇 가지 기능을 가지고 있으며

1318
00:49:25,020 --> 00:49:27,780


1319
00:49:27,780 --> 00:49:30,780
XU인 이러한 기능을 기반으로 합니다.  여기에서

1320
00:49:30,780 --> 00:49:32,819
X를 처리하는 데 사용될 매트릭스를 찾으십시오.

1321
00:49:32,819 --> 00:49:34,740
매우

1322
00:49:34,740 --> 00:49:36,540
재귀적이며 노드 U의 기능을 기반으로 하는 어텐션에서 발생하는 일입니다.

1323
00:49:36,540 --> 00:49:38,640


1324
00:49:38,640 --> 00:49:41,160


1325
00:49:41,160 --> 00:49:43,619


1326
00:49:43,619 --> 00:49:45,540
여기에 적용할 어텐션 계수를 계산하겠습니다.  바로 여기 있는 기능을

1327
00:49:45,540 --> 00:49:47,760
기준으로 이 기능에 얼마나 많은

1328
00:49:47,760 --> 00:49:49,800
관심을 기울여야 하는지 결정할 것입니다

1329
00:49:49,800 --> 00:49:51,540
음 그리고 여기서 우리는

1330
00:49:51,540 --> 00:49:54,660
그것을 더 일반적으로 처리하는 방법을 결정합니다 어 선형 방식으로

1331
00:49:54,660 --> 00:49:55,859


1332
00:49:55,859 --> 00:49:58,859
음 그래서 당신은 거기에 이런 종류의 루프

1333
00:49:58,859 --> 00:50:02,598
구조가 내장되어 있습니다

1334
00:50:02,880 --> 00:50:04,920
멋진

1335
00:50:04,920 --> 00:50:06,420


1336
00:50:06,420 --> 00:50:07,440


1337
00:50:07,440 --> 00:50:10,200
작품이 너무 많다고 생각하기 때문에

1338
00:50:10,200 --> 00:50:12,119
최근

1339
00:50:12,119 --> 00:50:14,160
라이브 스트림 54에서 자신의 논문에 대해 논의한 Toby Sinclair Smythe가 몇 가지 요점을 더 제시합니다.

1340
00:50:14,160 --> 00:50:15,960


1341
00:50:15,960 --> 00:50:19,099


1342
00:50:19,099 --> 00:50:22,560
구성인지 지도 제작법을 표현하는 용어 또는 Lisa를 소개하고 인지

1343
00:50:22,560 --> 00:50:24,540


1344
00:50:24,540 --> 00:50:27,000
의 구성성에 대해 생각합니다.  매핑

1345
00:50:27,000 --> 00:50:30,380
이 오늘날 유명하게 알려진 종류의 주의 메커니즘보다 더 일반적이라는 개념으로 여기에서 설명하고 있는 것이

1346
00:50:30,380 --> 00:50:33,660


1347
00:50:33,660 --> 00:50:35,940


1348
00:50:35,940 --> 00:50:37,880


1349
00:50:37,880 --> 00:50:40,619


1350
00:50:40,619 --> 00:50:43,680
한 종류의 아키텍처의 저차원 특수 사례처럼 표현되는 것이

1351
00:50:43,680 --> 00:50:45,420


1352
00:50:45,420 --> 00:50:47,099


1353
00:50:47,099 --> 00:50:50,040
베이지안 그래프가 어떻게 작동하는지 생각하게 합니다.  원칙적으로 일종의 의미 론적

1354
00:50:50,040 --> 00:50:51,720


1355
00:50:51,720 --> 00:50:53,460
이며 주변에 이러한 멋진 범주 형식주의를 모두 가질 수

1356
00:50:53,460 --> 00:50:56,760
있지만

1357
00:50:56,760 --> 00:50:57,960


1358
00:50:57,960 --> 00:51:00,180


1359
00:51:00,180 --> 00:51:02,579


1360
00:51:02,579 --> 00:51:05,339


1361
00:51:05,339 --> 00:51:07,920
데이터 분석을 수행하는 많은 경험적 연구자들에게도 새로운 소식이 될 수 있는 pre-shief 및 Sheaf를 사용하여 경험적 데이터에 대한 커넥터를 구축할 수도 있습니다.

1362
00:51:07,920 --> 00:51:10,619
확실히 나를 위한 것이었지만

1363
00:51:10,619 --> 00:51:13,500
메시지 전달은

1364
00:51:13,500 --> 00:51:16,020


1365
00:51:16,020 --> 00:51:18,660
위상적으로 제안된 모든 시맨틱 모델에서

1366
00:51:18,660 --> 00:51:22,859


1367
00:51:22,859 --> 00:51:25,319


1368
00:51:25,319 --> 00:51:27,960
선형 시간 또는 최소한

1369
00:51:27,960 --> 00:51:29,819
정의 가능한 특성으로 계획하고 실행할 수 있는 구현 절차로 엄격한 변환을 제공하므로

1370
00:51:29,819 --> 00:51:32,040
메시지 전달은

1371
00:51:32,040 --> 00:51:34,440
다음에서 정말 중요한 역할을 합니다.  요약과 같이

1372
00:51:34,440 --> 00:51:37,140


1373
00:51:37,140 --> 00:51:39,900
이러한 실제 모델의 구현에 가능한 것은

1374
00:51:39,900 --> 00:51:42,359
실제로 일반적인 방식으로 수행됩니다.

1375
00:51:42,359 --> 00:51:44,880


1376
00:51:44,880 --> 00:51:47,339


1377
00:51:47,339 --> 00:51:49,559
메시지 전달 호환

1378
00:51:49,559 --> 00:51:52,740
생성 모델을 사용한 구현이 우리가 이겼기 때문에 더 잘 출시되기를 희망한다고 말하는 것이 정확합니다.

1379
00:51:52,740 --> 00:51:54,420


1380
00:51:54,420 --> 00:51:56,280


1381
00:51:56,280 --> 00:51:59,160
덜

1382
00:51:59,160 --> 00:52:00,859
재사용 가능한

1383
00:52:00,859 --> 00:52:04,819
추상화가 수행할 수 있는 엔지니어링 문제가 없습니다.

1384
00:52:05,099 --> 00:52:08,040


1385
00:52:08,040 --> 00:52:09,839


1386
00:52:09,839 --> 00:52:11,940
이 패러다임에도 확실히 몇 가지 제한이 있다고 생각하기

1387
00:52:11,940 --> 00:52:14,640
때문에 이러한 종류

1388
00:52:14,640 --> 00:52:17,040
의 메시지 전달 작업을 수행하는 것은 당신이

1389
00:52:17,040 --> 00:52:18,960
언급한 한 가지입니다.  그것은

1390
00:52:18,960 --> 00:52:21,720


1391
00:52:21,720 --> 00:52:24,359
그래프의 크기에 따라 선형적으로 매우 쉽게 확장되지만

1392
00:52:24,359 --> 00:52:26,760
비용도 발생하므로 표현력

1393
00:52:26,760 --> 00:52:29,040
에 한계가 있음을 보여주는 특정 결과가 있습니다.

1394
00:52:29,040 --> 00:52:30,720


1395
00:52:30,720 --> 00:52:34,200
음,

1396
00:52:34,200 --> 00:52:37,619
예를 들어 실제로 이것을 넘어서고 싶다면 다음을 수행해야 합니다.

1397
00:52:37,619 --> 00:52:39,540


1398
00:52:39,540 --> 00:52:42,300
노드 쌍을 보는 대신 튜플과

1399
00:52:42,300 --> 00:52:44,880
이런 종류의 고차 어 노드 그룹화를 살펴봐야 합니다.

1400
00:52:44,880 --> 00:52:46,260


1401
00:52:46,260 --> 00:52:48,900
더 높은 배타성을 얻기 위해

1402
00:52:48,900 --> 00:52:50,700


1403
00:52:50,700 --> 00:52:52,680
이를 수행하는 모든 종류의 기술이 있습니다 음 하지만 예

1404
00:52:52,680 --> 00:52:54,540
그리고 항상 이것이 있습니다

1405
00:52:54,540 --> 00:52:56,220


1406
00:52:56,220 --> 00:52:58,020
좀 더 표현력이 있는 것과

1407
00:52:58,020 --> 00:53:00,359
효율적인 것 사이의 일종의 긴장은

1408
00:53:00,359 --> 00:53:03,540
어떤 종류의 알고리즘이나 방법에도 항상 존재한다는 것을 알고 있습니다.

1409
00:53:03,540 --> 00:53:04,859


1410
00:53:04,859 --> 00:53:05,520
음

1411
00:53:05,520 --> 00:53:08,640
그래서 말하기가 좀 어렵습니다. 이것이 궁극적인 해결책이 아니라고

1412
00:53:08,640 --> 00:53:10,380
확실히 말할 수 있다는 뜻입니다.

1413
00:53:10,380 --> 00:53:12,180


1414
00:53:12,180 --> 00:53:14,160


1415
00:53:14,160 --> 00:53:15,839
메시지 전달 자체를 수행하려는 경우

1416
00:53:15,839 --> 00:53:17,280
알 수 있지만

1417
00:53:17,280 --> 00:53:20,579
그래프에서 일종의 계산을 수행할 수 있다는 것을 알고 있을

1418
00:53:20,579 --> 00:53:23,540
수 있습니다. 예를 들어

1419
00:53:24,180 --> 00:53:27,240


1420
00:53:27,240 --> 00:53:28,500


1421
00:53:28,500 --> 00:53:30,660


1422
00:53:30,660 --> 00:53:33,420
그래프의 종류에서 약간 누락된 것일 수도 있습니다.  이메일 설정은 당신이 당신의

1423
00:53:33,420 --> 00:53:36,420
그래프가 무엇인지 알고 있는 맥락을 알고 있다는 것입니다. 당신의

1424
00:53:36,420 --> 00:53:37,559


1425
00:53:37,559 --> 00:53:40,319
그래프가 알려져 있다고 가정합니다.

1426
00:53:40,319 --> 00:53:44,880
그리고 당신은 그래프 구조가 필요하다는 것을 알고 있습니다.

1427
00:53:44,880 --> 00:53:46,680


1428
00:53:46,680 --> 00:53:48,960


1429
00:53:48,960 --> 00:53:51,240


1430
00:53:51,240 --> 00:53:52,260


1431
00:53:52,260 --> 00:53:54,619


1432
00:53:54,619 --> 00:53:57,960
더 명확하게 잘 모르겠습니다. 제가 추측하는 문구는

1433
00:53:57,960 --> 00:54:00,420


1434
00:54:00,420 --> 00:54:02,220
제가

1435
00:54:02,220 --> 00:54:03,780
현실 세계에서 인식을 수행하는 에이전트인 경우 또는

1436
00:54:03,780 --> 00:54:05,339


1437
00:54:05,339 --> 00:54:07,740
제가 세계의 그래프를 만들려고 하는 경우와 같은 좋은 일입니다.

1438
00:54:07,740 --> 00:54:10,319


1439
00:54:10,319 --> 00:54:12,599


1440
00:54:12,599 --> 00:54:14,880


1441
00:54:14,880 --> 00:54:16,740
하나의 메모나 개체를 갖고 싶고

1442
00:54:16,740 --> 00:54:18,000


1443
00:54:18,000 --> 00:54:19,559
개체와 그 사이에 연결이 있는 경우

1444
00:54:19,559 --> 00:54:21,839
어떤 야생 예와 같다는 것을 알고 있습니다.

1445
00:54:21,839 --> 00:54:23,280


1446
00:54:23,280 --> 00:54:25,020
음, 사용자 지정 항목이 실제로

1447
00:54:25,020 --> 00:54:26,760
그렇게 하고 싶지만 바로 원한다고 가정해 봅시다.

1448
00:54:26,760 --> 00:54:29,099


1449
00:54:29,099 --> 00:54:31,559
객체가 무엇이고

1450
00:54:31,559 --> 00:54:33,119
객체가 아닌 것과 같은 흐릿한 모든 종류의 항목도 있습니다.

1451
00:54:33,119 --> 00:54:35,220


1452
00:54:35,220 --> 00:54:37,319
노드는 그래서

1453
00:54:37,319 --> 00:54:39,059
그래프

1454
00:54:39,059 --> 00:54:40,740
구조가 매우 신중하다고 말하려는 것과 같습니다.

1455
00:54:40,740 --> 00:54:42,540
일종의 노드가

1456
00:54:42,540 --> 00:54:44,220
거기에 없고 Edge가 거기에 있지만

1457
00:54:44,220 --> 00:54:46,020
세상은

1458
00:54:46,020 --> 00:54:48,300
일종의 것입니다.  정말 퍼지 맞습니다. 따라서

1459
00:54:48,300 --> 00:54:51,540
그래프를 세계의 모델로 사용한다면

1460
00:54:51,540 --> 00:54:54,300


1461
00:54:54,300 --> 00:54:56,400


1462
00:54:56,400 --> 00:54:59,819
이러한 종류의 퍼지 개념에 대해 어딘가에서 어떤 결정을 내려야 할 것입니다. 어 그들은

1463
00:54:59,819 --> 00:55:01,740
실제로

1464
00:55:01,740 --> 00:55:03,119
객체와 같은 구체적인 그래프 엔티티에서 가장자리 또는

1465
00:55:03,119 --> 00:55:06,180
뭐든간에 어 당신이

1466
00:55:06,180 --> 00:55:09,240
어떤 종류의 추론 절차를 알고 있다는 것을 기반으로

1467
00:55:09,240 --> 00:55:11,640
음 그리고 우리가 그것을 했는지

1468
00:55:11,640 --> 00:55:13,859
아닌지는 모르겠습니다 그것은 일종의

1469
00:55:13,859 --> 00:55:16,140
지능형 에이전트처럼 유머러스합니다 어 하지만 그것은 당신이

1470
00:55:16,140 --> 00:55:18,540


1471
00:55:18,540 --> 00:55:20,400
생각해야 할 몇 가지 흥미로운 점을 알고 있습니다  어쩌면 당신은 또한

1472
00:55:20,400 --> 00:55:22,260


1473
00:55:22,260 --> 00:55:23,940
부드러운 가장자리와 같은 종류의 것들이 있다는 것을 해결할 수 있는 한 가지 방법이 있을 수 있습니다.

1474
00:55:23,940 --> 00:55:25,920
어떤 방식으로 주의 계수가 있는지 알 수 있습니다.

1475
00:55:25,920 --> 00:55:28,079


1476
00:55:28,079 --> 00:55:30,180
가장자리의

1477
00:55:30,180 --> 00:55:33,599
가중치가 0.001인지 아는 것과 비슷합니다.  또는

1478
00:55:33,599 --> 00:55:35,579
거의 거기에 없는 것과 같지만

1479
00:55:35,579 --> 00:55:38,880
여전히 존재한다는 것을 알고 있으므로 어

1480
00:55:38,880 --> 00:55:40,800
약간 부드러운 그래프 아키텍처라는 것을 알고 있지만

1481
00:55:40,800 --> 00:55:43,800


1482
00:55:43,800 --> 00:55:45,119
가장자리 수준에서 이 부드러움을 구현할 수 있다고 생각

1483
00:55:45,119 --> 00:55:47,339
하지만 조금 더 어려운 것 같습니다.

1484
00:55:47,339 --> 00:55:49,859
일종의 음표 수준에서 음 거기에 있고

1485
00:55:49,859 --> 00:55:52,079


1486
00:55:52,079 --> 00:55:53,640
거기에 없는 노드를 어떻게 모델링합니까 음 예

1487
00:55:53,640 --> 00:55:55,079


1488
00:55:55,079 --> 00:55:57,540


1489
00:55:57,540 --> 00:56:00,000
퍼지

1490
00:56:00,000 --> 00:56:01,920
객체 식별과 노드와 에지

1491
00:56:01,920 --> 00:56:03,420
사이의 유사점과 차이점에 대해 매우 흥미로운 임의의 생각이 있습니다.

1492
00:56:03,420 --> 00:56:07,380
어떤 면에서

1493
00:56:07,380 --> 00:56:10,020
그것들은 약간의 유사점을 가지고 있습니다.

1494
00:56:10,020 --> 00:56:12,059
음 또는

1495
00:56:12,059 --> 00:56:15,119
다른 접촉 지점과의 상호 운용성은 우리가 토폴로지로 이해하는

1496
00:56:15,119 --> 00:56:18,960
기본 숨겨진 공간과 같았습니다. 이 공간은 서로

1497
00:56:18,960 --> 00:56:21,359


1498
00:56:21,359 --> 00:56:24,300


1499
00:56:24,300 --> 00:56:26,940
다른 장소에서 벡터 공간을 투사하여

1500
00:56:26,940 --> 00:56:30,420
온도계 판독값의 벡터가 될 수

1501
00:56:30,420 --> 00:56:33,119
있고 우리는 원합니다.  경계점까지 정의된 항상성 범위 내에서 부드러운 경로를 갖는 것

1502
00:56:33,119 --> 00:56:34,920


1503
00:56:34,920 --> 00:56:37,680


1504
00:56:37,680 --> 00:56:39,720
그것이 세계의 구조라고 말하는 것이

1505
00:56:39,720 --> 00:56:41,640
아니라 매우

1506
00:56:41,640 --> 00:56:45,599
휴리스틱하고 단순한 모델의 구조는

1507
00:56:45,599 --> 00:56:48,540
연속성을 목표로 하고

1508
00:56:48,540 --> 00:56:49,859
상태 공간에 정의된 숨김을 갖는 것일 수 있습니다.

1509
00:56:49,859 --> 00:56:51,839
아래에 연속성이

1510
00:56:51,839 --> 00:56:55,619
있고 벡터를 방출할 수 있으므로

1511
00:56:55,619 --> 00:56:58,140


1512
00:56:58,140 --> 00:57:01,079
여러분이 제기한 이러한 분류기 유형 토론 중 일부를 가져오고 기하학적 분류

1513
00:57:01,079 --> 00:57:03,359
의 근본적인 불가능성을 좋아합니다.

1514
00:57:03,359 --> 00:57:05,940


1515
00:57:05,940 --> 00:57:07,440


1516
00:57:07,440 --> 00:57:10,380
약간 현명한

1517
00:57:10,380 --> 00:57:13,339
설명을 통해

1518
00:57:13,339 --> 00:57:15,900
실제 완전성 측정을 제공

1519
00:57:15,900 --> 00:57:17,160


1520
00:57:17,160 --> 00:57:19,380
하고 계산 리소스의

1521
00:57:19,380 --> 00:57:21,480
양을 의미하거나 베이지안 정보 기준과

1522
00:57:21,480 --> 00:57:23,400


1523
00:57:23,400 --> 00:57:24,900
같은 통계적으로 원칙적인 방식과 같은 측정을 허용하도록 네트워크를 분리할 수 있으므로

1524
00:57:24,900 --> 00:57:27,119


1525
00:57:27,119 --> 00:57:28,800
얼마나 많은 노드를 가져야 합니까?

1526
00:57:28,800 --> 00:57:30,839


1527
00:57:30,839 --> 00:57:33,599
일부 모델링 공간의 트레이드 오프 전선에서 나는

1528
00:57:33,599 --> 00:57:34,800
그것이 영토가 아닌 지도라는 것을 무엇이라고 말해야 할지 모르겠습니다.

1529
00:57:34,800 --> 00:57:37,020
그것은

1530
00:57:37,020 --> 00:57:40,500
그것이 더 정당하기 때문입니다. 그래서 어 심지어

1531
00:57:40,500 --> 00:57:42,240
살아있는 유기체도 살아있는 상태에서 계속 방출하고 있다는 자기 증거를 원할 수 있습니다.

1532
00:57:42,240 --> 00:57:43,800


1533
00:57:43,800 --> 00:57:48,119


1534
00:57:48,119 --> 00:57:50,359


1535
00:57:50,359 --> 00:57:54,660
사이버네틱스 시스템에 정말 간단한 그래픽 아키텍처를 제공한

1536
00:57:54,660 --> 00:57:56,819
다음 능동적 추론은

1537
00:57:56,819 --> 00:57:59,160


1538
00:57:59,160 --> 00:58:01,079


1539
00:58:01,079 --> 00:58:04,380
더 넓은 포괄적인 지속성

1540
00:58:04,380 --> 00:58:07,680
그림과 최소 행동 경로 내에서 훨씬 더 다양한 특정 모티프를 탐색하므로

1541
00:58:07,680 --> 00:58:10,500
해당 공간에서 물리학을 가능하게 하고

1542
00:58:10,500 --> 00:58:13,440
이러한 방법이

1543
00:58:13,440 --> 00:58:15,300
내가 이해하는 것처럼 양자역학에서 자주 사용되거나

1544
00:58:15,300 --> 00:58:17,880


1545
00:58:17,880 --> 00:58:21,240


1546
00:58:21,240 --> 00:58:23,460
이런 식으로 능동적 추론과 결합할 수 있다는 것입니다.

1547
00:58:23,460 --> 00:58:27,000
예 음

1548
00:58:27,000 --> 00:58:28,559
당신이 이것을 언급할 때 떠오르는 어떤 것입니다.

1549
00:58:28,559 --> 00:58:30,780


1550
00:58:30,780 --> 00:58:33,599
이 분야에 대한 최근의 avenir 연구도 있다고 생각합니다.

1551
00:58:33,599 --> 00:58:36,180


1552
00:58:36,180 --> 00:58:38,220


1553
00:58:38,220 --> 00:58:40,740
이전에 그래프를 여러

1554
00:58:40,740 --> 00:58:42,599
번 미리 알지 못했다는 사실에 의해 생성되었으며 구식

1555
00:58:42,599 --> 00:58:45,299
접근 방식이 좋았다고 생각합니다.

1556
00:58:45,299 --> 00:58:47,099
일부 규칙에 따라 그래프를 구성하는 것처럼

1557
00:58:47,099 --> 00:58:49,500
모든 것을 말할 것입니다.

1558
00:58:49,500 --> 00:58:51,480
몇 가지가 비슷하다는 것을 알고 있습니다. 저는

1559
00:58:51,480 --> 00:58:53,400
그들 사이에 가장자리를 둘 것이고 당신은

1560
00:58:53,400 --> 00:58:55,140
당신이 좋아하는 곳에서 유사하게 정의할 것입니다.

1561
00:58:55,140 --> 00:58:56,160
음,

1562
00:58:56,160 --> 00:58:58,740


1563
00:58:58,740 --> 00:59:00,480
당신이 하려고 하는 것이

1564
00:59:00,480 --> 00:59:03,119
일종의 잠재 그래프 추론 또는 어떤 종류의 최근 트렌드가 있었습니다.  그래프를 일종의 다양체라고

1565
00:59:03,119 --> 00:59:05,099
생각한다면 사람들은 그것을 다양한 학습이라고 부릅니다.

1566
00:59:05,099 --> 00:59:07,440


1567
00:59:07,440 --> 00:59:09,000
하지만 이런 종류의 매우 비공식적으로

1568
00:59:09,000 --> 00:59:10,859
말하면

1569
00:59:10,859 --> 00:59:12,780
본질적으로 여러분이 할 일은

1570
00:59:12,780 --> 00:59:15,299


1571
00:59:15,299 --> 00:59:17,700
원시 관찰을 배우려고 하는 모든 것을

1572
00:59:17,700 --> 00:59:20,579
잠재 공간에 매핑하는 것과 같습니다.

1573
00:59:20,579 --> 00:59:21,960
당신은 실제로 당신이 알고 있는 원시 공간이 아닌

1574
00:59:21,960 --> 00:59:23,520
잠재 공간에서 그래프를 구성하는 그래프를 구성하므로

1575
00:59:23,520 --> 00:59:26,160


1576
00:59:26,160 --> 00:59:28,740


1577
00:59:28,740 --> 00:59:32,400
퍼지를 처리하는 일종의 방법이 될 수 있습니다.

1578
00:59:32,400 --> 00:59:35,099


1579
00:59:35,099 --> 00:59:36,839


1580
00:59:36,839 --> 00:59:38,460
이런 종류의 매우 구체적인

1581
00:59:38,460 --> 00:59:40,079
일대일 매핑은

1582
00:59:40,079 --> 00:59:42,000
잠복 공간에서

1583
00:59:42,000 --> 00:59:43,440
3~4개의

1584
00:59:43,440 --> 00:59:46,559
개념에 해당하는 음표를 배울 수 있기 때문에 알다시피 혼합된 종류의

1585
00:59:46,559 --> 00:59:48,319


1586
00:59:48,319 --> 00:59:52,319
뉴런에 대한 이러한 모든 종류의 멋진 어 실험이 있습니다.

1587
00:59:52,319 --> 00:59:54,540
네트워크가 일종의 시각화되어 있고

1588
00:59:54,540 --> 00:59:57,059
그들이 배울 수 있는 개념의 혼합과

1589
00:59:57,059 --> 00:59:59,220
같은 것일 수 있습니다. 예를 들어 실제로 무엇을 보면

1590
00:59:59,220 --> 01:00:01,380


1591
01:00:01,380 --> 01:00:03,420
뉴런이 실제로 활성화된다는 것을 알 수 있습니다. 실제로 몇 가지

1592
01:00:03,420 --> 01:00:05,339
클래스 또는 다른 종류의 것을 알고 있을 것입니다.

1593
01:00:05,339 --> 01:00:07,559


1594
01:00:07,559 --> 01:00:08,339


1595
01:00:08,339 --> 01:00:10,020
따라서 잠재 그래프에서

1596
01:00:10,020 --> 01:00:13,020
일종의 증류된 매우 얽힌 음 표현이 있는 여기에서 매우 유사한 것일 수 있습니다.

1597
01:00:13,020 --> 01:00:15,180


1598
01:00:15,180 --> 01:00:17,819


1599
01:00:17,819 --> 01:00:20,579
그런 다음 적어도 콘서트 체류에서

1600
01:00:20,579 --> 01:00:22,319
일종의 잠재 공간에 있는 것과 같더라도

1601
01:00:22,319 --> 01:00:24,299
여전히 일종의 잠재 공간에 있는 것과 같습니다.  원시 관찰의 종류와

1602
01:00:24,299 --> 01:00:26,940
관련하여 매우 명확한 조합 구조를 알고 있습니다.

1603
01:00:26,940 --> 01:00:30,299


1604
01:00:30,299 --> 01:00:33,780
음 그러한 구조 종류는 여전히

1605
01:00:33,780 --> 01:00:35,220


1606
01:00:35,220 --> 01:00:37,200
어느 정도 세계의 흐릿함을 인코딩할 수 있습니다.

1607
01:00:37,200 --> 01:00:39,180


1608
01:00:39,180 --> 01:00:42,299
동일한 노드에서 증류된 이러한 종류의 개념 혼합이 있기 때문입니다.  또는

1609
01:00:42,299 --> 01:00:44,040
그런 것 또는 아마도 일부 개념은

1610
01:00:44,040 --> 01:00:46,380
여러 노드로 표현될 수 있습니다. 어,

1611
01:00:46,380 --> 01:00:48,240


1612
01:00:48,240 --> 01:00:49,680
이 개념을 보는 것에 따라 모든 종류

1613
01:00:49,680 --> 01:00:51,839
의 변형, 개념 또는 관점 등이 있을 수 있습니다.

1614
01:00:51,839 --> 01:00:53,579


1615
01:00:53,579 --> 01:00:55,260
그래프

1616
01:00:55,260 --> 01:00:58,140
추론은 어 아마도

1617
01:00:58,140 --> 01:00:59,760


1618
01:00:59,760 --> 01:01:01,079


1619
01:01:01,079 --> 01:01:02,940
우리가 논의하고 있던 이러한 음 문제 중 일부를 해결할 수 있는 꽤 흥미로운 방법을 알고 있을 수 있습니다.

1620
01:01:02,940 --> 01:01:05,579


1621
01:01:05,579 --> 01:01:08,280


1622
01:01:08,280 --> 01:01:10,440
당신이

1623
01:01:10,440 --> 01:01:12,900
알고 있는 몇 개의 논문은 주제에 대해

1624
01:01:12,900 --> 01:01:14,099


1625
01:01:14,099 --> 01:01:15,839
음 음 음 확실히

1626
01:01:15,839 --> 01:01:18,920
에이전트는

1627
01:01:18,920 --> 01:01:21,119
세계의 잠재 구조를 제안했습니다.

1628
01:01:21,119 --> 01:01:23,099
세계의 인과 구조는

1629
01:01:23,099 --> 01:01:25,740
단지 지도일 뿐 영토가

1630
01:01:25,740 --> 01:01:28,079


1631
01:01:28,079 --> 01:01:29,339
아닙니다.

1632
01:01:29,339 --> 01:01:31,140
부드러운 구와

1633
01:01:31,140 --> 01:01:34,520
규칙적인 기하학적 모양 사이에 매핑이 있는 곳

1634
01:01:34,520 --> 01:01:37,319
어 예 이

1635
01:01:37,319 --> 01:01:39,119


1636
01:01:39,119 --> 01:01:42,540
하나에서 봅시다 예 하나의 점을 만들고 싶었습니다. 설명하는 관계의 중심에

1637
01:01:42,540 --> 01:01:45,480
음 의견이 있는지 확인하고 싶었습니다

1638
01:01:45,480 --> 01:01:47,460


1639
01:01:47,460 --> 01:01:49,799
그리고

1640
01:01:49,799 --> 01:01:51,960


1641
01:01:51,960 --> 01:01:54,299
일반화 측면에서 당신이 뒤로 물러난 곳과 종류는 우리가 구와 기하학 사이의 관계를 이해하는 데 도움이 됩니다.

1642
01:01:54,299 --> 01:01:55,980


1643
01:01:55,980 --> 01:01:58,440


1644
01:01:58,440 --> 01:02:00,780


1645
01:02:00,780 --> 01:02:03,240


1646
01:02:03,240 --> 01:02:05,460


1647
01:02:05,460 --> 01:02:09,059


1648
01:02:09,059 --> 01:02:12,420


1649
01:02:12,420 --> 01:02:15,599
기하학을 분석하지만 토폴로지를 분석하지 않거나

1650
01:02:15,599 --> 01:02:17,819
다른 방법으로 커피 컵의 토폴로지를 가질 수 있는 것처럼

1651
01:02:17,819 --> 01:02:20,099
데이터 세트 수차와 같은 다른 결과를 얻을 수 있지만

1652
01:02:20,099 --> 01:02:21,660


1653
01:02:21,660 --> 01:02:23,880


1654
01:02:23,880 --> 01:02:25,140
완전히 다른 것처럼 보입니다.

1655
01:02:25,140 --> 01:02:27,180
그래서 우리가 정말로 하고 싶은 것은

1656
01:02:27,180 --> 01:02:29,220
관계를 이해하는 것입니다.

1657
01:02:29,220 --> 01:02:32,220
기하학과 토폴로지 사이에 있습니다.

1658
01:02:32,220 --> 01:02:34,079
왜냐하면 왼쪽에 있는 것처럼 원칙적으로 이해할 수 있고

1659
01:02:34,079 --> 01:02:35,400


1660
01:02:35,400 --> 01:02:38,760
실제로는

1661
01:02:38,760 --> 01:02:41,520
오른쪽에 있는 데이터 체계로 이해하거나

1662
01:02:41,520 --> 01:02:44,400
거기에 자신의 왼쪽과 오른쪽을 삽입할 수 있기 때문입니다.

1663
01:02:44,400 --> 01:02:47,359


1664
01:02:47,359 --> 01:02:50,760
존경받는 슬래시가

1665
01:02:50,760 --> 01:02:52,680


1666
01:02:52,680 --> 01:02:55,799
토폴로지와 기하학을 모두 보존하는 방식으로 데이터 분석, 그래서

1667
01:02:55,799 --> 01:02:57,960
그것은

1668
01:02:57,960 --> 01:03:00,000


1669
01:03:00,000 --> 01:03:02,720
강점과 약점, 휴리스틱과 같이 서로 다른 두 가지 호환 가능한 관점과 같으므로

1670
01:03:02,720 --> 01:03:05,780


1671
01:03:05,780 --> 01:03:09,059
기하학과 토폴로지 간의 관계

1672
01:03:09,059 --> 01:03:11,579
와

1673
01:03:11,579 --> 01:03:13,799
기하학이 요구하는 암시 적 공간을 이해합니다.

1674
01:03:13,799 --> 01:03:17,460
그것에 엄청난

1675
01:03:17,460 --> 01:03:18,780
사용이

1676
01:03:18,780 --> 01:03:21,359
있고 그것은 막 닫을 때

1677
01:03:21,359 --> 01:03:24,420


1678
01:03:24,420 --> 01:03:26,460


1679
01:03:26,460 --> 01:03:29,160


1680
01:03:29,160 --> 01:03:31,319


1681
01:03:31,319 --> 01:03:34,380
표면적

1682
01:03:34,380 --> 01:03:37,260
과 부피 사이, 그리고 매끄러운

1683
01:03:37,260 --> 01:03:39,180
표면과 그 위의 큰 원 사이에서 더 많은 연속성을 찾기 위해 조밀한 패킹 아키텍처와 4면체 중심 좌표 모델을 사용하는 Buckminster Fuller의 시너지 효과를 생각나게 합니다.

1684
01:03:39,180 --> 01:03:41,099


1685
01:03:41,099 --> 01:03:43,319
모양의 연결 지점과 같이 믿을 수 없을 정도로

1686
01:03:43,319 --> 01:03:46,559
깊은 영역이라고 생각합니다. 근본적인

1687
01:03:46,559 --> 01:03:49,319
영향을 미칩니다. 비활성 추론은 부풀린 풍선과 같은 방식으로 모델에 대해 생각하는 데 도움이 됩니다.

1688
01:03:49,319 --> 01:03:51,720


1689
01:03:51,720 --> 01:03:54,599


1690
01:03:54,599 --> 01:03:58,440


1691
01:03:58,440 --> 01:04:00,900


1692
01:04:00,900 --> 01:04:02,760
능동적 추론에 많은

1693
01:04:02,760 --> 01:04:04,619
영향을 미치므로

1694
01:04:04,619 --> 01:04:06,780
오늘 작업을 공유하고

1695
01:04:06,780 --> 01:04:10,079
이런 식으로 작업을 계속해 주셔서 감사합니다.

1696
01:04:10,079 --> 01:04:12,240


1697
01:04:12,240 --> 01:04:14,400
마지막 생각 덕분에

1698
01:04:14,400 --> 01:04:15,900
예 음 음 예

1699
01:04:15,900 --> 01:04:18,540
당신이 언급 한 내용 내

1700
01:04:18,540 --> 01:04:20,640
논문 전체에 이러한

1701
01:04:20,640 --> 01:04:23,040
긴장이 있었던 것 같습니다.  토폴로지

1702
01:04:23,040 --> 01:04:26,099
와 기하학 사이 그리고 아마도 제가

1703
01:04:26,099 --> 01:04:27,900
강조하고 싶은 것은 사물을

1704
01:04:27,900 --> 01:04:29,400


1705
01:04:29,400 --> 01:04:31,260
더 기하학적으로 보는 이전의 관점이

1706
01:04:31,260 --> 01:04:32,880
어떤 식으로든 잘못되었다는 것을 말하는 것이 아니라는 것입니다.

1707
01:04:32,880 --> 01:04:35,760


1708
01:04:35,760 --> 01:04:37,559
이런

1709
01:04:37,559 --> 01:04:39,000
것들은 교차하고 일종의이

1710
01:04:39,000 --> 01:04:42,000
Chief uh paper 나는 잠시 거기에갔습니다.

1711
01:04:42,000 --> 01:04:43,440
당신이 실제로 논문을 읽으면

1712
01:04:43,440 --> 01:04:45,359
어 아름다운 교차가 ​​많이 있습니다

1713
01:04:45,359 --> 01:04:47,099
사실 제 주요

1714
01:04:47,099 --> 01:04:50,040
협력 프란체스코 그는

1715
01:04:50,040 --> 01:04:52,380
미분 기하학 그래서

1716
01:04:52,380 --> 01:04:54,240
음 그는 실제로 많은 종류의

1717
01:04:54,240 --> 01:04:57,119
그 쪽에서 입력하고

1718
01:04:57,119 --> 01:04:59,040
음 참으로 우리가

1719
01:04:59,040 --> 01:05:01,559
이러한 모든 종류의 구조 레이어를 사용하려고 노력해야 한다는 것을 알고 있다고 생각합니다.

1720
01:05:01,559 --> 01:05:04,140
어 당신은 우리의 방법에 대해 가능한 최선의 방법을 알고 있습니다. 좋습니다.

1721
01:05:04,140 --> 01:05:07,319


1722
01:05:07,319 --> 01:05:10,260
다음

1723
01:05:10,260 --> 01:05:13,579
시간까지 감사합니다. 저를 초대해 주셔서 감사합니다.

